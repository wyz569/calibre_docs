
// Copyright 2014 Mentor Graphics Corporation
//
//    All Rights Reserved.
//
// THIS WORK CONTAINS TRADE SECRET
// AND PROPRIETARY INFORMATION WHICH IS THE
// PROPERTY OF MENTOR GRAPHICS
// CORPORATION OR ITS LICENSORS AND IS
// SUBJECT TO LICENSE TERMS.
//
//
mLoadHandle = 'calbr_mdp_useref';
//
// Load document variables
MGCAddBookVar("TemplateVer", "mgc_mgchelp_v4.3.000");
MGCAddBookVar("FirstPage", "title1");
MGCAddBookVar("FirstTopic", "calbr_mdp_useref_title");
MGCAddBookVar("SWRelease", "v2021.2");
MGCAddBookVar("DocHandle", "calbr_mdp_useref");
MGCAddBookVar("DocTitle", "Calibre® Mask Data Preparation User’s and Reference Manual");
MGCAddBookVar("IHUBHandle", ["calbr_ih"]);
MGCAddBookVar("ChecklinksDB", "");
MGCAddBookVar("ChecklinksRelease", "calibre");
MGCAddBookVar("FMSubTitle", "none");
MGCAddBookVar("LicenseType", "EULA");
MGCAddBookVar("Language", "en");
MGCAddBookVar("BETA", false);
MGCAddBookVar("ALPHA", false);
MGCAddBookVar("Draft", false);
MGCAddBookVar("Copyright", "2021");

//
// Load file list
MGCABF("PAGE", "TITLE");
MGCABF("topics/title1", "Calibre® Mask Data Preparation User’s and Reference Manual");
MGCABF("figures", "List of Figures");
MGCABF("man_lot1", "List of Tables");
MGCABF("topics/MGCChap_IntroductionMaskDataPreparation_idb9a0d492", "Introduction to Mask Data Preparation");
MGCABF("topics/Concept_CalibreMdpOverview_idd788f72b", "Calibre MDP Overview");
MGCABF("topics/Concept_CalibreMdpWorkflow_id378b98d5", "Calibre MDP Workflow");
MGCABF("topics/Concept_CalibreMdpPrerequisites_id828534ec", "Calibre MDP Prerequisites");
MGCABF("topics/General_SyntaxConventions_idb337ef8f", "Syntax Conventions");
MGCABF("topics/MGCChap_CalibreFractureOperations_id73876632", "Calibre FRACTURE Operations");
MGCABF("topics/Concept_CalibreFractureWorkflow_id2934bde6", "Calibre FRACTURE Workflow");
MGCABF("topics/Command_CalibreFractureInvocation_idae95a34c", "Calibre FRACTURE Invocation");
MGCABF("topics/Contain_GlobalCalibreFracture_id9729a4ec", "Calibre FRACTURE Syntax");
MGCABF("topics/Command_GlobalCalibreFractureSyntax_id986e4142", "Global Calibre FRACTURE Syntax");
MGCABF("topics/Command_GlobalCalibreFractureArguments_id19a28c69", "Global Calibre FRACTURE Arguments");
MGCABF("topics/Command_CommonArgumentsVectorBeamFormats_id6802af60", "Common Arguments for Vector Beam Formats");
MGCABF("topics/Command_FractureHitachiFractureh_idaeadff24", "FRACTURE HITACHI (FRACTUREh)");
MGCABF("topics/Command_FractureJeolFracturej_id7f738536", "FRACTURE JEOL (FRACTUREj)");
MGCABF("topics/Command_FractureMebesFracturem_id62e8ec07", "FRACTURE MEBES (FRACTUREm)");
MGCABF("topics/Command_FractureMicronicFracturec_id823a2fe9", "FRACTURE MICRONIC (FRACTUREc)");
MGCABF("topics/Contain_FractureNuflareFracturet_id8b8ff7d6", "FRACTURE NUFLARE (FRACTUREt)");
MGCABF("topics/Command_Vsb11Format_idc24e51b3", "VSB11 Format");
MGCABF("topics/Command_Vsb12V1Format_id6e085050", "VSB12 V1 Format");
MGCABF("topics/Command_Vsb12iFormat_id46b98e25", "VSB12i Format");
MGCABF("topics/Command_Vsb12V2Format_idbd8a557d", "VSB12 V2 Format");
MGCABF("topics/Command_MbfFormat_id244f42f3", "FRACTURE NUFLARE_MBF (FRACTUREn)");
MGCABF("topics/Command_FractureOasisMapper_id926ae188", "FRACTURE OASIS_MAPPER (FRACTUREp)");
MGCABF("topics/Command_FractureOasisMaskFracturev_id24da8ddc", "FRACTURE OASIS_MASK (FRACTUREv)");
MGCABF("topics/Command_FractureOasisMbw_id574e4b6a", "FRACTURE OASIS_MBW (FRACTUREi)");
MGCABF("topics/Concept_ConsiderationsForCalibreFullscaleRuns_id7bd745e4", "Considerations for Calibre FullScale Runs");
MGCABF("topics/MGCChap_SectionBasedProcessingCalibreEmbeddedSvrfMdpEmbed_idd6446eb5", "Section-Based Processing, Calibre Embedded SVRF, and MDP EMBED");
MGCABF("topics/Concept_SectionBasedProcessing_idadb40e84", "Section-Based Processing");
MGCABF("topics/Command_EmbedSvrfCommandsInFractureMdpverifyStatements_idfa4bc4b0", "Embed SVRF Commands in FRACTURE or MDPVERIFY Statements");
MGCABF("topics/Contain_EmbedSvrfCommandsInMdpEmbedStatement_idab02769f", "Embed SVRF Commands in an MDP EMBED Statement");
MGCABF("topics/Command_MdpEmbed_idd0937def", "MDP EMBED");
MGCABF("topics/General_SvrfCommandSupportInEmbeddedSvrf_iddaf01e43", "SVRF Command Support in Embedded SVRF");
MGCABF("topics/Command_InfluenceInteractionRangeBoundKeyword_id30d54323", "Influence the Interaction Range (BOUND Keyword)");
MGCABF("topics/TaskTop_ConvertingRuleFileEmbeddedSvrf_id01371681", "Converting a Rule File to Embedded SVRF");
MGCABF("topics/TaskTop_EmbeddedSvrfMultipleOutputsInCalibreMdpverifyMdpEmbed_idb4905739", "Embedded SVRF With Multiple Outputs in Calibre MDPverify and MDP EMBED");
MGCABF("topics/Concept_MdpEmbedOutputHdbDdo_id650fe16f", "MDP EMBED Output to HDB and DDO");
MGCABF("topics/Concept_ProcessorCountsMdpEmbedInTranscript_id3089ec18", "Processor Counts for MDP EMBED in the Transcript");
MGCABF("topics/MGCChap_PreprocessingSvrf_id60680448", "Preprocessing With SVRF");
MGCABF("topics/Contain_EnvironmentSetup_idf313903d", "Environment Setup");
MGCABF("topics/General_LayoutStatements_ide08c9f6e", "Layout Statements");
MGCABF("topics/General_UnitStatements_id7c0d91f1", "Unit Statements");
MGCABF("topics/General_LayerSpecificationStatements_idf2751553", "Layer Specification Statements");
MGCABF("topics/General_ResultsReporting_id0ce55715", "Results Reporting");
MGCABF("topics/General_ErrorHandling_id1eb8adb6", "Error Handling");
MGCABF("topics/Contain_DataManipulation_id7267a415", "Data Manipulation");
MGCABF("topics/Concept_LayerSelectors_idb6bc84b9", "Layer Selectors");
MGCABF("topics/General_LayerConstructors_iddc7224c3", "Layer Constructors");
MGCABF("topics/General_LayerCreationStatements_idaa08ce01", "Layer Creation Statements");
MGCABF("topics/Contain_KeyConceptsWithinSvrf_idcc4837b4", "Key Concepts Within SVRF");
MGCABF("topics/Contain_CalibreResults_idb7bfa5a3", "Calibre Results");
MGCABF("topics/Concept_ResultsDatabase_ide2b3da87", "The Results Database");
MGCABF("topics/Concept_DrcResultsSummary_id21b48c45", "The DRC Results Summary");
MGCABF("topics/Concept_CalibreTranscript_id6f21a26c", "The Calibre Transcript");
MGCABF("topics/Concept_CalibreLayerData_id24091576", "Calibre Layer Data");
MGCABF("topics/Contain_EdgePolygonData_id7e105b76", "Edge and Polygon Data");
MGCABF("topics/Concept_LayerOrigin_idecb8387f", "Layer of Origin");
MGCABF("topics/Contain_UnderstandingDimensionChecks_id29967fb5", "Understanding Dimension Checks");
MGCABF("topics/Concept_IdentifyEdgePairs_id317dd158", "Identify Edge Pairs");
MGCABF("topics/Concept_CreateMeasurementRegions_id78590100", "Create Measurement Regions");
MGCABF("topics/Concept_ReturnIntersectionEdges_id3876f888", "Return Intersection Edges");
MGCABF("topics/Concept_UnderstandingSizeOperation_id68e5bde9", "Understanding the Size Operation");
MGCABF("topics/Contain_ExamplesCommonPreProcessing_id1484477b", "Examples of Common Pre-Processing");
MGCABF("topics/Concept_BorderAwareSizing_id3069825b", "Border-Aware Sizing");
MGCABF("topics/Concept_ToneReversal_idfbced863", "Tone-Reversal");
MGCABF("topics/MGCChap_FractureExamples_id295b95fb", "FRACTURE Examples");
MGCABF("topics/Concept_MebesExampleUsingMagnifyRotate_idbfaa0692", "MEBES Example Using Magnify and Rotate");
MGCABF("topics/Concept_JeolExample_idc7be5852", "JEOL Example");
MGCABF("topics/Concept_Vsb11Example_ida0d4fd06", "VSB11 Example");
MGCABF("topics/Concept_HitachiExample_ida5572a8f", "HITACHI Example");
MGCABF("topics/Concept_MicronicExample_ide63584bc", "Micronic Example");
MGCABF("topics/Concept_OasisMaskExample_id03e493fa", "OASIS.MASK Example");
MGCABF("topics/MGCChap_CalibreMdpverify_id559b9e00", "Calibre MDPverify");
MGCABF("topics/General_CalibreMdpverifyInputs_idc639fa2f", "Calibre MDPverify Inputs");
MGCABF("topics/General_CalibreMdpverifyOutputs_id303fdbaa", "Calibre MDPverify Outputs");
MGCABF("topics/Command_Mdpverify_id7042d29f", "MDPVERIFY");
MGCABF("topics/Concept_RegionShiftDefaultComputation_id44717ee8", "Region and Shift Default Computation");
MGCABF("topics/Contain_DataTransformation_idf60b143b", "Data Transformation");
MGCABF("topics/Concept_CompareFracturedDataLayoutDatabase_id92c67cee", "Compare Fractured Data to the Layout Database");
MGCABF("topics/Concept_CompareFracturedDataFracturedData_ideb896738", "Compare Fractured Data to Fractured Data");
MGCABF("topics/Concept_ComparingTwoVsbJobDecks_idf8641ba3", "Comparing Two VSB Job Decks");
MGCABF("topics/Contain_UsingProperShiftValues_id19ef9a73", "Using Proper Shift Values");
MGCABF("topics/Concept_AutomaticShiftAlignment_idee4e3501", "Automatic Shift Alignment");
MGCABF("topics/Concept_ManualShiftAlignment_id54039438", "Manual Shift Alignment");
MGCABF("topics/Concept_AvoidingProblemsShifting_idc08cbcfd", "Avoiding Problems With Shifting");
MGCABF("topics/Concept_DefineVerificationRegion_idbec864b4", "Define the Verification Region");
MGCABF("topics/Contain_Examples_id1c1547e7", "Examples");
MGCABF("topics/Concept_Example1MebesInternalCalibreLayer_id3f9b73c2", "Example 1 — MEBES to an Internal Calibre Layer");
MGCABF("topics/Concept_Example2MebesMebes_id53e3afae", "Example 2 — MEBES to MEBES");
MGCABF("topics/Concept_Example3MebesJeol_id8382e4ae", "Example 3 — MEBES to JEOL");
MGCABF("topics/MGCChap_CalibreMdpmerge_id19980b39", "Calibre MDPmerge");
MGCABF("topics/Concept_MultiThreadedOperations_idf3fa5be0", "Multithreaded Operations");
MGCABF("topics/Concept_CalibreMdpmergeLimitations_id4dc1d097", "Calibre MDPmerge Limitations");
MGCABF("topics/Concept_SupportedJobDeckValues_id0b72143c", "Supported Job Deck Values");
MGCABF("topics/Command_Mdpmerge_id60b425f0", "MDPMERGE");
MGCABF("topics/General_ViewCalibreMdpmergeResults_ida7878dab", "View the Calibre MDPmerge Results");
MGCABF("topics/MGCChap_CalibreMdpstat_idb9cddf87", "Calibre MDPstat");
MGCABF("topics/Concept_CalibreMdpstatReporting_idec5faa4f", "Calibre MDPstat Reporting");
MGCABF("topics/Command_Mdpstat_idda9762e7", "MDPSTAT");
MGCABF("topics/MGCChap_CalibreRuleBasedMpcMdpUtilityCommands_idda9e1042", "Calibre Rule-Based MPC and MDP Utility Commands");
MGCABF("topics/Concept_CalibreMpcproWorkflow_id130761ab", "Calibre MPCpro Workflow");
MGCABF("topics/Contain_DensityConvolveSvrfStatement_id52c2ee3c", "DENSITY CONVOLVE SVRF Statement");
MGCABF("topics/Command_DensityConvolve_id16ec752a", "DENSITY CONVOLVE");
MGCABF("topics/Contain_MdpMapsizeSvrfStatement_id59ba31a6", "MDP MAPSIZE SVRF Statement");
MGCABF("topics/Command_MdpMapsize_idc4f09d21", "MDP MAPSIZE");
MGCABF("topics/Contain_MdpCheckmapSvrfStatement_idb8b4fd33", "MDP CHECKMAP SVRF Statement");
MGCABF("topics/Command_MdpCheckmap_ide906cd92", "MDP CHECKMAP");
MGCABF("topics/Contain_MdpOasisExtentSvrfStatement_id68d70561", "MDP OASIS_EXTENT SVRF Statement");
MGCABF("topics/Command_MdpOasisExtent_id3264cd45", "MDP OASIS_EXTENT");
MGCABF("topics/Contain_MdpDataprepSvrfStatement_idf5d086b5", "MDP DATAPREP SVRF Statement");
MGCABF("topics/Command_MdpDataprep_iddd1d8798", "MDP DATAPREP");
MGCABF("topics/MGCChap_CalibreMaskopt_idd93e2241", "Calibre MASKOPT");
MGCABF("topics/General_CalibreMaskoptSetupFile_id70e8cac9", "The Calibre MASKOPT Setup File");
MGCABF("topics/Contain_CalibreMaskoptCommands_id6272dcd0", "Calibre MASKOPT Commands");
MGCABF("topics/Command_LithoMaskopt_id57434e37", "LITHO MASKOPT");
MGCABF("topics/Command_SetlayerMdpMaskopt_id90630090", "setlayer mdp_maskopt");
MGCABF("topics/Command_DirectInput_ide8d878e4", "direct_input");
MGCABF("topics/Command_DirectOutput_ideeadeda4", "direct_output");
MGCABF("topics/MGCAppe_OddMultipleGridSizing_id30d010ee", "Odd-Multiple Grid Sizing");
MGCABF("topics/Concept_UnderstandingOddMultipleGridSizing_id987d0bd4", "Understanding Odd-Multiple Grid Sizing");
MGCABF("topics/Concept_AdjustmentsOddMultipleGridSizing_id86d6f396", "Adjustments for Odd-Multiple Grid Sizing");
MGCABF("topics/MGCAppe_ListExceptions_id9afc1760", "List of Exceptions");
MGCABF("topics/General_TranscriptMessages_id8ef67c2a", "Transcript Messages");
MGCABF("topics/General_StatusValues_id6815dc82", "Status Values");
MGCABF("topics/MGCAppe_MdpBestPractices_id6e036faa", "MDP Best Practices");
MGCABF("topics/Contain_GeneralRecommendationsMdpTools_idcc79a047", "General Recommendations for MDP Tools");
MGCABF("topics/Concept_InputPreparationDde_idc42a5e73", "Input Preparation for DDE");
MGCABF("topics/Concept_IndexingInjectionOasisFiles_id6d6f5e9c", "Indexing and Injection for OASIS Files");
MGCABF("topics/Concept_ParallelDdeRunRecommendations_id853ac6e5", "Parallel DDE Run Recommendations");
MGCABF("topics/Concept_ReduceDataSizeAddressRamIssues_idfb180312", "Reduce Data Size to Address RAM Issues");
MGCABF("topics/Contain_GlobalFractureBestPractices_id00ff9ce8", "Global Fracture Best Practices");
MGCABF("topics/Concept_CommonFractureSettings_id76cae090", "Common Fracture Settings");
MGCABF("topics/Concept_AvoidBottlenecksDuringFracture_id50ff8168", "Avoid Bottlenecks During Fracture");
MGCABF("topics/Concept_VsbFractureCalibreMdpview_id73d8f56b", "VSB Fracture and Calibre MDPview");
MGCABF("topics/Concept_CalibreFracturetBestPractices_id90b80253", "Calibre FRACTUREt Best Practices");
MGCABF("topics/Concept_MdpEmbedBestPractices_id0f1f461f", "MDP EMBED Best Practices");
MGCABF("topics/Concept_DensityConvolveBestPractices_id00d97663", "DENSITY CONVOLVE Best Practices");
MGCABF("topics/MGCThir_ThirdPartyInformation_id6cba59fd", "Third-Party Information");

//
// Load TOC data
MGCAddTOC(1, 2, "List of Figures", "");
MGCAddTOC(1, 3, "List of Tables", "");
MGCAddTOC(1, 4, "Introduction to Mask Data Preparation", "idb9a0d492-341a-4b43-8351-9edbcbf8bcc0");
MGCAddTOC(2, 5, "Calibre MDP Overview", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f");
MGCAddTOC(2, 6, "Calibre MDP Workflow", "id378b98d5-c238-436c-a8d0-a48d8104235a");
MGCAddTOC(2, 7, "Calibre MDP Prerequisites", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b");
MGCAddTOC(2, 8, "Syntax Conventions", "idb337ef8f-ebf8-4e5e-9894-312720a07737");
MGCAddTOC(1, 9, "Calibre FRACTURE Operations", "id73876632-427c-4280-ae21-053222e65ef9");
MGCAddTOC(2, 10, "Calibre FRACTURE Workflow", "id2934bde6-4cf2-41e6-9495-712047979246");
MGCAddTOC(2, 11, "Calibre FRACTURE Invocation", "idae95a34c-ab83-47e9-a61a-b528a8b2953e");
MGCAddTOC(2, 12, "Calibre FRACTURE Syntax", "id9729a4ec-b893-45d6-9165-2a7d1a3a3c9e");
MGCAddTOC(3, 13, "Global Calibre FRACTURE Syntax", "id986e4142-a084-42c5-b29e-4181b81c8f50");
MGCAddTOC(3, 14, "Global Calibre FRACTURE Arguments", "id19a28c69-e162-415f-a099-033f38e5c913");
MGCAddTOC(3, 15, "Common Arguments for Vector Beam Formats", "id6802af60-b824-4e77-9868-1ac206276235");
MGCAddTOC(3, 16, "FRACTURE HITACHI (FRACTUREh)", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216");
MGCAddTOC(3, 17, "FRACTURE JEOL (FRACTUREj)", "id7f738536-087f-4e5a-aff0-42a013b70d19");
MGCAddTOC(3, 18, "FRACTURE MEBES (FRACTUREm)", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab");
MGCAddTOC(3, 19, "FRACTURE MICRONIC (FRACTUREc)", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce");
MGCAddTOC(3, 20, "FRACTURE NUFLARE (FRACTUREt)", "id8b8ff7d6-f85d-486a-bad9-acc50ee5aa30");
MGCAddTOC(4, 21, "VSB11 Format", "idc24e51b3-b74b-467e-95d8-9abbebe36b00");
MGCAddTOC(4, 22, "VSB12 V1 Format", "id6e085050-b7f7-4922-a65f-473e6c790abb");
MGCAddTOC(4, 23, "VSB12i Format", "id46b98e25-7dc3-42b4-864d-9286ec6bc050");
MGCAddTOC(4, 24, "VSB12 V2 Format", "idbd8a557d-9ea0-49e4-85b9-2f4079066677");
MGCAddTOC(3, 25, "FRACTURE NUFLARE_MBF (FRACTUREn)", "id244f42f3-c88b-418e-a92a-1abc97b3fe78");
MGCAddTOC(3, 26, "FRACTURE OASIS_MAPPER (FRACTUREp)", "id926ae188-d5a0-4362-b529-76620192a5c3");
MGCAddTOC(3, 27, "FRACTURE OASIS_MASK (FRACTUREv)", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d");
MGCAddTOC(3, 28, "FRACTURE OASIS_MBW (FRACTUREi)", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02");
MGCAddTOC(2, 29, "Considerations for Calibre FullScale Runs", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165");
MGCAddTOC(1, 30, "Section-Based Processing, Calibre Embedded SVRF, and MDP EMBED", "idd6446eb5-7f1f-4d71-ae88-ac284a99a59e");
MGCAddTOC(2, 31, "Section-Based Processing", "idadb40e84-25b6-4471-ab44-99daf83f790f");
MGCAddTOC(2, 32, "Embed SVRF Commands in FRACTURE or MDPVERIFY Statements", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878");
MGCAddTOC(2, 33, "Embed SVRF Commands in an MDP EMBED Statement", "idab02769f-f65c-4413-ad3f-dd821f143053");
MGCAddTOC(3, 34, "MDP EMBED", "idd0937def-f989-49bc-9f20-7ee1285ce78b");
MGCAddTOC(2, 35, "SVRF Command Support in Embedded SVRF", "iddaf01e43-68d4-4c0e-8bd5-8c140171b688");
MGCAddTOC(2, 36, "Influence the Interaction Range (BOUND Keyword)", "id30d54323-fea9-4d68-8dd3-7be511cd06e2");
MGCAddTOC(2, 37, "Converting a Rule File to Embedded SVRF", "id01371681-ae23-4d39-a20e-27820248cc9e");
MGCAddTOC(2, 38, "Embedded SVRF With Multiple Outputs in Calibre MDPverify and MDP EMBED", "idb4905739-7989-4b33-81cb-19abb60c92bf");
MGCAddTOC(2, 39, "MDP EMBED Output to HDB and DDO", "id650fe16f-c220-45a0-b5d8-a1d69440e12c");
MGCAddTOC(2, 40, "Processor Counts for MDP EMBED in the Transcript", "id3089ec18-04a8-4863-b139-38b719052f9a");
MGCAddTOC(1, 41, "Preprocessing With SVRF", "id60680448-65c7-4dca-b351-9664526ded34");
MGCAddTOC(2, 42, "Environment Setup", "idf313903d-b333-40fe-a64b-88a64851396b");
MGCAddTOC(3, 43, "Layout Statements", "ide08c9f6e-942d-4541-9b9f-75b36a3bf837");
MGCAddTOC(3, 44, "Unit Statements", "id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4");
MGCAddTOC(3, 45, "Layer Specification Statements", "idf2751553-85b6-40ec-9ebd-b136e38152b9");
MGCAddTOC(2, 46, "Results Reporting", "id0ce55715-ac6a-49ad-bb87-238fe37ed143");
MGCAddTOC(2, 47, "Error Handling", "id1eb8adb6-cd47-4a22-bd67-b76a375efb5c");
MGCAddTOC(2, 48, "Data Manipulation", "id7267a415-3c4d-497f-aec8-903c4ae7d4e5");
MGCAddTOC(3, 49, "Layer Selectors", "idb6bc84b9-c5c1-44ac-9dc4-21af9718b9d5");
MGCAddTOC(3, 50, "Layer Constructors", "iddc7224c3-4090-4e01-9bb5-edec2efffb14");
MGCAddTOC(3, 51, "Layer Creation Statements", "idaa08ce01-f668-4dff-9b42-7ea5251ed19b");
MGCAddTOC(2, 52, "Key Concepts Within SVRF", "idcc4837b4-975b-438e-84e3-ba758db808e3");
MGCAddTOC(3, 53, "Calibre Results", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2");
MGCAddTOC(3, 54, "The Results Database", "ide2b3da87-b72d-46a5-a7aa-b98b98025be7");
MGCAddTOC(3, 55, "The DRC Results Summary", "id21b48c45-7b27-4999-88ca-dd0d7af534a0");
MGCAddTOC(3, 56, "The Calibre Transcript", "id6f21a26c-b665-4824-89ea-a099f707d440");
MGCAddTOC(3, 57, "Calibre Layer Data", "id24091576-ed85-40de-b01b-5afb910520b9");
MGCAddTOC(3, 58, "Edge and Polygon Data", "id7e105b76-24b4-4e56-95cd-03d9415f4c82");
MGCAddTOC(4, 59, "Layer of Origin", "idecb8387f-63ea-4628-ad2d-5fff6ba70213");
MGCAddTOC(3, 60, "Understanding Dimension Checks", "id29967fb5-a285-4605-a7e9-ed320b4beb62");
MGCAddTOC(4, 61, "Identify Edge Pairs", "id317dd158-821d-4954-a00d-51bf6a83f680");
MGCAddTOC(4, 62, "Create Measurement Regions", "id78590100-5493-4823-8638-9bc971128d8e");
MGCAddTOC(4, 63, "Return Intersection Edges", "id3876f888-6782-4e9f-a771-140b77e83eeb");
MGCAddTOC(3, 64, "Understanding the Size Operation", "id68e5bde9-216f-4600-8048-378d653352e9");
MGCAddTOC(2, 65, "Examples of Common Pre-Processing", "id1484477b-e3c5-46cf-8ac7-e262e16bd452");
MGCAddTOC(3, 66, "Border-Aware Sizing", "id3069825b-cd72-409d-9fd5-45a434f00f23");
MGCAddTOC(3, 67, "Tone-Reversal", "idfbced863-389d-4769-8639-402c12535e9a");
MGCAddTOC(1, 68, "FRACTURE Examples", "id295b95fb-fde3-4784-a674-150696bdae91");
MGCAddTOC(2, 69, "MEBES Example Using Magnify and Rotate", "idbfaa0692-b60d-4631-a5a6-129af3602ebd");
MGCAddTOC(2, 70, "JEOL Example", "idc7be5852-da55-4155-a033-a51cd40120db");
MGCAddTOC(2, 71, "VSB11 Example", "ida0d4fd06-e915-42c2-8b44-6125d70a1b01");
MGCAddTOC(2, 72, "HITACHI Example", "ida5572a8f-cca1-420d-be34-6808e895f8ca");
MGCAddTOC(2, 73, "Micronic Example", "ide63584bc-5dee-4fe9-9c5d-b1df7f429c16");
MGCAddTOC(2, 74, "OASIS.MASK Example", "id03e493fa-c00e-487f-9b6c-e23dc86c28a1");
MGCAddTOC(1, 75, "Calibre MDPverify", "id559b9e00-37ca-48a6-8441-0c896c998a04");
MGCAddTOC(2, 76, "Calibre MDPverify Inputs", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8");
MGCAddTOC(2, 77, "Calibre MDPverify Outputs", "id303fdbaa-d26e-4e74-82dd-47bc81dd1186");
MGCAddTOC(2, 78, "MDPVERIFY", "id7042d29f-be06-40c9-ad43-07c249c78d4f");
MGCAddTOC(2, 79, "Region and Shift Default Computation", "id44717ee8-3dd8-44db-b08c-dca383ceeba3");
MGCAddTOC(2, 80, "Data Transformation", "idf60b143b-040b-49f3-b0db-c41b251ed214");
MGCAddTOC(3, 81, "Compare Fractured Data to the Layout Database", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089");
MGCAddTOC(3, 82, "Compare Fractured Data to Fractured Data", "ideb896738-9dad-4632-bafe-397db10ad6b1");
MGCAddTOC(3, 83, "Comparing Two VSB Job Decks", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272");
MGCAddTOC(3, 84, "Using Proper Shift Values", "id19ef9a73-53fb-417d-ac4e-396f5e4ee355");
MGCAddTOC(4, 85, "Automatic Shift Alignment", "idee4e3501-3882-4823-b203-6e7bbefc0df0");
MGCAddTOC(4, 86, "Manual Shift Alignment", "id54039438-5d01-4996-98f8-a1814eebd85a");
MGCAddTOC(3, 87, "Avoiding Problems With Shifting", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8");
MGCAddTOC(3, 88, "Define the Verification Region", "idbec864b4-98a7-41c3-b4d7-000110b137bf");
MGCAddTOC(2, 89, "Examples", "id1c1547e7-d1a6-45fb-ac80-f663f3a42346");
MGCAddTOC(3, 90, "Example 1 — MEBES to an Internal Calibre Layer", "id3f9b73c2-fdcc-4748-9cd4-21b9ce46599b");
MGCAddTOC(3, 91, "Example 2 — MEBES to MEBES", "id53e3afae-b805-4e7d-a7e4-ab1b8b7c98e5");
MGCAddTOC(3, 92, "Example 3 — MEBES to JEOL", "id8382e4ae-b733-46e4-b385-1e5e31abef5e");
MGCAddTOC(1, 93, "Calibre MDPmerge", "id19980b39-6ea8-4364-b35b-ee3ababa58e6");
MGCAddTOC(2, 94, "Multithreaded Operations", "idf3fa5be0-d2b2-473d-a748-9a65aeb1327f");
MGCAddTOC(2, 95, "Calibre MDPmerge Limitations", "id4dc1d097-4634-42d6-940b-509571568b06");
MGCAddTOC(2, 96, "Supported Job Deck Values", "id0b72143c-d5b1-425c-8905-cee3324bb755");
MGCAddTOC(2, 97, "MDPMERGE", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3");
MGCAddTOC(2, 98, "View the Calibre MDPmerge Results", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d");
MGCAddTOC(1, 99, "Calibre MDPstat", "idb9cddf87-0a67-4436-8a03-1ba99ec23ee5");
MGCAddTOC(2, 100, "Calibre MDPstat Reporting", "idec5faa4f-2594-471a-b756-4e2f4405ba0c");
MGCAddTOC(2, 101, "MDPSTAT", "idda9762e7-76e2-4d28-a61d-060da909fd0d");
MGCAddTOC(1, 102, "Calibre Rule-Based MPC and MDP Utility Commands", "idda9e1042-9cc0-48cc-aa9f-fc1617771175");
MGCAddTOC(2, 103, "Calibre MPCpro Workflow", "id130761ab-ab4f-4a38-970c-dfea4efbb249");
MGCAddTOC(2, 104, "DENSITY CONVOLVE SVRF Statement", "id52c2ee3c-5e27-4a37-8f8a-269324b891e1");
MGCAddTOC(3, 105, "DENSITY CONVOLVE", "id16ec752a-6a15-4671-ab13-ec69199e2983");
MGCAddTOC(2, 106, "MDP MAPSIZE SVRF Statement", "id59ba31a6-509b-4c98-896a-0a09b0bd6350");
MGCAddTOC(3, 107, "MDP MAPSIZE", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84");
MGCAddTOC(2, 108, "MDP CHECKMAP SVRF Statement", "idb8b4fd33-17cb-435b-87ea-e34dacf964f0");
MGCAddTOC(3, 109, "MDP CHECKMAP", "ide906cd92-baa6-4d93-9832-fd2184e38f24");
MGCAddTOC(2, 110, "MDP OASIS_EXTENT SVRF Statement", "id68d70561-6286-46c6-9dfd-4fde35aef1cd");
MGCAddTOC(3, 111, "MDP OASIS_EXTENT", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14");
MGCAddTOC(2, 112, "MDP DATAPREP SVRF Statement", "idf5d086b5-0b0e-40a0-a7c3-88be11bf76ec");
MGCAddTOC(3, 113, "MDP DATAPREP", "iddd1d8798-3edb-4423-9d97-41aeb066515e");
MGCAddTOC(1, 114, "Calibre MASKOPT", "idd93e2241-53b2-4038-aaae-25f261de0e4b");
MGCAddTOC(2, 115, "The Calibre MASKOPT Setup File", "id70e8cac9-991a-403f-8d39-18d4daa06158");
MGCAddTOC(2, 116, "Calibre MASKOPT Commands", "id6272dcd0-b412-439c-a7ef-c7880642f0a3");
MGCAddTOC(3, 117, "LITHO MASKOPT", "id57434e37-d599-4c88-b16c-9ca6e89692b3");
MGCAddTOC(3, 118, "setlayer mdp_maskopt", "id90630090-f9ca-4df8-affc-9cc71f55165d");
MGCAddTOC(3, 119, "direct_input", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8");
MGCAddTOC(3, 120, "direct_output", "id9c27672a-f488-450a-a5d0-255f93eefb84");
MGCAddTOC(1, 121, "Odd-Multiple Grid Sizing", "id30d010ee-6db5-43d0-b5a1-958cdd614706");
MGCAddTOC(2, 122, "Understanding Odd-Multiple Grid Sizing", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e");
MGCAddTOC(2, 123, "Adjustments for Odd-Multiple Grid Sizing", "id86d6f396-b305-497d-9b00-4db2fe8a2461");
MGCAddTOC(1, 124, "List of Exceptions", "id9afc1760-cd82-4c8b-a3d0-eb3f6539b3f2");
MGCAddTOC(2, 125, "Transcript Messages", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea");
MGCAddTOC(2, 126, "Status Values", "id6815dc82-5400-4c73-8c0b-0e903e89a8ce");
MGCAddTOC(1, 127, "MDP Best Practices", "id6e036faa-612e-498c-84ba-07a7f6e677df");
MGCAddTOC(2, 128, "General Recommendations for MDP Tools", "idcc79a047-d490-4c59-b31a-0e7859b1fefd");
MGCAddTOC(3, 129, "Input Preparation for DDE", "idc42a5e73-6703-4aaa-9092-50559d36e1ac");
MGCAddTOC(3, 130, "Indexing and Injection for OASIS Files", "id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6");
MGCAddTOC(3, 131, "Parallel DDE Run Recommendations", "id853ac6e5-5a33-4f6b-b851-087e063ec51b");
MGCAddTOC(3, 132, "Reduce Data Size to Address RAM Issues", "idfb180312-b78f-42a9-aedc-e0bcae9fe128");
MGCAddTOC(2, 133, "Global Fracture Best Practices", "id00ff9ce8-8910-4352-acab-54bb28b857bf");
MGCAddTOC(3, 134, "Common Fracture Settings", "id76cae090-752f-48fc-ba4e-4e833b532213");
MGCAddTOC(3, 135, "Avoid Bottlenecks During Fracture", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7");
MGCAddTOC(3, 136, "VSB Fracture and Calibre MDPview", "id73d8f56b-0582-4127-ba53-8f1b40a09aa0");
MGCAddTOC(2, 137, "Calibre FRACTUREt Best Practices", "id90b80253-0f00-41d1-8378-5ed50e17703f");
MGCAddTOC(2, 138, "MDP EMBED Best Practices", "id0f1f461f-f351-4c31-8f2d-c68aca79b57d");
MGCAddTOC(2, 139, "DENSITY CONVOLVE Best Practices", "id00d97663-6951-4f61-8a6b-2a88bb33360f");
MGCAddTOC(1, 140, "Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e");

//
// Load Topic map data
MGCAddTopic(["manual title", "", 1, "Title", 0]);
MGCAddTopic(["$figures.title", "", 2, "List of Figures", 0]);
MGCAddTopic(["$tables.title", "", 3, "List of Tables", 0]);
MGCAddTopic(["Introduction to Mask Data Preparation", "idb9a0d492-341a-4b43-8351-9edbcbf8bcc0", 4, "mgcsec-H1", 0]);
MGCAddTopic(["idb9a0d492-341a-4b43-8351-9edbcbf8bcc0", "idb9a0d492-341a-4b43-8351-9edbcbf8bcc0", 4, "", 0]);
MGCAddTopic(["Calibre MDP Overview", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f", 5, "con-H2", 0]);
MGCAddTopic(["Fracture Formats and Support", "id6b270c63-6c61-4d5b-a0fb-e8cc12cb871b", 5, "TableTitle", 0]);
MGCAddTopic(["idd788f72b-c53c-4abf-8e46-cac5826b9c8f", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f", 5, "con-topic-H2", 0]);
MGCAddTopic(["id32cba88d-e5b4-44ef-a3b7-7dd0dcd24282", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id32cba88d-e5b4-44ef-a3b7-7dd0dcd24282", 5, "con-topic-H2", 0]);
MGCAddTopic(["id6b270c63-6c61-4d5b-a0fb-e8cc12cb871b", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id6b270c63-6c61-4d5b-a0fb-e8cc12cb871b", 5, "con-topic-H2", 0]);
MGCAddTopic(["id32d55dc4-8bed-490c-ad8f-efdc09ed50e8", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id32d55dc4-8bed-490c-ad8f-efdc09ed50e8", 5, "con-topic-H2", 0]);
MGCAddTopic(["idaa437820-1bd4-4b96-b0cb-12380eca13e7", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__idaa437820-1bd4-4b96-b0cb-12380eca13e7", 5, "con-topic-H2", 0]);
MGCAddTopic(["id0afc51eb-fc6a-41b2-8898-b72bab1e7aec", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id0afc51eb-fc6a-41b2-8898-b72bab1e7aec", 5, "con-topic-H2", 0]);
MGCAddTopic(["id9627d389-3260-4786-9c7e-7ba8a63c9f29", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id9627d389-3260-4786-9c7e-7ba8a63c9f29", 5, "con-topic-H2", 0]);
MGCAddTopic(["id2153512d-516a-406a-83c3-c253b1d231fe", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id2153512d-516a-406a-83c3-c253b1d231fe", 5, "con-topic-H2", 0]);
MGCAddTopic(["id07206b92-3599-4221-92ef-b59f2fe449ca", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id07206b92-3599-4221-92ef-b59f2fe449ca", 5, "con-L1BulSolid", 0]);
MGCAddTopic(["id031ee8ce-0191-46f1-8a34-852d3c4a1f7c", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id031ee8ce-0191-46f1-8a34-852d3c4a1f7c", 5, "con-topic-H2", 0]);
MGCAddTopic(["id27baf48c-47e1-408e-86f2-716ea90cf258", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id27baf48c-47e1-408e-86f2-716ea90cf258", 5, "con-topic-H2", 0]);
MGCAddTopic(["id08e982e4-1659-425a-b828-e177a2b2941a", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id08e982e4-1659-425a-b828-e177a2b2941a", 5, "con-topic-H2", 0]);
MGCAddTopic(["ida69524ac-65e6-4e26-9cdf-6c39ffbf3bf0", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__ida69524ac-65e6-4e26-9cdf-6c39ffbf3bf0", 5, "con-topic-H2", 0]);
MGCAddTopic(["id4ba4d917-194a-4f83-85b2-6f3d3c75ce7d", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id4ba4d917-194a-4f83-85b2-6f3d3c75ce7d", 5, "con-topic-H2", 0]);
MGCAddTopic(["id3feddaf4-0eed-4e2b-af06-d01029900769", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id3feddaf4-0eed-4e2b-af06-d01029900769", 5, "con-topic-H2", 0]);
MGCAddTopic(["id158f2194-b063-4ad4-8c1f-f825a06a5c91", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id158f2194-b063-4ad4-8c1f-f825a06a5c91", 5, "con-topic-H2", 0]);
MGCAddTopic(["id603962a7-7a28-4336-9e83-e928758f838a", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id603962a7-7a28-4336-9e83-e928758f838a", 5, "con-topic-H2", 0]);
MGCAddTopic(["id754be483-092e-4ef3-9e6c-e24b4c64e8d0", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id754be483-092e-4ef3-9e6c-e24b4c64e8d0", 5, "con-topic-H2", 0]);
MGCAddTopic(["idafd4fc60-4695-4a52-98d5-f36808d8a3ba", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__idafd4fc60-4695-4a52-98d5-f36808d8a3ba", 5, "con-topic-H2", 0]);
MGCAddTopic(["idf4ec35a2-e2bf-41d7-badf-05c28382911a", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__idf4ec35a2-e2bf-41d7-badf-05c28382911a", 5, "con-topic-H2", 0]);
MGCAddTopic(["idf04a8516-52ee-488c-8ae7-c66d628795e6", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__idf04a8516-52ee-488c-8ae7-c66d628795e6", 5, "con-topic-H2", 0]);
MGCAddTopic(["id18aaf0f3-c1cb-444c-acd0-001809635ebe", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id18aaf0f3-c1cb-444c-acd0-001809635ebe", 5, "con-topic-H2", 0]);
MGCAddTopic(["id44f5d806-5f0a-44cc-b9a2-aeb1d013202f", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__id44f5d806-5f0a-44cc-b9a2-aeb1d013202f", 5, "con-topic-H2", 0]);
MGCAddTopic(["idf9460bd0-56c0-4947-bc8b-f176b78a8c2a", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__idf9460bd0-56c0-4947-bc8b-f176b78a8c2a", 5, "con-topic-H2", 0]);
MGCAddTopic(["ide4c944df-43cf-47d2-adf5-ab23cc02b3be", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__ide4c944df-43cf-47d2-adf5-ab23cc02b3be", 5, "con-topic-H2", 0]);
MGCAddTopic(["ida10fc07e-c052-4d74-880d-b3698e4c1779", "idd788f72b-c53c-4abf-8e46-cac5826b9c8f__ida10fc07e-c052-4d74-880d-b3698e4c1779", 5, "con-topic-H2", 0]);
MGCAddTopic(["Calibre MDP Workflow", "id378b98d5-c238-436c-a8d0-a48d8104235a", 6, "con-H2", 0]);
MGCAddTopic(["Complete Process Flow on the Calibre Platform", "iddf9b5808-0b84-41b5-b580-c713517c7f81", 6, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Related Products and Their Manuals", "id44b07f09-aa67-42cf-9cc8-ce717ffec1c3", 6, "TableTitle", 0]);
MGCAddTopic(["id378b98d5-c238-436c-a8d0-a48d8104235a", "id378b98d5-c238-436c-a8d0-a48d8104235a", 6, "con-topic-H2", 0]);
MGCAddTopic(["iddf9b5808-0b84-41b5-b580-c713517c7f81", "id378b98d5-c238-436c-a8d0-a48d8104235a__iddf9b5808-0b84-41b5-b580-c713517c7f81", 6, "con-topic-H2", 0]);
MGCAddTopic(["id44b07f09-aa67-42cf-9cc8-ce717ffec1c3", "id378b98d5-c238-436c-a8d0-a48d8104235a__id44b07f09-aa67-42cf-9cc8-ce717ffec1c3", 6, "con-topic-H2", 0]);
MGCAddTopic(["Calibre MDP Prerequisites", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b", 7, "con-H2", 0]);
MGCAddTopic(["id828534ec-4c06-4dd7-90ad-07f3559d6a3b", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b", 7, "con-topic-H2", 0]);
MGCAddTopic(["ided20ce43-2204-4910-9c1a-94d9bfcb8821", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b__ided20ce43-2204-4910-9c1a-94d9bfcb8821", 7, "con-topic-H2", 0]);
MGCAddTopic(["idff8e9dd1-fe27-4a32-a5aa-387acf31f36b", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b__idff8e9dd1-fe27-4a32-a5aa-387acf31f36b", 7, "con-topic-H2", 0]);
MGCAddTopic(["idabb4272f-fa5a-421a-be48-f0b2320ea7c8", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b__idabb4272f-fa5a-421a-be48-f0b2320ea7c8", 7, "con-topic-H2", 0]);
MGCAddTopic(["id82352de6-2774-4a35-bc16-7089d09bdc1c", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b__id82352de6-2774-4a35-bc16-7089d09bdc1c", 7, "con-topic-H2", 0]);
MGCAddTopic(["idc74b6d16-e2f8-44e8-99e4-00074dcdba9f", "id828534ec-4c06-4dd7-90ad-07f3559d6a3b__idc74b6d16-e2f8-44e8-99e4-00074dcdba9f", 7, "con-topic-H2", 0]);
MGCAddTopic(["Syntax Conventions", "idb337ef8f-ebf8-4e5e-9894-312720a07737", 8, "ref-H2", 0]);
MGCAddTopic(["Syntax Conventions", "ide7007545-2d0a-4af5-96b1-8439dcedb631", 8, "TableTitle", 0]);
MGCAddTopic(["idb337ef8f-ebf8-4e5e-9894-312720a07737", "idb337ef8f-ebf8-4e5e-9894-312720a07737", 8, "ref-topic-H2", 0]);
MGCAddTopic(["id0546289b-39a4-4fa7-8cf9-df6900181006", "idb337ef8f-ebf8-4e5e-9894-312720a07737__id0546289b-39a4-4fa7-8cf9-df6900181006", 8, "ref-topic-H2", 0]);
MGCAddTopic(["ide7007545-2d0a-4af5-96b1-8439dcedb631", "idb337ef8f-ebf8-4e5e-9894-312720a07737__ide7007545-2d0a-4af5-96b1-8439dcedb631", 8, "ref-topic-H2", 0]);
MGCAddTopic(["Calibre FRACTURE Operations", "id73876632-427c-4280-ae21-053222e65ef9", 9, "mgcsec-H1", 0]);
MGCAddTopic(["id73876632-427c-4280-ae21-053222e65ef9", "id73876632-427c-4280-ae21-053222e65ef9", 9, "", 0]);
MGCAddTopic(["Calibre FRACTURE Workflow", "id2934bde6-4cf2-41e6-9495-712047979246", 10, "con-H2", 0]);
MGCAddTopic(["id2934bde6-4cf2-41e6-9495-712047979246", "id2934bde6-4cf2-41e6-9495-712047979246", 10, "con-topic-H2", 0]);
MGCAddTopic(["ide9d27080-0c12-4568-b32a-bb5e514c107f", "id2934bde6-4cf2-41e6-9495-712047979246__ide9d27080-0c12-4568-b32a-bb5e514c107f", 10, "con-topic-H2", 0]);
MGCAddTopic(["id3be8aa6f-782b-428b-bf6d-3d84aa88ef58", "id2934bde6-4cf2-41e6-9495-712047979246__id3be8aa6f-782b-428b-bf6d-3d84aa88ef58", 10, "con-topic-H2", 0]);
MGCAddTopic(["Calibre FRACTURE Invocation", "idae95a34c-ab83-47e9-a61a-b528a8b2953e", 11, "cmd-H2", 0]);
MGCAddTopic(["idae95a34c-ab83-47e9-a61a-b528a8b2953e", "idae95a34c-ab83-47e9-a61a-b528a8b2953e", 11, "ct-topic-H3", 0]);
MGCAddTopic(["ide3e4da44-90cb-461a-a0db-b756df7601d3", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__ide3e4da44-90cb-461a-a0db-b756df7601d3", 11, "cmd-arg", 0]);
MGCAddTopic(["id2a74a7a4-2ea5-4eeb-868f-a6c6baf87934", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__id2a74a7a4-2ea5-4eeb-868f-a6c6baf87934", 11, "cmd-arg", 0]);
MGCAddTopic(["idc98ba340-3fad-4a2a-9da8-c544ee77826e", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__idc98ba340-3fad-4a2a-9da8-c544ee77826e", 11, "cmd-argumentlist", 0]);
MGCAddTopic(["idd12d2056-3cff-4413-b231-5a5c01d2e5f6", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__idd12d2056-3cff-4413-b231-5a5c01d2e5f6", 11, "cmd-arg", 0]);
MGCAddTopic(["id9d7ecb6d-befe-4034-bdad-26eec145c50f", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__id9d7ecb6d-befe-4034-bdad-26eec145c50f", 11, "cmd-arg", 0]);
MGCAddTopic(["ided4f8bee-1f3b-4849-88f7-5dfa028e735d", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__ided4f8bee-1f3b-4849-88f7-5dfa028e735d", 11, "cmd-arg", 0]);
MGCAddTopic(["ida15fb906-fb7b-4e1e-9cf5-398bbd98a8a8", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__ida15fb906-fb7b-4e1e-9cf5-398bbd98a8a8", 11, "cmd-arg", 0]);
MGCAddTopic(["id277e3584-6a23-4167-a521-6ee066a9bef8", "idae95a34c-ab83-47e9-a61a-b528a8b2953e__id277e3584-6a23-4167-a521-6ee066a9bef8", 11, "cmd-arg", 0]);
MGCAddTopic(["Calibre FRACTURE Syntax", "id9729a4ec-b893-45d6-9165-2a7d1a3a3c9e", 12, "mgcsec-H2", 0]);
MGCAddTopic(["id9729a4ec-b893-45d6-9165-2a7d1a3a3c9e", "id9729a4ec-b893-45d6-9165-2a7d1a3a3c9e", 12, "ct-topic-H2", 0]);
MGCAddTopic(["Global Calibre FRACTURE Syntax", "id986e4142-a084-42c5-b29e-4181b81c8f50", 13, "cmd-H3", 0]);
MGCAddTopic(["INSIDE OF Coordinates", "id054ad882-3c90-4cc3-9824-ed9a019cc65a", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["Regions Define the Portion of the Layer to Fracture", "id35a0fb06-35cc-46f4-b5a5-c56a35bf99cd", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id986e4142-a084-42c5-b29e-4181b81c8f50", "id986e4142-a084-42c5-b29e-4181b81c8f50", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id8105991e-d991-4edd-ad23-1538d968b75e", "id986e4142-a084-42c5-b29e-4181b81c8f50__id8105991e-d991-4edd-ad23-1538d968b75e", 13, "cmd-arg", 0]);
MGCAddTopic(["idd17ad46a-1c52-4e14-9766-d4776d781322", "id986e4142-a084-42c5-b29e-4181b81c8f50__idd17ad46a-1c52-4e14-9766-d4776d781322", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idac7bc13a-9c8d-4883-a77b-08a74ce53145", "id986e4142-a084-42c5-b29e-4181b81c8f50__idac7bc13a-9c8d-4883-a77b-08a74ce53145", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6047a2b1-a82a-49e1-9315-592240488999", "id986e4142-a084-42c5-b29e-4181b81c8f50__id6047a2b1-a82a-49e1-9315-592240488999", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idc8d6ff0c-661d-4336-9386-cb14b5f99e38", "id986e4142-a084-42c5-b29e-4181b81c8f50__idc8d6ff0c-661d-4336-9386-cb14b5f99e38", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id7fe5273f-c0b4-4eeb-a739-5760a95c1b0d", "id986e4142-a084-42c5-b29e-4181b81c8f50__id7fe5273f-c0b4-4eeb-a739-5760a95c1b0d", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id3b1aa8d6-af57-4b96-a685-465abf5d42b9", "id986e4142-a084-42c5-b29e-4181b81c8f50__id3b1aa8d6-af57-4b96-a685-465abf5d42b9", 13, "cmd-arg-L1", 0]);
MGCAddTopic(["ida03fe0d4-a906-4c70-aaf5-297d849b8820", "id986e4142-a084-42c5-b29e-4181b81c8f50__ida03fe0d4-a906-4c70-aaf5-297d849b8820", 13, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idec32296d-5c63-4fa4-baa6-01a4945e5f97", "id986e4142-a084-42c5-b29e-4181b81c8f50__idec32296d-5c63-4fa4-baa6-01a4945e5f97", 13, "cmd-arg-L1", 0]);
MGCAddTopic(["id5b765515-f2cd-4f6c-8f03-115aebaad4e5", "id986e4142-a084-42c5-b29e-4181b81c8f50__id5b765515-f2cd-4f6c-8f03-115aebaad4e5", 13, "cmd-arg-L1", 0]);
MGCAddTopic(["id80f6e7a6-f956-4c1e-aafb-1c9146e557ce", "id986e4142-a084-42c5-b29e-4181b81c8f50__id80f6e7a6-f956-4c1e-aafb-1c9146e557ce", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["ide048077e-07a1-4374-9e8b-1078e0e7efef", "id986e4142-a084-42c5-b29e-4181b81c8f50__ide048077e-07a1-4374-9e8b-1078e0e7efef", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["idc545b616-117f-403e-b391-00dab0e1b80e", "id986e4142-a084-42c5-b29e-4181b81c8f50__idc545b616-117f-403e-b391-00dab0e1b80e", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id054ad882-3c90-4cc3-9824-ed9a019cc65a", "id986e4142-a084-42c5-b29e-4181b81c8f50__id054ad882-3c90-4cc3-9824-ed9a019cc65a", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id6fcbd2f0-6336-4d20-be18-522ae665f327", "id986e4142-a084-42c5-b29e-4181b81c8f50__id6fcbd2f0-6336-4d20-be18-522ae665f327", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id35a0fb06-35cc-46f4-b5a5-c56a35bf99cd", "id986e4142-a084-42c5-b29e-4181b81c8f50__id35a0fb06-35cc-46f4-b5a5-c56a35bf99cd", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id1c4c1992-3dc2-4194-ba1d-966dd26dc5c1", "id986e4142-a084-42c5-b29e-4181b81c8f50__id1c4c1992-3dc2-4194-ba1d-966dd26dc5c1", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id131f22c1-7ac2-4267-94e8-f8fbcfe17b07", "id986e4142-a084-42c5-b29e-4181b81c8f50__id131f22c1-7ac2-4267-94e8-f8fbcfe17b07", 13, "cmd-arguments-sub", 0]);
MGCAddTopic(["id3f19d214-bce7-497d-9704-b01b2aa408cb", "id986e4142-a084-42c5-b29e-4181b81c8f50__id3f19d214-bce7-497d-9704-b01b2aa408cb", 13, "ct-topic-H3", 0]);
MGCAddTopic(["idf3de6d94-c6b0-4ffc-87c7-a7f24bb2424a", "id986e4142-a084-42c5-b29e-4181b81c8f50__idf3de6d94-c6b0-4ffc-87c7-a7f24bb2424a", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id376429e1-ac1f-4bbc-a9e0-f203eaa3aca0", "id986e4142-a084-42c5-b29e-4181b81c8f50__id376429e1-ac1f-4bbc-a9e0-f203eaa3aca0", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id780ace3e-177f-4616-875e-6ad636deb22e", "id986e4142-a084-42c5-b29e-4181b81c8f50__id780ace3e-177f-4616-875e-6ad636deb22e", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id97a6c820-4ffc-4f2c-a556-d2a4c04697d4", "id986e4142-a084-42c5-b29e-4181b81c8f50__id97a6c820-4ffc-4f2c-a556-d2a4c04697d4", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id87bf4b35-1d04-47f0-bbd4-b6b33e84c5a7", "id986e4142-a084-42c5-b29e-4181b81c8f50__id87bf4b35-1d04-47f0-bbd4-b6b33e84c5a7", 13, "ct-topic-H3", 0]);
MGCAddTopic(["iddd0a7b1a-a9aa-44be-9afb-2a7daece2240", "id986e4142-a084-42c5-b29e-4181b81c8f50__iddd0a7b1a-a9aa-44be-9afb-2a7daece2240", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id4ed3e343-f960-47f7-89c7-b3901b239617", "id986e4142-a084-42c5-b29e-4181b81c8f50__id4ed3e343-f960-47f7-89c7-b3901b239617", 13, "ct-topic-H3", 0]);
MGCAddTopic(["id4e76b9cf-be18-42ce-9891-6622ba063852", "id986e4142-a084-42c5-b29e-4181b81c8f50__id4e76b9cf-be18-42ce-9891-6622ba063852", 13, "ct-topic-H3", 0]);
MGCAddTopic(["Calibre FRACTURE Input", "Calibre FRACTURE Input", 13, "ct-topic-H3", 0]);
MGCAddTopic(["Calibre FRACTURE Output", "Calibre FRACTURE Output", 13, "ct-topic-H3", 0]);
MGCAddTopic(["Custom FRACTURE Output With Fracture Arguments", "Custom FRACTURE Output With Fracture Arguments", 13, "ct-topic-H3", 0]);
MGCAddTopic(["Global Calibre FRACTURE Arguments", "id19a28c69-e162-415f-a099-033f38e5c913", 14, "cmd-H3", 0]);
MGCAddTopic(["id19a28c69-e162-415f-a099-033f38e5c913", "id19a28c69-e162-415f-a099-033f38e5c913", 14, "ct-topic-H3", 0]);
MGCAddTopic(["idba09f65f-e342-4ffa-af74-126d63036d86", "id19a28c69-e162-415f-a099-033f38e5c913__idba09f65f-e342-4ffa-af74-126d63036d86", 14, "cmd-arg", 0]);
MGCAddTopic(["id830a858d-ba91-4fc7-97ba-f58a81ffa171", "id19a28c69-e162-415f-a099-033f38e5c913__id830a858d-ba91-4fc7-97ba-f58a81ffa171", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id72280ba7-b3bf-407a-bc5a-85331181b69b", "id19a28c69-e162-415f-a099-033f38e5c913__id72280ba7-b3bf-407a-bc5a-85331181b69b", 14, "cmd-arg", 0]);
MGCAddTopic(["id81c996c2-0cb1-4100-94de-17513a2165e5", "id19a28c69-e162-415f-a099-033f38e5c913__id81c996c2-0cb1-4100-94de-17513a2165e5", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id99b782ab-f9a0-46df-879b-9dd3d2eb7a2a", "id19a28c69-e162-415f-a099-033f38e5c913__id99b782ab-f9a0-46df-879b-9dd3d2eb7a2a", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5ce308aa-fba0-4154-8016-4a26d209e8dc", "id19a28c69-e162-415f-a099-033f38e5c913__id5ce308aa-fba0-4154-8016-4a26d209e8dc", 14, "cmd-arg", 0]);
MGCAddTopic(["id65344229-dea9-4204-9427-5a569eb84765", "id19a28c69-e162-415f-a099-033f38e5c913__id65344229-dea9-4204-9427-5a569eb84765", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idc3d52b67-28b4-485f-a61e-c6b8616ed44e", "id19a28c69-e162-415f-a099-033f38e5c913__idc3d52b67-28b4-485f-a61e-c6b8616ed44e", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idaf59758b-185f-4a10-b82e-06c166721e2b", "id19a28c69-e162-415f-a099-033f38e5c913__idaf59758b-185f-4a10-b82e-06c166721e2b", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7d7d5dcd-c974-4696-a118-11d80d4dabc5", "id19a28c69-e162-415f-a099-033f38e5c913__id7d7d5dcd-c974-4696-a118-11d80d4dabc5", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id56a66b46-5c03-4cee-869f-0c4dd75c0f05", "id19a28c69-e162-415f-a099-033f38e5c913__id56a66b46-5c03-4cee-869f-0c4dd75c0f05", 14, "cmd-arg", 0]);
MGCAddTopic(["id02c1872e-a34e-423d-b651-00b90b2aceff", "id19a28c69-e162-415f-a099-033f38e5c913__id02c1872e-a34e-423d-b651-00b90b2aceff", 14, "cmd-arg", 0]);
MGCAddTopic(["id46f6a21b-2a32-435f-aa41-357306c2c391", "id19a28c69-e162-415f-a099-033f38e5c913__id46f6a21b-2a32-435f-aa41-357306c2c391", 14, "cmd-arg", 0]);
MGCAddTopic(["id5852daca-d1d2-456e-8963-308ec244da34", "id19a28c69-e162-415f-a099-033f38e5c913__id5852daca-d1d2-456e-8963-308ec244da34", 14, "cmd-arg", 0]);
MGCAddTopic(["idb673dc75-6229-4d6a-9b37-518f3046d102", "id19a28c69-e162-415f-a099-033f38e5c913__idb673dc75-6229-4d6a-9b37-518f3046d102", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id131d0f0b-c476-494f-b147-fac950c8235c", "id19a28c69-e162-415f-a099-033f38e5c913__id131d0f0b-c476-494f-b147-fac950c8235c", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idc01b108a-9dd8-45dc-b7e1-559b9a3aa030", "id19a28c69-e162-415f-a099-033f38e5c913__idc01b108a-9dd8-45dc-b7e1-559b9a3aa030", 14, "cmd-arg", 0]);
MGCAddTopic(["id83dc5b20-9ebc-4149-9985-afd92a3f01de", "id19a28c69-e162-415f-a099-033f38e5c913__id83dc5b20-9ebc-4149-9985-afd92a3f01de", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id60647eb1-68ee-47b7-a89f-ec01ceac6950", "id19a28c69-e162-415f-a099-033f38e5c913__id60647eb1-68ee-47b7-a89f-ec01ceac6950", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id456b12c1-6b29-4bb4-91ab-e1e5aed75b64", "id19a28c69-e162-415f-a099-033f38e5c913__id456b12c1-6b29-4bb4-91ab-e1e5aed75b64", 14, "cmd-argumentlist", 0]);
MGCAddTopic(["id248a24a3-48a5-4cb9-84c5-3f3ae732f353", "id19a28c69-e162-415f-a099-033f38e5c913__id248a24a3-48a5-4cb9-84c5-3f3ae732f353", 14, "cmd-arg", 0]);
MGCAddTopic(["ide059ab90-6fb7-4ac8-a704-52f933a7a154", "id19a28c69-e162-415f-a099-033f38e5c913__ide059ab90-6fb7-4ac8-a704-52f933a7a154", 14, "cmd-arg", 0]);
MGCAddTopic(["id62ee13f5-5fc3-47c1-9599-cc91151002e1", "id19a28c69-e162-415f-a099-033f38e5c913__id62ee13f5-5fc3-47c1-9599-cc91151002e1", 14, "cmd-arg", 0]);
MGCAddTopic(["ida93f079f-8627-4df7-b747-f729f0e9aedf", "id19a28c69-e162-415f-a099-033f38e5c913__ida93f079f-8627-4df7-b747-f729f0e9aedf", 14, "cmd-arguments-zpt.Arg", 0]);
MGCAddTopic(["id125e4e72-46a0-4cb3-a0e4-b309cae6b383", "id19a28c69-e162-415f-a099-033f38e5c913__id125e4e72-46a0-4cb3-a0e4-b309cae6b383", 14, "cmd-arg-ul-1", 0]);
MGCAddTopic(["id75758c06-1caa-4c6f-bb12-7d32702123f1", "id19a28c69-e162-415f-a099-033f38e5c913__id75758c06-1caa-4c6f-bb12-7d32702123f1", 14, "cmd-arg-ul-1", 0]);
MGCAddTopic(["id7e48e2b6-bfe6-462c-9e8b-d34d7485c619", "id19a28c69-e162-415f-a099-033f38e5c913__id7e48e2b6-bfe6-462c-9e8b-d34d7485c619", 14, "cmd-arg-ul-1", 0]);
MGCAddTopic(["idac82a56b-1ba8-403d-9f29-4f3d5f50a133", "id19a28c69-e162-415f-a099-033f38e5c913__idac82a56b-1ba8-403d-9f29-4f3d5f50a133", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["idae782477-b6e1-4f2f-987e-17eab3153290", "id19a28c69-e162-415f-a099-033f38e5c913__idae782477-b6e1-4f2f-987e-17eab3153290", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3c600fda-7f1a-4351-b835-26aaf4d1c9f1", "id19a28c69-e162-415f-a099-033f38e5c913__id3c600fda-7f1a-4351-b835-26aaf4d1c9f1", 14, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc910d938-3cef-4691-93d0-bb0dedd9b5b0", "id19a28c69-e162-415f-a099-033f38e5c913__idc910d938-3cef-4691-93d0-bb0dedd9b5b0", 14, "cmd-arg", 0]);
MGCAddTopic(["id03e82a5a-8dda-407d-acc3-c429e3fa732b", "id19a28c69-e162-415f-a099-033f38e5c913__id03e82a5a-8dda-407d-acc3-c429e3fa732b", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0501b045-90d0-4f4a-b471-81e5dbaaeb58", "id19a28c69-e162-415f-a099-033f38e5c913__id0501b045-90d0-4f4a-b471-81e5dbaaeb58", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idf915d33c-82c8-41f6-b896-6a69a3998040", "id19a28c69-e162-415f-a099-033f38e5c913__idf915d33c-82c8-41f6-b896-6a69a3998040", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id7f3894c5-283f-4c83-a8ae-1936b0cebdee", "id19a28c69-e162-415f-a099-033f38e5c913__id7f3894c5-283f-4c83-a8ae-1936b0cebdee", 14, "cmd-arg", 0]);
MGCAddTopic(["id5c5ae685-69f3-445b-aabe-756d05771ebe", "id19a28c69-e162-415f-a099-033f38e5c913__id5c5ae685-69f3-445b-aabe-756d05771ebe", 14, "cmd-arg", 0]);
MGCAddTopic(["id7c0d2ed1-f026-4087-a842-1a5e732aff9f", "id19a28c69-e162-415f-a099-033f38e5c913__id7c0d2ed1-f026-4087-a842-1a5e732aff9f", 14, "cmd-arg", 0]);
MGCAddTopic(["idbf4b0d0c-3cdd-47c6-adf4-394acf7336cb", "id19a28c69-e162-415f-a099-033f38e5c913__idbf4b0d0c-3cdd-47c6-adf4-394acf7336cb", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida9838443-a824-4cfd-b0e8-e341152f3857", "id19a28c69-e162-415f-a099-033f38e5c913__ida9838443-a824-4cfd-b0e8-e341152f3857", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id1e31da7f-85f0-498a-9e2f-ee6b1c46c0d5", "id19a28c69-e162-415f-a099-033f38e5c913__id1e31da7f-85f0-498a-9e2f-ee6b1c46c0d5", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id5c2d8046-64e1-4588-b1d2-324f8b228397", "id19a28c69-e162-415f-a099-033f38e5c913__id5c2d8046-64e1-4588-b1d2-324f8b228397", 14, "cmd-argdesc", 0]);
MGCAddTopic(["id39e2b979-3a3c-481b-90aa-55599df256dd", "id19a28c69-e162-415f-a099-033f38e5c913__id39e2b979-3a3c-481b-90aa-55599df256dd", 14, "cmd-arg", 0]);
MGCAddTopic(["idcedb0433-f6d2-4813-93f7-1fefb4a63077", "id19a28c69-e162-415f-a099-033f38e5c913__idcedb0433-f6d2-4813-93f7-1fefb4a63077", 14, "cmd-arg", 0]);
MGCAddTopic(["id3cc762c5-c15c-4a20-b512-77cbdcd32b34", "id19a28c69-e162-415f-a099-033f38e5c913__id3cc762c5-c15c-4a20-b512-77cbdcd32b34", 14, "cmd-arg", 0]);
MGCAddTopic(["ida5dcd0b1-45cb-4eee-bfd6-68bc643b3af2", "id19a28c69-e162-415f-a099-033f38e5c913__ida5dcd0b1-45cb-4eee-bfd6-68bc643b3af2", 14, "cmd-arg", 0]);
MGCAddTopic(["id7975206e-92a0-4641-9523-51367acf9301", "id19a28c69-e162-415f-a099-033f38e5c913__id7975206e-92a0-4641-9523-51367acf9301", 14, "cmd-arg", 0]);
MGCAddTopic(["idae409f0e-5e6a-4b6f-ae5b-b29622ff1383", "id19a28c69-e162-415f-a099-033f38e5c913__idae409f0e-5e6a-4b6f-ae5b-b29622ff1383", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0c3a09ae-6c18-4ff5-94f6-9f40fc6894d0", "id19a28c69-e162-415f-a099-033f38e5c913__id0c3a09ae-6c18-4ff5-94f6-9f40fc6894d0", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id905321c1-2836-468f-ac87-f7d9f1c5588b", "id19a28c69-e162-415f-a099-033f38e5c913__id905321c1-2836-468f-ac87-f7d9f1c5588b", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idd83792ab-37fd-4a55-a55d-18feb49b60ff", "id19a28c69-e162-415f-a099-033f38e5c913__idd83792ab-37fd-4a55-a55d-18feb49b60ff", 14, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id44bc63ae-eaf1-49f8-a4d9-c6a465b68b46", "id19a28c69-e162-415f-a099-033f38e5c913__id44bc63ae-eaf1-49f8-a4d9-c6a465b68b46", 14, "cmd-arg", 0]);
MGCAddTopic(["id865c74bf-1eb9-4ed2-a7dc-539da8865cb4", "id19a28c69-e162-415f-a099-033f38e5c913__id865c74bf-1eb9-4ed2-a7dc-539da8865cb4", 14, "cmd-arg", 0]);
MGCAddTopic(["idf7791a91-9885-4ea3-92cc-6f7fe2b6d0f1", "id19a28c69-e162-415f-a099-033f38e5c913__idf7791a91-9885-4ea3-92cc-6f7fe2b6d0f1", 14, "cmd-arg", 0]);
MGCAddTopic(["idac5b71a6-dd1e-423e-b2fc-2e0a0e54c489", "id19a28c69-e162-415f-a099-033f38e5c913__idac5b71a6-dd1e-423e-b2fc-2e0a0e54c489", 14, "cmd-arguments-z.ArgDesc", 0]);
MGCAddTopic(["idcd141a89-4b67-43b7-abe8-48cba26897b0", "id19a28c69-e162-415f-a099-033f38e5c913__idcd141a89-4b67-43b7-abe8-48cba26897b0", 14, "cmd-argumentlist", 0]);
MGCAddTopic(["Common Arguments for Vector Beam Formats", "id6802af60-b824-4e77-9868-1ac206276235", 15, "cmd-H3", 0]);
MGCAddTopic(["Internal Critically Dimensioned Portion of a Design", "id5986033b-bfb3-4e7f-99e9-0c19de133e43", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["External Critically Dimensioned Feature", "idcaa19b6d-f6ab-4e45-99ba-39ce269220a5", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["Critical Features in a Normal Tone Fracture", "id09e880a2-0c15-46f5-8703-b1a6cd4e6cd4", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id6802af60-b824-4e77-9868-1ac206276235", "id6802af60-b824-4e77-9868-1ac206276235", 15, "ct-topic-H3", 0]);
MGCAddTopic(["idc8d17db5-25ef-4587-b64c-98cbf3e33c62", "id6802af60-b824-4e77-9868-1ac206276235__idc8d17db5-25ef-4587-b64c-98cbf3e33c62", 15, "ct-topic-H3", 0]);
MGCAddTopic(["id51757fc4-190a-48c2-9479-3818023cb802", "id6802af60-b824-4e77-9868-1ac206276235__id51757fc4-190a-48c2-9479-3818023cb802", 15, "cmd-arg", 0]);
MGCAddTopic(["id6c50764c-a80b-49f2-b93d-68d75afa064a", "id6802af60-b824-4e77-9868-1ac206276235__id6c50764c-a80b-49f2-b93d-68d75afa064a", 15, "cmd-argopt-B1", 0]);
MGCAddTopic(["iddba97b4e-f3d9-4a86-9dc9-129ea00d7140", "id6802af60-b824-4e77-9868-1ac206276235__iddba97b4e-f3d9-4a86-9dc9-129ea00d7140", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id5de0a921-62ec-4c02-a543-a3b33c0fee2e", "id6802af60-b824-4e77-9868-1ac206276235__id5de0a921-62ec-4c02-a543-a3b33c0fee2e", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id19c15e5c-de9b-4700-a9b1-945292e4dfee", "id6802af60-b824-4e77-9868-1ac206276235__id19c15e5c-de9b-4700-a9b1-945292e4dfee", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id9d34582d-92e6-4d2a-9551-cdebb5d3f41c", "id6802af60-b824-4e77-9868-1ac206276235__id9d34582d-92e6-4d2a-9551-cdebb5d3f41c", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["ide73c97dc-4afb-4305-a327-944b252e66dc", "id6802af60-b824-4e77-9868-1ac206276235__ide73c97dc-4afb-4305-a327-944b252e66dc", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["idfdc85182-2ef2-498e-a51d-5c60b9332bfb", "id6802af60-b824-4e77-9868-1ac206276235__idfdc85182-2ef2-498e-a51d-5c60b9332bfb", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id9749eaea-1973-4e95-a24c-40eda6a4bd31", "id6802af60-b824-4e77-9868-1ac206276235__id9749eaea-1973-4e95-a24c-40eda6a4bd31", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id5986033b-bfb3-4e7f-99e9-0c19de133e43", "id6802af60-b824-4e77-9868-1ac206276235__id5986033b-bfb3-4e7f-99e9-0c19de133e43", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id30633cc5-1697-4bce-9c74-76c8d1b8e8c6", "id6802af60-b824-4e77-9868-1ac206276235__id30633cc5-1697-4bce-9c74-76c8d1b8e8c6", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["idcaa19b6d-f6ab-4e45-99ba-39ce269220a5", "id6802af60-b824-4e77-9868-1ac206276235__idcaa19b6d-f6ab-4e45-99ba-39ce269220a5", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id09e880a2-0c15-46f5-8703-b1a6cd4e6cd4", "id6802af60-b824-4e77-9868-1ac206276235__id09e880a2-0c15-46f5-8703-b1a6cd4e6cd4", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["idca7aa71d-a839-4b7a-83fe-f07dee1954b8", "id6802af60-b824-4e77-9868-1ac206276235__idca7aa71d-a839-4b7a-83fe-f07dee1954b8", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id4623324c-7fbf-4662-b2d1-f9a01af681c0", "id6802af60-b824-4e77-9868-1ac206276235__id4623324c-7fbf-4662-b2d1-f9a01af681c0", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id06e7f232-1f4e-4fa0-b000-2efc0dcefe26", "id6802af60-b824-4e77-9868-1ac206276235__id06e7f232-1f4e-4fa0-b000-2efc0dcefe26", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id469e589a-d927-4be1-92d9-16624d870973", "id6802af60-b824-4e77-9868-1ac206276235__id469e589a-d927-4be1-92d9-16624d870973", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id53da8c4f-07ab-47d7-a606-2f661b2be692", "id6802af60-b824-4e77-9868-1ac206276235__id53da8c4f-07ab-47d7-a606-2f661b2be692", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id034db1b9-e055-4ca0-9884-44c1545c7ce9", "id6802af60-b824-4e77-9868-1ac206276235__id034db1b9-e055-4ca0-9884-44c1545c7ce9", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id6136a925-2bf8-4e81-b2c3-c520019cb034", "id6802af60-b824-4e77-9868-1ac206276235__id6136a925-2bf8-4e81-b2c3-c520019cb034", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["id581171eb-c343-4780-a25a-e0d73c7fd42b", "id6802af60-b824-4e77-9868-1ac206276235__id581171eb-c343-4780-a25a-e0d73c7fd42b", 15, "cmd-arguments-sub", 0]);
MGCAddTopic(["FRACTURE HITACHI (FRACTUREh)", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216", 16, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Hitachi Format Type Maximum File Size", "id6b3d59cf-8870-4278-b6e3-d4375fb05d88", 16, "TableTitle", 0]);
MGCAddTopic(["Stairstep Approximation (Hitachi)", "id8b9088dc-8370-4753-8f83-ea9fcfa597b1", 16, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["Output File Name Restrictions for Hitachi", "id34ace39d-7d1a-4abf-9144-317f841d5d6a", 16, "TableTitle", 0]);
MGCAddTopic(["idaeadff24-f9e2-4f1c-b66e-5f5bed036216", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216", 16, "ct-topic-H3", 0]);
MGCAddTopic(["iddb61a48e-a32e-46ba-a4cc-093e22ff652d", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__iddb61a48e-a32e-46ba-a4cc-093e22ff652d", 16, "ct-topic-H3", 0]);
MGCAddTopic(["ide94176ba-5b8c-446b-932b-2d237ab0d345", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__ide94176ba-5b8c-446b-932b-2d237ab0d345", 16, "cmd-arguments", 0]);
MGCAddTopic(["id952cdc1c-07db-4d51-9171-5a5211d4fc75", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id952cdc1c-07db-4d51-9171-5a5211d4fc75", 16, "cmd-arguments", 0]);
MGCAddTopic(["idcde6abfc-0847-40ff-a300-8073b148f109", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idcde6abfc-0847-40ff-a300-8073b148f109", 16, "cmd-arguments", 0]);
MGCAddTopic(["id405683af-fc4e-413a-a882-e645dd3753db", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id405683af-fc4e-413a-a882-e645dd3753db", 16, "cmd-arguments", 0]);
MGCAddTopic(["id449b35f3-1674-432f-a348-db98b3bdddc0", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id449b35f3-1674-432f-a348-db98b3bdddc0", 16, "cmd-arg", 0]);
MGCAddTopic(["idabfcb282-6b4e-4be2-914e-2e3b7069d282", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idabfcb282-6b4e-4be2-914e-2e3b7069d282", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id07b7325e-763b-40fb-90a1-e47514c6b47a", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id07b7325e-763b-40fb-90a1-e47514c6b47a", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id80a34b5a-2c60-4eb3-8ed5-017781e47831", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id80a34b5a-2c60-4eb3-8ed5-017781e47831", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6b3d59cf-8870-4278-b6e3-d4375fb05d88", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id6b3d59cf-8870-4278-b6e3-d4375fb05d88", 16, "cmd-argdesc", 0]);
MGCAddTopic(["id87f0a601-0d10-43c7-b9a3-15026f757b92", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id87f0a601-0d10-43c7-b9a3-15026f757b92", 16, "cmd-arg", 0]);
MGCAddTopic(["id446361f3-4596-461e-b719-ccd306a098ae", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id446361f3-4596-461e-b719-ccd306a098ae", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id8b9088dc-8370-4753-8f83-ea9fcfa597b1", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id8b9088dc-8370-4753-8f83-ea9fcfa597b1", 16, "cmd-argdesc", 0]);
MGCAddTopic(["ida91d24ca-d24d-4fbb-8159-b23963a3e182", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__ida91d24ca-d24d-4fbb-8159-b23963a3e182", 16, "cmd-arg", 0]);
MGCAddTopic(["id998f0d3d-1c2c-4025-a903-e232ccc8fc41", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id998f0d3d-1c2c-4025-a903-e232ccc8fc41", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["ideeaf9691-8d34-4e79-ae93-ac3a44b0f13a", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__ideeaf9691-8d34-4e79-ae93-ac3a44b0f13a", 16, "cmd-arg", 0]);
MGCAddTopic(["id4409c735-4eea-42ed-bed1-2f6b053a55f7", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id4409c735-4eea-42ed-bed1-2f6b053a55f7", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id624bb6f9-85c3-419f-9602-d0bb7ec0e88d", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id624bb6f9-85c3-419f-9602-d0bb7ec0e88d", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf2fd1a19-1ccc-4194-a4dc-78020687badf", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idf2fd1a19-1ccc-4194-a4dc-78020687badf", 16, "cmd-arg", 0]);
MGCAddTopic(["id40910914-16c0-4b81-a1fa-be7883da5011", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id40910914-16c0-4b81-a1fa-be7883da5011", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6cfff628-4d2c-42e0-8034-71d5cea2429a", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id6cfff628-4d2c-42e0-8034-71d5cea2429a", 16, "cmd-arg", 0]);
MGCAddTopic(["id07ffcf3a-a560-4da7-be0c-8f87bd1adaf1", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id07ffcf3a-a560-4da7-be0c-8f87bd1adaf1", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd82687fb-f070-4cff-ad68-1cde8ec4df07", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idd82687fb-f070-4cff-ad68-1cde8ec4df07", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id885f3ba5-d24c-4814-ac50-cf216de57479", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id885f3ba5-d24c-4814-ac50-cf216de57479", 16, "cmd-arg", 0]);
MGCAddTopic(["idc8472367-06c4-45ca-8283-6fca73c9ebce", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idc8472367-06c4-45ca-8283-6fca73c9ebce", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd44de179-0c63-44b9-8d9b-b2e0e2512cbd", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idd44de179-0c63-44b9-8d9b-b2e0e2512cbd", 16, "cmd-arg", 0]);
MGCAddTopic(["id02b3494e-5115-43c0-a727-2ae39e66945e", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id02b3494e-5115-43c0-a727-2ae39e66945e", 16, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2dc3f850-049c-4382-83bd-ec1d1f990ef9", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id2dc3f850-049c-4382-83bd-ec1d1f990ef9", 16, "cmd-arg", 0]);
MGCAddTopic(["idee5c58ac-6f33-4103-b823-6f152a41db3b", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idee5c58ac-6f33-4103-b823-6f152a41db3b", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id34ace39d-7d1a-4abf-9144-317f841d5d6a", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id34ace39d-7d1a-4abf-9144-317f841d5d6a", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id1c18c612-06f9-4154-a969-5f56d490e535", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id1c18c612-06f9-4154-a969-5f56d490e535", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id4a8f7716-4db0-4d60-941e-50514de84348", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id4a8f7716-4db0-4d60-941e-50514de84348", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id060c469c-f947-4cc0-808a-941e66dceacb", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id060c469c-f947-4cc0-808a-941e66dceacb", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id3a2c00c0-9376-4fed-817a-3f7c54c40819", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id3a2c00c0-9376-4fed-817a-3f7c54c40819", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id8e731136-2a6b-4ba1-9ea8-2feba95f5f07", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id8e731136-2a6b-4ba1-9ea8-2feba95f5f07", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id2ec36f22-ffe6-4c0f-946e-cd251da81a4d", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__id2ec36f22-ffe6-4c0f-946e-cd251da81a4d", 16, "ct-topic-H3", 0]);
MGCAddTopic(["idb040a869-af14-49e7-822c-bf492b6829b5", "idaeadff24-f9e2-4f1c-b66e-5f5bed036216__idb040a869-af14-49e7-822c-bf492b6829b5", 16, "ct-topic-H3", 0]);
MGCAddTopic(["FRACTURE JEOL (FRACTUREj)", "id7f738536-087f-4e5a-aff0-42a013b70d19", 17, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Grid Size Settings", "idbe4acad6-20d5-4047-b940-7e6016d2090e", 17, "cmd-argdesc", 0]);
MGCAddTopic(["id7f738536-087f-4e5a-aff0-42a013b70d19", "id7f738536-087f-4e5a-aff0-42a013b70d19", 17, "ct-topic-H3", 0]);
MGCAddTopic(["id1f652259-dab9-45be-b809-2029aa789844", "id7f738536-087f-4e5a-aff0-42a013b70d19__id1f652259-dab9-45be-b809-2029aa789844", 17, "cmd-arguments", 0]);
MGCAddTopic(["id571c4136-2cc4-4023-bb2d-e5fce61496b1", "id7f738536-087f-4e5a-aff0-42a013b70d19__id571c4136-2cc4-4023-bb2d-e5fce61496b1", 17, "cmd-arguments", 0]);
MGCAddTopic(["idde27b1b4-5d87-41da-84b1-163de35afc7b", "id7f738536-087f-4e5a-aff0-42a013b70d19__idde27b1b4-5d87-41da-84b1-163de35afc7b", 17, "cmd-arguments", 0]);
MGCAddTopic(["id154a5a15-14d0-4133-b787-4b8111b2fb16", "id7f738536-087f-4e5a-aff0-42a013b70d19__id154a5a15-14d0-4133-b787-4b8111b2fb16", 17, "cmd-arguments", 0]);
MGCAddTopic(["idc2b5acd0-c240-4001-9c83-017e4f87f42e", "id7f738536-087f-4e5a-aff0-42a013b70d19__idc2b5acd0-c240-4001-9c83-017e4f87f42e", 17, "cmd-arg", 0]);
MGCAddTopic(["id94bbea42-67ba-4cfc-b067-130c5791b7ac", "id7f738536-087f-4e5a-aff0-42a013b70d19__id94bbea42-67ba-4cfc-b067-130c5791b7ac", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf72d751b-03ec-4aaa-a664-96192c8eec11", "id7f738536-087f-4e5a-aff0-42a013b70d19__idf72d751b-03ec-4aaa-a664-96192c8eec11", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id4facb04c-c2b7-4975-9dfe-cc7be4bc0272", "id7f738536-087f-4e5a-aff0-42a013b70d19__id4facb04c-c2b7-4975-9dfe-cc7be4bc0272", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id83a474b2-8033-41f5-a7b1-8d7d927b2547", "id7f738536-087f-4e5a-aff0-42a013b70d19__id83a474b2-8033-41f5-a7b1-8d7d927b2547", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id631da570-d023-48f5-85a7-344ea7f0ce5a", "id7f738536-087f-4e5a-aff0-42a013b70d19__id631da570-d023-48f5-85a7-344ea7f0ce5a", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["idd9165cac-bd51-4483-a75c-4e2cced0635d", "id7f738536-087f-4e5a-aff0-42a013b70d19__idd9165cac-bd51-4483-a75c-4e2cced0635d", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["idf4bf57f2-2994-4a39-bb73-8ce979c6a51a", "id7f738536-087f-4e5a-aff0-42a013b70d19__idf4bf57f2-2994-4a39-bb73-8ce979c6a51a", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id388c0578-3310-4c4f-b32b-78af72b6b30b", "id7f738536-087f-4e5a-aff0-42a013b70d19__id388c0578-3310-4c4f-b32b-78af72b6b30b", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id47671686-aaf7-4be1-9071-4d197a530b11", "id7f738536-087f-4e5a-aff0-42a013b70d19__id47671686-aaf7-4be1-9071-4d197a530b11", 17, "cmd-arg", 0]);
MGCAddTopic(["ide090cb63-5f79-459d-838e-fc61ea606e01", "id7f738536-087f-4e5a-aff0-42a013b70d19__ide090cb63-5f79-459d-838e-fc61ea606e01", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id502223ef-9c40-448e-862f-32fe51a14220", "id7f738536-087f-4e5a-aff0-42a013b70d19__id502223ef-9c40-448e-862f-32fe51a14220", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id15149bb0-580d-4c68-9069-62fb34ceaa6a", "id7f738536-087f-4e5a-aff0-42a013b70d19__id15149bb0-580d-4c68-9069-62fb34ceaa6a", 17, "cmd-arg", 0]);
MGCAddTopic(["id30a12c6c-5b0e-49d6-9074-19f563cc38c3", "id7f738536-087f-4e5a-aff0-42a013b70d19__id30a12c6c-5b0e-49d6-9074-19f563cc38c3", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id37d87186-bd14-468e-9734-928817cd8f0f", "id7f738536-087f-4e5a-aff0-42a013b70d19__id37d87186-bd14-468e-9734-928817cd8f0f", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["idbe4acad6-20d5-4047-b940-7e6016d2090e", "id7f738536-087f-4e5a-aff0-42a013b70d19__idbe4acad6-20d5-4047-b940-7e6016d2090e", 17, "cmd-argdesc", 0]);
MGCAddTopic(["iddc5d5492-05cb-4742-bb06-c01398f83106", "id7f738536-087f-4e5a-aff0-42a013b70d19__iddc5d5492-05cb-4742-bb06-c01398f83106", 17, "cmd-arg", 0]);
MGCAddTopic(["id27919e46-5d80-4f70-b224-30d33d00e305", "id7f738536-087f-4e5a-aff0-42a013b70d19__id27919e46-5d80-4f70-b224-30d33d00e305", 17, "cmd-arg", 0]);
MGCAddTopic(["ida35fbd20-d96f-48d1-9fe1-b4f3396ca338", "id7f738536-087f-4e5a-aff0-42a013b70d19__ida35fbd20-d96f-48d1-9fe1-b4f3396ca338", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id61a6b097-8fb4-4c3f-8cfa-c3833be36385", "id7f738536-087f-4e5a-aff0-42a013b70d19__id61a6b097-8fb4-4c3f-8cfa-c3833be36385", 17, "cmd-arg-ul-3", 0]);
MGCAddTopic(["idf63de609-fdd5-42f8-bacf-932dc33f8dcd", "id7f738536-087f-4e5a-aff0-42a013b70d19__idf63de609-fdd5-42f8-bacf-932dc33f8dcd", 17, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id9bf83cc9-51df-4557-9caa-b6d468232f5b", "id7f738536-087f-4e5a-aff0-42a013b70d19__id9bf83cc9-51df-4557-9caa-b6d468232f5b", 17, "cmd-arg-ul-3", 0]);
MGCAddTopic(["idedca7990-fc9c-4092-8613-4d071fd71cc5", "id7f738536-087f-4e5a-aff0-42a013b70d19__idedca7990-fc9c-4092-8613-4d071fd71cc5", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3cd911ad-c7b1-49eb-a9df-c394681a94e4", "id7f738536-087f-4e5a-aff0-42a013b70d19__id3cd911ad-c7b1-49eb-a9df-c394681a94e4", 17, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id73088557-9216-432d-a329-9948c52603a9", "id7f738536-087f-4e5a-aff0-42a013b70d19__id73088557-9216-432d-a329-9948c52603a9", 17, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id4a579c2e-5ee9-4d67-9e6e-c7936f57a4fd", "id7f738536-087f-4e5a-aff0-42a013b70d19__id4a579c2e-5ee9-4d67-9e6e-c7936f57a4fd", 17, "cmd-arg", 0]);
MGCAddTopic(["id15ab82cc-9716-44ea-a161-ab4674e65b85", "id7f738536-087f-4e5a-aff0-42a013b70d19__id15ab82cc-9716-44ea-a161-ab4674e65b85", 17, "cmd-argumentlist", 0]);
MGCAddTopic(["idec214c5a-2707-4e81-8c69-77f2bbcd5e5a", "id7f738536-087f-4e5a-aff0-42a013b70d19__idec214c5a-2707-4e81-8c69-77f2bbcd5e5a", 17, "cmd-arg", 0]);
MGCAddTopic(["id236f4c93-7f46-40cb-a462-79255e7d1f77", "id7f738536-087f-4e5a-aff0-42a013b70d19__id236f4c93-7f46-40cb-a462-79255e7d1f77", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7a13ee83-347c-4ff1-8b90-a2a499121078", "id7f738536-087f-4e5a-aff0-42a013b70d19__id7a13ee83-347c-4ff1-8b90-a2a499121078", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id1268f607-a814-410e-965c-79134870cba9", "id7f738536-087f-4e5a-aff0-42a013b70d19__id1268f607-a814-410e-965c-79134870cba9", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id8cb2052d-d3cd-4794-b0bf-4797310a1ff1", "id7f738536-087f-4e5a-aff0-42a013b70d19__id8cb2052d-d3cd-4794-b0bf-4797310a1ff1", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id09bf4d26-d929-4cd4-9023-b79aa08b5920", "id7f738536-087f-4e5a-aff0-42a013b70d19__id09bf4d26-d929-4cd4-9023-b79aa08b5920", 17, "cmd-argopt-B1", 0]);
MGCAddTopic(["id9517fa20-ad5f-4bbb-b831-00b11e608800", "id7f738536-087f-4e5a-aff0-42a013b70d19__id9517fa20-ad5f-4bbb-b831-00b11e608800", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id35ed30a2-35e7-461c-8b54-77292b53c89c", "id7f738536-087f-4e5a-aff0-42a013b70d19__id35ed30a2-35e7-461c-8b54-77292b53c89c", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["id56efc0f4-7956-4d6c-8e5f-67a9ad1e85e2", "id7f738536-087f-4e5a-aff0-42a013b70d19__id56efc0f4-7956-4d6c-8e5f-67a9ad1e85e2", 17, "cmd-argopt-B2", 0]);
MGCAddTopic(["ida036eb9c-5480-433e-8e80-14a2a401fac7", "id7f738536-087f-4e5a-aff0-42a013b70d19__ida036eb9c-5480-433e-8e80-14a2a401fac7", 17, "cmd-arg", 0]);
MGCAddTopic(["ide2dd08ad-f688-440c-994d-1e6809807e15", "id7f738536-087f-4e5a-aff0-42a013b70d19__ide2dd08ad-f688-440c-994d-1e6809807e15", 17, "cmd-arg", 0]);
MGCAddTopic(["id34603f2d-1d1d-450d-9e5b-17f2dd7b4217", "id7f738536-087f-4e5a-aff0-42a013b70d19__id34603f2d-1d1d-450d-9e5b-17f2dd7b4217", 17, "cmd-argumentlist", 0]);
MGCAddTopic(["ideb355abd-c1a7-4f7d-82cf-aef8bbb9cb79", "id7f738536-087f-4e5a-aff0-42a013b70d19__ideb355abd-c1a7-4f7d-82cf-aef8bbb9cb79", 17, "cmd-argumentlist", 0]);
MGCAddTopic(["id2d51a3d7-2655-4222-af97-5963a4186ade", "id7f738536-087f-4e5a-aff0-42a013b70d19__id2d51a3d7-2655-4222-af97-5963a4186ade", 17, "ct-topic-H3", 0]);
MGCAddTopic(["ida1264479-1a54-4263-a19a-c5983cf8df6c", "id7f738536-087f-4e5a-aff0-42a013b70d19__ida1264479-1a54-4263-a19a-c5983cf8df6c", 17, "ct-topic-H3", 0]);
MGCAddTopic(["ideda4fdda-040a-4c74-82ff-1fc6729843b6", "id7f738536-087f-4e5a-aff0-42a013b70d19__ideda4fdda-040a-4c74-82ff-1fc6729843b6", 17, "ct-topic-H3", 0]);
MGCAddTopic(["idd50ef1c0-b320-491e-a130-ca6738b2aaed", "id7f738536-087f-4e5a-aff0-42a013b70d19__idd50ef1c0-b320-491e-a130-ca6738b2aaed", 17, "ct-topic-H3", 0]);
MGCAddTopic(["FRACTURE MEBES (FRACTUREm)", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab", 18, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id62e8ec07-e263-4bdb-96b0-6bb57d4102ab", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id7cac548b-125f-4dba-a86c-d791e6a42aba", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id7cac548b-125f-4dba-a86c-d791e6a42aba", 18, "cmd-arguments", 0]);
MGCAddTopic(["idc5e5188f-18e0-4d22-b432-6580b0fe2724", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__idc5e5188f-18e0-4d22-b432-6580b0fe2724", 18, "cmd-arguments", 0]);
MGCAddTopic(["iddd78410e-606c-418f-b7a1-8f0ca10aca70", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__iddd78410e-606c-418f-b7a1-8f0ca10aca70", 18, "cmd-arguments", 0]);
MGCAddTopic(["id378fdb8b-f1e8-4d2c-ae45-86b129cfa884", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id378fdb8b-f1e8-4d2c-ae45-86b129cfa884", 18, "cmd-arg", 0]);
MGCAddTopic(["id8f8f4617-d1c6-4d66-9531-6292570439a2", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id8f8f4617-d1c6-4d66-9531-6292570439a2", 18, "cmd-arg", 0]);
MGCAddTopic(["id5413cdc3-b9cf-4b0b-a11a-6c08bbb26513", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id5413cdc3-b9cf-4b0b-a11a-6c08bbb26513", 18, "cmd-arg", 0]);
MGCAddTopic(["id24a420ca-4625-41f2-95ee-e98d7e49a0fa", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id24a420ca-4625-41f2-95ee-e98d7e49a0fa", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id8b250ce7-150d-4b3f-9103-359d740808ae", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id8b250ce7-150d-4b3f-9103-359d740808ae", 18, "cmd-arg", 0]);
MGCAddTopic(["ide8fe9d0f-6a5b-471b-a61a-1534fac0569f", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__ide8fe9d0f-6a5b-471b-a61a-1534fac0569f", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id9ce3b760-709f-467a-afce-627e5b6b55c5", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id9ce3b760-709f-467a-afce-627e5b6b55c5", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5afed77c-d63f-4464-9d2b-e32c0d582eba", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id5afed77c-d63f-4464-9d2b-e32c0d582eba", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf21daa07-c7b7-4bf9-8ef4-5e06c42397c6", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__idf21daa07-c7b7-4bf9-8ef4-5e06c42397c6", 18, "cmd-arg", 0]);
MGCAddTopic(["idd794363b-9d41-41c8-b4fc-53cc0d4160a5", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__idd794363b-9d41-41c8-b4fc-53cc0d4160a5", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6313c02b-b8b6-464b-9f7a-50d3bc47c957", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id6313c02b-b8b6-464b-9f7a-50d3bc47c957", 18, "cmd-arg", 0]);
MGCAddTopic(["ida97de0eb-2330-4e5e-856c-3fe37eba54c5", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__ida97de0eb-2330-4e5e-856c-3fe37eba54c5", 18, "cmd-arg", 0]);
MGCAddTopic(["id8e3cac59-eac8-408f-b399-a4c28e263e50", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id8e3cac59-eac8-408f-b399-a4c28e263e50", 18, "cmd-arg", 0]);
MGCAddTopic(["idb01d074f-77d5-41bc-8aba-c677edf3cf90", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__idb01d074f-77d5-41bc-8aba-c677edf3cf90", 18, "cmd-arg", 0]);
MGCAddTopic(["id765363d9-8930-499c-879a-059f5164ebf8", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id765363d9-8930-499c-879a-059f5164ebf8", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id55ce9dc8-eac2-4b29-a615-ea33420ebb83", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id55ce9dc8-eac2-4b29-a615-ea33420ebb83", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id7bd70df8-c77f-4a11-a525-7e0ff9612c69", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id7bd70df8-c77f-4a11-a525-7e0ff9612c69", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id5a6a1a8f-cf27-4ef7-8be1-1eb9d0c88327", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id5a6a1a8f-cf27-4ef7-8be1-1eb9d0c88327", 18, "ct-topic-H3", 0]);
MGCAddTopic(["ida1c4d483-2acb-45ff-8dc9-c92e4492f305", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__ida1c4d483-2acb-45ff-8dc9-c92e4492f305", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id0486d3f0-c526-4476-a9e9-ea9c892ba967", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id0486d3f0-c526-4476-a9e9-ea9c892ba967", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id940163b7-ada7-4c1b-9063-d444236787d3", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id940163b7-ada7-4c1b-9063-d444236787d3", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id4d627e19-aa8f-45c7-b20c-5dc73566611c", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id4d627e19-aa8f-45c7-b20c-5dc73566611c", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id149eae49-e033-43e4-a46a-cc0ca4afaf1d", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id149eae49-e033-43e4-a46a-cc0ca4afaf1d", 18, "ct-topic-H3", 0]);
MGCAddTopic(["idc6a66be6-d938-4209-b2ea-b2be504d2fa7", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__idc6a66be6-d938-4209-b2ea-b2be504d2fa7", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id963be073-d2ee-4f44-8474-4c1be0148cad", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id963be073-d2ee-4f44-8474-4c1be0148cad", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id17262d51-f109-4e1e-8f3c-31a6835febd6", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id17262d51-f109-4e1e-8f3c-31a6835febd6", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id3117eb9d-6c61-48a1-a6f4-332360727737", "id62e8ec07-e263-4bdb-96b0-6bb57d4102ab__id3117eb9d-6c61-48a1-a6f4-332360727737", 18, "ct-topic-H3", 0]);
MGCAddTopic(["FRACTURE MICRONIC (FRACTUREc)", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce", 19, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Micronic Origin Shift", "ideb2b0bc6-0318-43c2-bc61-626034d78dc2", 19, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["Micronic Origin Shift Continued", "id8ab28ddf-e119-483a-ae36-d390db3ee0ba", 19, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id31e9bcde-447c-4cdd-9970-e02630c7597b", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id31e9bcde-447c-4cdd-9970-e02630c7597b", 19, "cmd-arguments", 0]);
MGCAddTopic(["id9245cbb6-1698-4c99-adb4-f608ea27372c", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id9245cbb6-1698-4c99-adb4-f608ea27372c", 19, "cmd-arguments", 0]);
MGCAddTopic(["id677f7e9b-2b1d-44b4-b379-b94dbb7ee9b9", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id677f7e9b-2b1d-44b4-b379-b94dbb7ee9b9", 19, "cmd-arguments", 0]);
MGCAddTopic(["ide597862f-e510-4897-a4a4-bdc2b923bfe9", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__ide597862f-e510-4897-a4a4-bdc2b923bfe9", 19, "cmd-arguments", 0]);
MGCAddTopic(["id700e7fa0-1dba-45e9-ad91-ee863931bca8", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id700e7fa0-1dba-45e9-ad91-ee863931bca8", 19, "cmd-arg", 0]);
MGCAddTopic(["idcd4d26ed-5318-477d-9e4f-43cb083628ef", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idcd4d26ed-5318-477d-9e4f-43cb083628ef", 19, "cmd-arg", 0]);
MGCAddTopic(["id566802f9-b337-4119-91a4-4ff90e73be3d", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id566802f9-b337-4119-91a4-4ff90e73be3d", 19, "cmd-arg", 0]);
MGCAddTopic(["idbae85bbe-6d96-4764-ad13-a4da3bfaf900", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idbae85bbe-6d96-4764-ad13-a4da3bfaf900", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["idfdaccd0b-372b-4517-9e09-723343350e4b", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idfdaccd0b-372b-4517-9e09-723343350e4b", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["idbf487c5b-e13a-4f8c-9144-502c6f577b4b", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idbf487c5b-e13a-4f8c-9144-502c6f577b4b", 19, "cmd-arg", 0]);
MGCAddTopic(["iddc1dece8-b3d8-4a06-b82f-faa5c0717ab8", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__iddc1dece8-b3d8-4a06-b82f-faa5c0717ab8", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["id8f7e8f5f-ee97-4d2e-a897-d63174ee84a6", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id8f7e8f5f-ee97-4d2e-a897-d63174ee84a6", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2761ea0b-4911-4d27-b3f7-11eae1faade2", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id2761ea0b-4911-4d27-b3f7-11eae1faade2", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["id81a97d67-9c83-4317-9354-b7514f69a5fe", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id81a97d67-9c83-4317-9354-b7514f69a5fe", 19, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id64bf8fdf-52b5-4e4c-b1b2-123354cf6ff8", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id64bf8fdf-52b5-4e4c-b1b2-123354cf6ff8", 19, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idff2c66f1-3c4f-412c-b1b8-ca456f8657c1", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idff2c66f1-3c4f-412c-b1b8-ca456f8657c1", 19, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id0be21fe5-d96d-4c34-8073-c8e65b3905f3", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id0be21fe5-d96d-4c34-8073-c8e65b3905f3", 19, "cmd-arg-ul-3", 0]);
MGCAddTopic(["ide9318355-290c-4d6f-b67c-212797ed74c3", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__ide9318355-290c-4d6f-b67c-212797ed74c3", 19, "cmd-arg-ul-3", 0]);
MGCAddTopic(["idf6323349-e723-4f3e-ae20-2968b977586d", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idf6323349-e723-4f3e-ae20-2968b977586d", 19, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id269e5d40-4d32-4fb1-b24e-cc9d55fb870e", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id269e5d40-4d32-4fb1-b24e-cc9d55fb870e", 19, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idf11eb872-4ad2-48a7-890a-3599f0c5b33f", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idf11eb872-4ad2-48a7-890a-3599f0c5b33f", 19, "cmd-arg", 0]);
MGCAddTopic(["id0ef6bed5-9523-416f-9d0b-32ba8bda0e5b", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id0ef6bed5-9523-416f-9d0b-32ba8bda0e5b", 19, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf09ae299-e759-4f52-8086-dbef61922eac", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idf09ae299-e759-4f52-8086-dbef61922eac", 19, "cmd-arg", 0]);
MGCAddTopic(["id2973d3a9-66c3-44e4-8500-ad1f72964336", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id2973d3a9-66c3-44e4-8500-ad1f72964336", 19, "cmd-arg", 0]);
MGCAddTopic(["idbb1a7a06-b021-4bd6-8f72-6488d2229a32", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__idbb1a7a06-b021-4bd6-8f72-6488d2229a32", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id7fcb19f4-cf87-4586-a7c0-5c40d4f886fa", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id7fcb19f4-cf87-4586-a7c0-5c40d4f886fa", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id729a37ac-0593-45c8-a799-8c57927e138a", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id729a37ac-0593-45c8-a799-8c57927e138a", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id38c87cc8-8c05-4bfd-99da-855736ed1082", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id38c87cc8-8c05-4bfd-99da-855736ed1082", 19, "ct-topic-H3", 0]);
MGCAddTopic(["ideb2b0bc6-0318-43c2-bc61-626034d78dc2", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__ideb2b0bc6-0318-43c2-bc61-626034d78dc2", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id8ab28ddf-e119-483a-ae36-d390db3ee0ba", "id823a2fe9-dbfb-42a5-b4ce-c66b2ee429ce__id8ab28ddf-e119-483a-ae36-d390db3ee0ba", 19, "ct-topic-H3", 0]);
MGCAddTopic(["FRACTURE MICRONIC and Origin Shifting", "FRACTURE MICRONIC and Origin Shifting", 19, "cmd-description-z.Heading2", 0]);
MGCAddTopic(["FRACTURE NUFLARE (FRACTUREt)", "id8b8ff7d6-f85d-486a-bad9-acc50ee5aa30", 20, "mgcsec-z.Cmd/Func", 0]);
MGCAddTopic(["id8b8ff7d6-f85d-486a-bad9-acc50ee5aa30", "id8b8ff7d6-f85d-486a-bad9-acc50ee5aa30", 20, "ct-topic-H3", 0]);
MGCAddTopic(["VSB11 Format", "idc24e51b3-b74b-467e-95d8-9abbebe36b00", 21, "cmd-H4", 0]);
MGCAddTopic(["Stairstep Approximation (VSB11)", "id36441637-48a5-4cf6-87f9-0f16cdaf6723", 21, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["idc24e51b3-b74b-467e-95d8-9abbebe36b00", "idc24e51b3-b74b-467e-95d8-9abbebe36b00", 21, "ct-topic-H4", 0]);
MGCAddTopic(["id985a6f39-d237-4bae-ab4d-34d1dd740fa5", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id985a6f39-d237-4bae-ab4d-34d1dd740fa5", 21, "cmd-arguments", 0]);
MGCAddTopic(["id1a54f2ee-29aa-468d-97ca-8c9e5a3ed0ce", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id1a54f2ee-29aa-468d-97ca-8c9e5a3ed0ce", 21, "cmd-arguments", 0]);
MGCAddTopic(["idb61c6ce9-b15e-4d2f-9d9f-7717c077bad9", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idb61c6ce9-b15e-4d2f-9d9f-7717c077bad9", 21, "cmd-arguments", 0]);
MGCAddTopic(["id0369e80a-9c08-4f48-aff3-e4f52e6b56c2", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0369e80a-9c08-4f48-aff3-e4f52e6b56c2", 21, "cmd-arguments", 0]);
MGCAddTopic(["id0fcecbaf-4ffa-4323-9a1d-b4abda90717f", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0fcecbaf-4ffa-4323-9a1d-b4abda90717f", 21, "cmd-arg", 0]);
MGCAddTopic(["id708cf49f-24d7-4cef-ad8c-688eac58b9f5", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id708cf49f-24d7-4cef-ad8c-688eac58b9f5", 21, "cmd-arg", 0]);
MGCAddTopic(["idc32e6bf7-7435-4cb4-8d66-be4ba6157398", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idc32e6bf7-7435-4cb4-8d66-be4ba6157398", 21, "cmd-arg", 0]);
MGCAddTopic(["ide597ba26-4bdc-46e8-870b-496c65d50574", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__ide597ba26-4bdc-46e8-870b-496c65d50574", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["id36441637-48a5-4cf6-87f9-0f16cdaf6723", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id36441637-48a5-4cf6-87f9-0f16cdaf6723", 21, "cmd-argdesc", 0]);
MGCAddTopic(["idc9974063-5a1f-4176-98f5-1eef63c2d387", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idc9974063-5a1f-4176-98f5-1eef63c2d387", 21, "cmd-arg", 0]);
MGCAddTopic(["idc334a9f4-64bf-4bc0-b83a-067fc83117c9", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idc334a9f4-64bf-4bc0-b83a-067fc83117c9", 21, "cmd-arg", 0]);
MGCAddTopic(["idf521ecd2-6472-4974-b976-9e5a4b42eb54", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idf521ecd2-6472-4974-b976-9e5a4b42eb54", 21, "cmd-arg", 0]);
MGCAddTopic(["ida5fc9021-ebb9-4e2d-8c27-9739a59078b6", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__ida5fc9021-ebb9-4e2d-8c27-9739a59078b6", 21, "cmd-arg", 0]);
MGCAddTopic(["id1db2d6f6-ae74-4d7e-9c74-1abc1e2e897c", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id1db2d6f6-ae74-4d7e-9c74-1abc1e2e897c", 21, "cmd-arg", 0]);
MGCAddTopic(["idbf816079-c30a-4846-a88a-486975d89076", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idbf816079-c30a-4846-a88a-486975d89076", 21, "cmd-arg", 0]);
MGCAddTopic(["idae91020e-e61b-4a08-9163-066df1245348", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idae91020e-e61b-4a08-9163-066df1245348", 21, "cmd-arg", 0]);
MGCAddTopic(["id0d3570f0-45f9-42b0-afca-64d3197eade8", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0d3570f0-45f9-42b0-afca-64d3197eade8", 21, "cmd-arg", 0]);
MGCAddTopic(["id1bad6aac-4957-44e5-8a55-d02292e1dd82", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id1bad6aac-4957-44e5-8a55-d02292e1dd82", 21, "cmd-arg", 0]);
MGCAddTopic(["id6c67ab7b-de86-4186-bbe3-0ff0162aae68", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id6c67ab7b-de86-4186-bbe3-0ff0162aae68", 21, "cmd-arg", 0]);
MGCAddTopic(["idaab2ead9-7fb5-4121-90ef-6bbd95772f79", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idaab2ead9-7fb5-4121-90ef-6bbd95772f79", 21, "cmd-arg", 0]);
MGCAddTopic(["id91cdfd72-b83f-4ec1-ac29-c875ac2c5b0a", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id91cdfd72-b83f-4ec1-ac29-c875ac2c5b0a", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["iddbc3ed26-4c28-4c5d-b955-de06d7c62809", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__iddbc3ed26-4c28-4c5d-b955-de06d7c62809", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["id0be620bf-ba81-43bb-8e28-33816a8ce9a8", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0be620bf-ba81-43bb-8e28-33816a8ce9a8", 21, "cmd-arg", 0]);
MGCAddTopic(["id0dc95e00-ecd5-446c-961b-1d4d6abfd2d0", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0dc95e00-ecd5-446c-961b-1d4d6abfd2d0", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3156ce37-fb17-4b3a-928a-a3648f0b3137", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id3156ce37-fb17-4b3a-928a-a3648f0b3137", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["id4c05344b-f3e5-45e6-971f-6e7390089fce", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id4c05344b-f3e5-45e6-971f-6e7390089fce", 21, "cmd-arg", 0]);
MGCAddTopic(["id55e593e8-ffe2-498c-8b2b-461761fe7039", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id55e593e8-ffe2-498c-8b2b-461761fe7039", 21, "cmd-arg", 0]);
MGCAddTopic(["id00f4c54b-49f0-4a2e-86ad-1168dbb689e5", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id00f4c54b-49f0-4a2e-86ad-1168dbb689e5", 21, "cmd-arg", 0]);
MGCAddTopic(["idd1f6f4e2-7dbc-4c05-b874-3c40c14930fe", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idd1f6f4e2-7dbc-4c05-b874-3c40c14930fe", 21, "cmd-arg", 0]);
MGCAddTopic(["id0264ec38-5735-4d51-ac1c-9ef57f70edc4", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id0264ec38-5735-4d51-ac1c-9ef57f70edc4", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["idcb711ef0-dc42-458b-85f0-a078d4992425", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idcb711ef0-dc42-458b-85f0-a078d4992425", 21, "cmd-arg", 0]);
MGCAddTopic(["id93b5de2f-718c-4280-b1c1-36a5cf06e7de", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id93b5de2f-718c-4280-b1c1-36a5cf06e7de", 21, "cmd-arg", 0]);
MGCAddTopic(["id5f82bddd-ae74-4698-b424-6ea364d10c93", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__id5f82bddd-ae74-4698-b424-6ea364d10c93", 21, "cmd-argopt-B1", 0]);
MGCAddTopic(["idb06a3c52-cf77-4425-85dd-453e0c8cef55", "idc24e51b3-b74b-467e-95d8-9abbebe36b00__idb06a3c52-cf77-4425-85dd-453e0c8cef55", 21, "cmd-arg", 0]);
MGCAddTopic(["VSB12 V1 Format", "id6e085050-b7f7-4922-a65f-473e6c790abb", 22, "cmd-H4", 0]);
MGCAddTopic(["Stairstep Approximation (VSB12)", "id02e38f89-fa89-4a84-ab43-d6ae3d061b13", 22, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["id6e085050-b7f7-4922-a65f-473e6c790abb", "id6e085050-b7f7-4922-a65f-473e6c790abb", 22, "ct-topic-H4", 0]);
MGCAddTopic(["ida06c55cc-24b8-4628-9546-6ae5a585d63f", "id6e085050-b7f7-4922-a65f-473e6c790abb__ida06c55cc-24b8-4628-9546-6ae5a585d63f", 22, "cmd-arguments", 0]);
MGCAddTopic(["idd7877164-4538-431f-a8b9-7ede2b209bd7", "id6e085050-b7f7-4922-a65f-473e6c790abb__idd7877164-4538-431f-a8b9-7ede2b209bd7", 22, "cmd-arguments", 0]);
MGCAddTopic(["id5087ca2c-fa39-4720-90ae-5cdfb32d2767", "id6e085050-b7f7-4922-a65f-473e6c790abb__id5087ca2c-fa39-4720-90ae-5cdfb32d2767", 22, "cmd-arguments", 0]);
MGCAddTopic(["idd1d2ff85-faad-4716-b064-bdf9a2da926c", "id6e085050-b7f7-4922-a65f-473e6c790abb__idd1d2ff85-faad-4716-b064-bdf9a2da926c", 22, "cmd-arguments", 0]);
MGCAddTopic(["id1dc44d5b-a49e-4e02-a644-c51ea7435304", "id6e085050-b7f7-4922-a65f-473e6c790abb__id1dc44d5b-a49e-4e02-a644-c51ea7435304", 22, "cmd-arg", 0]);
MGCAddTopic(["idc2f2a003-b72a-4340-8542-69fd6d97304c", "id6e085050-b7f7-4922-a65f-473e6c790abb__idc2f2a003-b72a-4340-8542-69fd6d97304c", 22, "cmd-arg", 0]);
MGCAddTopic(["id3055e50b-6b88-4493-a925-e3876cb1ffe9", "id6e085050-b7f7-4922-a65f-473e6c790abb__id3055e50b-6b88-4493-a925-e3876cb1ffe9", 22, "cmd-arg", 0]);
MGCAddTopic(["idaebf5f32-8c32-46bb-af6d-a5756ad231d2", "id6e085050-b7f7-4922-a65f-473e6c790abb__idaebf5f32-8c32-46bb-af6d-a5756ad231d2", 22, "cmd-argopt-B1", 0]);
MGCAddTopic(["id02e38f89-fa89-4a84-ab43-d6ae3d061b13", "id6e085050-b7f7-4922-a65f-473e6c790abb__id02e38f89-fa89-4a84-ab43-d6ae3d061b13", 22, "cmd-argdesc", 0]);
MGCAddTopic(["id56011e6a-e639-4aaa-a7a6-46696c4f9093", "id6e085050-b7f7-4922-a65f-473e6c790abb__id56011e6a-e639-4aaa-a7a6-46696c4f9093", 22, "cmd-arg", 0]);
MGCAddTopic(["id0a8ef277-2bf8-4f6b-828f-5b25683ae4a0", "id6e085050-b7f7-4922-a65f-473e6c790abb__id0a8ef277-2bf8-4f6b-828f-5b25683ae4a0", 22, "cmd-arg", 0]);
MGCAddTopic(["ida6d8847e-4b6f-4b38-9fd5-f5c0420f6610", "id6e085050-b7f7-4922-a65f-473e6c790abb__ida6d8847e-4b6f-4b38-9fd5-f5c0420f6610", 22, "cmd-arg", 0]);
MGCAddTopic(["id996a1e5a-8507-42b6-ba50-ac8e72e320ea", "id6e085050-b7f7-4922-a65f-473e6c790abb__id996a1e5a-8507-42b6-ba50-ac8e72e320ea", 22, "cmd-arg", 0]);
MGCAddTopic(["idfcccebef-760d-48dc-9606-3239c9e5185b", "id6e085050-b7f7-4922-a65f-473e6c790abb__idfcccebef-760d-48dc-9606-3239c9e5185b", 22, "cmd-arg", 0]);
MGCAddTopic(["id5c3897fe-ed43-4540-bae7-c744a0a48ab8", "id6e085050-b7f7-4922-a65f-473e6c790abb__id5c3897fe-ed43-4540-bae7-c744a0a48ab8", 22, "cmd-arg", 0]);
MGCAddTopic(["id202a804b-926f-4f46-8b5c-64e5821574f1", "id6e085050-b7f7-4922-a65f-473e6c790abb__id202a804b-926f-4f46-8b5c-64e5821574f1", 22, "cmd-arg", 0]);
MGCAddTopic(["iddecf4e74-e1d8-4021-90ce-65a7c1780b5e", "id6e085050-b7f7-4922-a65f-473e6c790abb__iddecf4e74-e1d8-4021-90ce-65a7c1780b5e", 22, "cmd-arg", 0]);
MGCAddTopic(["id59943a72-e67b-4207-952d-96afc4f9af17", "id6e085050-b7f7-4922-a65f-473e6c790abb__id59943a72-e67b-4207-952d-96afc4f9af17", 22, "cmd-argopt-B1", 0]);
MGCAddTopic(["idb5f34991-5c41-4d73-b4d6-677fffece577", "id6e085050-b7f7-4922-a65f-473e6c790abb__idb5f34991-5c41-4d73-b4d6-677fffece577", 22, "cmd-arg", 0]);
MGCAddTopic(["ida20685e3-41a2-4e74-bb42-25fa04970fa5", "id6e085050-b7f7-4922-a65f-473e6c790abb__ida20685e3-41a2-4e74-bb42-25fa04970fa5", 22, "cmd-arg", 0]);
MGCAddTopic(["id2cd7fed8-3922-4b16-8870-92c5510d443b", "id6e085050-b7f7-4922-a65f-473e6c790abb__id2cd7fed8-3922-4b16-8870-92c5510d443b", 22, "cmd-arg", 0]);
MGCAddTopic(["id2e326bcd-ea8a-4b2d-ab6b-5a24034bcbc8", "id6e085050-b7f7-4922-a65f-473e6c790abb__id2e326bcd-ea8a-4b2d-ab6b-5a24034bcbc8", 22, "cmd-arg", 0]);
MGCAddTopic(["id70133b2e-bbb2-477c-91a9-31ead5f50737", "id6e085050-b7f7-4922-a65f-473e6c790abb__id70133b2e-bbb2-477c-91a9-31ead5f50737", 22, "cmd-arg", 0]);
MGCAddTopic(["idcfcbcec4-11ed-4622-a4ad-cf558236a541", "id6e085050-b7f7-4922-a65f-473e6c790abb__idcfcbcec4-11ed-4622-a4ad-cf558236a541", 22, "cmd-arg", 0]);
MGCAddTopic(["iddebf32d8-84ef-4c96-a5f5-87c73bec2f3b", "id6e085050-b7f7-4922-a65f-473e6c790abb__iddebf32d8-84ef-4c96-a5f5-87c73bec2f3b", 22, "cmd-arg", 0]);
MGCAddTopic(["ide9b3be3b-28c6-45ca-abf5-ee76ba3be8cd", "id6e085050-b7f7-4922-a65f-473e6c790abb__ide9b3be3b-28c6-45ca-abf5-ee76ba3be8cd", 22, "cmd-arg", 0]);
MGCAddTopic(["idb9fbba00-1295-4d0c-9578-ee5b6255e681", "id6e085050-b7f7-4922-a65f-473e6c790abb__idb9fbba00-1295-4d0c-9578-ee5b6255e681", 22, "cmd-arg", 0]);
MGCAddTopic(["idaf7d9f38-9442-4486-8a7f-19549a94152a", "id6e085050-b7f7-4922-a65f-473e6c790abb__idaf7d9f38-9442-4486-8a7f-19549a94152a", 22, "cmd-arg", 0]);
MGCAddTopic(["id6a4b424a-c847-48dc-90d5-45e32071f71c", "id6e085050-b7f7-4922-a65f-473e6c790abb__id6a4b424a-c847-48dc-90d5-45e32071f71c", 22, "cmd-arg", 0]);
MGCAddTopic(["id730fbe34-2c18-444e-9811-9b8522e9bf0e", "id6e085050-b7f7-4922-a65f-473e6c790abb__id730fbe34-2c18-444e-9811-9b8522e9bf0e", 22, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6254464e-69da-4d82-b21a-424452cfe2ff", "id6e085050-b7f7-4922-a65f-473e6c790abb__id6254464e-69da-4d82-b21a-424452cfe2ff", 22, "cmd-argopt-B1", 0]);
MGCAddTopic(["id8cf832c8-4083-4b46-bdd9-e338d2d70cf0", "id6e085050-b7f7-4922-a65f-473e6c790abb__id8cf832c8-4083-4b46-bdd9-e338d2d70cf0", 22, "cmd-arg", 0]);
MGCAddTopic(["id10fb0697-2ea4-42a6-ab4b-1c32b034e297", "id6e085050-b7f7-4922-a65f-473e6c790abb__id10fb0697-2ea4-42a6-ab4b-1c32b034e297", 22, "cmd-argopt-B1", 0]);
MGCAddTopic(["id08bfd2fd-49e5-4afe-a7b7-85709e8acda1", "id6e085050-b7f7-4922-a65f-473e6c790abb__id08bfd2fd-49e5-4afe-a7b7-85709e8acda1", 22, "cmd-arg", 0]);
MGCAddTopic(["id21ad625b-7c64-4c26-9bab-6686cfb40453", "id6e085050-b7f7-4922-a65f-473e6c790abb__id21ad625b-7c64-4c26-9bab-6686cfb40453", 22, "cmd-arg", 0]);
MGCAddTopic(["idc16921ad-b38d-442e-8d65-1e7dfed6c39e", "id6e085050-b7f7-4922-a65f-473e6c790abb__idc16921ad-b38d-442e-8d65-1e7dfed6c39e", 22, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id1c93c9ba-615d-48ec-bfb6-cbe9f3d21379", "id6e085050-b7f7-4922-a65f-473e6c790abb__id1c93c9ba-615d-48ec-bfb6-cbe9f3d21379", 22, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id92d837e3-7216-476a-a172-7652612e3837", "id6e085050-b7f7-4922-a65f-473e6c790abb__id92d837e3-7216-476a-a172-7652612e3837", 22, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6e117449-12a8-4357-a720-c6ebef7de2ae", "id6e085050-b7f7-4922-a65f-473e6c790abb__id6e117449-12a8-4357-a720-c6ebef7de2ae", 22, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id304bfea8-34e5-4cbe-b3be-de8376a93b76", "id6e085050-b7f7-4922-a65f-473e6c790abb__id304bfea8-34e5-4cbe-b3be-de8376a93b76", 22, "cmd-arg", 0]);
MGCAddTopic(["VSB12i Format", "id46b98e25-7dc3-42b4-864d-9286ec6bc050", 23, "cmd-H4", 0]);
MGCAddTopic(["Stairstep Approximation (VSB12i)", "id8a29a614-c9e2-49c3-8d6b-ee6cfae5eed0", 23, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["id46b98e25-7dc3-42b4-864d-9286ec6bc050", "id46b98e25-7dc3-42b4-864d-9286ec6bc050", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id0468987e-14f2-4a60-8396-2d94d1cf0f9a", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id0468987e-14f2-4a60-8396-2d94d1cf0f9a", 23, "cmd-arguments", 0]);
MGCAddTopic(["id1e9c8997-e038-48d6-9c99-e6951f04ccde", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id1e9c8997-e038-48d6-9c99-e6951f04ccde", 23, "cmd-arguments", 0]);
MGCAddTopic(["idf8a987b6-22aa-49e6-9883-b2f679d9449e", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idf8a987b6-22aa-49e6-9883-b2f679d9449e", 23, "cmd-arguments", 0]);
MGCAddTopic(["id2ab05a79-09d0-456c-aa1d-ee1841edd96b", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id2ab05a79-09d0-456c-aa1d-ee1841edd96b", 23, "cmd-arguments", 0]);
MGCAddTopic(["id36ac9b1b-c6b9-400c-b0ac-1d11cc7866a6", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id36ac9b1b-c6b9-400c-b0ac-1d11cc7866a6", 23, "cmd-arg", 0]);
MGCAddTopic(["idc2ff2078-722d-4858-b533-fde3b21e1652", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idc2ff2078-722d-4858-b533-fde3b21e1652", 23, "cmd-arg", 0]);
MGCAddTopic(["ida1b34f7c-4dcf-4494-9fe2-3d85a652f8d3", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ida1b34f7c-4dcf-4494-9fe2-3d85a652f8d3", 23, "cmd-arg", 0]);
MGCAddTopic(["id8a29a614-c9e2-49c3-8d6b-ee6cfae5eed0", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id8a29a614-c9e2-49c3-8d6b-ee6cfae5eed0", 23, "cmd-argdesc", 0]);
MGCAddTopic(["ida6a99f9d-2fa0-45df-b9f9-2b51cfc84adf", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ida6a99f9d-2fa0-45df-b9f9-2b51cfc84adf", 23, "cmd-arg", 0]);
MGCAddTopic(["id5b1a2ec0-7b56-4559-9fc6-b7ba4a530013", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id5b1a2ec0-7b56-4559-9fc6-b7ba4a530013", 23, "cmd-arg", 0]);
MGCAddTopic(["id518f66de-5f5b-4fe2-a5b8-168555fc40dc", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id518f66de-5f5b-4fe2-a5b8-168555fc40dc", 23, "cmd-arg", 0]);
MGCAddTopic(["idb2621fe1-d8db-4293-ae91-7f48f5fe36b3", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idb2621fe1-d8db-4293-ae91-7f48f5fe36b3", 23, "cmd-arg", 0]);
MGCAddTopic(["id5618ba43-c04c-478c-8f2e-1e1dd0eaa623", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id5618ba43-c04c-478c-8f2e-1e1dd0eaa623", 23, "cmd-arg", 0]);
MGCAddTopic(["id471f9c92-4a21-4eb8-96b1-653829df29c3", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id471f9c92-4a21-4eb8-96b1-653829df29c3", 23, "cmd-arg", 0]);
MGCAddTopic(["id78a6e65e-9176-400f-b8b0-d8d84ee0a692", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id78a6e65e-9176-400f-b8b0-d8d84ee0a692", 23, "cmd-arg", 0]);
MGCAddTopic(["id57130597-1cbd-4ed6-bf07-0735113b93e5", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id57130597-1cbd-4ed6-bf07-0735113b93e5", 23, "cmd-arg", 0]);
MGCAddTopic(["id9d56484c-8571-40d6-a8b2-3853ad214729", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id9d56484c-8571-40d6-a8b2-3853ad214729", 23, "cmd-arg", 0]);
MGCAddTopic(["id161e5a79-6540-4555-821c-cfd31643d9e0", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id161e5a79-6540-4555-821c-cfd31643d9e0", 23, "cmd-arg", 0]);
MGCAddTopic(["id1a2ef204-f31a-412c-84e1-f1616ec661d0", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id1a2ef204-f31a-412c-84e1-f1616ec661d0", 23, "cmd-arg", 0]);
MGCAddTopic(["ided802b6a-054d-4ed7-9a87-0b35bfe206d3", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ided802b6a-054d-4ed7-9a87-0b35bfe206d3", 23, "cmd-argopt-B1", 0]);
MGCAddTopic(["id04b57e11-30a4-4047-a382-75411f254359", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id04b57e11-30a4-4047-a382-75411f254359", 23, "cmd-argopt-B1", 0]);
MGCAddTopic(["id4e1dc6b3-7363-4f33-a537-bf74f0117d7e", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id4e1dc6b3-7363-4f33-a537-bf74f0117d7e", 23, "cmd-arg", 0]);
MGCAddTopic(["id605297fe-8024-45c3-83f4-f525588d979b", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id605297fe-8024-45c3-83f4-f525588d979b", 23, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0f703bf8-5774-41d2-9e1e-d24b98ec3ed9", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id0f703bf8-5774-41d2-9e1e-d24b98ec3ed9", 23, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id97b09607-c262-4e4c-ba91-06ad52ae36fb", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id97b09607-c262-4e4c-ba91-06ad52ae36fb", 23, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id179061a3-7caa-4d06-a76d-a5d436e69677", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id179061a3-7caa-4d06-a76d-a5d436e69677", 23, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2c2ebeff-2597-49ca-ad55-f3da6d53f6a2", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id2c2ebeff-2597-49ca-ad55-f3da6d53f6a2", 23, "cmd-arg", 0]);
MGCAddTopic(["idb55e9661-fc79-440c-869b-f87203a4bce5", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idb55e9661-fc79-440c-869b-f87203a4bce5", 23, "cmd-arg", 0]);
MGCAddTopic(["id34692142-9a21-4a14-bdac-91405d083924", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id34692142-9a21-4a14-bdac-91405d083924", 23, "cmd-arg", 0]);
MGCAddTopic(["idaf0ec391-99bf-471a-a6e0-fb59470cc939", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idaf0ec391-99bf-471a-a6e0-fb59470cc939", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["idb57875c7-2520-4bbf-97e6-b59f8d5756d7", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idb57875c7-2520-4bbf-97e6-b59f8d5756d7", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["id22659777-4617-45c3-9de3-3ea541bc1cf5", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id22659777-4617-45c3-9de3-3ea541bc1cf5", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["id8228b867-92f5-416c-98ed-a57f86268f77", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id8228b867-92f5-416c-98ed-a57f86268f77", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["id4751423a-0162-417a-b208-1153206545a4", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id4751423a-0162-417a-b208-1153206545a4", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["ida3ba340c-26d2-4abd-b4d1-19f94dc1a5a7", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ida3ba340c-26d2-4abd-b4d1-19f94dc1a5a7", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["id2b96e9a2-dcac-4a30-8ef3-3dccb4ecaab6", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id2b96e9a2-dcac-4a30-8ef3-3dccb4ecaab6", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["ided933a37-cc20-4b51-801c-cf59aa5978c9", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ided933a37-cc20-4b51-801c-cf59aa5978c9", 23, "cmd-argumentlist", 0]);
MGCAddTopic(["idd6a38148-1e68-4edf-b97d-c968956701aa", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idd6a38148-1e68-4edf-b97d-c968956701aa", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id2cbb4001-0800-4060-8738-f44cc6ca1410", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id2cbb4001-0800-4060-8738-f44cc6ca1410", 23, "ct-topic-H4", 0]);
MGCAddTopic(["idf71b72fb-28d7-4d33-bfe7-488f2d88ced7", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idf71b72fb-28d7-4d33-bfe7-488f2d88ced7", 23, "ct-topic-H4", 0]);
MGCAddTopic(["ida0ecfb04-c7d8-4144-8dd3-0a492145d15d", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__ida0ecfb04-c7d8-4144-8dd3-0a492145d15d", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id8c72f5e6-5120-4975-a42b-0282d8ea9433", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id8c72f5e6-5120-4975-a42b-0282d8ea9433", 23, "ct-topic-H4", 0]);
MGCAddTopic(["idf90f064e-4dda-449b-bd50-74187ce3bae7", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__idf90f064e-4dda-449b-bd50-74187ce3bae7", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id0902b23b-c09b-42de-8409-e1c410f95e5e", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id0902b23b-c09b-42de-8409-e1c410f95e5e", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id5ebb400d-e9be-4105-a187-5a87f5a1e152", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id5ebb400d-e9be-4105-a187-5a87f5a1e152", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id88844299-9bac-4bce-a9ae-e473509b5a7b", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id88844299-9bac-4bce-a9ae-e473509b5a7b", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id87a3f8b5-b9aa-44fd-b2e7-11238836dcd7", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id87a3f8b5-b9aa-44fd-b2e7-11238836dcd7", 23, "ct-topic-H4", 0]);
MGCAddTopic(["id8fa03456-2f57-4164-99d1-b4c77c01adc0", "id46b98e25-7dc3-42b4-864d-9286ec6bc050__id8fa03456-2f57-4164-99d1-b4c77c01adc0", 23, "ct-topic-H4", 0]);
MGCAddTopic(["VSB12 V2 Format", "idbd8a557d-9ea0-49e4-85b9-2f4079066677", 24, "cmd-H4", 0]);
MGCAddTopic(["Stairstep Approximation (VSB12_V2)", "id2b3afa45-13fd-4198-a3c7-a9a0cafd9c39", 24, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["idbd8a557d-9ea0-49e4-85b9-2f4079066677", "idbd8a557d-9ea0-49e4-85b9-2f4079066677", 24, "ct-topic-H4", 0]);
MGCAddTopic(["id1c19f33d-4e80-4d1a-8ba7-87eec93458d8", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id1c19f33d-4e80-4d1a-8ba7-87eec93458d8", 24, "cmd-arguments", 0]);
MGCAddTopic(["idba9a860f-e51f-4894-9aa5-73be25541e93", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idba9a860f-e51f-4894-9aa5-73be25541e93", 24, "cmd-arguments", 0]);
MGCAddTopic(["idd0fc0e0a-292f-45d3-b4f3-58ee57d8e075", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idd0fc0e0a-292f-45d3-b4f3-58ee57d8e075", 24, "cmd-arguments", 0]);
MGCAddTopic(["id9b916156-f912-44fe-aa37-3d8ebe4bdba6", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id9b916156-f912-44fe-aa37-3d8ebe4bdba6", 24, "cmd-arguments", 0]);
MGCAddTopic(["id48337ac8-6994-472b-9e17-ca5af2d21174", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id48337ac8-6994-472b-9e17-ca5af2d21174", 24, "cmd-arg", 0]);
MGCAddTopic(["idaaf92f9c-fb26-4ab7-a10b-71fa03a20e06", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idaaf92f9c-fb26-4ab7-a10b-71fa03a20e06", 24, "cmd-arg", 0]);
MGCAddTopic(["id37fac9d3-29e5-49bc-954c-90b40b55298f", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id37fac9d3-29e5-49bc-954c-90b40b55298f", 24, "cmd-arg", 0]);
MGCAddTopic(["id2b3afa45-13fd-4198-a3c7-a9a0cafd9c39", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id2b3afa45-13fd-4198-a3c7-a9a0cafd9c39", 24, "cmd-argdesc", 0]);
MGCAddTopic(["idb68ec1fa-40ec-45dc-95ef-02c609ced00c", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idb68ec1fa-40ec-45dc-95ef-02c609ced00c", 24, "cmd-arg", 0]);
MGCAddTopic(["id206f84b9-a584-47f6-a2e0-ea9b661b09df", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id206f84b9-a584-47f6-a2e0-ea9b661b09df", 24, "cmd-arg", 0]);
MGCAddTopic(["id70b55baa-4086-4e08-9f05-8f1a418a8c83", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id70b55baa-4086-4e08-9f05-8f1a418a8c83", 24, "cmd-arg", 0]);
MGCAddTopic(["id8eb23aed-8fb3-44e6-bdad-b22cfeee1a9e", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id8eb23aed-8fb3-44e6-bdad-b22cfeee1a9e", 24, "cmd-arg", 0]);
MGCAddTopic(["idd5695941-e9cd-43a5-a348-50f5b878b6f8", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idd5695941-e9cd-43a5-a348-50f5b878b6f8", 24, "cmd-arg", 0]);
MGCAddTopic(["id6ee9f097-8abe-41c5-bd53-2f3060ef9712", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id6ee9f097-8abe-41c5-bd53-2f3060ef9712", 24, "cmd-arg", 0]);
MGCAddTopic(["id2c591225-f891-4b32-ae11-f4d3f5da2763", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id2c591225-f891-4b32-ae11-f4d3f5da2763", 24, "cmd-arg", 0]);
MGCAddTopic(["idb71bc26b-59cf-4995-a7c6-3d3634219f82", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idb71bc26b-59cf-4995-a7c6-3d3634219f82", 24, "cmd-arg", 0]);
MGCAddTopic(["id0f93946b-af70-420a-9394-3b17839852b7", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id0f93946b-af70-420a-9394-3b17839852b7", 24, "cmd-arg", 0]);
MGCAddTopic(["iddbcc5ef2-9e42-4060-a18b-aee12ea0b635", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__iddbcc5ef2-9e42-4060-a18b-aee12ea0b635", 24, "cmd-arg", 0]);
MGCAddTopic(["id5ac175bb-ffb3-4174-9284-aad965ce4d6d", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id5ac175bb-ffb3-4174-9284-aad965ce4d6d", 24, "cmd-arg", 0]);
MGCAddTopic(["id60e8af53-168c-4294-a983-25b25d5c9345", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id60e8af53-168c-4294-a983-25b25d5c9345", 24, "cmd-arg", 0]);
MGCAddTopic(["id41e22a23-9bb0-4cde-aba4-edefb338666d", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id41e22a23-9bb0-4cde-aba4-edefb338666d", 24, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf535e80d-8ab2-46be-bfc8-61396d500f93", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idf535e80d-8ab2-46be-bfc8-61396d500f93", 24, "cmd-argopt-B1", 0]);
MGCAddTopic(["idafd7189c-379a-468a-b336-2f97cdbd596a", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idafd7189c-379a-468a-b336-2f97cdbd596a", 24, "cmd-arg", 0]);
MGCAddTopic(["idb49384c8-a75d-4e73-9aad-88d62fe19b74", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idb49384c8-a75d-4e73-9aad-88d62fe19b74", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idafd7f58b-5061-458d-87c0-bf0876f40963", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idafd7f58b-5061-458d-87c0-bf0876f40963", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id35d8d522-cc3d-42a3-9129-ae31493b6f73", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id35d8d522-cc3d-42a3-9129-ae31493b6f73", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb16d8006-78f1-4946-91f0-b7a68872734b", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idb16d8006-78f1-4946-91f0-b7a68872734b", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idaa011e07-a469-411d-a5bc-e95669655f0d", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idaa011e07-a469-411d-a5bc-e95669655f0d", 24, "cmd-arg", 0]);
MGCAddTopic(["id23740b42-ec40-46db-8976-4edc4e138329", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id23740b42-ec40-46db-8976-4edc4e138329", 24, "cmd-arg", 0]);
MGCAddTopic(["id7089fd12-7b9c-444b-b24f-e8ad5b6a850e", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id7089fd12-7b9c-444b-b24f-e8ad5b6a850e", 24, "cmd-arg", 0]);
MGCAddTopic(["id269e0430-e025-4a99-972a-8aea49d9b88d", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id269e0430-e025-4a99-972a-8aea49d9b88d", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idd4ee61e9-8e88-4455-aea5-82eb4a15364b", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__idd4ee61e9-8e88-4455-aea5-82eb4a15364b", 24, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id74904e16-844d-426b-8f16-fc7e784b81a4", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id74904e16-844d-426b-8f16-fc7e784b81a4", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["id61a80f24-ef4e-41c9-a055-f0a52d2f26af", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id61a80f24-ef4e-41c9-a055-f0a52d2f26af", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["id7a6e7e81-87ce-405f-af61-8c0e977a7374", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id7a6e7e81-87ce-405f-af61-8c0e977a7374", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["id35202f0d-ffde-4bd9-87fa-fd8f07780901", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id35202f0d-ffde-4bd9-87fa-fd8f07780901", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["id05ef0d35-f132-46e4-8880-eacbcc181fed", "idbd8a557d-9ea0-49e4-85b9-2f4079066677__id05ef0d35-f132-46e4-8880-eacbcc181fed", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["FRACTURE NUFLARE_MBF (FRACTUREn)", "id244f42f3-c88b-418e-a92a-1abc97b3fe78", 25, "", 0]);
MGCAddTopic(["id244f42f3-c88b-418e-a92a-1abc97b3fe78", "id244f42f3-c88b-418e-a92a-1abc97b3fe78", 25, "", 0]);
MGCAddTopic(["id078a06a1-ab1e-40c0-81c2-d624fa866141", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id078a06a1-ab1e-40c0-81c2-d624fa866141", 25, "", 0]);
MGCAddTopic(["id802db91a-8680-46bb-b9c3-ab08a7c145c5", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id802db91a-8680-46bb-b9c3-ab08a7c145c5", 25, "", 0]);
MGCAddTopic(["idd421a4a7-56ac-4c8f-ac5c-cf954f99fc2d", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idd421a4a7-56ac-4c8f-ac5c-cf954f99fc2d", 25, "", 0]);
MGCAddTopic(["id0aea5d34-e724-45d9-8ea0-6205a7ce2010", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id0aea5d34-e724-45d9-8ea0-6205a7ce2010", 25, "", 0]);
MGCAddTopic(["id1c4e1bbb-8c30-4aca-a255-012590930807", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id1c4e1bbb-8c30-4aca-a255-012590930807", 25, "cmd-arg", 0]);
MGCAddTopic(["id9bd533eb-03d0-42e5-a74f-e2c625f2f21c", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id9bd533eb-03d0-42e5-a74f-e2c625f2f21c", 25, "cmd-arg", 0]);
MGCAddTopic(["id6fe06f63-c742-4b42-8a0c-03906995629b", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id6fe06f63-c742-4b42-8a0c-03906995629b", 25, "cmd-argdesc", 0]);
MGCAddTopic(["id50e47b38-2854-4a96-b003-21c22f2fe480", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id50e47b38-2854-4a96-b003-21c22f2fe480", 25, "", 0]);
MGCAddTopic(["idb34a34ac-ad95-45ab-a4b7-ba8893057094", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idb34a34ac-ad95-45ab-a4b7-ba8893057094", 25, "", 0]);
MGCAddTopic(["id8e04c236-5d1c-446c-943e-473950944bfb", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id8e04c236-5d1c-446c-943e-473950944bfb", 25, "", 0]);
MGCAddTopic(["id1abba682-5d71-4e02-8a05-47ff5b6a17a9", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id1abba682-5d71-4e02-8a05-47ff5b6a17a9", 25, "cmd-arg", 0]);
MGCAddTopic(["id99ff1bd2-8f69-40cc-af10-a71d3cf5548e", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id99ff1bd2-8f69-40cc-af10-a71d3cf5548e", 25, "cmd-arg", 0]);
MGCAddTopic(["id56c25225-5bee-47bc-9b27-b44925ef4fc0", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id56c25225-5bee-47bc-9b27-b44925ef4fc0", 25, "cmd-arg", 0]);
MGCAddTopic(["id32a7bbf3-94cb-4f57-a0e1-22cd85c88997", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id32a7bbf3-94cb-4f57-a0e1-22cd85c88997", 25, "cmd-arg", 0]);
MGCAddTopic(["id42116c6a-e746-4f86-b8fc-da5c4425919d", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id42116c6a-e746-4f86-b8fc-da5c4425919d", 25, "cmd-arg", 0]);
MGCAddTopic(["id139b3da4-fa8f-4ddb-b1fc-a6e54c996942", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id139b3da4-fa8f-4ddb-b1fc-a6e54c996942", 25, "cmd-argdesc", 0]);
MGCAddTopic(["ided76be83-476c-45f9-821b-48ccfa54a6cd", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__ided76be83-476c-45f9-821b-48ccfa54a6cd", 25, "", 0]);
MGCAddTopic(["id2caaebf5-a292-4899-b09a-240794185e3b", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id2caaebf5-a292-4899-b09a-240794185e3b", 25, "cmd-arg", 0]);
MGCAddTopic(["idf0d89cd4-7e82-41e3-93c5-70bfadead64e", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idf0d89cd4-7e82-41e3-93c5-70bfadead64e", 25, "cmd-arg", 0]);
MGCAddTopic(["id3f43fda5-d03d-4e11-af39-bd0a241a0b37", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id3f43fda5-d03d-4e11-af39-bd0a241a0b37", 25, "cmd-arg", 0]);
MGCAddTopic(["ideb7b2566-a3c7-43fa-8f29-a29da52bc49e", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__ideb7b2566-a3c7-43fa-8f29-a29da52bc49e", 25, "cmd-arg", 0]);
MGCAddTopic(["idf4926b08-6fee-4e2f-96e2-9ec6b50b765f", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idf4926b08-6fee-4e2f-96e2-9ec6b50b765f", 25, "cmd-arg", 0]);
MGCAddTopic(["idf35c1faa-3477-4a60-b4d8-b768382aba70", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idf35c1faa-3477-4a60-b4d8-b768382aba70", 25, "cmd-arg", 0]);
MGCAddTopic(["id2f9ae9ed-e749-499d-b5d9-eb3cd0b4aaba", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id2f9ae9ed-e749-499d-b5d9-eb3cd0b4aaba", 25, "cmd-argopt-B1", 0]);
MGCAddTopic(["idafa59e2a-52b2-45f3-9d7e-d10801575c61", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idafa59e2a-52b2-45f3-9d7e-d10801575c61", 25, "cmd-argopt-B1", 0]);
MGCAddTopic(["id4a06233b-fc8c-40a0-87d0-6214e5fb5df4", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id4a06233b-fc8c-40a0-87d0-6214e5fb5df4", 25, "", 0]);
MGCAddTopic(["id6acab56c-f449-4acb-8e6d-ae52582a86b6", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id6acab56c-f449-4acb-8e6d-ae52582a86b6", 25, "cmd-arg", 0]);
MGCAddTopic(["id788fdb13-9fe4-4ff5-ab4e-ebfefcf411f8", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id788fdb13-9fe4-4ff5-ab4e-ebfefcf411f8", 25, "cmd-argdesc", 0]);
MGCAddTopic(["ida094c1e1-a3d9-46db-a642-a77a83c80103", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__ida094c1e1-a3d9-46db-a642-a77a83c80103", 25, "cmd-argdesc", 0]);
MGCAddTopic(["idabfd9626-c321-4bf1-bd85-4759344f2c09", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idabfd9626-c321-4bf1-bd85-4759344f2c09", 25, "cmd-argdesc", 0]);
MGCAddTopic(["id82a29148-fcd5-4306-a33e-d3622ac2f37a", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id82a29148-fcd5-4306-a33e-d3622ac2f37a", 25, "cmd-argdesc", 0]);
MGCAddTopic(["idfefeda0c-71e5-418d-9817-b96e855dce23", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idfefeda0c-71e5-418d-9817-b96e855dce23", 25, "cmd-arg", 0]);
MGCAddTopic(["id936745ce-f9d5-4661-b061-a853056d178e", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id936745ce-f9d5-4661-b061-a853056d178e", 25, "", 0]);
MGCAddTopic(["id1c9fee9b-4c1b-4137-886f-80073fc2fa74", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id1c9fee9b-4c1b-4137-886f-80073fc2fa74", 25, "", 0]);
MGCAddTopic(["idd2bceecc-bc77-473b-a5cb-9e37c01c31f2", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idd2bceecc-bc77-473b-a5cb-9e37c01c31f2", 25, "", 0]);
MGCAddTopic(["idee850f83-4d47-4acf-a1dd-662cda9045df", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idee850f83-4d47-4acf-a1dd-662cda9045df", 25, "", 0]);
MGCAddTopic(["idb2fa1648-ddb6-458d-bdb0-f3f05be5db02", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idb2fa1648-ddb6-458d-bdb0-f3f05be5db02", 25, "", 0]);
MGCAddTopic(["id712026c5-d697-4897-a773-d7c60e72f139", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__id712026c5-d697-4897-a773-d7c60e72f139", 25, "", 0]);
MGCAddTopic(["idf625e7bb-8467-43d5-948d-ec88e104555e", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idf625e7bb-8467-43d5-948d-ec88e104555e", 25, "", 0]);
MGCAddTopic(["ida7cd8fbb-abd1-423d-96b3-a1719c6bd2b1", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__ida7cd8fbb-abd1-423d-96b3-a1719c6bd2b1", 25, "", 0]);
MGCAddTopic(["idb2a75b74-a1d2-4a7a-bba0-2477ddbf2b4c", "id244f42f3-c88b-418e-a92a-1abc97b3fe78__idb2a75b74-a1d2-4a7a-bba0-2477ddbf2b4c", 25, "", 0]);
MGCAddTopic(["FRACTURE OASIS_MAPPER (FRACTUREp)", "id926ae188-d5a0-4362-b529-76620192a5c3", 26, "", 0]);
MGCAddTopic(["id926ae188-d5a0-4362-b529-76620192a5c3", "id926ae188-d5a0-4362-b529-76620192a5c3", 26, "", 0]);
MGCAddTopic(["idd5a94929-0f10-40e3-a734-2a2a9a10cf16", "id926ae188-d5a0-4362-b529-76620192a5c3__idd5a94929-0f10-40e3-a734-2a2a9a10cf16", 26, "cmd-arg", 0]);
MGCAddTopic(["idf07a2804-0310-450b-b2f0-392dc4224ca6", "id926ae188-d5a0-4362-b529-76620192a5c3__idf07a2804-0310-450b-b2f0-392dc4224ca6", 26, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf3508a2a-e3ae-45bd-95bb-0f0288b861c1", "id926ae188-d5a0-4362-b529-76620192a5c3__idf3508a2a-e3ae-45bd-95bb-0f0288b861c1", 26, "cmd-argopt-B1", 0]);
MGCAddTopic(["idab5ccb5b-d652-4d7d-bd52-69084769b05f", "id926ae188-d5a0-4362-b529-76620192a5c3__idab5ccb5b-d652-4d7d-bd52-69084769b05f", 26, "cmd-argdesc", 0]);
MGCAddTopic(["idb285b202-5000-47f1-bee5-8d0d4c7225f7", "id926ae188-d5a0-4362-b529-76620192a5c3__idb285b202-5000-47f1-bee5-8d0d4c7225f7", 26, "cmd-argdesc", 0]);
MGCAddTopic(["id1d960e28-11c4-4339-9c44-6f5d313c180e", "id926ae188-d5a0-4362-b529-76620192a5c3__id1d960e28-11c4-4339-9c44-6f5d313c180e", 26, "", 0]);
MGCAddTopic(["id62acb685-2752-4328-865f-72fb31b473b9", "id926ae188-d5a0-4362-b529-76620192a5c3__id62acb685-2752-4328-865f-72fb31b473b9", 26, "", 0]);
MGCAddTopic(["id31fd25f1-a97b-4b42-bb43-4238943f4b5c", "id926ae188-d5a0-4362-b529-76620192a5c3__id31fd25f1-a97b-4b42-bb43-4238943f4b5c", 26, "", 0]);
MGCAddTopic(["id3ddbb70d-8c59-46ad-a0fa-f82f0279f24f", "id926ae188-d5a0-4362-b529-76620192a5c3__id3ddbb70d-8c59-46ad-a0fa-f82f0279f24f", 26, "", 0]);
MGCAddTopic(["id74cd019a-d539-4a8a-80c0-972019f170ff", "id926ae188-d5a0-4362-b529-76620192a5c3__id74cd019a-d539-4a8a-80c0-972019f170ff", 26, "", 0]);
MGCAddTopic(["id087c6483-a9bb-41d4-b236-70900c468ad3", "id926ae188-d5a0-4362-b529-76620192a5c3__id087c6483-a9bb-41d4-b236-70900c468ad3", 26, "", 0]);
MGCAddTopic(["idde7fa148-165b-41bd-afce-4a246a2012bb", "id926ae188-d5a0-4362-b529-76620192a5c3__idde7fa148-165b-41bd-afce-4a246a2012bb", 26, "", 0]);
MGCAddTopic(["idbb3515ac-344f-4ba1-85ea-b45c7d126c9c", "id926ae188-d5a0-4362-b529-76620192a5c3__idbb3515ac-344f-4ba1-85ea-b45c7d126c9c", 26, "", 0]);
MGCAddTopic(["id93a9d83f-76d1-49a6-b266-c6bfde99f9f2", "id926ae188-d5a0-4362-b529-76620192a5c3__id93a9d83f-76d1-49a6-b266-c6bfde99f9f2", 26, "", 0]);
MGCAddTopic(["id6792505c-78fd-42de-a94e-048d4d97a67f", "id926ae188-d5a0-4362-b529-76620192a5c3__id6792505c-78fd-42de-a94e-048d4d97a67f", 26, "", 0]);
MGCAddTopic(["FRACTURE OASIS_MASK (FRACTUREv)", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d", 27, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id24da8ddc-1b24-4190-9655-43fcdba6ad3d", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d", 27, "ct-topic-H3", 0]);
MGCAddTopic(["id8a6c790d-0a07-417d-9080-2d8bdb9f6925", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id8a6c790d-0a07-417d-9080-2d8bdb9f6925", 27, "cmd-arguments", 0]);
MGCAddTopic(["ida74dc8c4-5a8d-4ff4-bb69-009c6c376358", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__ida74dc8c4-5a8d-4ff4-bb69-009c6c376358", 27, "cmd-arguments", 0]);
MGCAddTopic(["id6455e6f4-d4da-4df9-b543-d65ac7c50388", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id6455e6f4-d4da-4df9-b543-d65ac7c50388", 27, "cmd-arguments", 0]);
MGCAddTopic(["id3ad2e6fd-dccf-4dc9-b8c4-938f9949c80a", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id3ad2e6fd-dccf-4dc9-b8c4-938f9949c80a", 27, "cmd-arguments", 0]);
MGCAddTopic(["idd30e02fb-7042-4052-9ec5-6864df89efdd", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idd30e02fb-7042-4052-9ec5-6864df89efdd", 27, "cmd-arguments", 0]);
MGCAddTopic(["id7f261607-52c4-41b4-b37e-c9d936e67096", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id7f261607-52c4-41b4-b37e-c9d936e67096", 27, "cmd-arg", 0]);
MGCAddTopic(["iddb6cf1ae-d25a-4d0d-922b-429e82e3434a", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__iddb6cf1ae-d25a-4d0d-922b-429e82e3434a", 27, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7e95cfbb-3182-42d5-bfbc-2df00ad608fb", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id7e95cfbb-3182-42d5-bfbc-2df00ad608fb", 27, "cmd-argopt-B1", 0]);
MGCAddTopic(["idddcb04e2-2e81-41df-8ef0-295d74722938", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idddcb04e2-2e81-41df-8ef0-295d74722938", 27, "cmd-argdesc", 0]);
MGCAddTopic(["id58f0b1bb-80b3-46a0-9fc3-c2e2b047f978", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id58f0b1bb-80b3-46a0-9fc3-c2e2b047f978", 27, "cmd-arg", 0]);
MGCAddTopic(["id773ee02a-4f39-4732-9a00-f2e236da18cc", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id773ee02a-4f39-4732-9a00-f2e236da18cc", 27, "cmd-arg", 0]);
MGCAddTopic(["idb380d190-d45c-4647-84fa-8002731c2af5", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idb380d190-d45c-4647-84fa-8002731c2af5", 27, "cmd-arg", 0]);
MGCAddTopic(["id5369b283-2680-40af-b6fd-50b521b3c820", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id5369b283-2680-40af-b6fd-50b521b3c820", 27, "cmd-arg", 0]);
MGCAddTopic(["idc534d61d-2c29-4e94-9371-782bfd5ad3d5", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idc534d61d-2c29-4e94-9371-782bfd5ad3d5", 27, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id217dc407-87ac-44cb-970e-90b11e30e144", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id217dc407-87ac-44cb-970e-90b11e30e144", 27, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb90791aa-ee2a-4b4f-8289-eb7046cb0c69", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idb90791aa-ee2a-4b4f-8289-eb7046cb0c69", 27, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2faa25ec-f606-42d0-84fa-15062b0800cd", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id2faa25ec-f606-42d0-84fa-15062b0800cd", 27, "cmd-arg", 0]);
MGCAddTopic(["id97ec723d-6868-448b-92d2-1d779f3d76ff", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id97ec723d-6868-448b-92d2-1d779f3d76ff", 27, "cmd-arg", 0]);
MGCAddTopic(["id6a2d61e9-9d80-4bdf-9471-86904d07ccc0", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id6a2d61e9-9d80-4bdf-9471-86904d07ccc0", 27, "cmd-arg", 0]);
MGCAddTopic(["id62df82a8-9021-4c43-8de8-01d57eee7467", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id62df82a8-9021-4c43-8de8-01d57eee7467", 27, "cmd-arg", 0]);
MGCAddTopic(["id44c9fd48-f434-46b8-bc87-fcafb5513abf", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id44c9fd48-f434-46b8-bc87-fcafb5513abf", 27, "cmd-argumentlist", 0]);
MGCAddTopic(["idfd9c03ab-d0c5-43f9-adfa-8ea9b490b7af", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idfd9c03ab-d0c5-43f9-adfa-8ea9b490b7af", 27, "cmd-argumentlist", 0]);
MGCAddTopic(["id9604cd3e-25a8-40c8-aa54-f9b40ed51544", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id9604cd3e-25a8-40c8-aa54-f9b40ed51544", 27, "ct-topic-H3", 0]);
MGCAddTopic(["id00d62d2d-a9db-4161-bb0e-e5e18fe75a89", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id00d62d2d-a9db-4161-bb0e-e5e18fe75a89", 27, "ct-topic-H3", 0]);
MGCAddTopic(["idf900232c-05d1-42f2-9294-2a0a9d6b6f23", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__idf900232c-05d1-42f2-9294-2a0a9d6b6f23", 27, "ct-topic-H3", 0]);
MGCAddTopic(["id881df8d1-2f38-4556-94e9-9cb5209f1569", "id24da8ddc-1b24-4190-9655-43fcdba6ad3d__id881df8d1-2f38-4556-94e9-9cb5209f1569", 27, "ct-topic-H3", 0]);
MGCAddTopic(["FRACTURE OASIS_MBW (FRACTUREi)", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02", 28, "", 0]);
MGCAddTopic(["id574e4b6a-d4e5-47b5-bab8-ba93741d9c02", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02", 28, "", 0]);
MGCAddTopic(["id3e79bd22-3983-4de2-bdbd-c39e61c75b23", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id3e79bd22-3983-4de2-bdbd-c39e61c75b23", 28, "", 0]);
MGCAddTopic(["idec9696e1-f04b-416b-8594-be1e7c53b6c8", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idec9696e1-f04b-416b-8594-be1e7c53b6c8", 28, "", 0]);
MGCAddTopic(["id744932b1-1a40-40a6-bdcd-475d584531c3", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id744932b1-1a40-40a6-bdcd-475d584531c3", 28, "", 0]);
MGCAddTopic(["idd5a94929-0f10-40e3-a734-2a2a9a10cf16", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idd5a94929-0f10-40e3-a734-2a2a9a10cf16", 28, "cmd-arg", 0]);
MGCAddTopic(["idf07a2804-0310-450b-b2f0-392dc4224ca6", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idf07a2804-0310-450b-b2f0-392dc4224ca6", 28, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf3508a2a-e3ae-45bd-95bb-0f0288b861c1", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idf3508a2a-e3ae-45bd-95bb-0f0288b861c1", 28, "cmd-argopt-B1", 0]);
MGCAddTopic(["idab5ccb5b-d652-4d7d-bd52-69084769b05f", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idab5ccb5b-d652-4d7d-bd52-69084769b05f", 28, "cmd-argdesc", 0]);
MGCAddTopic(["idb285b202-5000-47f1-bee5-8d0d4c7225f7", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idb285b202-5000-47f1-bee5-8d0d4c7225f7", 28, "cmd-argdesc", 0]);
MGCAddTopic(["idfc91f6c0-8e4a-4616-aa16-e7c152a06d72", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idfc91f6c0-8e4a-4616-aa16-e7c152a06d72", 28, "", 0]);
MGCAddTopic(["idad26c1cf-0deb-4d06-abce-a3eda4f4e5ba", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idad26c1cf-0deb-4d06-abce-a3eda4f4e5ba", 28, "", 0]);
MGCAddTopic(["id2454f7ee-855b-4165-b314-abee34a10ab5", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id2454f7ee-855b-4165-b314-abee34a10ab5", 28, "", 0]);
MGCAddTopic(["idf2cdad25-4282-433e-92c3-819e53c89697", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idf2cdad25-4282-433e-92c3-819e53c89697", 28, "", 0]);
MGCAddTopic(["id33aa9f7e-2531-407a-bf73-6ebca04fc4c5", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id33aa9f7e-2531-407a-bf73-6ebca04fc4c5", 28, "", 0]);
MGCAddTopic(["id4a1b8fc6-a660-4aa8-905c-403145c5b1fa", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id4a1b8fc6-a660-4aa8-905c-403145c5b1fa", 28, "", 0]);
MGCAddTopic(["idf7707dcd-ed43-48c4-83a8-29cf400091f7", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idf7707dcd-ed43-48c4-83a8-29cf400091f7", 28, "", 0]);
MGCAddTopic(["ide85a985a-1376-49f6-a446-40db4f02be0e", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__ide85a985a-1376-49f6-a446-40db4f02be0e", 28, "", 0]);
MGCAddTopic(["idbea9d9b2-3f46-4c08-96e1-95530a7136fb", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idbea9d9b2-3f46-4c08-96e1-95530a7136fb", 28, "", 0]);
MGCAddTopic(["id27e1d58a-d907-40d5-8c64-7773e55be6ef", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id27e1d58a-d907-40d5-8c64-7773e55be6ef", 28, "", 0]);
MGCAddTopic(["id19ac3082-8a91-4663-9376-6d01a0578c4f", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id19ac3082-8a91-4663-9376-6d01a0578c4f", 28, "", 0]);
MGCAddTopic(["idb97c40ca-3676-4f33-88ca-ceb5f674583c", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idb97c40ca-3676-4f33-88ca-ceb5f674583c", 28, "cmd-arg", 0]);
MGCAddTopic(["idcefae157-96ec-4425-93ba-4adfdb8eaa61", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idcefae157-96ec-4425-93ba-4adfdb8eaa61", 28, "cmd-arg", 0]);
MGCAddTopic(["idf4d6a744-919d-450e-8ef0-f411d97e9251", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idf4d6a744-919d-450e-8ef0-f411d97e9251", 28, "cmd-argdesc", 0]);
MGCAddTopic(["id393444dd-4747-45a8-bc97-c738761b8c20", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id393444dd-4747-45a8-bc97-c738761b8c20", 28, "", 0]);
MGCAddTopic(["idefecdba0-07d5-41dd-b87d-6a57c9ca38c5", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idefecdba0-07d5-41dd-b87d-6a57c9ca38c5", 28, "", 0]);
MGCAddTopic(["id1aa89423-bfcf-41ea-8962-ae9297699c6e", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id1aa89423-bfcf-41ea-8962-ae9297699c6e", 28, "", 0]);
MGCAddTopic(["id8e3484fe-0e52-4e48-b4c8-b776208c3438", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id8e3484fe-0e52-4e48-b4c8-b776208c3438", 28, "", 0]);
MGCAddTopic(["idae76928a-2623-4910-af79-ebadd28c3c02", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idae76928a-2623-4910-af79-ebadd28c3c02", 28, "", 0]);
MGCAddTopic(["idd51d54d3-d916-4088-acd5-4167ff2a22c0", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idd51d54d3-d916-4088-acd5-4167ff2a22c0", 28, "", 0]);
MGCAddTopic(["id1defd3c2-b1a2-498c-8ce7-c9b4e85b6850", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id1defd3c2-b1a2-498c-8ce7-c9b4e85b6850", 28, "cmd-arg", 0]);
MGCAddTopic(["idbf1099bb-a968-4f38-aa0a-8667e3fbc5ed", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idbf1099bb-a968-4f38-aa0a-8667e3fbc5ed", 28, "cmd-arg", 0]);
MGCAddTopic(["idbcd0b7e6-a859-4d24-af86-eed4217c060e", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idbcd0b7e6-a859-4d24-af86-eed4217c060e", 28, "cmd-arg", 0]);
MGCAddTopic(["id9617465a-5c79-4932-8f0e-99dbfbd008a9", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id9617465a-5c79-4932-8f0e-99dbfbd008a9", 28, "", 0]);
MGCAddTopic(["ide7770c26-db67-48d1-a8dd-d0e19610dbf2", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__ide7770c26-db67-48d1-a8dd-d0e19610dbf2", 28, "", 0]);
MGCAddTopic(["id7f5e7472-4a83-4e74-9fe1-a012cb5545d8", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id7f5e7472-4a83-4e74-9fe1-a012cb5545d8", 28, "", 0]);
MGCAddTopic(["id725a9058-83c4-4be8-b497-499126c5bc8b", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id725a9058-83c4-4be8-b497-499126c5bc8b", 28, "", 0]);
MGCAddTopic(["id960a9338-3dcd-4399-8436-76bd390a52b5", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id960a9338-3dcd-4399-8436-76bd390a52b5", 28, "", 0]);
MGCAddTopic(["idcd47111f-caa2-433a-9a60-1e526ab195d0", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idcd47111f-caa2-433a-9a60-1e526ab195d0", 28, "", 0]);
MGCAddTopic(["idbfe1415a-6bc2-4c2d-9b2a-d471b55d2f28", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idbfe1415a-6bc2-4c2d-9b2a-d471b55d2f28", 28, "", 0]);
MGCAddTopic(["id971abfc7-1b3d-4973-ade5-56e44a91aefb", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id971abfc7-1b3d-4973-ade5-56e44a91aefb", 28, "", 0]);
MGCAddTopic(["idc24e5821-91a6-4c88-8f37-3ef5ff1e2093", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idc24e5821-91a6-4c88-8f37-3ef5ff1e2093", 28, "", 0]);
MGCAddTopic(["idcc1f6292-d741-411e-b31f-25b1af210381", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idcc1f6292-d741-411e-b31f-25b1af210381", 28, "", 0]);
MGCAddTopic(["ida74e532d-d0b6-45c3-9546-2968203211d7", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__ida74e532d-d0b6-45c3-9546-2968203211d7", 28, "", 0]);
MGCAddTopic(["idc82c22e0-36a5-4ef0-b929-7702899609c4", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idc82c22e0-36a5-4ef0-b929-7702899609c4", 28, "", 0]);
MGCAddTopic(["id23975518-18e6-4dc6-96fc-662cbcf0c78d", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id23975518-18e6-4dc6-96fc-662cbcf0c78d", 28, "", 0]);
MGCAddTopic(["idd926af60-a040-43af-9128-3880cfbd04f4", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__idd926af60-a040-43af-9128-3880cfbd04f4", 28, "", 0]);
MGCAddTopic(["id7ff4d288-6385-41f8-bb27-95397b428fdb", "id574e4b6a-d4e5-47b5-bab8-ba93741d9c02__id7ff4d288-6385-41f8-bb27-95397b428fdb", 28, "", 0]);
MGCAddTopic(["Considerations for Calibre FullScale Runs", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165", 29, "", 0]);
MGCAddTopic(["id7bd745e4-e3e6-4906-a32b-8902bdd8b165", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165", 29, "", 0]);
MGCAddTopic(["idc0500726-c6a0-4684-a8c9-cd838f386b0a", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__idc0500726-c6a0-4684-a8c9-cd838f386b0a", 29, "", 0]);
MGCAddTopic(["id7fa5bdb1-215a-41a6-b839-015356b3b57a", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__id7fa5bdb1-215a-41a6-b839-015356b3b57a", 29, "", 0]);
MGCAddTopic(["id2d888fb7-fee2-4262-88cc-9bfd54d3dc18", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__id2d888fb7-fee2-4262-88cc-9bfd54d3dc18", 29, "", 0]);
MGCAddTopic(["idc92afa61-2402-4b47-bf62-8a655f95d56c", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__idc92afa61-2402-4b47-bf62-8a655f95d56c", 29, "", 0]);
MGCAddTopic(["id55dceb42-3152-418b-b983-f0e898e5444a", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__id55dceb42-3152-418b-b983-f0e898e5444a", 29, "", 0]);
MGCAddTopic(["idca3074fe-6425-4778-9448-07071bd82405", "id7bd745e4-e3e6-4906-a32b-8902bdd8b165__idca3074fe-6425-4778-9448-07071bd82405", 29, "", 0]);
MGCAddTopic(["Calibre FullScale Overview", "Calibre FullScale Overview", 29, "", 0]);
MGCAddTopic(["Changes to Transcript", "Changes to Transcript", 29, "", 0]);
MGCAddTopic(["Hardware Requirements", "Hardware Requirements", 29, "", 0]);
MGCAddTopic(["Calibre MDP in Calibre FullScale", "Calibre MDP in Calibre FullScale", 29, "", 0]);
MGCAddTopic(["Section-Based Processing, Calibre Embedded SVRF, and MDP EMBED", "idd6446eb5-7f1f-4d71-ae88-ac284a99a59e", 30, "mgcsec-H1", 0]);
MGCAddTopic(["idd6446eb5-7f1f-4d71-ae88-ac284a99a59e", "idd6446eb5-7f1f-4d71-ae88-ac284a99a59e", 30, "", 0]);
MGCAddTopic(["Section-Based Processing", "idadb40e84-25b6-4471-ab44-99daf83f790f", 31, "con-H2", 0]);
MGCAddTopic(["Hierarchical Versus Section-Based Processing", "idd3bf5682-32f5-47ec-9d03-98f447e83f43", 31, "con-L0-FigureTitle", 0]);
MGCAddTopic(["idadb40e84-25b6-4471-ab44-99daf83f790f", "idadb40e84-25b6-4471-ab44-99daf83f790f", 31, "con-topic-H2", 0]);
MGCAddTopic(["id553448c5-12ba-44d6-a45a-e032e11cd7ad", "idadb40e84-25b6-4471-ab44-99daf83f790f__id553448c5-12ba-44d6-a45a-e032e11cd7ad", 31, "con-topic-H2", 0]);
MGCAddTopic(["idf7c6e151-9868-424e-977a-3cdc9a13d327", "idadb40e84-25b6-4471-ab44-99daf83f790f__idf7c6e151-9868-424e-977a-3cdc9a13d327", 31, "con-topic-H2", 0]);
MGCAddTopic(["id23829953-c928-4600-9453-d60c9c6458bf", "idadb40e84-25b6-4471-ab44-99daf83f790f__id23829953-c928-4600-9453-d60c9c6458bf", 31, "con-topic-H2", 0]);
MGCAddTopic(["idd3bf5682-32f5-47ec-9d03-98f447e83f43", "idadb40e84-25b6-4471-ab44-99daf83f790f__idd3bf5682-32f5-47ec-9d03-98f447e83f43", 31, "con-topic-H2", 0]);
MGCAddTopic(["Embed SVRF Commands in FRACTURE or MDPVERIFY Statements", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878", 32, "cmd-H2", 0]);
MGCAddTopic(["idfa4bc4b0-0c58-482c-bd9d-501b3d21c878", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878", 32, "ct-topic-H3", 0]);
MGCAddTopic(["id744d31b3-357c-4f17-ad26-bfcb51268845", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id744d31b3-357c-4f17-ad26-bfcb51268845", 32, "cmd-arg", 0]);
MGCAddTopic(["id6f417438-0699-45eb-9640-a11dba8359f9", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id6f417438-0699-45eb-9640-a11dba8359f9", 32, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idf6ea2138-796e-444f-9ca2-e49b6fff0b37", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__idf6ea2138-796e-444f-9ca2-e49b6fff0b37", 32, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ide7d58244-2b32-4f70-b10a-f65dd44edaac", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__ide7d58244-2b32-4f70-b10a-f65dd44edaac", 32, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id3873fa2c-412c-4d42-be01-cb6222b9d373", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id3873fa2c-412c-4d42-be01-cb6222b9d373", 32, "cmd-arg", 0]);
MGCAddTopic(["idb2090579-1a63-4155-87b1-cb8675a3f2a4", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__idb2090579-1a63-4155-87b1-cb8675a3f2a4", 32, "cmd-arg", 0]);
MGCAddTopic(["id80530bf1-ae11-44e4-a9f1-7d6c3637ea26", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id80530bf1-ae11-44e4-a9f1-7d6c3637ea26", 32, "cmd-argdesc", 0]);
MGCAddTopic(["id1b431771-7041-4acf-80d2-f3ce2c44abfa", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id1b431771-7041-4acf-80d2-f3ce2c44abfa", 32, "cmd-arg", 0]);
MGCAddTopic(["id593ed8bc-509f-4b7a-bbf6-25c4c8177bc5", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id593ed8bc-509f-4b7a-bbf6-25c4c8177bc5", 32, "cmd-arg", 0]);
MGCAddTopic(["id235d40fb-200b-4928-becb-afd46ef9d968", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id235d40fb-200b-4928-becb-afd46ef9d968", 32, "cmd-arg", 0]);
MGCAddTopic(["id75400075-076e-476f-93ea-f58c18f1de28", "idfa4bc4b0-0c58-482c-bd9d-501b3d21c878__id75400075-076e-476f-93ea-f58c18f1de28", 32, "cmd-arg", 0]);
MGCAddTopic(["Embed SVRF Commands in an MDP EMBED Statement", "idab02769f-f65c-4413-ad3f-dd821f143053", 33, "mgcsec-H2", 0]);
MGCAddTopic(["MDP EMBED — Sectioning the Data", "ide7df3caf-b147-444d-9cb5-c7a9ceb8a06f", 33, "ct-topic-H2", 0]);
MGCAddTopic(["MDP EMBED — Processing the SVRF", "id3db32e76-2cee-4f9e-930c-9dd321ce8410", 33, "ct-topic-H2", 0]);
MGCAddTopic(["idab02769f-f65c-4413-ad3f-dd821f143053", "idab02769f-f65c-4413-ad3f-dd821f143053", 33, "ct-topic-H2", 0]);
MGCAddTopic(["id5b8ace13-fe3b-4047-8ebc-dd4268cd25ad", "idab02769f-f65c-4413-ad3f-dd821f143053__id5b8ace13-fe3b-4047-8ebc-dd4268cd25ad", 33, "ct-topic-H2", 0]);
MGCAddTopic(["idb61ed812-0877-4ebe-abf3-ea2f801473b1", "idab02769f-f65c-4413-ad3f-dd821f143053__idb61ed812-0877-4ebe-abf3-ea2f801473b1", 33, "ct-topic-H2", 0]);
MGCAddTopic(["ide7df3caf-b147-444d-9cb5-c7a9ceb8a06f", "idab02769f-f65c-4413-ad3f-dd821f143053__ide7df3caf-b147-444d-9cb5-c7a9ceb8a06f", 33, "ct-topic-H2", 0]);
MGCAddTopic(["id3db32e76-2cee-4f9e-930c-9dd321ce8410", "idab02769f-f65c-4413-ad3f-dd821f143053__id3db32e76-2cee-4f9e-930c-9dd321ce8410", 33, "ct-topic-H2", 0]);
MGCAddTopic(["MDP EMBED", "idd0937def-f989-49bc-9f20-7ee1285ce78b", 34, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Brackets in Embedded SVRF", "id2aad0d6f-a611-45ef-ad9c-f029e71a9a0a", 34, "cmd-argdesc", 0]);
MGCAddTopic(["idd0937def-f989-49bc-9f20-7ee1285ce78b", "idd0937def-f989-49bc-9f20-7ee1285ce78b", 34, "ct-topic-H3", 0]);
MGCAddTopic(["idf9ac41ad-731f-4559-a30d-7fb3096b6fbe", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idf9ac41ad-731f-4559-a30d-7fb3096b6fbe", 34, "cmd-arg", 0]);
MGCAddTopic(["id8e1726b6-4155-4852-92ac-f3272385031e", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id8e1726b6-4155-4852-92ac-f3272385031e", 34, "cmd-arg", 0]);
MGCAddTopic(["id5a7d777b-3d23-487c-8eb5-5dba6085e8ff", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id5a7d777b-3d23-487c-8eb5-5dba6085e8ff", 34, "cmd-arg", 0]);
MGCAddTopic(["id3b45a843-7d10-4c8a-9a01-2e703e8cf2c7", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id3b45a843-7d10-4c8a-9a01-2e703e8cf2c7", 34, "cmd-arg", 0]);
MGCAddTopic(["idc01f39c7-3fa7-4fbd-b3f3-48c45bd828ea", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc01f39c7-3fa7-4fbd-b3f3-48c45bd828ea", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida866517d-3851-4b57-8f69-6e4d0fe60ce3", "idd0937def-f989-49bc-9f20-7ee1285ce78b__ida866517d-3851-4b57-8f69-6e4d0fe60ce3", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida5251e92-9e31-4436-9721-d37c94182414", "idd0937def-f989-49bc-9f20-7ee1285ce78b__ida5251e92-9e31-4436-9721-d37c94182414", 34, "cmd-arg", 0]);
MGCAddTopic(["id58ea0d5f-909c-4c28-83d7-57b56bc86632", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id58ea0d5f-909c-4c28-83d7-57b56bc86632", 34, "cmd-arg", 0]);
MGCAddTopic(["id7e9e2c8d-ae2b-4964-8a57-82f1ee2ddc2f", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id7e9e2c8d-ae2b-4964-8a57-82f1ee2ddc2f", 34, "cmd-arg", 0]);
MGCAddTopic(["iddf7959dc-d516-40f7-bfdf-227652282d53", "idd0937def-f989-49bc-9f20-7ee1285ce78b__iddf7959dc-d516-40f7-bfdf-227652282d53", 34, "cmd-arg", 0]);
MGCAddTopic(["id740ecbc5-7d5c-4b76-9895-b79f0c6a55d0", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id740ecbc5-7d5c-4b76-9895-b79f0c6a55d0", 34, "cmd-arg", 0]);
MGCAddTopic(["idc7283d87-e794-49e5-a710-62c3d4136b20", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc7283d87-e794-49e5-a710-62c3d4136b20", 34, "cmd-arg", 0]);
MGCAddTopic(["idc3a8208c-c036-461d-972e-d1c1a1c978f2", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc3a8208c-c036-461d-972e-d1c1a1c978f2", 34, "cmd-arg", 0]);
MGCAddTopic(["id95f91a36-fc89-4b55-b7a2-bdb458f2562a", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id95f91a36-fc89-4b55-b7a2-bdb458f2562a", 34, "cmd-arg", 0]);
MGCAddTopic(["id42b6c53c-087e-4edb-bf26-8f6ba45040b4", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id42b6c53c-087e-4edb-bf26-8f6ba45040b4", 34, "cmd-arg", 0]);
MGCAddTopic(["idc8bd73d8-be16-452b-a00c-c111112c142d", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc8bd73d8-be16-452b-a00c-c111112c142d", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id06a13dde-a120-4bcd-8e44-5f6b2150aa29", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id06a13dde-a120-4bcd-8e44-5f6b2150aa29", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["idfdb96f6e-06ea-4307-b332-f75c13e6c76d", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idfdb96f6e-06ea-4307-b332-f75c13e6c76d", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["idda002277-4b20-43e1-8f7d-616129a96de6", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idda002277-4b20-43e1-8f7d-616129a96de6", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idc77fda4d-3040-4205-9628-e48a6aa9efb2", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc77fda4d-3040-4205-9628-e48a6aa9efb2", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idcfda8d4e-fe66-47ed-a2ec-929036270235", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idcfda8d4e-fe66-47ed-a2ec-929036270235", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id68c1c52c-a588-4d80-99a2-6a3beae8e2c2", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id68c1c52c-a588-4d80-99a2-6a3beae8e2c2", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id51d9d977-6c71-46ea-9f01-c7a9541ef327", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id51d9d977-6c71-46ea-9f01-c7a9541ef327", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id90ce9c66-f486-4474-8389-5afa51c9782c", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id90ce9c66-f486-4474-8389-5afa51c9782c", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb9a0a786-c664-43c2-a8fa-c8287a472b3d", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idb9a0a786-c664-43c2-a8fa-c8287a472b3d", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id5dca7ef0-26ea-4b0a-88a2-77b7efdccafa", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id5dca7ef0-26ea-4b0a-88a2-77b7efdccafa", 34, "cmd-arg", 0]);
MGCAddTopic(["ida5145b7c-7184-45b1-9aaf-e4d061b54e7f", "idd0937def-f989-49bc-9f20-7ee1285ce78b__ida5145b7c-7184-45b1-9aaf-e4d061b54e7f", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id8ef25759-741b-4bcf-944e-aff585fcf22e", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id8ef25759-741b-4bcf-944e-aff585fcf22e", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5c377b30-17d3-4072-be4e-3440b389b2f5", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id5c377b30-17d3-4072-be4e-3440b389b2f5", 34, "cmd-argoptions-L1", 0]);
MGCAddTopic(["id2dc9719b-054b-4318-9163-bf33f88a9d2b", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id2dc9719b-054b-4318-9163-bf33f88a9d2b", 34, "cmd-argoptions-L1", 0]);
MGCAddTopic(["id1740f572-cc3c-4fd5-91aa-a399fef9ec1f", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id1740f572-cc3c-4fd5-91aa-a399fef9ec1f", 34, "cmd-argoptions-L1", 0]);
MGCAddTopic(["id70ef00ab-e771-4c4d-9994-f479e56caaa6", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id70ef00ab-e771-4c4d-9994-f479e56caaa6", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7d80888b-5527-4be9-ad63-446c79065031", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id7d80888b-5527-4be9-ad63-446c79065031", 34, "cmd-argumentlist", 0]);
MGCAddTopic(["id1a7801a0-b1b9-44ac-9001-1f033f1e9e5c", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id1a7801a0-b1b9-44ac-9001-1f033f1e9e5c", 34, "cmd-arg", 0]);
MGCAddTopic(["id47028c1e-aa4c-437f-955e-d63c3511d7eb", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id47028c1e-aa4c-437f-955e-d63c3511d7eb", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id29aa26fb-63ca-4bcb-931e-25eba1998695", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id29aa26fb-63ca-4bcb-931e-25eba1998695", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idd1cfc313-68e4-475a-bd89-e29ef59ffb60", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idd1cfc313-68e4-475a-bd89-e29ef59ffb60", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6404ed81-c599-4f58-a3d3-1caff8eb2115", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id6404ed81-c599-4f58-a3d3-1caff8eb2115", 34, "cmd-arg", 0]);
MGCAddTopic(["id267eab21-f6c5-4c75-aebd-7da2601aaadf", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id267eab21-f6c5-4c75-aebd-7da2601aaadf", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0e59f915-0fe0-49a4-afc9-abbfb2210c97", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id0e59f915-0fe0-49a4-afc9-abbfb2210c97", 34, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id4138bba3-cf18-485f-81db-f23daa077dcd", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id4138bba3-cf18-485f-81db-f23daa077dcd", 34, "cmd-arg", 0]);
MGCAddTopic(["id63165d36-50be-45c3-a5bc-248c39872a63", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id63165d36-50be-45c3-a5bc-248c39872a63", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["idbff8fc0b-7b71-469a-87eb-a11db0dd0c28", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idbff8fc0b-7b71-469a-87eb-a11db0dd0c28", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id14e4a4af-0e20-49ff-8078-20a6e7071c17", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id14e4a4af-0e20-49ff-8078-20a6e7071c17", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5d8a824a-31e1-4cd4-be2c-ba41870f1660", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id5d8a824a-31e1-4cd4-be2c-ba41870f1660", 34, "cmd-arg", 0]);
MGCAddTopic(["id1b2bbee6-9df6-4e31-80fd-fbab2432f5fe", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id1b2bbee6-9df6-4e31-80fd-fbab2432f5fe", 34, "cmd-arg", 0]);
MGCAddTopic(["id4fea595f-e21d-4969-b476-257a03fecf87", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id4fea595f-e21d-4969-b476-257a03fecf87", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["ide858121e-18a8-4ebe-acae-7839d2e2a0b6", "idd0937def-f989-49bc-9f20-7ee1285ce78b__ide858121e-18a8-4ebe-acae-7839d2e2a0b6", 34, "cmd-argopt-B1", 0]);
MGCAddTopic(["id77037e64-71e2-4fee-9735-41ef0009946f", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id77037e64-71e2-4fee-9735-41ef0009946f", 34, "cmd-argumentlist", 0]);
MGCAddTopic(["id41fc3604-5946-4632-a3e3-61e1dc269e41", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id41fc3604-5946-4632-a3e3-61e1dc269e41", 34, "cmd-argumentlist", 0]);
MGCAddTopic(["idc3cb8936-7603-403a-8dde-793cdb1d7beb", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idc3cb8936-7603-403a-8dde-793cdb1d7beb", 34, "cmd-arg", 0]);
MGCAddTopic(["id5461dea2-6aaa-433c-a767-e7d40accb04f", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id5461dea2-6aaa-433c-a767-e7d40accb04f", 34, "cmd-arg", 0]);
MGCAddTopic(["id2aad0d6f-a611-45ef-ad9c-f029e71a9a0a", "idd0937def-f989-49bc-9f20-7ee1285ce78b__id2aad0d6f-a611-45ef-ad9c-f029e71a9a0a", 34, "cmd-argdesc", 0]);
MGCAddTopic(["idb6379036-fbaa-451e-8181-bc7b0162262c", "idd0937def-f989-49bc-9f20-7ee1285ce78b__idb6379036-fbaa-451e-8181-bc7b0162262c", 34, "cmd-arg", 0]);
MGCAddTopic(["SVRF Command Support in Embedded SVRF", "iddaf01e43-68d4-4c0e-8bd5-8c140171b688", 35, "ref-H2", 0]);
MGCAddTopic(["Supported SVRF Statements for Embedded SVRF", "idee22c92a-705a-48d4-8815-840811eac1a9", 35, "TableTitle", 0]);
MGCAddTopic(["iddaf01e43-68d4-4c0e-8bd5-8c140171b688", "iddaf01e43-68d4-4c0e-8bd5-8c140171b688", 35, "ref-topic-H2", 0]);
MGCAddTopic(["id30b944fb-bcf1-4488-ae00-2bc97d2491d9", "iddaf01e43-68d4-4c0e-8bd5-8c140171b688__id30b944fb-bcf1-4488-ae00-2bc97d2491d9", 35, "ref-topic-H2", 0]);
MGCAddTopic(["idee22c92a-705a-48d4-8815-840811eac1a9", "iddaf01e43-68d4-4c0e-8bd5-8c140171b688__idee22c92a-705a-48d4-8815-840811eac1a9", 35, "ref-topic-H2", 0]);
MGCAddTopic(["Influence the Interaction Range (BOUND Keyword)", "id30d54323-fea9-4d68-8dd3-7be511cd06e2", 36, "cmd-H2", 0]);
MGCAddTopic(["BOUND and Long Range SVRFs", "id94bf4645-0f11-48de-84f9-858f366d80cb", 36, "ct-topic-H3", 0]);
MGCAddTopic(["id30d54323-fea9-4d68-8dd3-7be511cd06e2", "id30d54323-fea9-4d68-8dd3-7be511cd06e2", 36, "ct-topic-H3", 0]);
MGCAddTopic(["iddb6f1754-976b-4b60-b4c8-838ce736ea14", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__iddb6f1754-976b-4b60-b4c8-838ce736ea14", 36, "cmd-arg", 0]);
MGCAddTopic(["id6f30ea85-0d8f-4b81-a4e6-fcfd49b0621e", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id6f30ea85-0d8f-4b81-a4e6-fcfd49b0621e", 36, "cmd-argdesc", 0]);
MGCAddTopic(["id38e16c2b-1a98-4307-9930-ed8659bacc46", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id38e16c2b-1a98-4307-9930-ed8659bacc46", 36, "cmd-argdesc", 0]);
MGCAddTopic(["ide2874a5d-d7d4-405a-abe8-e6fc929ed22c", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__ide2874a5d-d7d4-405a-abe8-e6fc929ed22c", 36, "cmd-argdesc", 0]);
MGCAddTopic(["id4002eb30-954b-455a-92e5-82d37606a7bc", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id4002eb30-954b-455a-92e5-82d37606a7bc", 36, "cmd-argdesc", 0]);
MGCAddTopic(["id8404888c-6618-48f2-b371-dbc17d46cb24", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id8404888c-6618-48f2-b371-dbc17d46cb24", 36, "cmd-argdesc", 0]);
MGCAddTopic(["idf89cdf60-60c8-41d9-b58c-2391c33cde84", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__idf89cdf60-60c8-41d9-b58c-2391c33cde84", 36, "cmd-argdesc", 0]);
MGCAddTopic(["id68222fbc-f156-43e0-bc6b-4bfb27a81c07", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id68222fbc-f156-43e0-bc6b-4bfb27a81c07", 36, "ct-topic-H3", 0]);
MGCAddTopic(["id94bf4645-0f11-48de-84f9-858f366d80cb", "id30d54323-fea9-4d68-8dd3-7be511cd06e2__id94bf4645-0f11-48de-84f9-858f366d80cb", 36, "ct-topic-H3", 0]);
MGCAddTopic(["Specify a Global Bound", "Specify a Global Bound", 36, "cmd-description-z.Heading2", 0]);
MGCAddTopic(["Converting a Rule File to Embedded SVRF", "id01371681-ae23-4d39-a20e-27820248cc9e", 37, "task-H2", 0]);
MGCAddTopic(["id01371681-ae23-4d39-a20e-27820248cc9e", "id01371681-ae23-4d39-a20e-27820248cc9e", 37, "task-topic-H2", 0]);
MGCAddTopic(["idbc55454c-ad7a-432e-9c73-5ca2fb842f40", "id01371681-ae23-4d39-a20e-27820248cc9e__idbc55454c-ad7a-432e-9c73-5ca2fb842f40", 37, "task-prereq-B1", 0]);
MGCAddTopic(["id4b3a2779-6d44-4823-bab0-41744c31dc5d", "id01371681-ae23-4d39-a20e-27820248cc9e__id4b3a2779-6d44-4823-bab0-41744c31dc5d", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id2a380d3f-cfcc-4518-889e-06d2ad5631da", "id01371681-ae23-4d39-a20e-27820248cc9e__id2a380d3f-cfcc-4518-889e-06d2ad5631da", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id6f25a458-1516-4ffc-964c-ecad4ab13e3c", "id01371681-ae23-4d39-a20e-27820248cc9e__id6f25a458-1516-4ffc-964c-ecad4ab13e3c", 37, "task-procedure-ol-L2", 0]);
MGCAddTopic(["idf040c6f4-f044-4e5a-b942-c7baa6e7f71e", "id01371681-ae23-4d39-a20e-27820248cc9e__idf040c6f4-f044-4e5a-b942-c7baa6e7f71e", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id7f956487-5f9f-45e7-a6a6-36883859ba94", "id01371681-ae23-4d39-a20e-27820248cc9e__id7f956487-5f9f-45e7-a6a6-36883859ba94", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id8a111eab-55c0-4b21-b46e-cf047f7b5bb2", "id01371681-ae23-4d39-a20e-27820248cc9e__id8a111eab-55c0-4b21-b46e-cf047f7b5bb2", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id8aa5494d-a758-4e43-84b5-543997e8af96", "id01371681-ae23-4d39-a20e-27820248cc9e__id8aa5494d-a758-4e43-84b5-543997e8af96", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["idecc1d50b-dbb2-4104-8f6b-75c4c8b81dd9", "id01371681-ae23-4d39-a20e-27820248cc9e__idecc1d50b-dbb2-4104-8f6b-75c4c8b81dd9", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["idee65d160-56e5-48cd-a4ae-264f468b95c9", "id01371681-ae23-4d39-a20e-27820248cc9e__idee65d160-56e5-48cd-a4ae-264f468b95c9", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id574468ce-2d6b-4369-b20a-d8dbaedf8f68", "id01371681-ae23-4d39-a20e-27820248cc9e__id574468ce-2d6b-4369-b20a-d8dbaedf8f68", 37, "task-procedure-ol-L2", 0]);
MGCAddTopic(["idce908673-ef50-4535-8fd7-f0d5b16c89ca", "id01371681-ae23-4d39-a20e-27820248cc9e__idce908673-ef50-4535-8fd7-f0d5b16c89ca", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["idc9196291-8fa2-46f2-9ea7-49b728d19305", "id01371681-ae23-4d39-a20e-27820248cc9e__idc9196291-8fa2-46f2-9ea7-49b728d19305", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id171c6af3-3995-4596-9c61-dbe309e8b1b3", "id01371681-ae23-4d39-a20e-27820248cc9e__id171c6af3-3995-4596-9c61-dbe309e8b1b3", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id60841b13-bcf1-4f75-bd61-1fafb47eae3a", "id01371681-ae23-4d39-a20e-27820248cc9e__id60841b13-bcf1-4f75-bd61-1fafb47eae3a", 37, "task-procedure-ul-L3", 0]);
MGCAddTopic(["id3fbdc9f1-4c26-4a0d-834e-e2b2e7f57434", "id01371681-ae23-4d39-a20e-27820248cc9e__id3fbdc9f1-4c26-4a0d-834e-e2b2e7f57434", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["idfdce8ce2-5dbc-403f-b8ce-783e15ea5bad", "id01371681-ae23-4d39-a20e-27820248cc9e__idfdce8ce2-5dbc-403f-b8ce-783e15ea5bad", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id6e5b2841-9480-4467-97b6-8b8080b3cb91", "id01371681-ae23-4d39-a20e-27820248cc9e__id6e5b2841-9480-4467-97b6-8b8080b3cb91", 37, "task-procedure-ol-L2", 0]);
MGCAddTopic(["id805b2b45-df21-4faa-b835-888b13ea4f68", "id01371681-ae23-4d39-a20e-27820248cc9e__id805b2b45-df21-4faa-b835-888b13ea4f68", 37, "task-procedure-ol-L2", 0]);
MGCAddTopic(["id011b9234-627b-4b1e-941e-8f4a7e53df03", "id01371681-ae23-4d39-a20e-27820248cc9e__id011b9234-627b-4b1e-941e-8f4a7e53df03", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id70b1f779-3ce5-404d-85a7-a80de6e2bc07", "id01371681-ae23-4d39-a20e-27820248cc9e__id70b1f779-3ce5-404d-85a7-a80de6e2bc07", 37, "task-procedure-ol-L1", 0]);
MGCAddTopic(["Embedded SVRF With Multiple Outputs in Calibre MDPverify and MDP EMBED", "idb4905739-7989-4b33-81cb-19abb60c92bf", 38, "task-H2", 0]);
MGCAddTopic(["idb4905739-7989-4b33-81cb-19abb60c92bf", "idb4905739-7989-4b33-81cb-19abb60c92bf", 38, "task-topic-H2", 0]);
MGCAddTopic(["ide6484c2a-a8c4-466d-9faf-e5630274c3a6", "idb4905739-7989-4b33-81cb-19abb60c92bf__ide6484c2a-a8c4-466d-9faf-e5630274c3a6", 38, "task-procedure-ol-L1", 0]);
MGCAddTopic(["idb9ae6863-1d3f-472b-b80f-e70bdd7d2a27", "idb4905739-7989-4b33-81cb-19abb60c92bf__idb9ae6863-1d3f-472b-b80f-e70bdd7d2a27", 38, "task-procedure-ol-L1", 0]);
MGCAddTopic(["idde7ec16c-702c-4f6f-a0c2-a8c122bea2ab", "idb4905739-7989-4b33-81cb-19abb60c92bf__idde7ec16c-702c-4f6f-a0c2-a8c122bea2ab", 38, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id7cddd3b2-4b02-45c7-9e22-42ca67ca4f0d", "idb4905739-7989-4b33-81cb-19abb60c92bf__id7cddd3b2-4b02-45c7-9e22-42ca67ca4f0d", 38, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id64356e90-2165-4fe4-ada0-92831f983785", "idb4905739-7989-4b33-81cb-19abb60c92bf__id64356e90-2165-4fe4-ada0-92831f983785", 38, "task-procedure-ol-L1", 0]);
MGCAddTopic(["MDP EMBED Output to HDB and DDO", "id650fe16f-c220-45a0-b5d8-a1d69440e12c", 39, "con-H2", 0]);
MGCAddTopic(["id650fe16f-c220-45a0-b5d8-a1d69440e12c", "id650fe16f-c220-45a0-b5d8-a1d69440e12c", 39, "con-topic-H2", 0]);
MGCAddTopic(["id13136738-ce7f-4e3a-a002-3b0c12b1f2d8", "id650fe16f-c220-45a0-b5d8-a1d69440e12c__id13136738-ce7f-4e3a-a002-3b0c12b1f2d8", 39, "con-topic-H2", 0]);
MGCAddTopic(["id0332145e-f999-4a51-b88f-3e1128b538f1", "id650fe16f-c220-45a0-b5d8-a1d69440e12c__id0332145e-f999-4a51-b88f-3e1128b538f1", 39, "con-topic-H2", 0]);
MGCAddTopic(["ided6732ff-f909-47af-b5c7-858081352d81", "id650fe16f-c220-45a0-b5d8-a1d69440e12c__ided6732ff-f909-47af-b5c7-858081352d81", 39, "con-topic-H2", 0]);
MGCAddTopic(["Processor Counts for MDP EMBED in the Transcript", "id3089ec18-04a8-4863-b139-38b719052f9a", 40, "con-H2", 0]);
MGCAddTopic(["id3089ec18-04a8-4863-b139-38b719052f9a", "id3089ec18-04a8-4863-b139-38b719052f9a", 40, "con-topic-H2", 0]);
MGCAddTopic(["Preprocessing With SVRF", "id60680448-65c7-4dca-b351-9664526ded34", 41, "mgcsec-H1", 0]);
MGCAddTopic(["id60680448-65c7-4dca-b351-9664526ded34", "id60680448-65c7-4dca-b351-9664526ded34", 41, "", 0]);
MGCAddTopic(["Environment Setup", "idf313903d-b333-40fe-a64b-88a64851396b", 42, "mgcsec-H2", 0]);
MGCAddTopic(["idf313903d-b333-40fe-a64b-88a64851396b", "idf313903d-b333-40fe-a64b-88a64851396b", 42, "ct-topic-H2", 0]);
MGCAddTopic(["Layout Statements", "ide08c9f6e-942d-4541-9b9f-75b36a3bf837", 43, "ref-H3", 0]);
MGCAddTopic(["Layout Statements Summary", "idee9e7a42-9bff-4ab0-bdc0-ccac1a7f6719", 43, "TableTitle", 0]);
MGCAddTopic(["ide08c9f6e-942d-4541-9b9f-75b36a3bf837", "ide08c9f6e-942d-4541-9b9f-75b36a3bf837", 43, "ref-topic-H3", 0]);
MGCAddTopic(["id85a38f0f-2981-4f62-b0ff-738a5bf995ee", "ide08c9f6e-942d-4541-9b9f-75b36a3bf837__id85a38f0f-2981-4f62-b0ff-738a5bf995ee", 43, "ref-topic-H3", 0]);
MGCAddTopic(["idee9e7a42-9bff-4ab0-bdc0-ccac1a7f6719", "ide08c9f6e-942d-4541-9b9f-75b36a3bf837__idee9e7a42-9bff-4ab0-bdc0-ccac1a7f6719", 43, "ref-topic-H3", 0]);
MGCAddTopic(["Unit Statements", "id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4", 44, "ref-H3", 0]);
MGCAddTopic(["Unit Statement Summary", "id8a526079-67d4-4da1-b802-dff7c82bbfcf", 44, "TableTitle", 0]);
MGCAddTopic(["id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4", "id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4", 44, "ref-topic-H3", 0]);
MGCAddTopic(["id4fe07544-f115-4126-9f00-b34ebfcefd17", "id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4__id4fe07544-f115-4126-9f00-b34ebfcefd17", 44, "ref-topic-H3", 0]);
MGCAddTopic(["id8a526079-67d4-4da1-b802-dff7c82bbfcf", "id7c0d91f1-b404-4a2a-80e8-1de238fe2fb4__id8a526079-67d4-4da1-b802-dff7c82bbfcf", 44, "ref-topic-H3", 0]);
MGCAddTopic(["Layer Specification Statements", "idf2751553-85b6-40ec-9ebd-b136e38152b9", 45, "ref-H3", 0]);
MGCAddTopic(["The Layer Specification Statements", "idbe95e64d-e7ab-404e-8115-862b5a905b06", 45, "TableTitle", 0]);
MGCAddTopic(["idf2751553-85b6-40ec-9ebd-b136e38152b9", "idf2751553-85b6-40ec-9ebd-b136e38152b9", 45, "ref-topic-H3", 0]);
MGCAddTopic(["id265297ae-83d7-47b3-a56d-b74088e27525", "idf2751553-85b6-40ec-9ebd-b136e38152b9__id265297ae-83d7-47b3-a56d-b74088e27525", 45, "ref-topic-H3", 0]);
MGCAddTopic(["idbe95e64d-e7ab-404e-8115-862b5a905b06", "idf2751553-85b6-40ec-9ebd-b136e38152b9__idbe95e64d-e7ab-404e-8115-862b5a905b06", 45, "ref-topic-H3", 0]);
MGCAddTopic(["Results Reporting", "id0ce55715-ac6a-49ad-bb87-238fe37ed143", 46, "ref-H2", 0]);
MGCAddTopic(["Calibre nmDRC Statements", "id4568fbce-4e1c-4943-8323-77d83f3a20dd", 46, "TableTitle", 0]);
MGCAddTopic(["id0ce55715-ac6a-49ad-bb87-238fe37ed143", "id0ce55715-ac6a-49ad-bb87-238fe37ed143", 46, "ref-topic-H2", 0]);
MGCAddTopic(["id4a790175-4397-4254-ba67-a5f85b614651", "id0ce55715-ac6a-49ad-bb87-238fe37ed143__id4a790175-4397-4254-ba67-a5f85b614651", 46, "ref-topic-H2", 0]);
MGCAddTopic(["id4568fbce-4e1c-4943-8323-77d83f3a20dd", "id0ce55715-ac6a-49ad-bb87-238fe37ed143__id4568fbce-4e1c-4943-8323-77d83f3a20dd", 46, "ref-topic-H2", 0]);
MGCAddTopic(["Error Handling", "id1eb8adb6-cd47-4a22-bd67-b76a375efb5c", 47, "ref-H2", 0]);
MGCAddTopic(["Flag Statements", "idcafff5dd-cc8e-48ce-99bb-e009695eebda", 47, "TableTitle", 0]);
MGCAddTopic(["id1eb8adb6-cd47-4a22-bd67-b76a375efb5c", "id1eb8adb6-cd47-4a22-bd67-b76a375efb5c", 47, "ref-topic-H2", 0]);
MGCAddTopic(["id2161ceea-04be-404c-a8e8-42873334fdcd", "id1eb8adb6-cd47-4a22-bd67-b76a375efb5c__id2161ceea-04be-404c-a8e8-42873334fdcd", 47, "ref-topic-H2", 0]);
MGCAddTopic(["idcafff5dd-cc8e-48ce-99bb-e009695eebda", "id1eb8adb6-cd47-4a22-bd67-b76a375efb5c__idcafff5dd-cc8e-48ce-99bb-e009695eebda", 47, "ref-topic-H2", 0]);
MGCAddTopic(["Data Manipulation", "id7267a415-3c4d-497f-aec8-903c4ae7d4e5", 48, "mgcsec-H2", 0]);
MGCAddTopic(["id7267a415-3c4d-497f-aec8-903c4ae7d4e5", "id7267a415-3c4d-497f-aec8-903c4ae7d4e5", 48, "ct-topic-H2", 0]);
MGCAddTopic(["Layer Selectors", "idb6bc84b9-c5c1-44ac-9dc4-21af9718b9d5", 49, "con-H3", 0]);
MGCAddTopic(["Commonly Used Layer Selector Operations", "ida31bfe00-6633-44c8-9815-06ebb12da9d7", 49, "TableTitle", 0]);
MGCAddTopic(["idb6bc84b9-c5c1-44ac-9dc4-21af9718b9d5", "idb6bc84b9-c5c1-44ac-9dc4-21af9718b9d5", 49, "con-topic-H3", 0]);
MGCAddTopic(["ida31bfe00-6633-44c8-9815-06ebb12da9d7", "idb6bc84b9-c5c1-44ac-9dc4-21af9718b9d5__ida31bfe00-6633-44c8-9815-06ebb12da9d7", 49, "con-topic-H3", 0]);
MGCAddTopic(["Layer Constructors", "iddc7224c3-4090-4e01-9bb5-edec2efffb14", 50, "ref-H3", 0]);
MGCAddTopic(["Commonly Used Layer Constructor Operations", "idf60f6f7d-65d8-46c3-97b2-ac0582f6cefb", 50, "TableTitle", 0]);
MGCAddTopic(["iddc7224c3-4090-4e01-9bb5-edec2efffb14", "iddc7224c3-4090-4e01-9bb5-edec2efffb14", 50, "ref-topic-H3", 0]);
MGCAddTopic(["id2d39a426-ed8c-47ad-af34-785e9952609c", "iddc7224c3-4090-4e01-9bb5-edec2efffb14__id2d39a426-ed8c-47ad-af34-785e9952609c", 50, "ref-topic-H3", 0]);
MGCAddTopic(["idf60f6f7d-65d8-46c3-97b2-ac0582f6cefb", "iddc7224c3-4090-4e01-9bb5-edec2efffb14__idf60f6f7d-65d8-46c3-97b2-ac0582f6cefb", 50, "ref-topic-H3", 0]);
MGCAddTopic(["Layer Creation Statements", "idaa08ce01-f668-4dff-9b42-7ea5251ed19b", 51, "ref-H3", 0]);
MGCAddTopic(["The Layer Definition Statements", "id8d5de367-6324-4ecf-add7-89cbabec710d", 51, "TableTitle", 0]);
MGCAddTopic(["idaa08ce01-f668-4dff-9b42-7ea5251ed19b", "idaa08ce01-f668-4dff-9b42-7ea5251ed19b", 51, "ref-topic-H3", 0]);
MGCAddTopic(["id28461dbc-cecf-4cb8-9327-c3751186ff8a", "idaa08ce01-f668-4dff-9b42-7ea5251ed19b__id28461dbc-cecf-4cb8-9327-c3751186ff8a", 51, "ref-topic-H3", 0]);
MGCAddTopic(["id8d5de367-6324-4ecf-add7-89cbabec710d", "idaa08ce01-f668-4dff-9b42-7ea5251ed19b__id8d5de367-6324-4ecf-add7-89cbabec710d", 51, "ref-topic-H3", 0]);
MGCAddTopic(["Key Concepts Within SVRF", "idcc4837b4-975b-438e-84e3-ba758db808e3", 52, "mgcsec-H2", 0]);
MGCAddTopic(["idcc4837b4-975b-438e-84e3-ba758db808e3", "idcc4837b4-975b-438e-84e3-ba758db808e3", 52, "ct-topic-H2", 0]);
MGCAddTopic(["Calibre Results", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2", 53, "mgcsec-H3", 0]);
MGCAddTopic(["idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2", 53, "ct-topic-H3", 0]);
MGCAddTopic(["idbfaf17b8-c455-463e-b515-6b8d203610cc", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2__idbfaf17b8-c455-463e-b515-6b8d203610cc", 53, "ct-topic-H3", 0]);
MGCAddTopic(["id10d68e48-3d08-497d-be38-6b35bc3a0a30", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2__id10d68e48-3d08-497d-be38-6b35bc3a0a30", 53, "ct-topic-H3", 0]);
MGCAddTopic(["id13c52dd7-1e5b-40b0-9d3f-259e48651956", "idb7bfa5a3-8389-4941-9d3a-a933ec72b3c2__id13c52dd7-1e5b-40b0-9d3f-259e48651956", 53, "ct-topic-H3", 0]);
MGCAddTopic(["The Results Database", "ide2b3da87-b72d-46a5-a7aa-b98b98025be7", 54, "con-H4", 0]);
MGCAddTopic(["ide2b3da87-b72d-46a5-a7aa-b98b98025be7", "ide2b3da87-b72d-46a5-a7aa-b98b98025be7", 54, "con-topic-H4", 0]);
MGCAddTopic(["The DRC Results Summary", "id21b48c45-7b27-4999-88ca-dd0d7af534a0", 55, "con-topic-H4", 0]);
MGCAddTopic(["id21b48c45-7b27-4999-88ca-dd0d7af534a0", "id21b48c45-7b27-4999-88ca-dd0d7af534a0", 55, "con-topic-H4", 0]);
MGCAddTopic(["The Calibre Transcript", "id6f21a26c-b665-4824-89ea-a099f707d440", 56, "con-H4", 0]);
MGCAddTopic(["id6f21a26c-b665-4824-89ea-a099f707d440", "id6f21a26c-b665-4824-89ea-a099f707d440", 56, "con-topic-H4", 0]);
MGCAddTopic(["Calibre Layer Data", "id24091576-ed85-40de-b01b-5afb910520b9", 57, "con-H3", 0]);
MGCAddTopic(["id24091576-ed85-40de-b01b-5afb910520b9", "id24091576-ed85-40de-b01b-5afb910520b9", 57, "con-topic-H3", 0]);
MGCAddTopic(["id41552a6c-9c01-454e-bdc1-63f6ce309e60", "id24091576-ed85-40de-b01b-5afb910520b9__id41552a6c-9c01-454e-bdc1-63f6ce309e60", 57, "con-topic-H3", 0]);
MGCAddTopic(["id0ab5fbb1-6e16-44f5-bc95-5ec4228cc32f", "id24091576-ed85-40de-b01b-5afb910520b9__id0ab5fbb1-6e16-44f5-bc95-5ec4228cc32f", 57, "con-topic-H3", 0]);
MGCAddTopic(["ideb5a76f0-e06f-4cb5-b0dc-8400fbdf8c4a", "id24091576-ed85-40de-b01b-5afb910520b9__ideb5a76f0-e06f-4cb5-b0dc-8400fbdf8c4a", 57, "con-topic-H3", 0]);
MGCAddTopic(["id32a529da-01ce-446b-b62c-08357f341cbf", "id24091576-ed85-40de-b01b-5afb910520b9__id32a529da-01ce-446b-b62c-08357f341cbf", 57, "con-topic-H3", 0]);
MGCAddTopic(["Edge and Polygon Data", "id7e105b76-24b4-4e56-95cd-03d9415f4c82", 58, "mgcsec-H3", 0]);
MGCAddTopic(["How Polygon Data Divides Space", "idc7ef2874-287b-4429-9de3-6ebf71e08d2c", 58, "mgcsec-H3-L0-FigureTitle", 0]);
MGCAddTopic(["How Edge Data Divides Space", "id98e2a260-e219-415e-a180-9b766d38e3f6", 58, "mgcsec-H3-L0-FigureTitle", 0]);
MGCAddTopic(["id7e105b76-24b4-4e56-95cd-03d9415f4c82", "id7e105b76-24b4-4e56-95cd-03d9415f4c82", 58, "ct-topic-H3", 0]);
MGCAddTopic(["idc7ef2874-287b-4429-9de3-6ebf71e08d2c", "id7e105b76-24b4-4e56-95cd-03d9415f4c82__idc7ef2874-287b-4429-9de3-6ebf71e08d2c", 58, "ct-topic-H3", 0]);
MGCAddTopic(["id98e2a260-e219-415e-a180-9b766d38e3f6", "id7e105b76-24b4-4e56-95cd-03d9415f4c82__id98e2a260-e219-415e-a180-9b766d38e3f6", 58, "ct-topic-H3", 0]);
MGCAddTopic(["Layer of Origin", "idecb8387f-63ea-4628-ad2d-5fff6ba70213", 59, "con-H4", 0]);
MGCAddTopic(["Layer of Origin Example", "id3d9d5d9d-2f4b-45d9-a09b-6e771b6e5c54", 59, "TableTitle", 0]);
MGCAddTopic(["Reference Data Dependence on Layer of Origin", "idf2538cfd-9f84-4742-90e8-b9f8501b65b1", 59, "con-L0-FigureTitle", 0]);
MGCAddTopic(["The Effect of Reference Data on Dimension Checks", "id6cb2c154-a80d-481e-8a54-f8d1dfae31da", 59, "con-L0-FigureTitle", 0]);
MGCAddTopic(["idecb8387f-63ea-4628-ad2d-5fff6ba70213", "idecb8387f-63ea-4628-ad2d-5fff6ba70213", 59, "con-topic-H4", 0]);
MGCAddTopic(["id3d9d5d9d-2f4b-45d9-a09b-6e771b6e5c54", "idecb8387f-63ea-4628-ad2d-5fff6ba70213__id3d9d5d9d-2f4b-45d9-a09b-6e771b6e5c54", 59, "con-topic-H4", 0]);
MGCAddTopic(["idf2538cfd-9f84-4742-90e8-b9f8501b65b1", "idecb8387f-63ea-4628-ad2d-5fff6ba70213__idf2538cfd-9f84-4742-90e8-b9f8501b65b1", 59, "con-topic-H4", 0]);
MGCAddTopic(["id332bad75-3929-4cf7-a616-3dddf8fb9011", "idecb8387f-63ea-4628-ad2d-5fff6ba70213__id332bad75-3929-4cf7-a616-3dddf8fb9011", 59, "con-topic-H4", 0]);
MGCAddTopic(["id6cb2c154-a80d-481e-8a54-f8d1dfae31da", "idecb8387f-63ea-4628-ad2d-5fff6ba70213__id6cb2c154-a80d-481e-8a54-f8d1dfae31da", 59, "con-topic-H4", 0]);
MGCAddTopic(["Understanding Dimension Checks", "id29967fb5-a285-4605-a7e9-ed320b4beb62", 60, "mgcsec-H3", 0]);
MGCAddTopic(["id29967fb5-a285-4605-a7e9-ed320b4beb62", "id29967fb5-a285-4605-a7e9-ed320b4beb62", 60, "ct-topic-H3", 0]);
MGCAddTopic(["id623866a4-2d51-4fe0-b25f-cb52ada69baf", "id29967fb5-a285-4605-a7e9-ed320b4beb62__id623866a4-2d51-4fe0-b25f-cb52ada69baf", 60, "ct-topic-H3", 0]);
MGCAddTopic(["id13f5c4e9-ddc4-4841-b04f-074329f8c076", "id29967fb5-a285-4605-a7e9-ed320b4beb62__id13f5c4e9-ddc4-4841-b04f-074329f8c076", 60, "ct-topic-H3", 0]);
MGCAddTopic(["ide2a2fd49-3990-40c0-846f-b4e3f0d4191d", "id29967fb5-a285-4605-a7e9-ed320b4beb62__ide2a2fd49-3990-40c0-846f-b4e3f0d4191d", 60, "ct-topic-H3", 0]);
MGCAddTopic(["id17b3ba9c-e9e7-48d3-be9f-32b52f79edfc", "id29967fb5-a285-4605-a7e9-ed320b4beb62__id17b3ba9c-e9e7-48d3-be9f-32b52f79edfc", 60, "mgcsec-H3-L0-Anchor", 0]);
MGCAddTopic(["idecf1f104-8d1e-4950-8455-0574bcf506b0", "id29967fb5-a285-4605-a7e9-ed320b4beb62__idecf1f104-8d1e-4950-8455-0574bcf506b0", 60, "ct-topic-H3", 0]);
MGCAddTopic(["idbb183db5-dca7-4b5a-91f4-ba3e26ef47a7", "id29967fb5-a285-4605-a7e9-ed320b4beb62__idbb183db5-dca7-4b5a-91f4-ba3e26ef47a7", 60, "ct-topic-H3", 0]);
MGCAddTopic(["idd32b3aa6-b91b-4fdb-aad9-fdd9cfc83cb5", "id29967fb5-a285-4605-a7e9-ed320b4beb62__idd32b3aa6-b91b-4fdb-aad9-fdd9cfc83cb5", 60, "ct-topic-H3", 0]);
MGCAddTopic(["Identify Edge Pairs", "id317dd158-821d-4954-a00d-51bf6a83f680", 61, "con-H4", 0]);
MGCAddTopic(["Edge Pairs Measured by the Internal Operation", "idfa239cfa-6c2a-440a-9256-733e9c814332", 61, "con-L1-FigureTitle", 0]);
MGCAddTopic(["Edge Pairs Measured by the External Operation", "id0fbf353c-c180-408f-b8ba-d3fd822ec8c5", 61, "con-L1-FigureTitle", 0]);
MGCAddTopic(["Edge Pairings Measured by the Enclosure Operation", "id2a371126-6061-4b69-ae9f-ed79f04d1ee7", 61, "con-L1-FigureTitle", 0]);
MGCAddTopic(["Measuring “Appropriate” Angles for Edge Pairings", "id9eeae33f-81c5-48f3-af9b-04c4e68fbfc6", 61, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id317dd158-821d-4954-a00d-51bf6a83f680", "id317dd158-821d-4954-a00d-51bf6a83f680", 61, "con-topic-H4", 0]);
MGCAddTopic(["ida6f8bb18-7224-4d38-8fb4-d13e1a541da2", "id317dd158-821d-4954-a00d-51bf6a83f680__ida6f8bb18-7224-4d38-8fb4-d13e1a541da2", 61, "con-topic-H4", 0]);
MGCAddTopic(["idfa239cfa-6c2a-440a-9256-733e9c814332", "id317dd158-821d-4954-a00d-51bf6a83f680__idfa239cfa-6c2a-440a-9256-733e9c814332", 61, "con-topic-H4", 0]);
MGCAddTopic(["id8da5ace9-d6a7-4425-9562-e4e933e8e8a8", "id317dd158-821d-4954-a00d-51bf6a83f680__id8da5ace9-d6a7-4425-9562-e4e933e8e8a8", 61, "con-topic-H4", 0]);
MGCAddTopic(["id0fbf353c-c180-408f-b8ba-d3fd822ec8c5", "id317dd158-821d-4954-a00d-51bf6a83f680__id0fbf353c-c180-408f-b8ba-d3fd822ec8c5", 61, "con-topic-H4", 0]);
MGCAddTopic(["idadfac4f0-2700-42de-a061-864dc8865dd7", "id317dd158-821d-4954-a00d-51bf6a83f680__idadfac4f0-2700-42de-a061-864dc8865dd7", 61, "con-topic-H4", 0]);
MGCAddTopic(["id2a371126-6061-4b69-ae9f-ed79f04d1ee7", "id317dd158-821d-4954-a00d-51bf6a83f680__id2a371126-6061-4b69-ae9f-ed79f04d1ee7", 61, "con-topic-H4", 0]);
MGCAddTopic(["id9eeae33f-81c5-48f3-af9b-04c4e68fbfc6", "id317dd158-821d-4954-a00d-51bf6a83f680__id9eeae33f-81c5-48f3-af9b-04c4e68fbfc6", 61, "con-topic-H4", 0]);
MGCAddTopic(["Create Measurement Regions", "id78590100-5493-4823-8638-9bc971128d8e", 62, "con-H4", 0]);
MGCAddTopic(["Measurement Regions for Edge A", "id0c9856ae-c678-4b08-a3ba-d450bad021c5", 62, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id78590100-5493-4823-8638-9bc971128d8e", "id78590100-5493-4823-8638-9bc971128d8e", 62, "con-topic-H4", 0]);
MGCAddTopic(["id0c9856ae-c678-4b08-a3ba-d450bad021c5", "id78590100-5493-4823-8638-9bc971128d8e__id0c9856ae-c678-4b08-a3ba-d450bad021c5", 62, "con-topic-H4", 0]);
MGCAddTopic(["id819def8a-7e16-4d1d-9778-9782e15f62c2", "id78590100-5493-4823-8638-9bc971128d8e__id819def8a-7e16-4d1d-9778-9782e15f62c2", 62, "con-topic-H4", 0]);
MGCAddTopic(["idf49c592b-92d7-49b5-910e-5957e1f61331", "id78590100-5493-4823-8638-9bc971128d8e__idf49c592b-92d7-49b5-910e-5957e1f61331", 62, "con-topic-H4", 0]);
MGCAddTopic(["iddcd0912b-427b-4ab5-b811-d1720cbdd715", "id78590100-5493-4823-8638-9bc971128d8e__iddcd0912b-427b-4ab5-b811-d1720cbdd715", 62, "con-topic-H4", 0]);
MGCAddTopic(["id0cba4bfb-58ab-4159-8dcd-25d48b2705ae", "id78590100-5493-4823-8638-9bc971128d8e__id0cba4bfb-58ab-4159-8dcd-25d48b2705ae", 62, "con-L1-Anchor", 0]);
MGCAddTopic(["idebe80c38-144c-4bbb-a0cb-f7b2fc7eaf77", "id78590100-5493-4823-8638-9bc971128d8e__idebe80c38-144c-4bbb-a0cb-f7b2fc7eaf77", 62, "con-topic-H4", 0]);
MGCAddTopic(["id1083292f-82fc-459b-8b2e-512ddecc146d", "id78590100-5493-4823-8638-9bc971128d8e__id1083292f-82fc-459b-8b2e-512ddecc146d", 62, "con-L1-Anchor", 0]);
MGCAddTopic(["id4b755dd4-ad3c-4e76-9a3e-03150547d6cd", "id78590100-5493-4823-8638-9bc971128d8e__id4b755dd4-ad3c-4e76-9a3e-03150547d6cd", 62, "con-topic-H4", 0]);
MGCAddTopic(["id35873551-f7a0-4620-b2b9-f8a63db075db", "id78590100-5493-4823-8638-9bc971128d8e__id35873551-f7a0-4620-b2b9-f8a63db075db", 62, "con-L1-Anchor", 0]);
MGCAddTopic(["id76e90ae0-841c-4352-bc3a-c775032a7464", "id78590100-5493-4823-8638-9bc971128d8e__id76e90ae0-841c-4352-bc3a-c775032a7464", 62, "con-topic-H4", 0]);
MGCAddTopic(["id4481f64c-8db9-42c1-a938-02691512efb0", "id78590100-5493-4823-8638-9bc971128d8e__id4481f64c-8db9-42c1-a938-02691512efb0", 62, "con-L1-Anchor", 0]);
MGCAddTopic(["idcc14fe88-574f-4984-8ebd-6a0bb8218626", "id78590100-5493-4823-8638-9bc971128d8e__idcc14fe88-574f-4984-8ebd-6a0bb8218626", 62, "con-topic-H4", 0]);
MGCAddTopic(["Metrics", "Metrics", 62, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["Return Intersection Edges", "id3876f888-6782-4e9f-a771-140b77e83eeb", 63, "con-H4", 0]);
MGCAddTopic(["Creating Measurement Regions", "idec2f7d2d-a211-4896-a2a4-4bfdc80b8f29", 63, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Returning Intersection Edges99Example", "id3876f888-6782-4e9f-a771-140b77e83eeb__id293754f0-a159-439d-bdd5-bd4e331d59f8", 63, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["id3876f888-6782-4e9f-a771-140b77e83eeb", "id3876f888-6782-4e9f-a771-140b77e83eeb", 63, "con-topic-H4", 0]);
MGCAddTopic(["id293754f0-a159-439d-bdd5-bd4e331d59f8", "id3876f888-6782-4e9f-a771-140b77e83eeb__id293754f0-a159-439d-bdd5-bd4e331d59f8", 63, "con-topic-H4", 0]);
MGCAddTopic(["idec2f7d2d-a211-4896-a2a4-4bfdc80b8f29", "id3876f888-6782-4e9f-a771-140b77e83eeb__idec2f7d2d-a211-4896-a2a4-4bfdc80b8f29", 63, "con-topic-H4", 0]);
MGCAddTopic(["Example", "Example", 63, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["Understanding the Size Operation", "id68e5bde9-216f-4600-8048-378d653352e9", 64, "con-H3", 0]);
MGCAddTopic(["Simple Oversizing", "id50cd3589-dd0c-4620-8344-488cae4a7f7b", 64, "con-L1-FigureTitle", 0]);
MGCAddTopic(["Sizing by an Odd Number of Grid Units", "id231a585a-0f9d-4179-a13d-550430b44bce", 64, "con-L1-FigureTitle", 0]);
MGCAddTopic(["Truncating Spikes", "id65f0bd4a-0f16-4a6a-989e-8d718725da99", 64, "con-L1-FigureTitle", 0]);
MGCAddTopic(["id68e5bde9-216f-4600-8048-378d653352e9", "id68e5bde9-216f-4600-8048-378d653352e9", 64, "con-topic-H3", 0]);
MGCAddTopic(["id269ba8a3-d270-4e14-9557-f2f1be90901d", "id68e5bde9-216f-4600-8048-378d653352e9__id269ba8a3-d270-4e14-9557-f2f1be90901d", 64, "con-topic-H3", 0]);
MGCAddTopic(["id50cd3589-dd0c-4620-8344-488cae4a7f7b", "id68e5bde9-216f-4600-8048-378d653352e9__id50cd3589-dd0c-4620-8344-488cae4a7f7b", 64, "con-topic-H3", 0]);
MGCAddTopic(["id51c1243e-7fa6-445c-8378-1a3614a88a46", "id68e5bde9-216f-4600-8048-378d653352e9__id51c1243e-7fa6-445c-8378-1a3614a88a46", 64, "con-topic-H3", 0]);
MGCAddTopic(["id231a585a-0f9d-4179-a13d-550430b44bce", "id68e5bde9-216f-4600-8048-378d653352e9__id231a585a-0f9d-4179-a13d-550430b44bce", 64, "con-topic-H3", 0]);
MGCAddTopic(["ida15c6629-ea54-473c-b08a-8b526204e002", "id68e5bde9-216f-4600-8048-378d653352e9__ida15c6629-ea54-473c-b08a-8b526204e002", 64, "con-topic-H3", 0]);
MGCAddTopic(["id65f0bd4a-0f16-4a6a-989e-8d718725da99", "id68e5bde9-216f-4600-8048-378d653352e9__id65f0bd4a-0f16-4a6a-989e-8d718725da99", 64, "con-topic-H3", 0]);
MGCAddTopic(["Examples of Common Pre-Processing", "id1484477b-e3c5-46cf-8ac7-e262e16bd452", 65, "mgcsec-H2", 0]);
MGCAddTopic(["id1484477b-e3c5-46cf-8ac7-e262e16bd452", "id1484477b-e3c5-46cf-8ac7-e262e16bd452", 65, "ct-topic-H2", 0]);
MGCAddTopic(["Border-Aware Sizing", "id3069825b-cd72-409d-9fd5-45a434f00f23", 66, "con-H3NoSplit", 0]);
MGCAddTopic(["Simple Shrink", "id76aea477-ed03-4033-b13f-765b4bfc91f3", 66, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Border-Aware Shrink", "idee8a2434-d2e9-474c-936f-3208289b3346", 66, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id3069825b-cd72-409d-9fd5-45a434f00f23", "id3069825b-cd72-409d-9fd5-45a434f00f23", 66, "con-topic-H3", 0]);
MGCAddTopic(["id76aea477-ed03-4033-b13f-765b4bfc91f3", "id3069825b-cd72-409d-9fd5-45a434f00f23__id76aea477-ed03-4033-b13f-765b4bfc91f3", 66, "con-topic-H3", 0]);
MGCAddTopic(["idee8a2434-d2e9-474c-936f-3208289b3346", "id3069825b-cd72-409d-9fd5-45a434f00f23__idee8a2434-d2e9-474c-936f-3208289b3346", 66, "con-topic-H3", 0]);
MGCAddTopic(["Tone-Reversal", "idfbced863-389d-4769-8639-402c12535e9a", 67, "con-H3NoSplit", 0]);
MGCAddTopic(["idfbced863-389d-4769-8639-402c12535e9a", "idfbced863-389d-4769-8639-402c12535e9a", 67, "con-topic-H3", 0]);
MGCAddTopic(["FRACTURE Examples", "id295b95fb-fde3-4784-a674-150696bdae91", 68, "mgcsec-H1", 0]);
MGCAddTopic(["id295b95fb-fde3-4784-a674-150696bdae91", "id295b95fb-fde3-4784-a674-150696bdae91", 68, "", 0]);
MGCAddTopic(["MEBES Example Using Magnify and Rotate", "idbfaa0692-b60d-4631-a5a6-129af3602ebd", 69, "con-H2", 0]);
MGCAddTopic(["idbfaa0692-b60d-4631-a5a6-129af3602ebd", "idbfaa0692-b60d-4631-a5a6-129af3602ebd", 69, "con-topic-H2", 0]);
MGCAddTopic(["idc6aa13c6-6eec-4ef8-be0a-fc8006e6e3a1", "idbfaa0692-b60d-4631-a5a6-129af3602ebd__idc6aa13c6-6eec-4ef8-be0a-fc8006e6e3a1", 69, "con-topic-H2", 0]);
MGCAddTopic(["MEBES Output", "MEBES Output", 69, "con-z.Heading2", 0]);
MGCAddTopic(["JEOL Example", "idc7be5852-da55-4155-a033-a51cd40120db", 70, "con-H2", 0]);
MGCAddTopic(["idc7be5852-da55-4155-a033-a51cd40120db", "idc7be5852-da55-4155-a033-a51cd40120db", 70, "con-topic-H2", 0]);
MGCAddTopic(["VSB11 Example", "ida0d4fd06-e915-42c2-8b44-6125d70a1b01", 71, "con-H2", 0]);
MGCAddTopic(["Fractured Data", "id970f0cb0-c02e-498d-afa0-ffaf25be211f", 71, "con-L0-FigureTitle", 0]);
MGCAddTopic(["ida0d4fd06-e915-42c2-8b44-6125d70a1b01", "ida0d4fd06-e915-42c2-8b44-6125d70a1b01", 71, "con-topic-H2", 0]);
MGCAddTopic(["id0523493b-dccc-4d44-9ca1-66885ac02e17", "ida0d4fd06-e915-42c2-8b44-6125d70a1b01__id0523493b-dccc-4d44-9ca1-66885ac02e17", 71, "con-topic-H2", 0]);
MGCAddTopic(["id970f0cb0-c02e-498d-afa0-ffaf25be211f", "ida0d4fd06-e915-42c2-8b44-6125d70a1b01__id970f0cb0-c02e-498d-afa0-ffaf25be211f", 71, "con-topic-H2", 0]);
MGCAddTopic(["VSB11 Output", "VSB11 Output", 71, "con-z.Heading2", 0]);
MGCAddTopic(["HITACHI Example", "ida5572a8f-cca1-420d-be34-6808e895f8ca", 72, "con-H2", 0]);
MGCAddTopic(["ida5572a8f-cca1-420d-be34-6808e895f8ca", "ida5572a8f-cca1-420d-be34-6808e895f8ca", 72, "con-topic-H2", 0]);
MGCAddTopic(["Micronic Example", "ide63584bc-5dee-4fe9-9c5d-b1df7f429c16", 73, "con-H2", 0]);
MGCAddTopic(["ide63584bc-5dee-4fe9-9c5d-b1df7f429c16", "ide63584bc-5dee-4fe9-9c5d-b1df7f429c16", 73, "con-topic-H2", 0]);
MGCAddTopic(["OASISMASK Example", "id03e493fa-c00e-487f-9b6c-e23dc86c28a1", 74, "con-H2", 0]);
MGCAddTopic(["id03e493fa-c00e-487f-9b6c-e23dc86c28a1", "id03e493fa-c00e-487f-9b6c-e23dc86c28a1", 74, "con-topic-H2", 0]);
MGCAddTopic(["Calibre MDPverify", "id559b9e00-37ca-48a6-8441-0c896c998a04", 75, "mgcsec-H1", 0]);
MGCAddTopic(["id559b9e00-37ca-48a6-8441-0c896c998a04", "id559b9e00-37ca-48a6-8441-0c896c998a04", 75, "", 0]);
MGCAddTopic(["id3582e0b8-69dc-4d8f-bc59-17ab82de5a71", "id559b9e00-37ca-48a6-8441-0c896c998a04__id3582e0b8-69dc-4d8f-bc59-17ab82de5a71", 75, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["idd924677e-58b5-4eba-b01b-6e703fc9ad5a", "id559b9e00-37ca-48a6-8441-0c896c998a04__idd924677e-58b5-4eba-b01b-6e703fc9ad5a", 75, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["Calibre MDPverify Inputs", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8", 76, "ref-H2", 0]);
MGCAddTopic(["Inputs to Calibre MDPverify", "id6a8d9a74-d185-468f-93c4-a4e8f7a2e462", 76, "TableTitle", 0]);
MGCAddTopic(["idc639fa2f-0fb7-4dcf-8821-b7661e2677e8", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8", 76, "ref-topic-H2", 0]);
MGCAddTopic(["id70411ae8-ea3e-4230-8a43-41cb591799d1", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8__id70411ae8-ea3e-4230-8a43-41cb591799d1", 76, "ref-topic-H2", 0]);
MGCAddTopic(["id6a8d9a74-d185-468f-93c4-a4e8f7a2e462", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8__id6a8d9a74-d185-468f-93c4-a4e8f7a2e462", 76, "ref-topic-H2", 0]);
MGCAddTopic(["id593240a0-063a-40e2-b6e3-0f301b3e137b", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8__id593240a0-063a-40e2-b6e3-0f301b3e137b", 76, "tbl-B1", 0]);
MGCAddTopic(["id431057f7-319e-482f-8436-9a147d57e0c4", "idc639fa2f-0fb7-4dcf-8821-b7661e2677e8__id431057f7-319e-482f-8436-9a147d57e0c4", 76, "tbl-B1", 0]);
MGCAddTopic(["Calibre MDPverify Outputs", "id303fdbaa-d26e-4e74-82dd-47bc81dd1186", 77, "ref-H2", 0]);
MGCAddTopic(["id303fdbaa-d26e-4e74-82dd-47bc81dd1186", "id303fdbaa-d26e-4e74-82dd-47bc81dd1186", 77, "ref-topic-H2", 0]);
MGCAddTopic(["id2c46a4eb-b7d8-42a9-a8ad-da259cb93231", "id303fdbaa-d26e-4e74-82dd-47bc81dd1186__id2c46a4eb-b7d8-42a9-a8ad-da259cb93231", 77, "ref-topic-H2", 0]);
MGCAddTopic(["MDPVERIFY", "id7042d29f-be06-40c9-ad43-07c249c78d4f", 78, "cmd-H2", 0]);
MGCAddTopic(["SIZE Keyword Alternatives for Embedded SVRF", "idc0bd4327-6e3f-4c36-86ef-ddcd57664839", 78, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["id7042d29f-be06-40c9-ad43-07c249c78d4f", "id7042d29f-be06-40c9-ad43-07c249c78d4f", 78, "ct-topic-H3", 0]);
MGCAddTopic(["id3e66df99-1eaa-4233-b5a2-7fda1e72f5f6", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id3e66df99-1eaa-4233-b5a2-7fda1e72f5f6", 78, "cmd-arg", 0]);
MGCAddTopic(["id1a3b187b-856f-4f2f-9e9e-4acb28e006aa", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id1a3b187b-856f-4f2f-9e9e-4acb28e006aa", 78, "cmd-arg", 0]);
MGCAddTopic(["ida17ae024-2634-4285-965f-41baeec5bbc5", "id7042d29f-be06-40c9-ad43-07c249c78d4f__ida17ae024-2634-4285-965f-41baeec5bbc5", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idf5eaf99d-2d0f-4a77-8d1c-9b6480440afa", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idf5eaf99d-2d0f-4a77-8d1c-9b6480440afa", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idcd42e174-1914-4dd1-b480-3b5b85ddef9f", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idcd42e174-1914-4dd1-b480-3b5b85ddef9f", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb2a03cac-54af-4940-9e4c-cb9772b8e418", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idb2a03cac-54af-4940-9e4c-cb9772b8e418", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id30eb7d31-8238-4dee-b2d6-984f9452e42e", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id30eb7d31-8238-4dee-b2d6-984f9452e42e", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id1733aae9-c914-4ca1-9036-c4c6c034b9b6", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id1733aae9-c914-4ca1-9036-c4c6c034b9b6", 78, "cmd-arg", 0]);
MGCAddTopic(["id2025882d-0cfb-4fa6-9ec5-ccb038606005", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id2025882d-0cfb-4fa6-9ec5-ccb038606005", 78, "cmd-arg", 0]);
MGCAddTopic(["id4e1d8f2b-adca-4555-beb0-288c54fe7e1e", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4e1d8f2b-adca-4555-beb0-288c54fe7e1e", 78, "cmd-arg", 0]);
MGCAddTopic(["id03a0ff25-4b23-44cc-ad99-f0fb25d8bdc2", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id03a0ff25-4b23-44cc-ad99-f0fb25d8bdc2", 78, "cmd-arg", 0]);
MGCAddTopic(["id97be36fb-6405-47ed-b157-423299fee6e7", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id97be36fb-6405-47ed-b157-423299fee6e7", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id4c560ad4-c613-4ea7-b5a6-9d80b0a5b195", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4c560ad4-c613-4ea7-b5a6-9d80b0a5b195", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2df1fb67-b0ba-4a97-9a0b-c8eb6a552c38", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id2df1fb67-b0ba-4a97-9a0b-c8eb6a552c38", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id29a0b31e-9e00-43bd-a86f-e492749e4d22", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id29a0b31e-9e00-43bd-a86f-e492749e4d22", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2404ad59-ff80-4a4a-93f6-0e8335325146", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id2404ad59-ff80-4a4a-93f6-0e8335325146", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id379a2fad-aff3-49c4-89ca-1b36d2b15e1f", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id379a2fad-aff3-49c4-89ca-1b36d2b15e1f", 78, "cmd-arg", 0]);
MGCAddTopic(["id4aa0add7-43db-4909-9fff-1cc5aafa1ceb", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4aa0add7-43db-4909-9fff-1cc5aafa1ceb", 78, "cmd-arg", 0]);
MGCAddTopic(["id4abba7e6-867a-4337-9d0c-b9f536560adc", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4abba7e6-867a-4337-9d0c-b9f536560adc", 78, "cmd-arg", 0]);
MGCAddTopic(["ide1294055-3a51-4ebd-8ea1-02e61252762d", "id7042d29f-be06-40c9-ad43-07c249c78d4f__ide1294055-3a51-4ebd-8ea1-02e61252762d", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id9d8e7896-3f2e-4593-8f61-1b7b08112bc8", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id9d8e7896-3f2e-4593-8f61-1b7b08112bc8", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id93fb264b-0861-4f5d-8e3e-38ff0d017fe2", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id93fb264b-0861-4f5d-8e3e-38ff0d017fe2", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idc3b24fdd-845b-428a-b3a1-0a7e72fe07bc", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc3b24fdd-845b-428a-b3a1-0a7e72fe07bc", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id7b5ff0fc-11ee-44e7-99ee-42248439b292", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id7b5ff0fc-11ee-44e7-99ee-42248439b292", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6d4f1363-e26e-4967-bb25-3e7142862030", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id6d4f1363-e26e-4967-bb25-3e7142862030", 78, "cmd-arg", 0]);
MGCAddTopic(["id075ae334-c599-43fe-8087-dbb24114b91e", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id075ae334-c599-43fe-8087-dbb24114b91e", 78, "cmd-arg", 0]);
MGCAddTopic(["id779e919f-1f17-4fe2-94b3-9f52d45863e7", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id779e919f-1f17-4fe2-94b3-9f52d45863e7", 78, "cmd-argdesc", 0]);
MGCAddTopic(["id82161dc5-4131-46a3-a75a-752cb4aeb8be", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id82161dc5-4131-46a3-a75a-752cb4aeb8be", 78, "cmd-arg", 0]);
MGCAddTopic(["idbb9b7c13-233b-4ac0-8bd5-2feb8d4699ab", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idbb9b7c13-233b-4ac0-8bd5-2feb8d4699ab", 78, "cmd-arg", 0]);
MGCAddTopic(["id09184de3-6a67-4b5f-a5e2-29cc2aca6354", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id09184de3-6a67-4b5f-a5e2-29cc2aca6354", 78, "cmd-arg", 0]);
MGCAddTopic(["id5cdda674-1779-4e28-a07e-98b2f88c018c", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id5cdda674-1779-4e28-a07e-98b2f88c018c", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6c7808c1-9bab-492e-a669-9dce4d6f2f67", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id6c7808c1-9bab-492e-a669-9dce4d6f2f67", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id5e98fc34-dcd7-46bc-8e36-3c968325ec9e", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id5e98fc34-dcd7-46bc-8e36-3c968325ec9e", 78, "cmd-arg", 0]);
MGCAddTopic(["id7f71423e-871e-4ad6-a902-aa76873ca00d", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id7f71423e-871e-4ad6-a902-aa76873ca00d", 78, "cmd-arg", 0]);
MGCAddTopic(["id7f9a1ffc-3a8e-49d8-bdd5-c4a5f81af62d", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id7f9a1ffc-3a8e-49d8-bdd5-c4a5f81af62d", 78, "cmd-arg", 0]);
MGCAddTopic(["idca026890-a271-431d-9eb4-8535126e8ffe", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idca026890-a271-431d-9eb4-8535126e8ffe", 78, "cmd-argumentlist", 0]);
MGCAddTopic(["idc59ccd6e-ac09-4eb3-8bbf-782452d29a52", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc59ccd6e-ac09-4eb3-8bbf-782452d29a52", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id70fdbf0a-38d9-46cd-b952-c451e90850d4", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id70fdbf0a-38d9-46cd-b952-c451e90850d4", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0070fcff-9078-4447-bf98-ec003fa05e3a", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id0070fcff-9078-4447-bf98-ec003fa05e3a", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb5436ab2-6166-4a12-bea0-0d959e45ec97", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idb5436ab2-6166-4a12-bea0-0d959e45ec97", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id97674e8e-a593-4d63-a6d1-f0cc3a5ca972", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id97674e8e-a593-4d63-a6d1-f0cc3a5ca972", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id14bfab08-e5aa-4da4-9d0e-0351e329aae4", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id14bfab08-e5aa-4da4-9d0e-0351e329aae4", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idb30445fa-18a6-46da-84f2-2d6149c0dd4e", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idb30445fa-18a6-46da-84f2-2d6149c0dd4e", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["idc38ba7b1-4be6-4a2d-aa03-96ebddd18e05", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc38ba7b1-4be6-4a2d-aa03-96ebddd18e05", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id78a543fd-0820-43ee-83b3-16e3cbf3a150", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id78a543fd-0820-43ee-83b3-16e3cbf3a150", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["id3b818ce2-0f31-4e20-96e7-6b4297614ad8", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id3b818ce2-0f31-4e20-96e7-6b4297614ad8", 78, "cmd-arg-ul-3", 0]);
MGCAddTopic(["ide7fc5c44-88bc-4c9e-b94d-81abed439e14", "id7042d29f-be06-40c9-ad43-07c249c78d4f__ide7fc5c44-88bc-4c9e-b94d-81abed439e14", 78, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id4dcaa7ac-6bfc-4701-9ebe-10724850bb4f", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4dcaa7ac-6bfc-4701-9ebe-10724850bb4f", 78, "cmd-arg", 0]);
MGCAddTopic(["id389299aa-76d2-483c-ab30-5a0c46a48020", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id389299aa-76d2-483c-ab30-5a0c46a48020", 78, "cmd-arg-ol-2", 0]);
MGCAddTopic(["id31872fd8-5af9-436b-b972-c8901c589f0a", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id31872fd8-5af9-436b-b972-c8901c589f0a", 78, "cmd-arg-ol-2", 0]);
MGCAddTopic(["ide21c8ef1-6031-4938-8116-a8602836d8ca", "id7042d29f-be06-40c9-ad43-07c249c78d4f__ide21c8ef1-6031-4938-8116-a8602836d8ca", 78, "cmd-arg-ol-2", 0]);
MGCAddTopic(["id85160cfe-c553-43f1-81ae-23a449ab7c05", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id85160cfe-c553-43f1-81ae-23a449ab7c05", 78, "cmd-arg", 0]);
MGCAddTopic(["idc0bd4327-6e3f-4c36-86ef-ddcd57664839", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc0bd4327-6e3f-4c36-86ef-ddcd57664839", 78, "cmd-argdesc", 0]);
MGCAddTopic(["id87c2f114-abb5-411b-a45b-9812a2218671", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id87c2f114-abb5-411b-a45b-9812a2218671", 78, "cmd-arg", 0]);
MGCAddTopic(["id221a2cfe-4e0a-42ee-964a-439398230694", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id221a2cfe-4e0a-42ee-964a-439398230694", 78, "cmd-argumentlist", 0]);
MGCAddTopic(["id2f5958aa-fb9b-4902-beb8-91b9cdf68a55", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id2f5958aa-fb9b-4902-beb8-91b9cdf68a55", 78, "cmd-arg", 0]);
MGCAddTopic(["id30e31c3a-6546-4afe-82c0-fbfe6b76b0a7", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id30e31c3a-6546-4afe-82c0-fbfe6b76b0a7", 78, "cmd-arg", 0]);
MGCAddTopic(["idbfc50645-0ebf-4ef0-a5f4-d870eb281c14", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idbfc50645-0ebf-4ef0-a5f4-d870eb281c14", 78, "cmd-arg", 0]);
MGCAddTopic(["id7d4cec35-c901-4a76-a74b-b6a9cc1980fb", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id7d4cec35-c901-4a76-a74b-b6a9cc1980fb", 78, "cmd-arg", 0]);
MGCAddTopic(["idb0916b6a-7694-49d0-8b4d-12fd89171e19", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idb0916b6a-7694-49d0-8b4d-12fd89171e19", 78, "cmd-arg", 0]);
MGCAddTopic(["id4d71864f-1211-4e7d-a242-dce021587633", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id4d71864f-1211-4e7d-a242-dce021587633", 78, "cmd-arg", 0]);
MGCAddTopic(["id174dc87e-ddde-46e5-837b-239d9506d917", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id174dc87e-ddde-46e5-837b-239d9506d917", 78, "cmd-arg", 0]);
MGCAddTopic(["id59b4c092-e35d-4f11-81c4-3d2b870f891b", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id59b4c092-e35d-4f11-81c4-3d2b870f891b", 78, "cmd-arg", 0]);
MGCAddTopic(["id8ac278a2-fa11-4e58-b8fe-c2d8ef32d73f", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id8ac278a2-fa11-4e58-b8fe-c2d8ef32d73f", 78, "cmd-arg", 0]);
MGCAddTopic(["idcef98cda-419b-44b0-b3cb-0d9cb04d95ad", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idcef98cda-419b-44b0-b3cb-0d9cb04d95ad", 78, "cmd-arg", 0]);
MGCAddTopic(["id7f071832-ed52-4bb9-b484-d1513b380d27", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id7f071832-ed52-4bb9-b484-d1513b380d27", 78, "cmd-arg", 0]);
MGCAddTopic(["idca88d406-71dc-408a-b712-57ec9affe7e5", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idca88d406-71dc-408a-b712-57ec9affe7e5", 78, "cmd-arg", 0]);
MGCAddTopic(["id5ed17a66-c4e0-4809-8a29-d963480af8e4", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id5ed17a66-c4e0-4809-8a29-d963480af8e4", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf6ee9ec5-9db7-402c-b818-7698fe6aa9e8", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idf6ee9ec5-9db7-402c-b818-7698fe6aa9e8", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id020abc13-8130-44f1-a1b7-bf57670b7068", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id020abc13-8130-44f1-a1b7-bf57670b7068", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id11d9b317-1358-4762-abbc-957528ff7585", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id11d9b317-1358-4762-abbc-957528ff7585", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idbab3051d-39d9-451a-92ea-28ff7d1fa90a", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idbab3051d-39d9-451a-92ea-28ff7d1fa90a", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5388353f-88d0-4210-87cd-ddb41e495a36", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id5388353f-88d0-4210-87cd-ddb41e495a36", 78, "cmd-arg", 0]);
MGCAddTopic(["idf716fc54-c92c-491a-b25d-06983c321be1", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idf716fc54-c92c-491a-b25d-06983c321be1", 78, "cmd-arg", 0]);
MGCAddTopic(["idbfc40db2-2174-4d18-84d0-a629a0f5933b", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idbfc40db2-2174-4d18-84d0-a629a0f5933b", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3d479449-8cf4-4b03-a32a-986c9b65fc84", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id3d479449-8cf4-4b03-a32a-986c9b65fc84", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc9376df3-39da-4f92-bee3-d9aa96600d24", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc9376df3-39da-4f92-bee3-d9aa96600d24", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id89b746f8-2e37-48a9-bfa5-867433e99077", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id89b746f8-2e37-48a9-bfa5-867433e99077", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd2470db0-5eb0-467a-a3d1-d103a3cf1853", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idd2470db0-5eb0-467a-a3d1-d103a3cf1853", 78, "cmd-arg", 0]);
MGCAddTopic(["ide67e4c60-09c0-41f7-8404-025961724199", "id7042d29f-be06-40c9-ad43-07c249c78d4f__ide67e4c60-09c0-41f7-8404-025961724199", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3f2771a5-4d18-480a-bc98-574d1d7179d6", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id3f2771a5-4d18-480a-bc98-574d1d7179d6", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id495f13c8-99b8-4ae9-b74d-21fb5f0e19f6", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id495f13c8-99b8-4ae9-b74d-21fb5f0e19f6", 78, "cmd-argumentlist", 0]);
MGCAddTopic(["id8c83c761-b393-45be-b4b8-546d156076b3", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id8c83c761-b393-45be-b4b8-546d156076b3", 78, "cmd-argumentlist", 0]);
MGCAddTopic(["id0d61afc9-fb70-48ae-8db7-7363f17f6617", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id0d61afc9-fb70-48ae-8db7-7363f17f6617", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["id1e1cbb6e-741c-426e-a05c-6f319b3562ef", "id7042d29f-be06-40c9-ad43-07c249c78d4f__id1e1cbb6e-741c-426e-a05c-6f319b3562ef", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc858b8b6-519a-453a-9868-c74a2b2044ae", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idc858b8b6-519a-453a-9868-c74a2b2044ae", 78, "cmd-argopt-B1", 0]);
MGCAddTopic(["idfeaa15bf-3d32-44fe-94a8-413cd53b254c", "id7042d29f-be06-40c9-ad43-07c249c78d4f__idfeaa15bf-3d32-44fe-94a8-413cd53b254c", 78, "cmd-arg", 0]);
MGCAddTopic(["Region and Shift Default Computation", "id44717ee8-3dd8-44db-b08c-dca383ceeba3", 79, "con-H2", 0]);
MGCAddTopic(["id44717ee8-3dd8-44db-b08c-dca383ceeba3", "id44717ee8-3dd8-44db-b08c-dca383ceeba3", 79, "con-topic-H2", 0]);
MGCAddTopic(["id0bc683a2-1aa7-4af6-9b91-89cb1bf1386c", "id44717ee8-3dd8-44db-b08c-dca383ceeba3__id0bc683a2-1aa7-4af6-9b91-89cb1bf1386c", 79, "con-topic-H2", 0]);
MGCAddTopic(["idb6099ec8-af83-4a5c-af54-b2f05a5291cd", "id44717ee8-3dd8-44db-b08c-dca383ceeba3__idb6099ec8-af83-4a5c-af54-b2f05a5291cd", 79, "con-topic-H2", 0]);
MGCAddTopic(["Data Transformation", "idf60b143b-040b-49f3-b0db-c41b251ed214", 80, "mgcsec-H2", 0]);
MGCAddTopic(["Effect of Transformation in FRACTURE and MDPVERIFY", "idd711605e-be11-4006-b8c4-f2894a0cb6c2", 80, "TableTitle", 0]);
MGCAddTopic(["idf60b143b-040b-49f3-b0db-c41b251ed214", "idf60b143b-040b-49f3-b0db-c41b251ed214", 80, "ct-topic-H2", 0]);
MGCAddTopic(["idd711605e-be11-4006-b8c4-f2894a0cb6c2", "idf60b143b-040b-49f3-b0db-c41b251ed214__idd711605e-be11-4006-b8c4-f2894a0cb6c2", 80, "ct-topic-H2", 0]);
MGCAddTopic(["idd6ac106e-f3f0-46fd-a29d-1c38babeae62", "idf60b143b-040b-49f3-b0db-c41b251ed214__idd6ac106e-f3f0-46fd-a29d-1c38babeae62", 80, "ct-topic-H2", 0]);
MGCAddTopic(["id5520c740-0bc7-4549-a1ec-0c4f80372375", "idf60b143b-040b-49f3-b0db-c41b251ed214__id5520c740-0bc7-4549-a1ec-0c4f80372375", 80, "ct-topic-H2", 0]);
MGCAddTopic(["id880b8913-46dd-4d3b-b18c-e402aa6dd158", "idf60b143b-040b-49f3-b0db-c41b251ed214__id880b8913-46dd-4d3b-b18c-e402aa6dd158", 80, "ct-topic-H2", 0]);
MGCAddTopic(["id99fe9119-c0fb-4084-bdd8-fb9edc1f0071", "idf60b143b-040b-49f3-b0db-c41b251ed214__id99fe9119-c0fb-4084-bdd8-fb9edc1f0071", 80, "ct-topic-H2", 0]);
MGCAddTopic(["ida0f226b1-22de-46e8-a035-e73cddec230b", "idf60b143b-040b-49f3-b0db-c41b251ed214__ida0f226b1-22de-46e8-a035-e73cddec230b", 80, "ct-topic-H2", 0]);
MGCAddTopic(["id320bb571-61e4-4eec-9e76-1e7cbe151bb7", "idf60b143b-040b-49f3-b0db-c41b251ed214__id320bb571-61e4-4eec-9e76-1e7cbe151bb7", 80, "ct-topic-H2", 0]);
MGCAddTopic(["idcfaa82eb-35f1-490d-8d06-7f1a2f7e3c84", "idf60b143b-040b-49f3-b0db-c41b251ed214__idcfaa82eb-35f1-490d-8d06-7f1a2f7e3c84", 80, "ct-topic-H2", 0]);
MGCAddTopic(["idd2ca875f-6ba8-4b90-a7cc-29709091e7df", "idf60b143b-040b-49f3-b0db-c41b251ed214__idd2ca875f-6ba8-4b90-a7cc-29709091e7df", 80, "ct-topic-H2", 0]);
MGCAddTopic(["Compare Fractured Data to the Layout Database", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089", 81, "con-H3", 0]);
MGCAddTopic(["Comparing Fractured Data to the Layout Database", "ideee6ee58-21db-458e-a136-979d55435636", 81, "con-L1-FigureTitle", 0]);
MGCAddTopic(["id92c67cee-9bdb-4062-89dd-dbc9ffa50089", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089", 81, "con-topic-H3", 0]);
MGCAddTopic(["id02942697-82e3-4506-8511-5face827ecce", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089__id02942697-82e3-4506-8511-5face827ecce", 81, "con-topic-H3", 0]);
MGCAddTopic(["id24dcd0cb-dabc-4b0a-8e3e-e177b627f37c", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089__id24dcd0cb-dabc-4b0a-8e3e-e177b627f37c", 81, "con-topic-H3", 0]);
MGCAddTopic(["id77c25b1f-0c11-4cf3-b3a5-e4618e951819", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089__id77c25b1f-0c11-4cf3-b3a5-e4618e951819", 81, "con-topic-H3", 0]);
MGCAddTopic(["id868ad141-59d6-40f1-a1b4-9d29bf2ed428", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089__id868ad141-59d6-40f1-a1b4-9d29bf2ed428", 81, "con-topic-H3", 0]);
MGCAddTopic(["ideee6ee58-21db-458e-a136-979d55435636", "id92c67cee-9bdb-4062-89dd-dbc9ffa50089__ideee6ee58-21db-458e-a136-979d55435636", 81, "con-topic-H3", 0]);
MGCAddTopic(["Compare Fractured Data to Fractured Data", "ideb896738-9dad-4632-bafe-397db10ad6b1", 82, "con-H3", 0]);
MGCAddTopic(["Fracture Transformations for Two Sets of Data", "id4d0d492f-d4af-42e5-b7df-569d64a23507", 82, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Calibre MDPverify Transformations for Two Sets of Data", "idc5c4979c-26bb-450b-bb0a-cc4093917720", 82, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Transforming Only One Set of Fractured Data", "id309736fb-9568-41aa-9b2b-25558d5c8b22", 82, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Comparing Two Databases With the Same Extent", "id8d266d70-216b-492e-91b2-81488aca610d", 82, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Comparing Two Databases With Different Extents", "idc203df10-0aed-48c2-9928-011194551d36", 82, "con-L0-FigureTitle", 0]);
MGCAddTopic(["ideb896738-9dad-4632-bafe-397db10ad6b1", "ideb896738-9dad-4632-bafe-397db10ad6b1", 82, "con-topic-H3", 0]);
MGCAddTopic(["id4d0d492f-d4af-42e5-b7df-569d64a23507", "ideb896738-9dad-4632-bafe-397db10ad6b1__id4d0d492f-d4af-42e5-b7df-569d64a23507", 82, "con-topic-H3", 0]);
MGCAddTopic(["idc5c4979c-26bb-450b-bb0a-cc4093917720", "ideb896738-9dad-4632-bafe-397db10ad6b1__idc5c4979c-26bb-450b-bb0a-cc4093917720", 82, "con-topic-H3", 0]);
MGCAddTopic(["id309736fb-9568-41aa-9b2b-25558d5c8b22", "ideb896738-9dad-4632-bafe-397db10ad6b1__id309736fb-9568-41aa-9b2b-25558d5c8b22", 82, "con-topic-H3", 0]);
MGCAddTopic(["id6d5f2f94-b7c2-4a19-8e04-4fffe2f5ec36", "ideb896738-9dad-4632-bafe-397db10ad6b1__id6d5f2f94-b7c2-4a19-8e04-4fffe2f5ec36", 82, "con-topic-H3", 0]);
MGCAddTopic(["id8d266d70-216b-492e-91b2-81488aca610d", "ideb896738-9dad-4632-bafe-397db10ad6b1__id8d266d70-216b-492e-91b2-81488aca610d", 82, "con-topic-H3", 0]);
MGCAddTopic(["idc203df10-0aed-48c2-9928-011194551d36", "ideb896738-9dad-4632-bafe-397db10ad6b1__idc203df10-0aed-48c2-9928-011194551d36", 82, "con-topic-H3", 0]);
MGCAddTopic(["Example 1: Comparing Two Databases With the Same Extent", "Example 1: Comparing Two Databases With the Same Extent", 82, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["Example 2: Comparing Two Databases With Different Extents", "Example 2: Comparing Two Databases With Different Extents", 82, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["Comparing Two VSB Job Decks", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272", 83, "con-H3", 0]);
MGCAddTopic(["INSIDE OF Regions Comparing VSB Job Decks", "id80b41974-d7a9-4924-b4a3-4c8feb7b2cf6", 83, "con-L0-FigureTitle", 0]);
MGCAddTopic(["idf8641ba3-0acd-4a70-8087-b3ec4ba58272", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272", 83, "con-topic-H3", 0]);
MGCAddTopic(["id304a3397-edd7-4fae-b4b3-34535578d860", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272__id304a3397-edd7-4fae-b4b3-34535578d860", 83, "con-topic-H3", 0]);
MGCAddTopic(["idab9a0841-fc62-4a76-9514-25d1336d7af4", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272__idab9a0841-fc62-4a76-9514-25d1336d7af4", 83, "con-topic-H3", 0]);
MGCAddTopic(["id6b923277-8091-4592-a292-ec12d22ebf52", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272__id6b923277-8091-4592-a292-ec12d22ebf52", 83, "con-topic-H3", 0]);
MGCAddTopic(["id021f3d41-bbfd-4710-acc7-f3bd4a79fdf9", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272__id021f3d41-bbfd-4710-acc7-f3bd4a79fdf9", 83, "con-topic-H3", 0]);
MGCAddTopic(["id80b41974-d7a9-4924-b4a3-4c8feb7b2cf6", "idf8641ba3-0acd-4a70-8087-b3ec4ba58272__id80b41974-d7a9-4924-b4a3-4c8feb7b2cf6", 83, "con-topic-H3", 0]);
MGCAddTopic(["Using Proper Shift Values", "id19ef9a73-53fb-417d-ac4e-396f5e4ee355", 84, "mgcsec-H3", 0]);
MGCAddTopic(["id19ef9a73-53fb-417d-ac4e-396f5e4ee355", "id19ef9a73-53fb-417d-ac4e-396f5e4ee355", 84, "ct-topic-H3", 0]);
MGCAddTopic(["Automatic Shift Alignment", "idee4e3501-3882-4823-b203-6e7bbefc0df0", 85, "con-H4", 0]);
MGCAddTopic(["Default Shifting with One File", "ided9eccad-e7f4-4350-9246-480b453f71a0", 85, "con-L0-FigureTitle", 0]);
MGCAddTopic(["idee4e3501-3882-4823-b203-6e7bbefc0df0", "idee4e3501-3882-4823-b203-6e7bbefc0df0", 85, "con-topic-H4", 0]);
MGCAddTopic(["idcd4e95e2-2699-4ce2-847d-21c2cdd79cf7", "idee4e3501-3882-4823-b203-6e7bbefc0df0__idcd4e95e2-2699-4ce2-847d-21c2cdd79cf7", 85, "con-topic-H4", 0]);
MGCAddTopic(["id7a806065-3d33-42d1-9ace-fa865f365b03", "idee4e3501-3882-4823-b203-6e7bbefc0df0__id7a806065-3d33-42d1-9ace-fa865f365b03", 85, "con-topic-H4", 0]);
MGCAddTopic(["id9a6d0461-f064-4b39-ad23-e3ee5721e250", "idee4e3501-3882-4823-b203-6e7bbefc0df0__id9a6d0461-f064-4b39-ad23-e3ee5721e250", 85, "con-topic-H4", 0]);
MGCAddTopic(["ided9eccad-e7f4-4350-9246-480b453f71a0", "idee4e3501-3882-4823-b203-6e7bbefc0df0__ided9eccad-e7f4-4350-9246-480b453f71a0", 85, "con-topic-H4", 0]);
MGCAddTopic(["Automatic Shift with One External File", "Automatic Shift with One External File", 85, "con-HConceptBodyCustom", 0]);
MGCAddTopic(["Manual Shift Alignment", "id54039438-5d01-4996-98f8-a1814eebd85a", 86, "con-H4", 0]);
MGCAddTopic(["Calculating Shift Values", "id44b12337-266c-431b-9f81-5b9d9cff73fa", 86, "con-L1-FigureTitle", 0]);
MGCAddTopic(["id54039438-5d01-4996-98f8-a1814eebd85a", "id54039438-5d01-4996-98f8-a1814eebd85a", 86, "con-topic-H4", 0]);
MGCAddTopic(["idb09cb999-58d3-48f6-9184-9bfcbe068e97", "id54039438-5d01-4996-98f8-a1814eebd85a__idb09cb999-58d3-48f6-9184-9bfcbe068e97", 86, "con-topic-H4", 0]);
MGCAddTopic(["idf53a4413-af9c-40d6-889b-10d7ee3af75a", "id54039438-5d01-4996-98f8-a1814eebd85a__idf53a4413-af9c-40d6-889b-10d7ee3af75a", 86, "con-topic-H4", 0]);
MGCAddTopic(["id2d04fdee-f9a7-4e6e-9f8b-9bba92ad77fa", "id54039438-5d01-4996-98f8-a1814eebd85a__id2d04fdee-f9a7-4e6e-9f8b-9bba92ad77fa", 86, "con-topic-H4", 0]);
MGCAddTopic(["idadd02f0e-7a5b-4991-82cb-4b81fe89f81b", "id54039438-5d01-4996-98f8-a1814eebd85a__idadd02f0e-7a5b-4991-82cb-4b81fe89f81b", 86, "con-topic-H4", 0]);
MGCAddTopic(["id86f2cbfa-9e97-4158-9a4e-09643b902417", "id54039438-5d01-4996-98f8-a1814eebd85a__id86f2cbfa-9e97-4158-9a4e-09643b902417", 86, "con-topic-H4", 0]);
MGCAddTopic(["id337feed7-123a-4453-88e7-fa8413c855f4", "id54039438-5d01-4996-98f8-a1814eebd85a__id337feed7-123a-4453-88e7-fa8413c855f4", 86, "con-topic-H4", 0]);
MGCAddTopic(["id44b12337-266c-431b-9f81-5b9d9cff73fa", "id54039438-5d01-4996-98f8-a1814eebd85a__id44b12337-266c-431b-9f81-5b9d9cff73fa", 86, "con-topic-H4", 0]);
MGCAddTopic(["Avoiding Problems With Shifting", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8", 87, "con-H3", 0]);
MGCAddTopic(["Verification Region Not Aligned With Original Data", "id1023eadd-1b8f-4f7b-9c1d-4241d20aace7", 87, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Aligning Fractured Data With Original Data", "idf361d1be-c448-42fa-9dd0-25f6bf70fee0", 87, "con-L0-FigureTitle", 0]);
MGCAddTopic(["idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8", 87, "con-topic-H3", 0]);
MGCAddTopic(["id8044eaf1-3910-41df-a4de-6b52e181b46a", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8__id8044eaf1-3910-41df-a4de-6b52e181b46a", 87, "con-topic-H3", 0]);
MGCAddTopic(["ide6a24593-1db5-4177-902b-667738a565a6", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8__ide6a24593-1db5-4177-902b-667738a565a6", 87, "con-topic-H3", 0]);
MGCAddTopic(["id1023eadd-1b8f-4f7b-9c1d-4241d20aace7", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8__id1023eadd-1b8f-4f7b-9c1d-4241d20aace7", 87, "con-topic-H3", 0]);
MGCAddTopic(["idf361d1be-c448-42fa-9dd0-25f6bf70fee0", "idc08cbcfd-a6ff-495d-a7b7-1a598d6649e8__idf361d1be-c448-42fa-9dd0-25f6bf70fee0", 87, "con-topic-H3", 0]);
MGCAddTopic(["Define the Verification Region", "idbec864b4-98a7-41c3-b4d7-000110b137bf", 88, "con-H3", 0]);
MGCAddTopic(["idbec864b4-98a7-41c3-b4d7-000110b137bf", "idbec864b4-98a7-41c3-b4d7-000110b137bf", 88, "con-topic-H3", 0]);
MGCAddTopic(["Examples", "id1c1547e7-d1a6-45fb-ac80-f663f3a42346", 89, "mgcsec-H2", 0]);
MGCAddTopic(["id1c1547e7-d1a6-45fb-ac80-f663f3a42346", "id1c1547e7-d1a6-45fb-ac80-f663f3a42346", 89, "ct-topic-H2", 0]);
MGCAddTopic(["Example 1  MEBES to an Internal Calibre Layer", "id3f9b73c2-fdcc-4748-9cd4-21b9ce46599b", 90, "con-H3NoSplit", 0]);
MGCAddTopic(["id3f9b73c2-fdcc-4748-9cd4-21b9ce46599b", "id3f9b73c2-fdcc-4748-9cd4-21b9ce46599b", 90, "con-topic-H3", 0]);
MGCAddTopic(["Example 2  MEBES to MEBES", "id53e3afae-b805-4e7d-a7e4-ab1b8b7c98e5", 91, "con-H3NoSplit", 0]);
MGCAddTopic(["id53e3afae-b805-4e7d-a7e4-ab1b8b7c98e5", "id53e3afae-b805-4e7d-a7e4-ab1b8b7c98e5", 91, "con-topic-H3", 0]);
MGCAddTopic(["Example 3  MEBES to JEOL", "id8382e4ae-b733-46e4-b385-1e5e31abef5e", 92, "con-H3NoSplit", 0]);
MGCAddTopic(["id8382e4ae-b733-46e4-b385-1e5e31abef5e", "id8382e4ae-b733-46e4-b385-1e5e31abef5e", 92, "con-topic-H3", 0]);
MGCAddTopic(["Calibre MDPmerge", "id19980b39-6ea8-4364-b35b-ee3ababa58e6", 93, "mgcsec-H1", 0]);
MGCAddTopic(["id19980b39-6ea8-4364-b35b-ee3ababa58e6", "id19980b39-6ea8-4364-b35b-ee3ababa58e6", 93, "", 0]);
MGCAddTopic(["id1ace0966-de43-4c94-b3db-90f86e612a05", "id19980b39-6ea8-4364-b35b-ee3ababa58e6__id1ace0966-de43-4c94-b3db-90f86e612a05", 93, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["id0b331be4-43be-4ed8-bfa8-384723db2d74", "id19980b39-6ea8-4364-b35b-ee3ababa58e6__id0b331be4-43be-4ed8-bfa8-384723db2d74", 93, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["ide7f291ea-7c2a-4dc8-b1ff-19e489468a7b", "id19980b39-6ea8-4364-b35b-ee3ababa58e6__ide7f291ea-7c2a-4dc8-b1ff-19e489468a7b", 93, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["Multithreaded Operations", "idf3fa5be0-d2b2-473d-a748-9a65aeb1327f", 94, "con-H2", 0]);
MGCAddTopic(["idf3fa5be0-d2b2-473d-a748-9a65aeb1327f", "idf3fa5be0-d2b2-473d-a748-9a65aeb1327f", 94, "con-topic-H2", 0]);
MGCAddTopic(["Calibre MDPmerge Limitations", "id4dc1d097-4634-42d6-940b-509571568b06", 95, "con-H2", 0]);
MGCAddTopic(["id4dc1d097-4634-42d6-940b-509571568b06", "id4dc1d097-4634-42d6-940b-509571568b06", 95, "con-topic-H2", 0]);
MGCAddTopic(["idadeb0498-3ff7-4176-83a8-5e71339f2a3c", "id4dc1d097-4634-42d6-940b-509571568b06__idadeb0498-3ff7-4176-83a8-5e71339f2a3c", 95, "con-topic-H2", 0]);
MGCAddTopic(["id619e0c4a-8e06-4469-87a9-bd42e31c24dc", "id4dc1d097-4634-42d6-940b-509571568b06__id619e0c4a-8e06-4469-87a9-bd42e31c24dc", 95, "con-topic-H2", 0]);
MGCAddTopic(["idce97be0c-4e5d-4fa7-ac52-c9723f686a96", "id4dc1d097-4634-42d6-940b-509571568b06__idce97be0c-4e5d-4fa7-ac52-c9723f686a96", 95, "con-topic-H2", 0]);
MGCAddTopic(["Supported Job Deck Values", "id0b72143c-d5b1-425c-8905-cee3324bb755", 96, "con-H2", 0]);
MGCAddTopic(["id0b72143c-d5b1-425c-8905-cee3324bb755", "id0b72143c-d5b1-425c-8905-cee3324bb755", 96, "con-topic-H2", 0]);
MGCAddTopic(["MDPMERGE", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3", 97, "cmd-H2", 0]);
MGCAddTopic(["Calibre MDPmerge Example", "idc8f70ba8-7b45-48d3-af61-f937cf486eb4", 97, "cmd-examples-L0-FigureTitle", 0]);
MGCAddTopic(["id60b425f0-79f8-4434-afa4-ff8d9f280cf3", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3", 97, "ct-topic-H3", 0]);
MGCAddTopic(["ide0dd2f89-bb9e-4c91-b5d6-61fd8a4fdfa6", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__ide0dd2f89-bb9e-4c91-b5d6-61fd8a4fdfa6", 97, "cmd-arg", 0]);
MGCAddTopic(["id006e392f-22b2-4fc1-9ac7-e519e9efddd3", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id006e392f-22b2-4fc1-9ac7-e519e9efddd3", 97, "cmd-arg", 0]);
MGCAddTopic(["id9455ff51-c701-4d3b-b949-ed8aa3952702", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id9455ff51-c701-4d3b-b949-ed8aa3952702", 97, "cmd-arg", 0]);
MGCAddTopic(["iddac3fa2a-162b-407c-b856-ff7b8b5eecdb", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__iddac3fa2a-162b-407c-b856-ff7b8b5eecdb", 97, "cmd-arg-ul-2", 0]);
MGCAddTopic(["idd031cbac-8fef-4279-a221-5464e4b8371c", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idd031cbac-8fef-4279-a221-5464e4b8371c", 97, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id37484847-0a7e-49c9-998e-972f95fdd62e", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id37484847-0a7e-49c9-998e-972f95fdd62e", 97, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida3fc549e-ec50-4c96-bbe8-ae33b3503f97", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__ida3fc549e-ec50-4c96-bbe8-ae33b3503f97", 97, "cmd-arg", 0]);
MGCAddTopic(["idba099f5e-8f7b-4229-b694-cc1fcbc3d1df", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idba099f5e-8f7b-4229-b694-cc1fcbc3d1df", 97, "cmd-arg", 0]);
MGCAddTopic(["id322aef02-4ef1-4e17-aa10-2e4bef509b3b", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id322aef02-4ef1-4e17-aa10-2e4bef509b3b", 97, "cmd-arg", 0]);
MGCAddTopic(["idea3ac6ba-b296-4c10-973d-e25c495d2c27", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idea3ac6ba-b296-4c10-973d-e25c495d2c27", 97, "cmd-arg", 0]);
MGCAddTopic(["id5993c83c-2f4c-49ba-be1f-e61dc0602114", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id5993c83c-2f4c-49ba-be1f-e61dc0602114", 97, "cmd-arg", 0]);
MGCAddTopic(["id1d44d011-ccc8-44dc-a466-12199fef6d01", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id1d44d011-ccc8-44dc-a466-12199fef6d01", 97, "cmd-arg", 0]);
MGCAddTopic(["id6e550213-8f17-4824-9414-a22054156651", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__id6e550213-8f17-4824-9414-a22054156651", 97, "cmd-arg", 0]);
MGCAddTopic(["idce4e4898-ad23-49f7-a8d0-b6d97687bbc9", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idce4e4898-ad23-49f7-a8d0-b6d97687bbc9", 97, "cmd-arg", 0]);
MGCAddTopic(["ida9d6df61-5f06-4e13-8f6a-af6177aed640", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__ida9d6df61-5f06-4e13-8f6a-af6177aed640", 97, "cmd-arg", 0]);
MGCAddTopic(["ide360766f-d612-4d01-91ba-68757b0cce12", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__ide360766f-d612-4d01-91ba-68757b0cce12", 97, "cmd-arg", 0]);
MGCAddTopic(["iddb096b07-05f2-41ef-9495-73b81e474fcb", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__iddb096b07-05f2-41ef-9495-73b81e474fcb", 97, "cmd-arg", 0]);
MGCAddTopic(["idda315e7b-07ff-44b6-9ccb-2f1cf49e6f2d", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idda315e7b-07ff-44b6-9ccb-2f1cf49e6f2d", 97, "cmd-arg", 0]);
MGCAddTopic(["idc8f70ba8-7b45-48d3-af61-f937cf486eb4", "id60b425f0-79f8-4434-afa4-ff8d9f280cf3__idc8f70ba8-7b45-48d3-af61-f937cf486eb4", 97, "ct-topic-H3", 0]);
MGCAddTopic(["View the Calibre MDPmerge Results", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d", 98, "ref-H2", 0]);
MGCAddTopic(["ida7878dab-bf49-4c34-af52-1a7bf17ada4d", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d", 98, "ref-topic-H2", 0]);
MGCAddTopic(["id46724c0b-f774-4dec-838e-50aea06d1c1a", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id46724c0b-f774-4dec-838e-50aea06d1c1a", 98, "ref-topic-H2", 0]);
MGCAddTopic(["idaa717945-5e0c-4236-9ddf-4d487b40bcbe", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idaa717945-5e0c-4236-9ddf-4d487b40bcbe", 98, "ref-topic-H2", 0]);
MGCAddTopic(["idc0ee6619-a43a-4327-a02c-edec066d5bd5", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idc0ee6619-a43a-4327-a02c-edec066d5bd5", 98, "tbl-B1", 0]);
MGCAddTopic(["id10fc0657-99be-48a0-b5db-d7ee8f419614", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id10fc0657-99be-48a0-b5db-d7ee8f419614", 98, "tbl-B1", 0]);
MGCAddTopic(["id81ab011f-81e9-47cf-b187-1a523a79fdd5", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id81ab011f-81e9-47cf-b187-1a523a79fdd5", 98, "tbl-B1", 0]);
MGCAddTopic(["id613f06b6-fdd2-45c8-aff1-e407aa18dcee", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id613f06b6-fdd2-45c8-aff1-e407aa18dcee", 98, "tbl-B1", 0]);
MGCAddTopic(["id419c61da-d416-4826-b092-6deefcba035e", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id419c61da-d416-4826-b092-6deefcba035e", 98, "tbl-B1", 0]);
MGCAddTopic(["idbe0d3e35-6bbd-45b0-821e-ac892d3ff14f", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idbe0d3e35-6bbd-45b0-821e-ac892d3ff14f", 98, "tbl-B1", 0]);
MGCAddTopic(["id56390839-b340-4d80-b3a3-71c57cc1823a", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id56390839-b340-4d80-b3a3-71c57cc1823a", 98, "tbl-B1", 0]);
MGCAddTopic(["idc2b842aa-e79e-4dcb-a1b7-337740ed5bd4", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idc2b842aa-e79e-4dcb-a1b7-337740ed5bd4", 98, "tbl-B1", 0]);
MGCAddTopic(["idbdc28f30-f021-41c3-a801-dfe3760309ab", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idbdc28f30-f021-41c3-a801-dfe3760309ab", 98, "tbl-B1", 0]);
MGCAddTopic(["id6beffae6-416d-4838-b1b3-7078f9311f8e", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id6beffae6-416d-4838-b1b3-7078f9311f8e", 98, "tbl-B1", 0]);
MGCAddTopic(["id09cca72a-db71-4846-b02a-d8b4dbdc2db5", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id09cca72a-db71-4846-b02a-d8b4dbdc2db5", 98, "tbl-B1", 0]);
MGCAddTopic(["idc4f7e61d-e597-4c89-b629-2ec57ec3ba4e", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idc4f7e61d-e597-4c89-b629-2ec57ec3ba4e", 98, "tbl-B1", 0]);
MGCAddTopic(["idbc4603e1-18be-4848-ab9b-9024a1c34662", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idbc4603e1-18be-4848-ab9b-9024a1c34662", 98, "ref-topic-H2", 0]);
MGCAddTopic(["id876c477f-8707-41df-b266-2f42700307cb", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id876c477f-8707-41df-b266-2f42700307cb", 98, "ref-topic-H2", 0]);
MGCAddTopic(["idc413efc3-75ce-41a8-ba0e-183e741ff334", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idc413efc3-75ce-41a8-ba0e-183e741ff334", 98, "tbl-B1", 0]);
MGCAddTopic(["id393e6ad3-0d65-46f8-ad4a-c6a73f595f53", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id393e6ad3-0d65-46f8-ad4a-c6a73f595f53", 98, "tbl-B1", 0]);
MGCAddTopic(["id47ed6d4c-93ea-4888-90c2-d589340620b5", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id47ed6d4c-93ea-4888-90c2-d589340620b5", 98, "tbl-B1", 0]);
MGCAddTopic(["ide0544fb8-5ae2-40cb-9045-b7dec67b4d58", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__ide0544fb8-5ae2-40cb-9045-b7dec67b4d58", 98, "tbl-B1", 0]);
MGCAddTopic(["id8e567826-b3ef-4418-8b81-c0538ce521f5", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id8e567826-b3ef-4418-8b81-c0538ce521f5", 98, "tbl-B1", 0]);
MGCAddTopic(["id705dc051-203a-40e8-a181-6ef87f641100", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id705dc051-203a-40e8-a181-6ef87f641100", 98, "ref-topic-H2", 0]);
MGCAddTopic(["idb6832ee3-2ba9-499e-bb18-aa515d99e60b", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idb6832ee3-2ba9-499e-bb18-aa515d99e60b", 98, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["idf3096631-3d0e-4aa1-bdf1-e6ac040bd597", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idf3096631-3d0e-4aa1-bdf1-e6ac040bd597", 98, "ref-topic-H2", 0]);
MGCAddTopic(["idd97233cb-f4bf-4807-a1ca-8a29986ab256", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idd97233cb-f4bf-4807-a1ca-8a29986ab256", 98, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id4d8accf9-dc50-4eae-b0c3-13e8a03c507f", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id4d8accf9-dc50-4eae-b0c3-13e8a03c507f", 98, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["idec397445-4399-4feb-aa12-104e2ed3315e", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__idec397445-4399-4feb-aa12-104e2ed3315e", 98, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["ida5b5d965-9543-4ba8-b80d-b16bc4a5b726", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__ida5b5d965-9543-4ba8-b80d-b16bc4a5b726", 98, "ref-topic-H2", 0]);
MGCAddTopic(["id69d6b044-a482-4524-8ee2-85fb3bcf9965", "ida7878dab-bf49-4c34-af52-1a7bf17ada4d__id69d6b044-a482-4524-8ee2-85fb3bcf9965", 98, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["Calibre MDPstat", "idb9cddf87-0a67-4436-8a03-1ba99ec23ee5", 99, "mgcsec-H1", 0]);
MGCAddTopic(["idb9cddf87-0a67-4436-8a03-1ba99ec23ee5", "idb9cddf87-0a67-4436-8a03-1ba99ec23ee5", 99, "", 0]);
MGCAddTopic(["ida35885fa-e750-49fa-968a-bb8787792b7d", "idb9cddf87-0a67-4436-8a03-1ba99ec23ee5__ida35885fa-e750-49fa-968a-bb8787792b7d", 99, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["ida51ac1c4-9e0a-47e6-ae06-5c0ec287ae90", "idb9cddf87-0a67-4436-8a03-1ba99ec23ee5__ida51ac1c4-9e0a-47e6-ae06-5c0ec287ae90", 99, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["Calibre MDPstat Reporting", "idec5faa4f-2594-471a-b756-4e2f4405ba0c", 100, "con-H2", 0]);
MGCAddTopic(["idec5faa4f-2594-471a-b756-4e2f4405ba0c", "idec5faa4f-2594-471a-b756-4e2f4405ba0c", 100, "con-topic-H2", 0]);
MGCAddTopic(["MDPSTAT", "idda9762e7-76e2-4d28-a61d-060da909fd0d", 101, "cmd-H2", 0]);
MGCAddTopic(["SMALLOUTSIDETRAP Examples", "ida7919748-e932-4cde-b163-657b8f66111e", 101, "cmd-argdesc", 0]);
MGCAddTopic(["SPLITCD Examples", "ide8b23c56-2ac9-4917-86ac-8136819fb796", 101, "cmd-argdesc", 0]);
MGCAddTopic(["idda9762e7-76e2-4d28-a61d-060da909fd0d", "idda9762e7-76e2-4d28-a61d-060da909fd0d", 101, "ct-topic-H3", 0]);
MGCAddTopic(["ida9eff236-d4ae-4df3-a007-04b6b6b5b11c", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ida9eff236-d4ae-4df3-a007-04b6b6b5b11c", 101, "ct-topic-H3", 0]);
MGCAddTopic(["id0f95dd6e-a2fa-45b3-bc07-43d02aa36300", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id0f95dd6e-a2fa-45b3-bc07-43d02aa36300", 101, "cmd-arg", 0]);
MGCAddTopic(["id0b873e85-3a0f-45ee-98db-05a021ce7cd6", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id0b873e85-3a0f-45ee-98db-05a021ce7cd6", 101, "cmd-argdesc", 0]);
MGCAddTopic(["idfed83f35-7366-4868-b6ef-3b7e2d617b58", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idfed83f35-7366-4868-b6ef-3b7e2d617b58", 101, "cmd-argdesc", 0]);
MGCAddTopic(["id43e5a7ad-1f0c-4b1f-b174-999617bfd270", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id43e5a7ad-1f0c-4b1f-b174-999617bfd270", 101, "cmd-argdesc", 0]);
MGCAddTopic(["idc3063f4b-88dc-460e-b3eb-0ab4d7e05bcf", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idc3063f4b-88dc-460e-b3eb-0ab4d7e05bcf", 101, "cmd-argdesc", 0]);
MGCAddTopic(["id11d0b628-fd0a-4e4a-bd3d-bf550e9c1bd8", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id11d0b628-fd0a-4e4a-bd3d-bf550e9c1bd8", 101, "cmd-argdesc", 0]);
MGCAddTopic(["id9971707e-2f55-403a-adbb-adfba6484e38", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id9971707e-2f55-403a-adbb-adfba6484e38", 101, "cmd-argdesc", 0]);
MGCAddTopic(["id4ba4f397-c623-407d-8262-c8512eda82eb", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id4ba4f397-c623-407d-8262-c8512eda82eb", 101, "cmd-argdesc", 0]);
MGCAddTopic(["idfad247bb-8724-4af6-bb77-056e5ebed99f", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idfad247bb-8724-4af6-bb77-056e5ebed99f", 101, "cmd-argdesc", 0]);
MGCAddTopic(["id770d3c87-1e18-4998-8806-b660ba43682d", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id770d3c87-1e18-4998-8806-b660ba43682d", 101, "cmd-argdesc", 0]);
MGCAddTopic(["ida7919748-e932-4cde-b163-657b8f66111e", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ida7919748-e932-4cde-b163-657b8f66111e", 101, "cmd-argdesc", 0]);
MGCAddTopic(["ide8b23c56-2ac9-4917-86ac-8136819fb796", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ide8b23c56-2ac9-4917-86ac-8136819fb796", 101, "cmd-argdesc", 0]);
MGCAddTopic(["idfff2a07c-0f25-41a7-8d4e-43e03c04a905", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idfff2a07c-0f25-41a7-8d4e-43e03c04a905", 101, "cmd-arg", 0]);
MGCAddTopic(["idab0df56c-e637-4f44-85ca-05618c725b1b", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idab0df56c-e637-4f44-85ca-05618c725b1b", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida7d26074-34f6-4ba5-9cbd-34ff16fc7adf", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ida7d26074-34f6-4ba5-9cbd-34ff16fc7adf", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id45022262-1ae9-4f75-b396-332a4c37c067", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id45022262-1ae9-4f75-b396-332a4c37c067", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6a7a63e2-ba7e-451f-a4ea-8a2fcc32d4aa", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id6a7a63e2-ba7e-451f-a4ea-8a2fcc32d4aa", 101, "cmd-arg", 0]);
MGCAddTopic(["id10564075-26ee-4fb2-b8d6-46e4e776f76a", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id10564075-26ee-4fb2-b8d6-46e4e776f76a", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id21f1d772-ff8a-4545-97fd-173e7b14a257", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id21f1d772-ff8a-4545-97fd-173e7b14a257", 101, "cmd-arg", 0]);
MGCAddTopic(["id6a65ed85-2b8b-4af6-af31-46f584fd1506", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id6a65ed85-2b8b-4af6-af31-46f584fd1506", 101, "cmd-arg", 0]);
MGCAddTopic(["idfd832cf7-5616-4dd5-a262-c81514fad5c9", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idfd832cf7-5616-4dd5-a262-c81514fad5c9", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id5fcbcf83-5c5a-42a4-8666-4d08f8f43740", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id5fcbcf83-5c5a-42a4-8666-4d08f8f43740", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2b3f9ab6-9022-45ca-93bb-3a2e6d2e28d0", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id2b3f9ab6-9022-45ca-93bb-3a2e6d2e28d0", 101, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id8d880c30-3b06-4440-a307-144274dccbc3", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id8d880c30-3b06-4440-a307-144274dccbc3", 101, "cmd-arg", 0]);
MGCAddTopic(["id0a921ef8-2f5a-4530-bf5d-9327bcad04d3", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id0a921ef8-2f5a-4530-bf5d-9327bcad04d3", 101, "cmd-arg", 0]);
MGCAddTopic(["id8b54673b-967a-4879-be22-b482fdcb0abb", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id8b54673b-967a-4879-be22-b482fdcb0abb", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["idcec779ba-4343-450c-9b40-4e4b4fa092fc", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idcec779ba-4343-450c-9b40-4e4b4fa092fc", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc4f01ddd-cc2e-4765-ba21-379359d2c76a", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idc4f01ddd-cc2e-4765-ba21-379359d2c76a", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["idaf58f7d8-07e6-40f8-bdd6-7c6f96e51d6c", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idaf58f7d8-07e6-40f8-bdd6-7c6f96e51d6c", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf532bc0c-a3fb-475c-a588-6835454f935f", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idf532bc0c-a3fb-475c-a588-6835454f935f", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id4db8927b-1d39-4799-a54d-21cbb6aae4e6", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id4db8927b-1d39-4799-a54d-21cbb6aae4e6", 101, "cmd-arg", 0]);
MGCAddTopic(["ide65bd3af-05e6-4965-a8bd-8d75a016b76b", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ide65bd3af-05e6-4965-a8bd-8d75a016b76b", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd4119edb-ebd4-4d73-8cd0-b3c36719c9c9", "idda9762e7-76e2-4d28-a61d-060da909fd0d__idd4119edb-ebd4-4d73-8cd0-b3c36719c9c9", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6633eaef-c77b-4c93-9bd5-4d6689f11a39", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id6633eaef-c77b-4c93-9bd5-4d6689f11a39", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2759f18d-262e-4674-b51e-f1cef2186af9", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id2759f18d-262e-4674-b51e-f1cef2186af9", 101, "cmd-arg", 0]);
MGCAddTopic(["iddc5fd6aa-7bdf-4785-90cb-e59e5fcdfafa", "idda9762e7-76e2-4d28-a61d-060da909fd0d__iddc5fd6aa-7bdf-4785-90cb-e59e5fcdfafa", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2761539d-d2cf-4be8-8ae0-243d662c1553", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id2761539d-d2cf-4be8-8ae0-243d662c1553", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["ide4c36c5d-12d0-4a35-b117-dcaf435b561a", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ide4c36c5d-12d0-4a35-b117-dcaf435b561a", 101, "cmd-argopt-B1", 0]);
MGCAddTopic(["id72c02e48-7a4a-4c5f-ba91-05b4e5d51e42", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id72c02e48-7a4a-4c5f-ba91-05b4e5d51e42", 101, "cmd-arg", 0]);
MGCAddTopic(["id5af79846-e790-4f18-b0ed-fc4cfb942453", "idda9762e7-76e2-4d28-a61d-060da909fd0d__id5af79846-e790-4f18-b0ed-fc4cfb942453", 101, "cmd-arg", 0]);
MGCAddTopic(["ida1def7ce-0b26-4048-8a14-741826c20149", "idda9762e7-76e2-4d28-a61d-060da909fd0d__ida1def7ce-0b26-4048-8a14-741826c20149", 101, "cmd-arg", 0]);
MGCAddTopic(["Calibre Rule-Based MPC and MDP Utility Commands", "idda9e1042-9cc0-48cc-aa9f-fc1617771175", 102, "mgcsec-H1", 0]);
MGCAddTopic(["idda9e1042-9cc0-48cc-aa9f-fc1617771175", "idda9e1042-9cc0-48cc-aa9f-fc1617771175", 102, "", 0]);
MGCAddTopic(["ide63ece06-e342-42cd-a7bb-e9e4102fef09", "idda9e1042-9cc0-48cc-aa9f-fc1617771175__ide63ece06-e342-42cd-a7bb-e9e4102fef09", 102, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["id17010c2c-7afe-434f-9a10-16eeaf0bd0fd", "idda9e1042-9cc0-48cc-aa9f-fc1617771175__id17010c2c-7afe-434f-9a10-16eeaf0bd0fd", 102, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["id5d58b144-f19f-4dc0-b119-643ba1d5f1c3", "idda9e1042-9cc0-48cc-aa9f-fc1617771175__id5d58b144-f19f-4dc0-b119-643ba1d5f1c3", 102, "chap-body-B1, chap-body-L1", 0]);
MGCAddTopic(["ida722f2b1-9fb3-45a3-a650-fd819f690970", "idda9e1042-9cc0-48cc-aa9f-fc1617771175__ida722f2b1-9fb3-45a3-a650-fd819f690970", 102, "chap-body-ul-1", 0]);
MGCAddTopic(["Calibre MPCpro Workflow", "id130761ab-ab4f-4a38-970c-dfea4efbb249", 103, "", 0]);
MGCAddTopic(["id130761ab-ab4f-4a38-970c-dfea4efbb249", "id130761ab-ab4f-4a38-970c-dfea4efbb249", 103, "", 0]);
MGCAddTopic(["id9913440e-1141-49ec-aa8e-df9d16116c51", "id130761ab-ab4f-4a38-970c-dfea4efbb249__id9913440e-1141-49ec-aa8e-df9d16116c51", 103, "", 0]);
MGCAddTopic(["id06ef2b6d-2719-46b2-99ff-3d0d84fc513d", "id130761ab-ab4f-4a38-970c-dfea4efbb249__id06ef2b6d-2719-46b2-99ff-3d0d84fc513d", 103, "", 0]);
MGCAddTopic(["id346832af-c3cd-4b88-9368-6fae4ca1cb28", "id130761ab-ab4f-4a38-970c-dfea4efbb249__id346832af-c3cd-4b88-9368-6fae4ca1cb28", 103, "", 0]);
MGCAddTopic(["idf8659abb-c000-4054-b015-7e8286d56108", "id130761ab-ab4f-4a38-970c-dfea4efbb249__idf8659abb-c000-4054-b015-7e8286d56108", 103, "", 0]);
MGCAddTopic(["idc19424d9-5db1-4a97-a6be-2ad8ab4806bc", "id130761ab-ab4f-4a38-970c-dfea4efbb249__idc19424d9-5db1-4a97-a6be-2ad8ab4806bc", 103, "", 0]);
MGCAddTopic(["idd5c41c30-f05b-4d59-9425-27bd94b44821", "id130761ab-ab4f-4a38-970c-dfea4efbb249__idd5c41c30-f05b-4d59-9425-27bd94b44821", 103, "", 0]);
MGCAddTopic(["DENSITY CONVOLVE SVRF Statement", "id52c2ee3c-5e27-4a37-8f8a-269324b891e1", 104, "mgcsec-H2", 0]);
MGCAddTopic(["Examples of a Layer Before and After Density Convolution", "id1bcab93d-a9ac-4d39-8889-2badfd334aef", 104, "mgcsec-H2-L0-FigureTitle", 0]);
MGCAddTopic(["id52c2ee3c-5e27-4a37-8f8a-269324b891e1", "id52c2ee3c-5e27-4a37-8f8a-269324b891e1", 104, "ct-topic-H2", 0]);
MGCAddTopic(["id1bcab93d-a9ac-4d39-8889-2badfd334aef", "id52c2ee3c-5e27-4a37-8f8a-269324b891e1__id1bcab93d-a9ac-4d39-8889-2badfd334aef", 104, "ct-topic-H2", 0]);
MGCAddTopic(["DENSITY CONVOLVE", "id16ec752a-6a15-4671-ab13-ec69199e2983", 105, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["TRUNCATE Keyword", "idd44189f1-cff8-48bb-a5aa-5d469ee90257", 105, "cmd-argdesc", 0]);
MGCAddTopic(["WRAP Keyword", "id042cd35c-508b-44c0-bb98-5c4bae34d0dc", 105, "cmd-argdesc", 0]);
MGCAddTopic(["id16ec752a-6a15-4671-ab13-ec69199e2983", "id16ec752a-6a15-4671-ab13-ec69199e2983", 105, "ct-topic-H3", 0]);
MGCAddTopic(["id5744926d-6343-4c1d-9e6e-b930b8344436", "id16ec752a-6a15-4671-ab13-ec69199e2983__id5744926d-6343-4c1d-9e6e-b930b8344436", 105, "cmd-arg", 0]);
MGCAddTopic(["id971c9d9f-636b-4636-9efd-1d8a85b3aa7d", "id16ec752a-6a15-4671-ab13-ec69199e2983__id971c9d9f-636b-4636-9efd-1d8a85b3aa7d", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idfc1b0c8f-da00-4d4c-a210-848c08ab9fff", "id16ec752a-6a15-4671-ab13-ec69199e2983__idfc1b0c8f-da00-4d4c-a210-848c08ab9fff", 105, "cmd-arg", 0]);
MGCAddTopic(["idcb09ed68-44b9-41ee-820a-9320723cc805", "id16ec752a-6a15-4671-ab13-ec69199e2983__idcb09ed68-44b9-41ee-820a-9320723cc805", 105, "cmd-arg", 0]);
MGCAddTopic(["id0e5835c7-6f69-457a-b80f-6c3b37cd9ee6", "id16ec752a-6a15-4671-ab13-ec69199e2983__id0e5835c7-6f69-457a-b80f-6c3b37cd9ee6", 105, "cmd-arg", 0]);
MGCAddTopic(["id2693dbd2-374a-4176-9ea2-262a447cadf3", "id16ec752a-6a15-4671-ab13-ec69199e2983__id2693dbd2-374a-4176-9ea2-262a447cadf3", 105, "cmd-arg", 0]);
MGCAddTopic(["id00cf7193-8bfe-488c-9112-ead21a586b1c", "id16ec752a-6a15-4671-ab13-ec69199e2983__id00cf7193-8bfe-488c-9112-ead21a586b1c", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["idef640b5e-5435-4e48-a6f5-5c6b631ca199", "id16ec752a-6a15-4671-ab13-ec69199e2983__idef640b5e-5435-4e48-a6f5-5c6b631ca199", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["id0859cc36-2ef9-4064-926f-b6404655bbcb", "id16ec752a-6a15-4671-ab13-ec69199e2983__id0859cc36-2ef9-4064-926f-b6404655bbcb", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["ided2c648d-35b1-4545-b962-98daeadd2b11", "id16ec752a-6a15-4671-ab13-ec69199e2983__ided2c648d-35b1-4545-b962-98daeadd2b11", 105, "cmd-arg", 0]);
MGCAddTopic(["id9ebd031a-f33c-4cf8-a3f7-38cfa9509d8d", "id16ec752a-6a15-4671-ab13-ec69199e2983__id9ebd031a-f33c-4cf8-a3f7-38cfa9509d8d", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd44189f1-cff8-48bb-a5aa-5d469ee90257", "id16ec752a-6a15-4671-ab13-ec69199e2983__idd44189f1-cff8-48bb-a5aa-5d469ee90257", 105, "cmd-argdesc", 0]);
MGCAddTopic(["id8e7d32c4-8376-4b8e-8413-e670fa1d4269", "id16ec752a-6a15-4671-ab13-ec69199e2983__id8e7d32c4-8376-4b8e-8413-e670fa1d4269", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["id042cd35c-508b-44c0-bb98-5c4bae34d0dc", "id16ec752a-6a15-4671-ab13-ec69199e2983__id042cd35c-508b-44c0-bb98-5c4bae34d0dc", 105, "cmd-argdesc", 0]);
MGCAddTopic(["id5796b67d-84fc-4645-b99c-54d12a502676", "id16ec752a-6a15-4671-ab13-ec69199e2983__id5796b67d-84fc-4645-b99c-54d12a502676", 105, "cmd-arg", 0]);
MGCAddTopic(["id4f955833-79c7-4af4-972f-ac12bda5c4c4", "id16ec752a-6a15-4671-ab13-ec69199e2983__id4f955833-79c7-4af4-972f-ac12bda5c4c4", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["id6768ffb8-2853-4ae5-b4a8-77851cb2d0c0", "id16ec752a-6a15-4671-ab13-ec69199e2983__id6768ffb8-2853-4ae5-b4a8-77851cb2d0c0", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3e99b7f0-24a8-47a0-8375-a9b0833454fd", "id16ec752a-6a15-4671-ab13-ec69199e2983__id3e99b7f0-24a8-47a0-8375-a9b0833454fd", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida7057cd2-f0d1-4cf2-9bf4-4c5362749d42", "id16ec752a-6a15-4671-ab13-ec69199e2983__ida7057cd2-f0d1-4cf2-9bf4-4c5362749d42", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2d0d0181-52f8-465c-bf7e-e102a6dd61b2", "id16ec752a-6a15-4671-ab13-ec69199e2983__id2d0d0181-52f8-465c-bf7e-e102a6dd61b2", 105, "cmd-arg", 0]);
MGCAddTopic(["id29a2a5dc-c631-490d-9dcb-0c2cf1f6752c", "id16ec752a-6a15-4671-ab13-ec69199e2983__id29a2a5dc-c631-490d-9dcb-0c2cf1f6752c", 105, "cmd-arg", 0]);
MGCAddTopic(["id7747ab72-942b-42c3-b5c3-cd72de4b6101", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7747ab72-942b-42c3-b5c3-cd72de4b6101", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id253cac0d-cfe1-4d44-8b35-945c5f6ade98", "id16ec752a-6a15-4671-ab13-ec69199e2983__id253cac0d-cfe1-4d44-8b35-945c5f6ade98", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id23c34a3d-180c-4084-9268-e66ea42e312b", "id16ec752a-6a15-4671-ab13-ec69199e2983__id23c34a3d-180c-4084-9268-e66ea42e312b", 105, "cmd-arg", 0]);
MGCAddTopic(["idecef06ca-1fe8-425c-a21f-dd752543cdd0", "id16ec752a-6a15-4671-ab13-ec69199e2983__idecef06ca-1fe8-425c-a21f-dd752543cdd0", 105, "cmd-arg", 0]);
MGCAddTopic(["ida3c81769-3972-4a9a-9a17-ce9127ea23ce", "id16ec752a-6a15-4671-ab13-ec69199e2983__ida3c81769-3972-4a9a-9a17-ce9127ea23ce", 105, "cmd-arg", 0]);
MGCAddTopic(["idfeaec926-b623-4c8b-96d1-aaec4393427f", "id16ec752a-6a15-4671-ab13-ec69199e2983__idfeaec926-b623-4c8b-96d1-aaec4393427f", 105, "cmd-arg", 0]);
MGCAddTopic(["id765cc01e-7e0b-4be3-bf54-e9c88ba2096e", "id16ec752a-6a15-4671-ab13-ec69199e2983__id765cc01e-7e0b-4be3-bf54-e9c88ba2096e", 105, "cmd-arg", 0]);
MGCAddTopic(["id7f0d219f-f55d-4d25-9646-7e9e5ac7fdf9", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7f0d219f-f55d-4d25-9646-7e9e5ac7fdf9", 105, "cmd-arg", 0]);
MGCAddTopic(["idffad102f-c15d-461d-b74a-d054012d0aa3", "id16ec752a-6a15-4671-ab13-ec69199e2983__idffad102f-c15d-461d-b74a-d054012d0aa3", 105, "cmd-arg", 0]);
MGCAddTopic(["ida5dfa834-53ce-431b-9786-509175261417", "id16ec752a-6a15-4671-ab13-ec69199e2983__ida5dfa834-53ce-431b-9786-509175261417", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id5532081c-cc97-4a76-a04b-febe98d507f7", "id16ec752a-6a15-4671-ab13-ec69199e2983__id5532081c-cc97-4a76-a04b-febe98d507f7", 105, "cmd-arg", 0]);
MGCAddTopic(["idc6b8e2de-ba06-404f-bf68-3863b685b3f4", "id16ec752a-6a15-4671-ab13-ec69199e2983__idc6b8e2de-ba06-404f-bf68-3863b685b3f4", 105, "cmd-arg", 0]);
MGCAddTopic(["id6aec9aa6-4045-4902-a25a-ae29944e28d4", "id16ec752a-6a15-4671-ab13-ec69199e2983__id6aec9aa6-4045-4902-a25a-ae29944e28d4", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id3313a66f-16c8-4ace-b06d-3bd3de565d04", "id16ec752a-6a15-4671-ab13-ec69199e2983__id3313a66f-16c8-4ace-b06d-3bd3de565d04", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idad7106dd-2dcf-463e-84f0-63ccf695e671", "id16ec752a-6a15-4671-ab13-ec69199e2983__idad7106dd-2dcf-463e-84f0-63ccf695e671", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idba688ee8-312b-4343-9a9a-59804c771774", "id16ec752a-6a15-4671-ab13-ec69199e2983__idba688ee8-312b-4343-9a9a-59804c771774", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id06117381-d488-49ba-b754-ef7c90ed28be", "id16ec752a-6a15-4671-ab13-ec69199e2983__id06117381-d488-49ba-b754-ef7c90ed28be", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id13a2ca7f-044d-410c-ba2d-f6a26bc36ddb", "id16ec752a-6a15-4671-ab13-ec69199e2983__id13a2ca7f-044d-410c-ba2d-f6a26bc36ddb", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id63d858b8-5a0f-45b9-9560-a16b0117dd03", "id16ec752a-6a15-4671-ab13-ec69199e2983__id63d858b8-5a0f-45b9-9560-a16b0117dd03", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id7e26e654-9c73-49f3-a024-685844baeea8", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7e26e654-9c73-49f3-a024-685844baeea8", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id2c3015c5-01e1-4b11-b253-a38e0355b820", "id16ec752a-6a15-4671-ab13-ec69199e2983__id2c3015c5-01e1-4b11-b253-a38e0355b820", 105, "cmd-arg", 0]);
MGCAddTopic(["id61e25d73-3813-4ff3-b186-803da0a2f54a", "id16ec752a-6a15-4671-ab13-ec69199e2983__id61e25d73-3813-4ff3-b186-803da0a2f54a", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id176b5ea0-adb1-4ec3-b36f-27aca41211fe", "id16ec752a-6a15-4671-ab13-ec69199e2983__id176b5ea0-adb1-4ec3-b36f-27aca41211fe", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id3c0be894-c955-44ae-be0e-06cf894cba30", "id16ec752a-6a15-4671-ab13-ec69199e2983__id3c0be894-c955-44ae-be0e-06cf894cba30", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id68e1a200-d41e-4f17-b4b9-e4bfcf15767f", "id16ec752a-6a15-4671-ab13-ec69199e2983__id68e1a200-d41e-4f17-b4b9-e4bfcf15767f", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id1d179a4a-258d-472a-b606-8acfc06b094d", "id16ec752a-6a15-4671-ab13-ec69199e2983__id1d179a4a-258d-472a-b606-8acfc06b094d", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id20940142-4ec3-470d-9d53-42d62db0d65a", "id16ec752a-6a15-4671-ab13-ec69199e2983__id20940142-4ec3-470d-9d53-42d62db0d65a", 105, "cmd-arg", 0]);
MGCAddTopic(["id68372d93-6efd-4cbe-bf80-e5f3fcdcd89e", "id16ec752a-6a15-4671-ab13-ec69199e2983__id68372d93-6efd-4cbe-bf80-e5f3fcdcd89e", 105, "cmd-arg", 0]);
MGCAddTopic(["id34b86c1d-8215-492a-81b6-cda2ce55b945", "id16ec752a-6a15-4671-ab13-ec69199e2983__id34b86c1d-8215-492a-81b6-cda2ce55b945", 105, "cmd-arg", 0]);
MGCAddTopic(["id389291db-3f02-4ebd-81a2-23e1f9ffe6cc", "id16ec752a-6a15-4671-ab13-ec69199e2983__id389291db-3f02-4ebd-81a2-23e1f9ffe6cc", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idbeda8b16-742b-4285-9e90-9d578eb9e0d7", "id16ec752a-6a15-4671-ab13-ec69199e2983__idbeda8b16-742b-4285-9e90-9d578eb9e0d7", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["iddc440509-2de2-462f-a304-a31683f5ce73", "id16ec752a-6a15-4671-ab13-ec69199e2983__iddc440509-2de2-462f-a304-a31683f5ce73", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idbfc38b03-dcbc-47df-a616-41e0ce9601d1", "id16ec752a-6a15-4671-ab13-ec69199e2983__idbfc38b03-dcbc-47df-a616-41e0ce9601d1", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idc9b2e84e-07e3-4598-8ee9-039b4456624e", "id16ec752a-6a15-4671-ab13-ec69199e2983__idc9b2e84e-07e3-4598-8ee9-039b4456624e", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idaa53e4df-bdb9-4643-8201-ea8d7c2758a1", "id16ec752a-6a15-4671-ab13-ec69199e2983__idaa53e4df-bdb9-4643-8201-ea8d7c2758a1", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["idb0d92adc-6d67-4b48-a9e5-814a590f4c6c", "id16ec752a-6a15-4671-ab13-ec69199e2983__idb0d92adc-6d67-4b48-a9e5-814a590f4c6c", 105, "cmd-arguments-sub", 0]);
MGCAddTopic(["id24e6c1a1-5255-462f-a5ee-5ff9788d1429", "id16ec752a-6a15-4671-ab13-ec69199e2983__id24e6c1a1-5255-462f-a5ee-5ff9788d1429", 105, "cmd-arg", 0]);
MGCAddTopic(["id80042a79-948e-4d9f-8e55-781876caad88", "id16ec752a-6a15-4671-ab13-ec69199e2983__id80042a79-948e-4d9f-8e55-781876caad88", 105, "cmd-arg", 0]);
MGCAddTopic(["id7d4a1f0d-c890-4278-ba19-c39d9fb88c8c", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7d4a1f0d-c890-4278-ba19-c39d9fb88c8c", 105, "cmd-arg", 0]);
MGCAddTopic(["idf0e26a4c-1d55-4212-832b-461627ea40aa", "id16ec752a-6a15-4671-ab13-ec69199e2983__idf0e26a4c-1d55-4212-832b-461627ea40aa", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id32e9b5a3-159d-4c34-9f3c-16bdbea42360", "id16ec752a-6a15-4671-ab13-ec69199e2983__id32e9b5a3-159d-4c34-9f3c-16bdbea42360", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id752450d3-ac49-4c1b-82d4-6984820c5667", "id16ec752a-6a15-4671-ab13-ec69199e2983__id752450d3-ac49-4c1b-82d4-6984820c5667", 105, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id7910f0f1-9dbd-40be-b27c-725ab51b0926", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7910f0f1-9dbd-40be-b27c-725ab51b0926", 105, "cmd-argdesc", 0]);
MGCAddTopic(["id1b63cfb3-d8d5-4453-b1ed-8a3fcab722bd", "id16ec752a-6a15-4671-ab13-ec69199e2983__id1b63cfb3-d8d5-4453-b1ed-8a3fcab722bd", 105, "cmd-arg", 0]);
MGCAddTopic(["id06a2b8fe-0305-409d-b02f-6f7a48fb29fb", "id16ec752a-6a15-4671-ab13-ec69199e2983__id06a2b8fe-0305-409d-b02f-6f7a48fb29fb", 105, "cmd-arg", 0]);
MGCAddTopic(["id353be7bb-1ba8-4b95-8461-76618e284c4d", "id16ec752a-6a15-4671-ab13-ec69199e2983__id353be7bb-1ba8-4b95-8461-76618e284c4d", 105, "cmd-arg", 0]);
MGCAddTopic(["id0a1af801-3dad-42bc-8ed6-621bf7083188", "id16ec752a-6a15-4671-ab13-ec69199e2983__id0a1af801-3dad-42bc-8ed6-621bf7083188", 105, "cmd-arg", 0]);
MGCAddTopic(["idd8b92098-53d0-4daa-8c28-ab79ebd3cec7", "id16ec752a-6a15-4671-ab13-ec69199e2983__idd8b92098-53d0-4daa-8c28-ab79ebd3cec7", 105, "cmd-arg", 0]);
MGCAddTopic(["id13a04fec-0d87-4c22-b4a4-ba2f0b56ff22", "id16ec752a-6a15-4671-ab13-ec69199e2983__id13a04fec-0d87-4c22-b4a4-ba2f0b56ff22", 105, "cmd-arg", 0]);
MGCAddTopic(["ide40101f5-1654-426b-882d-bd7c630a4e8e", "id16ec752a-6a15-4671-ab13-ec69199e2983__ide40101f5-1654-426b-882d-bd7c630a4e8e", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["idcc735cd9-157b-41e1-a562-7e1a4c165ce6", "id16ec752a-6a15-4671-ab13-ec69199e2983__idcc735cd9-157b-41e1-a562-7e1a4c165ce6", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["ideb8f30b6-1568-45d0-8c2e-ac8646240451", "id16ec752a-6a15-4671-ab13-ec69199e2983__ideb8f30b6-1568-45d0-8c2e-ac8646240451", 105, "cmd-argopt-B1", 0]);
MGCAddTopic(["id74984552-d7c9-44ec-8fdc-b5e580893ced", "id16ec752a-6a15-4671-ab13-ec69199e2983__id74984552-d7c9-44ec-8fdc-b5e580893ced", 105, "cmd-arg", 0]);
MGCAddTopic(["id8d17a404-a64f-4a62-ac67-e9b21e5f63da", "id16ec752a-6a15-4671-ab13-ec69199e2983__id8d17a404-a64f-4a62-ac67-e9b21e5f63da", 105, "cmd-arg", 0]);
MGCAddTopic(["idac02550c-a551-4975-8fad-8939002d83c1", "id16ec752a-6a15-4671-ab13-ec69199e2983__idac02550c-a551-4975-8fad-8939002d83c1", 105, "ct-topic-H3", 0]);
MGCAddTopic(["id5b2504fa-5614-4fe3-a467-dd5cfb10be3a", "id16ec752a-6a15-4671-ab13-ec69199e2983__id5b2504fa-5614-4fe3-a467-dd5cfb10be3a", 105, "ct-topic-H3", 0]);
MGCAddTopic(["id584d0807-9762-4fcc-a50a-b44ed160c0f2", "id16ec752a-6a15-4671-ab13-ec69199e2983__id584d0807-9762-4fcc-a50a-b44ed160c0f2", 105, "ct-topic-H3", 0]);
MGCAddTopic(["id7abd3fcb-8382-48b0-9d4a-7d41ad23c024", "id16ec752a-6a15-4671-ab13-ec69199e2983__id7abd3fcb-8382-48b0-9d4a-7d41ad23c024", 105, "ct-topic-H3", 0]);
MGCAddTopic(["idb539e777-ceb2-4499-a766-58673567aeb4", "id16ec752a-6a15-4671-ab13-ec69199e2983__idb539e777-ceb2-4499-a766-58673567aeb4", 105, "ct-topic-H3", 0]);
MGCAddTopic(["id647a663f-45d0-46aa-a2ae-3f73bca0cc4e", "id16ec752a-6a15-4671-ab13-ec69199e2983__id647a663f-45d0-46aa-a2ae-3f73bca0cc4e", 105, "ct-topic-H3", 0]);
MGCAddTopic(["MDP MAPSIZE SVRF Statement", "id59ba31a6-509b-4c98-896a-0a09b0bd6350", 106, "mgcsec-H2", 0]);
MGCAddTopic(["Data With Map Layers", "iddce2c405-d2d5-46fe-ae68-76546b63181a", 106, "mgcsec-H2-L0-FigureTitle", 0]);
MGCAddTopic(["MDP Mapsize SVRF Example", "idf6436f45-d090-4e33-b796-9aa3e0090638", 106, "mgcsec-H2-L0-FigureTitle", 0]);
MGCAddTopic(["Soft Boundary Behavior", "idb8e70c8b-5a2b-4be1-8ff7-212fbd435c8c", 106, "mgcsec-H2-L0-FigureTitle", 0]);
MGCAddTopic(["id59ba31a6-509b-4c98-896a-0a09b0bd6350", "id59ba31a6-509b-4c98-896a-0a09b0bd6350", 106, "ct-topic-H2", 0]);
MGCAddTopic(["iddce2c405-d2d5-46fe-ae68-76546b63181a", "id59ba31a6-509b-4c98-896a-0a09b0bd6350__iddce2c405-d2d5-46fe-ae68-76546b63181a", 106, "ct-topic-H2", 0]);
MGCAddTopic(["idf6436f45-d090-4e33-b796-9aa3e0090638", "id59ba31a6-509b-4c98-896a-0a09b0bd6350__idf6436f45-d090-4e33-b796-9aa3e0090638", 106, "ct-topic-H2", 0]);
MGCAddTopic(["idb8e70c8b-5a2b-4be1-8ff7-212fbd435c8c", "id59ba31a6-509b-4c98-896a-0a09b0bd6350__idb8e70c8b-5a2b-4be1-8ff7-212fbd435c8c", 106, "ct-topic-H2", 0]);
MGCAddTopic(["MDP MAPSIZE", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84", 107, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84", 107, "ct-topic-H3", 0]);
MGCAddTopic(["id81d8ae8c-6464-4e4c-ad31-c587a1153a37", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__id81d8ae8c-6464-4e4c-ad31-c587a1153a37", 107, "cmd-arg", 0]);
MGCAddTopic(["idcef2d93d-ddcf-44cb-af40-9f65bdd24e7b", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__idcef2d93d-ddcf-44cb-af40-9f65bdd24e7b", 107, "cmd-arg", 0]);
MGCAddTopic(["ida1a8013b-e45f-41ce-8517-cef6a125a9a7", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__ida1a8013b-e45f-41ce-8517-cef6a125a9a7", 107, "cmd-arg", 0]);
MGCAddTopic(["id4db05dbb-1936-421c-984d-06a1f840a662", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__id4db05dbb-1936-421c-984d-06a1f840a662", 107, "cmd-arg", 0]);
MGCAddTopic(["idf70bcf5a-1108-4e59-ade3-869831637050", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__idf70bcf5a-1108-4e59-ade3-869831637050", 107, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id553f24ec-74a7-4d1a-bc0f-feab59e43740", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__id553f24ec-74a7-4d1a-bc0f-feab59e43740", 107, "cmd-arg-ul-2", 0]);
MGCAddTopic(["iddbbffbbe-2738-4204-b77c-3ccd64c5b4f4", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__iddbbffbbe-2738-4204-b77c-3ccd64c5b4f4", 107, "cmd-arg", 0]);
MGCAddTopic(["id56b65937-64d3-4322-a5cf-34188da06c14", "idc4f09d21-dc9d-4ff2-84d1-44dec68b9f84__id56b65937-64d3-4322-a5cf-34188da06c14", 107, "cmd-arg", 0]);
MGCAddTopic(["MDP CHECKMAP SVRF Statement", "idb8b4fd33-17cb-435b-87ea-e34dacf964f0", 108, "mgcsec-H2", 0]);
MGCAddTopic(["idb8b4fd33-17cb-435b-87ea-e34dacf964f0", "idb8b4fd33-17cb-435b-87ea-e34dacf964f0", 108, "ct-topic-H2", 0]);
MGCAddTopic(["MDP CHECKMAP", "ide906cd92-baa6-4d93-9832-fd2184e38f24", 109, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ide906cd92-baa6-4d93-9832-fd2184e38f24", "ide906cd92-baa6-4d93-9832-fd2184e38f24", 109, "ct-topic-H3", 0]);
MGCAddTopic(["idfbbc4d97-63bb-4710-a995-72eb083bcc73", "ide906cd92-baa6-4d93-9832-fd2184e38f24__idfbbc4d97-63bb-4710-a995-72eb083bcc73", 109, "cmd-arg", 0]);
MGCAddTopic(["id40bbfefb-ac68-4b30-8fc2-f9db051d5366", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id40bbfefb-ac68-4b30-8fc2-f9db051d5366", 109, "cmd-arg", 0]);
MGCAddTopic(["id02538328-c90b-48cf-bd74-733b0ce4faf1", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id02538328-c90b-48cf-bd74-733b0ce4faf1", 109, "cmd-arg", 0]);
MGCAddTopic(["id54a9164b-bf87-4daf-b914-ec0ccce147ff", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id54a9164b-bf87-4daf-b914-ec0ccce147ff", 109, "cmd-arg", 0]);
MGCAddTopic(["id58b80252-d5c0-4453-a97f-6962013f9d02", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id58b80252-d5c0-4453-a97f-6962013f9d02", 109, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ide5bc8f26-3814-411d-9054-0d9ac27c9809", "ide906cd92-baa6-4d93-9832-fd2184e38f24__ide5bc8f26-3814-411d-9054-0d9ac27c9809", 109, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id202d5db2-b58b-4a15-a5d6-af0818c32528", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id202d5db2-b58b-4a15-a5d6-af0818c32528", 109, "cmd-arg", 0]);
MGCAddTopic(["id2498717f-fb1a-47e1-9b9c-7c295104ca69", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id2498717f-fb1a-47e1-9b9c-7c295104ca69", 109, "cmd-arg", 0]);
MGCAddTopic(["idd7502a5c-608f-4780-b116-3457a5debd6f", "ide906cd92-baa6-4d93-9832-fd2184e38f24__idd7502a5c-608f-4780-b116-3457a5debd6f", 109, "cmd-arg", 0]);
MGCAddTopic(["idd7a38fae-348f-4d87-80c2-c50a817b4ee6", "ide906cd92-baa6-4d93-9832-fd2184e38f24__idd7a38fae-348f-4d87-80c2-c50a817b4ee6", 109, "cmd-arg", 0]);
MGCAddTopic(["id8f913908-ce03-402a-9c87-d31bdf30699a", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id8f913908-ce03-402a-9c87-d31bdf30699a", 109, "cmd-arg", 0]);
MGCAddTopic(["ide431a762-8d7a-43da-bfb4-44bcb3dfc00f", "ide906cd92-baa6-4d93-9832-fd2184e38f24__ide431a762-8d7a-43da-bfb4-44bcb3dfc00f", 109, "cmd-arg", 0]);
MGCAddTopic(["idee1a1311-460f-4bf8-8ee3-0dd6607313fe", "ide906cd92-baa6-4d93-9832-fd2184e38f24__idee1a1311-460f-4bf8-8ee3-0dd6607313fe", 109, "ct-topic-H3", 0]);
MGCAddTopic(["id4e20f063-4c95-414b-b273-35e1904ea1fd", "ide906cd92-baa6-4d93-9832-fd2184e38f24__id4e20f063-4c95-414b-b273-35e1904ea1fd", 109, "ct-topic-H3", 0]);
MGCAddTopic(["MDP OASIS_EXTENT SVRF Statement", "id68d70561-6286-46c6-9dfd-4fde35aef1cd", 110, "mgcsec-H2", 0]);
MGCAddTopic(["id68d70561-6286-46c6-9dfd-4fde35aef1cd", "id68d70561-6286-46c6-9dfd-4fde35aef1cd", 110, "ct-topic-H2", 0]);
MGCAddTopic(["MDP OASIS_EXTENT", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14", 111, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id3264cd45-53cf-4e93-aaf2-58b54bc28f14", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14", 111, "ct-topic-H3", 0]);
MGCAddTopic(["id391e7448-b55b-4fa3-94af-b717b58cd3e0", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id391e7448-b55b-4fa3-94af-b717b58cd3e0", 111, "cmd-arg", 0]);
MGCAddTopic(["ide1c298c3-7a01-461d-a443-6238fcad9f11", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__ide1c298c3-7a01-461d-a443-6238fcad9f11", 111, "cmd-arg", 0]);
MGCAddTopic(["id4ca257bb-b4df-45bf-9f51-7c74ad9c3e38", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id4ca257bb-b4df-45bf-9f51-7c74ad9c3e38", 111, "cmd-arg", 0]);
MGCAddTopic(["id6d47ed25-8c17-4d7c-be39-553b2a499d85", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id6d47ed25-8c17-4d7c-be39-553b2a499d85", 111, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id2a5359f4-88d8-4d95-a691-52f698f21c8b", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id2a5359f4-88d8-4d95-a691-52f698f21c8b", 111, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ide8b75af2-7c14-43b2-9fb7-4c3240ed898b", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__ide8b75af2-7c14-43b2-9fb7-4c3240ed898b", 111, "cmd-arg", 0]);
MGCAddTopic(["id7d1009eb-caa9-4034-b30b-f314b634f4d8", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id7d1009eb-caa9-4034-b30b-f314b634f4d8", 111, "cmd-arg", 0]);
MGCAddTopic(["id377bb785-9c56-4e6c-996b-66a1ba2697fb", "id3264cd45-53cf-4e93-aaf2-58b54bc28f14__id377bb785-9c56-4e6c-996b-66a1ba2697fb", 111, "cmd-arg", 0]);
MGCAddTopic(["MDP DATAPREP SVRF Statement", "idf5d086b5-0b0e-40a0-a7c3-88be11bf76ec", 112, "", 0]);
MGCAddTopic(["idf5d086b5-0b0e-40a0-a7c3-88be11bf76ec", "idf5d086b5-0b0e-40a0-a7c3-88be11bf76ec", 112, "", 0]);
MGCAddTopic(["MDP DATAPREP", "iddd1d8798-3edb-4423-9d97-41aeb066515e", 113, "", 0]);
MGCAddTopic(["Mask Type and Inputs", "id152920f2-0c63-44f6-b3b8-49f76af7ea81", 113, "", 0]);
MGCAddTopic(["iddd1d8798-3edb-4423-9d97-41aeb066515e", "iddd1d8798-3edb-4423-9d97-41aeb066515e", 113, "", 0]);
MGCAddTopic(["id930731d0-aecc-4f1f-9631-62c2f18b1f78", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id930731d0-aecc-4f1f-9631-62c2f18b1f78", 113, "cmd-arg", 0]);
MGCAddTopic(["id5faa9fe9-f775-43e7-9220-6ff51bb30c05", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id5faa9fe9-f775-43e7-9220-6ff51bb30c05", 113, "cmd-arg", 0]);
MGCAddTopic(["id7657535e-a395-463b-ab02-967993496708", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id7657535e-a395-463b-ab02-967993496708", 113, "cmd-arg-ul-2", 0]);
MGCAddTopic(["ida5c5272c-656f-4ea5-a169-bdb040b92467", "iddd1d8798-3edb-4423-9d97-41aeb066515e__ida5c5272c-656f-4ea5-a169-bdb040b92467", 113, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id0fda2114-361d-413a-a5b8-ff1d5e3de93b", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id0fda2114-361d-413a-a5b8-ff1d5e3de93b", 113, "", 0]);
MGCAddTopic(["id5dc44657-9c39-4353-8e7f-6569665231b1", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id5dc44657-9c39-4353-8e7f-6569665231b1", 113, "", 0]);
MGCAddTopic(["id95d16535-8bd3-4c02-871b-176cbbac64b9", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id95d16535-8bd3-4c02-871b-176cbbac64b9", 113, "", 0]);
MGCAddTopic(["id9901e806-ea26-4032-b8fc-8adec9b7cf1e", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id9901e806-ea26-4032-b8fc-8adec9b7cf1e", 113, "", 0]);
MGCAddTopic(["id2b69addc-79a6-413b-b862-8ededbdbac38", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id2b69addc-79a6-413b-b862-8ededbdbac38", 113, "", 0]);
MGCAddTopic(["id76f80f1a-22d3-42ea-91a2-644774bbe270", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id76f80f1a-22d3-42ea-91a2-644774bbe270", 113, "", 0]);
MGCAddTopic(["id9de5bb4c-20d9-469e-a0c3-7175df7fb45e", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id9de5bb4c-20d9-469e-a0c3-7175df7fb45e", 113, "", 0]);
MGCAddTopic(["id87b2c2c4-8e94-4e5f-bae4-3d72c32f90e5", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id87b2c2c4-8e94-4e5f-bae4-3d72c32f90e5", 113, "", 0]);
MGCAddTopic(["ida551c966-32e1-4e3b-8924-1f69302b1e70", "iddd1d8798-3edb-4423-9d97-41aeb066515e__ida551c966-32e1-4e3b-8924-1f69302b1e70", 113, "", 0]);
MGCAddTopic(["idb9832f09-3df1-4e18-83ef-e9797e9a26a6", "iddd1d8798-3edb-4423-9d97-41aeb066515e__idb9832f09-3df1-4e18-83ef-e9797e9a26a6", 113, "", 0]);
MGCAddTopic(["idf5504d1d-b99b-4a91-b7f2-cd8c6d3caddd", "iddd1d8798-3edb-4423-9d97-41aeb066515e__idf5504d1d-b99b-4a91-b7f2-cd8c6d3caddd", 113, "", 0]);
MGCAddTopic(["id30a67fc1-8e5a-435a-8c46-ab6bbb7b0e53", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id30a67fc1-8e5a-435a-8c46-ab6bbb7b0e53", 113, "", 0]);
MGCAddTopic(["id63429906-b944-456a-b6d7-93859d928a66", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id63429906-b944-456a-b6d7-93859d928a66", 113, "", 0]);
MGCAddTopic(["id152920f2-0c63-44f6-b3b8-49f76af7ea81", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id152920f2-0c63-44f6-b3b8-49f76af7ea81", 113, "", 0]);
MGCAddTopic(["id9cba830a-2d26-4919-99f4-33ef6aaa471c", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id9cba830a-2d26-4919-99f4-33ef6aaa471c", 113, "", 0]);
MGCAddTopic(["id81cda991-6dbb-4ebc-b31c-3bcb0b461d98", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id81cda991-6dbb-4ebc-b31c-3bcb0b461d98", 113, "", 0]);
MGCAddTopic(["id59a41cb4-a83b-4fe8-9b28-1c4bf025b8a1", "iddd1d8798-3edb-4423-9d97-41aeb066515e__id59a41cb4-a83b-4fe8-9b28-1c4bf025b8a1", 113, "", 0]);
MGCAddTopic(["ide7136c12-e100-4790-a1b3-f916179c0f52", "iddd1d8798-3edb-4423-9d97-41aeb066515e__ide7136c12-e100-4790-a1b3-f916179c0f52", 113, "", 0]);
MGCAddTopic(["Calibre MASKOPT", "idd93e2241-53b2-4038-aaae-25f261de0e4b", 114, "mgcsec-H1", 0]);
MGCAddTopic(["idd93e2241-53b2-4038-aaae-25f261de0e4b", "idd93e2241-53b2-4038-aaae-25f261de0e4b", 114, "", 0]);
MGCAddTopic(["The Calibre MASKOPT Setup File", "id70e8cac9-991a-403f-8d39-18d4daa06158", 115, "ref-H2", 0]);
MGCAddTopic(["id70e8cac9-991a-403f-8d39-18d4daa06158", "id70e8cac9-991a-403f-8d39-18d4daa06158", 115, "ref-topic-H2", 0]);
MGCAddTopic(["idd2e6e3a2-1833-4eca-b274-d630f56da3de", "id70e8cac9-991a-403f-8d39-18d4daa06158__idd2e6e3a2-1833-4eca-b274-d630f56da3de", 115, "ref-topic-H2", 0]);
MGCAddTopic(["id1552b6c4-2971-466d-bed8-2629eb42b1fe", "id70e8cac9-991a-403f-8d39-18d4daa06158__id1552b6c4-2971-466d-bed8-2629eb42b1fe", 115, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id61aba6b0-34d0-4bc7-a76d-884b0a8e693f", "id70e8cac9-991a-403f-8d39-18d4daa06158__id61aba6b0-34d0-4bc7-a76d-884b0a8e693f", 115, "ref-body-ul-1", 0]);
MGCAddTopic(["id6cef1de4-226c-432e-9d0d-e3eabb76588d", "id70e8cac9-991a-403f-8d39-18d4daa06158__id6cef1de4-226c-432e-9d0d-e3eabb76588d", 115, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id4e439c9b-fb58-41de-8875-b6249133b196", "id70e8cac9-991a-403f-8d39-18d4daa06158__id4e439c9b-fb58-41de-8875-b6249133b196", 115, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id644c8d50-2ed9-4b9f-814d-3410930d676f", "id70e8cac9-991a-403f-8d39-18d4daa06158__id644c8d50-2ed9-4b9f-814d-3410930d676f", 115, "ref-body-ul-1", 0]);
MGCAddTopic(["id9ed51dba-893d-40ba-9a0a-deda03b96742", "id70e8cac9-991a-403f-8d39-18d4daa06158__id9ed51dba-893d-40ba-9a0a-deda03b96742", 115, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["iddc79c30a-d546-43ca-af3d-088485dc8459", "id70e8cac9-991a-403f-8d39-18d4daa06158__iddc79c30a-d546-43ca-af3d-088485dc8459", 115, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["Calibre MASKOPT Commands", "id6272dcd0-b412-439c-a7ef-c7880642f0a3", 116, "mgcsec-H2", 0]);
MGCAddTopic(["Calibre MASKOPT Commands", "id8b669bdb-80ab-475f-9801-1440755a2a09", 116, "TableTitle", 0]);
MGCAddTopic(["id6272dcd0-b412-439c-a7ef-c7880642f0a3", "id6272dcd0-b412-439c-a7ef-c7880642f0a3", 116, "ct-topic-H2", 0]);
MGCAddTopic(["id8b669bdb-80ab-475f-9801-1440755a2a09", "id6272dcd0-b412-439c-a7ef-c7880642f0a3__id8b669bdb-80ab-475f-9801-1440755a2a09", 116, "ct-topic-H2", 0]);
MGCAddTopic(["LITHO MASKOPT", "id57434e37-d599-4c88-b16c-9ca6e89692b3", 117, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id57434e37-d599-4c88-b16c-9ca6e89692b3", "id57434e37-d599-4c88-b16c-9ca6e89692b3", 117, "ct-topic-H3", 0]);
MGCAddTopic(["idb4d1dd3c-79b7-4fd4-bd8c-8368e4c1b4f8", "id57434e37-d599-4c88-b16c-9ca6e89692b3__idb4d1dd3c-79b7-4fd4-bd8c-8368e4c1b4f8", 117, "cmd-arg", 0]);
MGCAddTopic(["idc3273351-d16e-4135-9331-31c12d04b85a", "id57434e37-d599-4c88-b16c-9ca6e89692b3__idc3273351-d16e-4135-9331-31c12d04b85a", 117, "cmd-arg", 0]);
MGCAddTopic(["idf42d4385-4df2-4daf-9827-e6e739c7e152", "id57434e37-d599-4c88-b16c-9ca6e89692b3__idf42d4385-4df2-4daf-9827-e6e739c7e152", 117, "cmd-arg", 0]);
MGCAddTopic(["id8400732b-47d1-48e7-bf61-6bfdb9b913eb", "id57434e37-d599-4c88-b16c-9ca6e89692b3__id8400732b-47d1-48e7-bf61-6bfdb9b913eb", 117, "cmd-arg", 0]);
MGCAddTopic(["setlayer mdp_maskopt", "id90630090-f9ca-4df8-affc-9cc71f55165d", 118, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Illustration of MDP MASKOPT Arguments", "id649f4cb3-a9ea-481e-9fcd-42573fa6d4cd", 118, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id90630090-f9ca-4df8-affc-9cc71f55165d", "id90630090-f9ca-4df8-affc-9cc71f55165d", 118, "ct-topic-H3", 0]);
MGCAddTopic(["id3724d0f8-3a57-47c2-a310-d7ffd23a36db", "id90630090-f9ca-4df8-affc-9cc71f55165d__id3724d0f8-3a57-47c2-a310-d7ffd23a36db", 118, "cmd-arg", 0]);
MGCAddTopic(["idb318542d-e6f6-4994-93b3-4e9368a8155e", "id90630090-f9ca-4df8-affc-9cc71f55165d__idb318542d-e6f6-4994-93b3-4e9368a8155e", 118, "cmd-arg", 0]);
MGCAddTopic(["idfd230c9d-c2d1-4705-a475-d3dab3ecf328", "id90630090-f9ca-4df8-affc-9cc71f55165d__idfd230c9d-c2d1-4705-a475-d3dab3ecf328", 118, "cmd-arg", 0]);
MGCAddTopic(["id7d246523-2dc5-426f-8d75-15b8c13f7674", "id90630090-f9ca-4df8-affc-9cc71f55165d__id7d246523-2dc5-426f-8d75-15b8c13f7674", 118, "cmd-arg", 0]);
MGCAddTopic(["idfebf1dd4-d438-415f-81e8-8ca4b1373cc7", "id90630090-f9ca-4df8-affc-9cc71f55165d__idfebf1dd4-d438-415f-81e8-8ca4b1373cc7", 118, "cmd-arg", 0]);
MGCAddTopic(["id7117fe44-7d25-4030-aa8f-60fc6e2e508c", "id90630090-f9ca-4df8-affc-9cc71f55165d__id7117fe44-7d25-4030-aa8f-60fc6e2e508c", 118, "cmd-arg", 0]);
MGCAddTopic(["id489fbfc8-6d14-4d28-a8df-c9f4cd5f4fb4", "id90630090-f9ca-4df8-affc-9cc71f55165d__id489fbfc8-6d14-4d28-a8df-c9f4cd5f4fb4", 118, "cmd-arg", 0]);
MGCAddTopic(["id649f4cb3-a9ea-481e-9fcd-42573fa6d4cd", "id90630090-f9ca-4df8-affc-9cc71f55165d__id649f4cb3-a9ea-481e-9fcd-42573fa6d4cd", 118, "ct-topic-H3", 0]);
MGCAddTopic(["direct_input", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8", 119, "", 0]);
MGCAddTopic(["ide8d878e4-4d40-46d3-b4a9-48a8427e88b8", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8", 119, "", 0]);
MGCAddTopic(["idb1d9da88-3785-4b7c-8750-003183fa65bd", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__idb1d9da88-3785-4b7c-8750-003183fa65bd", 119, "cmd-arg", 0]);
MGCAddTopic(["id3b5d9bf4-b47b-40e3-85ee-8701fb5b6209", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__id3b5d9bf4-b47b-40e3-85ee-8701fb5b6209", 119, "", 0]);
MGCAddTopic(["id0599b339-104c-43de-822e-3fbfae0e8f79", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__id0599b339-104c-43de-822e-3fbfae0e8f79", 119, "cmd-arg", 0]);
MGCAddTopic(["ida034f4a4-5343-4def-86fc-f20595745f2a", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__ida034f4a4-5343-4def-86fc-f20595745f2a", 119, "cmd-argdesc", 0]);
MGCAddTopic(["id81a88ffb-de73-4486-995c-440c2eee245e", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__id81a88ffb-de73-4486-995c-440c2eee245e", 119, "cmd-argdesc", 0]);
MGCAddTopic(["idb2b5a3f7-5179-4d2f-ade6-47b44fba6ca9", "ide8d878e4-4d40-46d3-b4a9-48a8427e88b8__idb2b5a3f7-5179-4d2f-ade6-47b44fba6ca9", 119, "cmd-argdesc", 0]);
MGCAddTopic(["direct_output", "id9c27672a-f488-450a-a5d0-255f93eefb84", 120, "", 0]);
MGCAddTopic(["id9c27672a-f488-450a-a5d0-255f93eefb84", "id9c27672a-f488-450a-a5d0-255f93eefb84", 120, "", 0]);
MGCAddTopic(["id9676bc9c-26c0-4873-a8f5-29b9c322c7e0", "id9c27672a-f488-450a-a5d0-255f93eefb84__id9676bc9c-26c0-4873-a8f5-29b9c322c7e0", 120, "", 0]);
MGCAddTopic(["id77af815f-adeb-4152-93bf-bb99a3de8701", "id9c27672a-f488-450a-a5d0-255f93eefb84__id77af815f-adeb-4152-93bf-bb99a3de8701", 120, "", 0]);
MGCAddTopic(["id36f126c3-4111-4ca9-af5e-73fba3533ea2", "id9c27672a-f488-450a-a5d0-255f93eefb84__id36f126c3-4111-4ca9-af5e-73fba3533ea2", 120, "", 0]);
MGCAddTopic(["id9cd758d2-a297-4796-8d95-44d782c0f9c3", "id9c27672a-f488-450a-a5d0-255f93eefb84__id9cd758d2-a297-4796-8d95-44d782c0f9c3", 120, "", 0]);
MGCAddTopic(["idec2ef68e-e467-43f6-8abb-bf79292b330e", "id9c27672a-f488-450a-a5d0-255f93eefb84__idec2ef68e-e467-43f6-8abb-bf79292b330e", 120, "", 0]);
MGCAddTopic(["idf60499e4-7a53-4dbc-9e93-d7f6a1609cde", "id9c27672a-f488-450a-a5d0-255f93eefb84__idf60499e4-7a53-4dbc-9e93-d7f6a1609cde", 120, "", 0]);
MGCAddTopic(["id1040c256-f909-4328-a341-d3905d2140b2", "id9c27672a-f488-450a-a5d0-255f93eefb84__id1040c256-f909-4328-a341-d3905d2140b2", 120, "", 0]);
MGCAddTopic(["id14d3adee-6f46-4fd3-828d-c1f42184d8cb", "id9c27672a-f488-450a-a5d0-255f93eefb84__id14d3adee-6f46-4fd3-828d-c1f42184d8cb", 120, "", 0]);
MGCAddTopic(["id3b01468c-41dd-4f7a-af4d-da448337bd10", "id9c27672a-f488-450a-a5d0-255f93eefb84__id3b01468c-41dd-4f7a-af4d-da448337bd10", 120, "", 0]);
MGCAddTopic(["idfca41520-99da-412b-a7bf-a2ce5271855e", "id9c27672a-f488-450a-a5d0-255f93eefb84__idfca41520-99da-412b-a7bf-a2ce5271855e", 120, "", 0]);
MGCAddTopic(["id7e09ca5e-83b1-4ee7-80e2-66b2c6030517", "id9c27672a-f488-450a-a5d0-255f93eefb84__id7e09ca5e-83b1-4ee7-80e2-66b2c6030517", 120, "", 0]);
MGCAddTopic(["Limitations", "Limitations", 120, "", 0]);
MGCAddTopic(["Odd-Multiple Grid Sizing", "id30d010ee-6db5-43d0-b5a1-958cdd614706", 121, "mgcsec-H1Apndx", 0]);
MGCAddTopic(["id30d010ee-6db5-43d0-b5a1-958cdd614706", "id30d010ee-6db5-43d0-b5a1-958cdd614706", 121, "", 0]);
MGCAddTopic(["Understanding Odd-Multiple Grid Sizing", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e", 122, "con-H2", 0]);
MGCAddTopic(["Off-Grid Data Caused by Odd-Multiple Sizing", "idf9f49532-2a58-4441-ae26-65ed41c2d8b8", 122, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Snapping Corrects Off-Grid Data", "id4faf6aed-a70d-494d-bd3c-eee96b443aa6", 122, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Center-Shifting After Snapping", "idd2477810-bebe-41e7-b4fd-30875974e38c", 122, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e", 122, "con-topic-H2", 0]);
MGCAddTopic(["idf9f49532-2a58-4441-ae26-65ed41c2d8b8", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e__idf9f49532-2a58-4441-ae26-65ed41c2d8b8", 122, "con-topic-H2", 0]);
MGCAddTopic(["id4faf6aed-a70d-494d-bd3c-eee96b443aa6", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e__id4faf6aed-a70d-494d-bd3c-eee96b443aa6", 122, "con-topic-H2", 0]);
MGCAddTopic(["idd2477810-bebe-41e7-b4fd-30875974e38c", "id987d0bd4-241f-4e1e-bfce-a9b73a8c5f8e__idd2477810-bebe-41e7-b4fd-30875974e38c", 122, "con-topic-H2", 0]);
MGCAddTopic(["Adjustments for Odd-Multiple Grid Sizing", "id86d6f396-b305-497d-9b00-4db2fe8a2461", 123, "con-H2", 0]);
MGCAddTopic(["Shifting the Center by Adjusting the Region", "id5fbeb530-8f98-4136-ab3e-8762fad395f5", 123, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Border-Aware Sizing", "id9c209783-024c-423c-ac0e-61c038319b0f", 123, "con-L0-FigureTitle", 0]);
MGCAddTopic(["Border-Aware Odd-Multiple Shrinking", "id551cc051-d3ab-45dc-ab7f-f42854087aa6", 123, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id86d6f396-b305-497d-9b00-4db2fe8a2461", "id86d6f396-b305-497d-9b00-4db2fe8a2461", 123, "con-topic-H2", 0]);
MGCAddTopic(["id5fbeb530-8f98-4136-ab3e-8762fad395f5", "id86d6f396-b305-497d-9b00-4db2fe8a2461__id5fbeb530-8f98-4136-ab3e-8762fad395f5", 123, "con-topic-H2", 0]);
MGCAddTopic(["id9c209783-024c-423c-ac0e-61c038319b0f", "id86d6f396-b305-497d-9b00-4db2fe8a2461__id9c209783-024c-423c-ac0e-61c038319b0f", 123, "con-topic-H2", 0]);
MGCAddTopic(["id551cc051-d3ab-45dc-ab7f-f42854087aa6", "id86d6f396-b305-497d-9b00-4db2fe8a2461__id551cc051-d3ab-45dc-ab7f-f42854087aa6", 123, "con-topic-H2", 0]);
MGCAddTopic(["List of Exceptions", "id9afc1760-cd82-4c8b-a3d0-eb3f6539b3f2", 124, "mgcsec-H1Apndx", 0]);
MGCAddTopic(["id9afc1760-cd82-4c8b-a3d0-eb3f6539b3f2", "id9afc1760-cd82-4c8b-a3d0-eb3f6539b3f2", 124, "", 0]);
MGCAddTopic(["Transcript Messages", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea", 125, "ref-H2", 0]);
MGCAddTopic(["id8ef67c2a-654c-4a49-8ea7-982196c9c8ea", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea", 125, "ref-topic-H2", 0]);
MGCAddTopic(["id9b26a296-9959-4a1b-b925-9a8780cb71d9", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea__id9b26a296-9959-4a1b-b925-9a8780cb71d9", 125, "ref-topic-H2", 0]);
MGCAddTopic(["idd1a31c41-d7bb-460e-be74-5d66706d8e44", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea__idd1a31c41-d7bb-460e-be74-5d66706d8e44", 125, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id7204d40a-9118-4179-a286-34bc59f3f7d7", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea__id7204d40a-9118-4179-a286-34bc59f3f7d7", 125, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["id21beba7c-e722-47ed-9381-d6c412f687cb", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea__id21beba7c-e722-47ed-9381-d6c412f687cb", 125, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["ida3a68729-2b90-4718-a09e-301a7976b740", "id8ef67c2a-654c-4a49-8ea7-982196c9c8ea__ida3a68729-2b90-4718-a09e-301a7976b740", 125, "ref-body-B1, ref-body-L1", 0]);
MGCAddTopic(["Status Values", "id6815dc82-5400-4c73-8c0b-0e903e89a8ce", 126, "ref-H2", 0]);
MGCAddTopic(["Calibre MDP Status Values", "id8d8495ca-a0b5-4d1c-a7c2-c9aa8f55bf13", 126, "TableTitle", 0]);
MGCAddTopic(["id6815dc82-5400-4c73-8c0b-0e903e89a8ce", "id6815dc82-5400-4c73-8c0b-0e903e89a8ce", 126, "ref-topic-H2", 0]);
MGCAddTopic(["idbdb7638a-dc8e-44ed-bb9d-1a41a3ba3613", "id6815dc82-5400-4c73-8c0b-0e903e89a8ce__idbdb7638a-dc8e-44ed-bb9d-1a41a3ba3613", 126, "ref-topic-H2", 0]);
MGCAddTopic(["id8d8495ca-a0b5-4d1c-a7c2-c9aa8f55bf13", "id6815dc82-5400-4c73-8c0b-0e903e89a8ce__id8d8495ca-a0b5-4d1c-a7c2-c9aa8f55bf13", 126, "ref-topic-H2", 0]);
MGCAddTopic(["MDP Best Practices", "id6e036faa-612e-498c-84ba-07a7f6e677df", 127, "mgcsec-H1Apndx", 0]);
MGCAddTopic(["id6e036faa-612e-498c-84ba-07a7f6e677df", "id6e036faa-612e-498c-84ba-07a7f6e677df", 127, "", 0]);
MGCAddTopic(["General Recommendations for MDP Tools", "idcc79a047-d490-4c59-b31a-0e7859b1fefd", 128, "mgcsec-H2", 0]);
MGCAddTopic(["idcc79a047-d490-4c59-b31a-0e7859b1fefd", "idcc79a047-d490-4c59-b31a-0e7859b1fefd", 128, "ct-topic-H2", 0]);
MGCAddTopic(["id9615b713-c0a0-456e-89ac-672315c77a79", "idcc79a047-d490-4c59-b31a-0e7859b1fefd__id9615b713-c0a0-456e-89ac-672315c77a79", 128, "ct-topic-H2", 0]);
MGCAddTopic(["Input Preparation for DDE", "idc42a5e73-6703-4aaa-9092-50559d36e1ac", 129, "con-H3NoSplit", 0]);
MGCAddTopic(["idc42a5e73-6703-4aaa-9092-50559d36e1ac", "idc42a5e73-6703-4aaa-9092-50559d36e1ac", 129, "con-topic-H3", 0]);
MGCAddTopic(["id5bcca93e-0f4c-41e2-9705-76a91ac25c38", "idc42a5e73-6703-4aaa-9092-50559d36e1ac__id5bcca93e-0f4c-41e2-9705-76a91ac25c38", 129, "con-topic-H3", 0]);
MGCAddTopic(["id006734ed-f19e-4fde-bcd7-1944ffb92263", "idc42a5e73-6703-4aaa-9092-50559d36e1ac__id006734ed-f19e-4fde-bcd7-1944ffb92263", 129, "con-topic-H3", 0]);
MGCAddTopic(["id6ff933a9-a469-4e85-905d-739d93fbc4ab", "idc42a5e73-6703-4aaa-9092-50559d36e1ac__id6ff933a9-a469-4e85-905d-739d93fbc4ab", 129, "con-topic-H3", 0]);
MGCAddTopic(["idb1db2eff-ad74-44de-a8ad-855bd34d4fd0", "idc42a5e73-6703-4aaa-9092-50559d36e1ac__idb1db2eff-ad74-44de-a8ad-855bd34d4fd0", 129, "con-topic-H3", 0]);
MGCAddTopic(["Indexing and Injection for OASIS Files", "id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6", 130, "con-H3NoSplit", 0]);
MGCAddTopic(["id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6", "id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6", 130, "con-topic-H3", 0]);
MGCAddTopic(["idd06c7d4c-0506-4f10-830c-c985565dac2e", "id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6__idd06c7d4c-0506-4f10-830c-c985565dac2e", 130, "con-topic-H3", 0]);
MGCAddTopic(["idd6b98edc-e52e-4186-a7b5-bfb8c3fe5af8", "id6d6f5e9c-51a2-43be-a2d5-be88d7ae46a6__idd6b98edc-e52e-4186-a7b5-bfb8c3fe5af8", 130, "con-topic-H3", 0]);
MGCAddTopic(["Parallel DDE Run Recommendations", "id853ac6e5-5a33-4f6b-b851-087e063ec51b", 131, "con-H3NoSplit", 0]);
MGCAddTopic(["id853ac6e5-5a33-4f6b-b851-087e063ec51b", "id853ac6e5-5a33-4f6b-b851-087e063ec51b", 131, "con-topic-H3", 0]);
MGCAddTopic(["id897ec96f-a2c0-4c00-ae3a-60554de096ec", "id853ac6e5-5a33-4f6b-b851-087e063ec51b__id897ec96f-a2c0-4c00-ae3a-60554de096ec", 131, "con-topic-H3", 0]);
MGCAddTopic(["idc12bb9d1-ca13-4ceb-8159-1636cab5c57e", "id853ac6e5-5a33-4f6b-b851-087e063ec51b__idc12bb9d1-ca13-4ceb-8159-1636cab5c57e", 131, "con-topic-H3", 0]);
MGCAddTopic(["Reduce Data Size to Address RAM Issues", "idfb180312-b78f-42a9-aedc-e0bcae9fe128", 132, "con-H3NoSplit", 0]);
MGCAddTopic(["idfb180312-b78f-42a9-aedc-e0bcae9fe128", "idfb180312-b78f-42a9-aedc-e0bcae9fe128", 132, "con-topic-H3", 0]);
MGCAddTopic(["id40f6f10e-56a5-4f0b-b4b6-c6532926060a", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id40f6f10e-56a5-4f0b-b4b6-c6532926060a", 132, "con-topic-H3", 0]);
MGCAddTopic(["idb12a5ded-84a9-47e3-8d5a-f23a8aef2a64", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__idb12a5ded-84a9-47e3-8d5a-f23a8aef2a64", 132, "con-topic-H3", 0]);
MGCAddTopic(["id8b35a53a-ff80-487f-89fd-850ff73aa3da", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id8b35a53a-ff80-487f-89fd-850ff73aa3da", 132, "con-topic-H3", 0]);
MGCAddTopic(["id4816d938-d47e-4a2b-9005-7ed2665fd47d", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id4816d938-d47e-4a2b-9005-7ed2665fd47d", 132, "con-topic-H3", 0]);
MGCAddTopic(["id746de941-02bc-48e4-84fc-5d80921fca14", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id746de941-02bc-48e4-84fc-5d80921fca14", 132, "con-topic-H3", 0]);
MGCAddTopic(["id99c1de0c-cbb9-45ad-8ec1-4648a5d8ceb3", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id99c1de0c-cbb9-45ad-8ec1-4648a5d8ceb3", 132, "con-topic-H3", 0]);
MGCAddTopic(["idd008c212-ebca-4bcb-9545-44d61635c575", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__idd008c212-ebca-4bcb-9545-44d61635c575", 132, "con-topic-H3", 0]);
MGCAddTopic(["id57cda949-55db-4297-9383-ff8c80d296a7", "idfb180312-b78f-42a9-aedc-e0bcae9fe128__id57cda949-55db-4297-9383-ff8c80d296a7", 132, "con-topic-H3", 0]);
MGCAddTopic(["Global Fracture Best Practices", "id00ff9ce8-8910-4352-acab-54bb28b857bf", 133, "mgcsec-H2", 0]);
MGCAddTopic(["id00ff9ce8-8910-4352-acab-54bb28b857bf", "id00ff9ce8-8910-4352-acab-54bb28b857bf", 133, "ct-topic-H2", 0]);
MGCAddTopic(["id22e9b5d1-2922-44bf-930b-68862e152796", "id00ff9ce8-8910-4352-acab-54bb28b857bf__id22e9b5d1-2922-44bf-930b-68862e152796", 133, "ct-topic-H2", 0]);
MGCAddTopic(["idc4022d36-737c-4445-8c91-7a7cf70f8454", "id00ff9ce8-8910-4352-acab-54bb28b857bf__idc4022d36-737c-4445-8c91-7a7cf70f8454", 133, "ct-topic-H2", 0]);
MGCAddTopic(["id08b28cbe-caf4-470a-8bbe-a0b2f64bba74", "id00ff9ce8-8910-4352-acab-54bb28b857bf__id08b28cbe-caf4-470a-8bbe-a0b2f64bba74", 133, "ct-topic-H2", 0]);
MGCAddTopic(["id12dd8ad6-34fe-4f3d-b526-20b9367dd115", "id00ff9ce8-8910-4352-acab-54bb28b857bf__id12dd8ad6-34fe-4f3d-b526-20b9367dd115", 133, "ct-topic-H2", 0]);
MGCAddTopic(["ide5da0c6f-a0fc-451f-bf13-9bd9ed89fbe1", "id00ff9ce8-8910-4352-acab-54bb28b857bf__ide5da0c6f-a0fc-451f-bf13-9bd9ed89fbe1", 133, "ct-topic-H2", 0]);
MGCAddTopic(["id72bf858e-4625-483d-9af1-0cc8e17d9eac", "id00ff9ce8-8910-4352-acab-54bb28b857bf__id72bf858e-4625-483d-9af1-0cc8e17d9eac", 133, "ct-topic-H2", 0]);
MGCAddTopic(["Common Fracture Settings", "id76cae090-752f-48fc-ba4e-4e833b532213", 134, "con-H3NoSplit", 0]);
MGCAddTopic(["id76cae090-752f-48fc-ba4e-4e833b532213", "id76cae090-752f-48fc-ba4e-4e833b532213", 134, "con-topic-H3", 0]);
MGCAddTopic(["idc0b28aab-384d-41c5-bf5c-8a89b726883d", "id76cae090-752f-48fc-ba4e-4e833b532213__idc0b28aab-384d-41c5-bf5c-8a89b726883d", 134, "con-topic-H3", 0]);
MGCAddTopic(["ida64d3541-17f5-4675-a8b0-32185b7dddff", "id76cae090-752f-48fc-ba4e-4e833b532213__ida64d3541-17f5-4675-a8b0-32185b7dddff", 134, "con-topic-H3", 0]);
MGCAddTopic(["idc8ca8ea8-3c0e-4d85-9139-c686e79276a9", "id76cae090-752f-48fc-ba4e-4e833b532213__idc8ca8ea8-3c0e-4d85-9139-c686e79276a9", 134, "con-topic-H3", 0]);
MGCAddTopic(["ided484e21-e5b3-4fcd-9a66-5dbe60c316ab", "id76cae090-752f-48fc-ba4e-4e833b532213__ided484e21-e5b3-4fcd-9a66-5dbe60c316ab", 134, "con-topic-H3", 0]);
MGCAddTopic(["id348ae21f-0171-47ab-9d5c-d241b83ebf58", "id76cae090-752f-48fc-ba4e-4e833b532213__id348ae21f-0171-47ab-9d5c-d241b83ebf58", 134, "con-topic-H3", 0]);
MGCAddTopic(["Avoid Bottlenecks During Fracture", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7", 135, "con-H3NoSplit", 0]);
MGCAddTopic(["id50ff8168-eed7-4ee5-9f37-81eb28426ed7", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7", 135, "con-topic-H3", 0]);
MGCAddTopic(["ida9fbf8d4-0e25-4ae2-b02a-911f25fb185b", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__ida9fbf8d4-0e25-4ae2-b02a-911f25fb185b", 135, "con-topic-H3", 0]);
MGCAddTopic(["ide052f363-7137-44e3-b7a3-dec1d925999c", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__ide052f363-7137-44e3-b7a3-dec1d925999c", 135, "con-topic-H3", 0]);
MGCAddTopic(["idc42328f3-f29d-47f8-a600-84fd22b89a77", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__idc42328f3-f29d-47f8-a600-84fd22b89a77", 135, "con-topic-H3", 0]);
MGCAddTopic(["id67a8a240-043c-4847-a496-ad2354c73aaa", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id67a8a240-043c-4847-a496-ad2354c73aaa", 135, "con-topic-H3", 0]);
MGCAddTopic(["idcf5804e2-1fe9-49b1-b88d-9e66c3b511d1", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__idcf5804e2-1fe9-49b1-b88d-9e66c3b511d1", 135, "con-topic-H3", 0]);
MGCAddTopic(["id8e73f958-f17a-42e6-abc4-3468ecdf4cc0", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id8e73f958-f17a-42e6-abc4-3468ecdf4cc0", 135, "con-topic-H3", 0]);
MGCAddTopic(["id7485c714-78bc-4051-ad8f-dc0ba6fcb8ee", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id7485c714-78bc-4051-ad8f-dc0ba6fcb8ee", 135, "con-topic-H3", 0]);
MGCAddTopic(["idb5e2e232-7b29-4249-990b-e44372704c8b", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__idb5e2e232-7b29-4249-990b-e44372704c8b", 135, "con-topic-H3", 0]);
MGCAddTopic(["id2a48e2fe-09c2-4a06-84f2-20b2dcb2bfbb", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id2a48e2fe-09c2-4a06-84f2-20b2dcb2bfbb", 135, "con-topic-H3", 0]);
MGCAddTopic(["id56701bb1-d7af-40f6-8d8a-22651c12bb4b", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id56701bb1-d7af-40f6-8d8a-22651c12bb4b", 135, "con-topic-H3", 0]);
MGCAddTopic(["id35784052-8170-4493-8ffd-2c9da9e48f96", "id50ff8168-eed7-4ee5-9f37-81eb28426ed7__id35784052-8170-4493-8ffd-2c9da9e48f96", 135, "con-topic-H3", 0]);
MGCAddTopic(["VSB Fracture and Calibre MDPview", "id73d8f56b-0582-4127-ba53-8f1b40a09aa0", 136, "con-H3", 0]);
MGCAddTopic(["id73d8f56b-0582-4127-ba53-8f1b40a09aa0", "id73d8f56b-0582-4127-ba53-8f1b40a09aa0", 136, "con-topic-H3", 0]);
MGCAddTopic(["id71dbe48b-d57c-4595-844c-f1205e4c8aee", "id73d8f56b-0582-4127-ba53-8f1b40a09aa0__id71dbe48b-d57c-4595-844c-f1205e4c8aee", 136, "con-topic-H3", 0]);
MGCAddTopic(["ide477e309-4771-43c3-9cf6-63bd2e548c83", "id73d8f56b-0582-4127-ba53-8f1b40a09aa0__ide477e309-4771-43c3-9cf6-63bd2e548c83", 136, "con-topic-H3", 0]);
MGCAddTopic(["Calibre FRACTUREt Best Practices", "id90b80253-0f00-41d1-8378-5ed50e17703f", 137, "con-H2", 0]);
MGCAddTopic(["id90b80253-0f00-41d1-8378-5ed50e17703f", "id90b80253-0f00-41d1-8378-5ed50e17703f", 137, "con-topic-H2", 0]);
MGCAddTopic(["ida02a3f1e-ce82-43c5-a87a-b68d5440655f", "id90b80253-0f00-41d1-8378-5ed50e17703f__ida02a3f1e-ce82-43c5-a87a-b68d5440655f", 137, "con-topic-H2", 0]);
MGCAddTopic(["idbedf1ebc-0b77-4f84-855e-de9974ad1aff", "id90b80253-0f00-41d1-8378-5ed50e17703f__idbedf1ebc-0b77-4f84-855e-de9974ad1aff", 137, "con-topic-H2", 0]);
MGCAddTopic(["MDP EMBED Best Practices", "id0f1f461f-f351-4c31-8f2d-c68aca79b57d", 138, "con-H2", 0]);
MGCAddTopic(["id0f1f461f-f351-4c31-8f2d-c68aca79b57d", "id0f1f461f-f351-4c31-8f2d-c68aca79b57d", 138, "con-topic-H2", 0]);
MGCAddTopic(["DENSITY CONVOLVE Best Practices", "id00d97663-6951-4f61-8a6b-2a88bb33360f", 139, "con-H2", 0]);
MGCAddTopic(["id00d97663-6951-4f61-8a6b-2a88bb33360f", "id00d97663-6951-4f61-8a6b-2a88bb33360f", 139, "con-topic-H2", 0]);
MGCAddTopic(["id431ded31-3129-4fa1-9ddb-5d6cf501afb0", "id00d97663-6951-4f61-8a6b-2a88bb33360f__id431ded31-3129-4fa1-9ddb-5d6cf501afb0", 139, "con-topic-H2", 0]);
MGCAddTopic(["id9c6033f2-8166-42a9-9fbd-e56a755ce3d7", "id00d97663-6951-4f61-8a6b-2a88bb33360f__id9c6033f2-8166-42a9-9fbd-e56a755ce3d7", 139, "con-topic-H2", 0]);
MGCAddTopic(["Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 140, "", 0]);
MGCAddTopic(["id6cba59fd-c0f7-4513-b3e9-78d1422af93e", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 140, "", 0]);

//
// Load index data

//
// Load snippet data
MGCAddSnippet(1, "Title Page");
MGCAddSnippet(2, "List of Figures");
MGCAddSnippet(3, "List of Tables");
MGCAddSnippet(4, "Calibre Mask Data Preparation (MDP) is a series of command-line-based tools used to generate, correct, verify, and analyze photomask layouts. ");
MGCAddSnippet(5, "Calibre MDP tools are used to create data for mask writers, inspection, and metrology tools, and to evaluate the compliance and quality of a data set to the mask making limits prior to manufacturing.");
MGCAddSnippet(6, "The Calibre MDP product line completes the integrated flow from IC design to IC mask manufacturing. The Calibre MDP tool suite allows for seamless continuation of the data manipulations required for Resolution Enhancement Techniques (RET) such as Phase Shift Mask (PSM), Scattering Bars (SB), and Optical Process Correction (OPC) to the mask data format conversion in one batch run. ");
MGCAddSnippet(7, "There are a number of prerequisites before using Calibre MDP utilities.");
MGCAddSnippet(8, "The command descriptions use font properties and several metacharacters to document the command syntax.");
MGCAddSnippet(9, "The Calibre FRACTURE operation converts layer data into MEBES, JEOL, Hitachi, Micronic, Nuflare, NUFLARE_MBF, OASIS.MASK, OASIS.MAPPER, and OASIS.MBW formatted data. You define as input to the FRACTURE Standard Verification Rule Format (SVRF) a rectangular section of a Calibre polygon layer. The polygons on the layer are optionally modified and converted to trapezoids. The trapezoids are then transformed to new coordinate and unit systems, and rearranged into the hierarchy of the requested format. These trapezoids are then output in the fracture format.");
MGCAddSnippet(10, "The basic workflow for using Calibre FRACTURE is comprised of two fundamental steps.");
MGCAddSnippet(11, "The Calibre FRACTURE software is executed in the Calibre nmDRC hierarchical engine. You invoke this engine using the calibre command from a UNIX command line. ");
MGCAddSnippet(12, "The Calibre FRACTURE operation converts layer data into MEBES, JEOL, Hitachi, Micronic, Nuflare, NUFLARE_MBF, OASIS.MASK, OASIS.MAPPER, and OASIS_MBW formatted data. ");
MGCAddSnippet(13, "All Calibre FRACTURE commands use a common syntax structure.");
MGCAddSnippet(14, "There is a common list of arguments that apply to all FRACTURE formats.");
MGCAddSnippet(15, "There are several arguments that are common for vector beam FRACTURE formats only.");
MGCAddSnippet(16, "SVRF mask data preparation command for Hitachi formats.");
MGCAddSnippet(17, "SVRF mask data preparation command for JEOL formats.");
MGCAddSnippet(18, "SVRF mask data preparation command for MEBES formats.");
MGCAddSnippet(19, "SVRF mask data preparation command for Micronic formats.");
MGCAddSnippet(20, "SVRF mask data preparation command for Nuflare formats. ");
MGCAddSnippet(21, "The VSB11 format for FRACTURE NUFLARE has its own specific arguments.");
MGCAddSnippet(22, "The VSB12 V1-specific format for FRACTURE NUFLARE has its own set of keywords. There are two versions of the VSB12 format. The V1 format is the original VSB12 format. The V2 format uses a more streamlined subset of the original VSB12 keyword set.");
MGCAddSnippet(23, "The VSB12i-specific format for FRACTURE NUFLARE has its own specific keywords. VSB12i is similar to the VBS12 format, but also supports compression and allows attribute information assignment to the trapezoids for dose-based mask process corrections.");
MGCAddSnippet(24, "Thee VSB12 V2 format for FRACTURE NUFLARE has its own specific keywords. There are two versions of the VSB12 format. The V1 format is the original VSB12 format. The V2 format uses a more streamlined subset of the original VSB12 keyword set. Note that the frame-splitting feature is not supported for V2, and you must instead specify the minimum frame width (128 um) to ensure a legal VSB12 output file.");
MGCAddSnippet(25, "SVRF mask data preparation command for NUFLARE_MBF formats. NUFLARE_MBF is a fracture format for Nuflare multibeam machines. The format is similar to VSB12i with additional constructs.");
MGCAddSnippet(26, "SVRF mask data preparation command for OASIS.MAPPER formats. OASIS.MAPPER is the proprietary file format for MAPPER Lithography.");
MGCAddSnippet(27, "SVRF mask data preparation command for the OASIS.MASK format.");
MGCAddSnippet(28, "SVRF mask data preparation command for OASIS.MBW formats. OASIS.MBW is a mask writer format for IMS machines compatible with OASIS.MASK format. All utilities that accept OASIS.MASK also work with OASIS.MBW.");
MGCAddSnippet(29, "Calibre MDP can be run on the CalibreFullScale platform. However, there are some limitations.");
MGCAddSnippet(30, "CalibreMDP Embedded SVRF provides a method of performing SVRF operations for section-based processing of design databases.");
MGCAddSnippet(31, "Section-based processing is a method of data processing that partitions design databases into uniformly sized  sections  of data to be processed independently of each other. This method of processing is primarily intended for large databases that have very little or no hierarchical cell efficiency. Because of this, section-based processing is typically used for post-OPC data operations such as Fracture and Mask Rule Checking (MRC).");
MGCAddSnippet(32, "Calibre MDP gives you the ability to embed a group of SVRF commands within a FRACTURE or MDPVERIFY statement. This allows you to combine other mask data operations efficiently into the same section processing.");
MGCAddSnippet(33, "The MDP EMBED command provides section-based processing for some SVRF commands, essentially providing section-based DRC capability.");
MGCAddSnippet(34, "SVRF mask data preparation command for section-based processing.");
MGCAddSnippet(35, "There is a subset of SVRF operations that can be embedded into a FRACTURE, MDPVERIFY, MDP EMBED, or DENSITY CONVOLVE statement.");
MGCAddSnippet(36, "The BOUND keyword is used to enable unlimited range SVRF operations inside of embedded SVRF and, with the value parameter, allow user control to define the range in which the execution of the operation occurs. ");
MGCAddSnippet(37, "If you have an existing rule file and want to implement section processing, the original rules must be split into those that go either inside or outside the embedded SVRF block. ");
MGCAddSnippet(38, "You can create multiple layer and multiple file outputs in MDP EMBED and MDPVERIFY using embedded SVRF.");
MGCAddSnippet(39, "Results from MDP EMBED can be directed to a Hierarchical Database (HDB) or directly to an OASIS file (Direct Data Output, or DDO) file using the following methods:");
MGCAddSnippet(40, "FRACTURE and MDP EMBED operations are treated independently and may run on a different processor count. To reflect this behavior, the output transcript includes a [DPCn] string that is used to differentiate between the individual MDP EMBED and FRACTURE operations. These strings appear in the licensing portion of the transcript, as well as the processor count printed at the end of the transcript. For example:");
MGCAddSnippet(41, "Before invoking the fracture software, you can perform various preprocessing tasks on mask data using functionality provided by the Calibre nmDRC hierarchical engine. There are several SVRF statements and operations that are most applicable to mask data preparation. ");
MGCAddSnippet(42, "Specification statements in a rule file identify the layout data to be processed, provide some basic information about how it is to be processed, and specify where to store the output. The following SVRF excerpt shows some specification statements taken from a rule file. The sections that follow describe some of the statements you can use.");
MGCAddSnippet(43, "Layout statements define the database(s) on which the Calibre nmDRC hierarchical engine operates. ");
MGCAddSnippet(44, "Unit statements provide information about the database unit precision and resolution. ");
MGCAddSnippet(45, "Layer specification statements make data in the design database available to the Calibre nmDRC hierarchical engine. During any run, the application ignores all data except the layers specified using these statements.");
MGCAddSnippet(46, "DRC statements let you specify how the Calibre nmDRC hierarchical engine treats the results of SVRF operations. ");
MGCAddSnippet(47, "Flag statements let you control how the Calibre nmDRC hierarchical engine responds to certain types of errors. ");
MGCAddSnippet(48, "Layer operations and layer creation statements isolate specific layer data and modify that data to generate new data. Some operate on a single layer, some on a pair of layers. When deciding which operation to use, think in terms of what each operates on and what it does with that data.");
MGCAddSnippet(49, "Layer selectors are operations that select existing data that meet the specified criteria. They may select data from one layer or from all specified layers. Some select polygons; others select edges.");
MGCAddSnippet(50, "Layer constructors are operations that create new data by modifying existing data. Some construct polygon data from existing polygons. Others create polygon data from existing edges.");
MGCAddSnippet(51, "Layer creation statements let you store the results from a layer operation as a derived layer, which you can reference in other layer operations.");
MGCAddSnippet(52, "There are a number of SVRF key concepts that apply for mask data preparation operations.");
MGCAddSnippet(53, "Each FRACTURE operation generates an output file in the proper format and does not return any data to the Calibre nmDRC hierarchical engine. Because the data is not returned to the Calibre engine, the MEBES or JEOL output is not considered to be Calibre results. This does not mean that Calibre results are not relevant to fracturing. There are several types of results generated by the Calibre nmDRC Hierarchical engine. ");
MGCAddSnippet(54, "This database stores the results of Calibre operations performed either before or after invoking the Calibre FRACTURE software. ");
MGCAddSnippet(55, "When you specify a pathname using the DRC SUMMARY REPORT statement, the Calibre nmDRC hierarchical engine generates a results summary text file and saves it to this file. The file contains heading information, describing the particulars of the run, runtime warnings list, statistics for the layers before and after processing, and a runtime summary.");
MGCAddSnippet(56, "The Calibre nmDRC hierarchical engine automatically generates a text transcript at runtime and sends the transcript to stdout, which is typically the shell window from which you invoked the application. During the Calibre run, the transcript displays event logs, warning messages, and summary information. This transcript documents the tasks the application performs: compiling the rule file, loading in the design data, and operating on that data. It is good practice to save the transcript by redirecting the output to a file, which you can do when you invoke Calibre, by using the pipe/tee syntax, as illustrated:");
MGCAddSnippet(57, "The Calibre nmDRC hierarchical engine distinguishes between four types of layers:");
MGCAddSnippet(58, "Each Calibre SVRF operation operates on either polygon data or edge data or both. As you classify and manipulate data with SVRF, you must pay close attention to the type of data each operation returns: edge layers or polygon layers. ");
MGCAddSnippet(59, "Because polygon reference data associates each edge with a specific polygon, you must pay close attention to the layer of origin, that is, where the data comes from. For example, it might appear that the following layer definitions produce the same data in the layer X:");
MGCAddSnippet(60, "Dimension checks are the most commonly used types of SVRF operations when performing rule checks. These operations measure distances between opposing edges. Because dimension checks allow you to classify edges based on key properties, such as width and spacing, they serve as the foundation for all RET- related processing.");
MGCAddSnippet(61, "The Calibre nmDRC hierarchical engine begins the measurement process by evaluating all the edges on the layer (or pair of layers) to find  appropriate  edge pairs, that is, all pairs of edges that meet the criteria for the operation. The first criterion relates to the orientation of the edges. Each dimension check measures from a specific side of the first edge to a specific side of the second edge:");
MGCAddSnippet(62, "Once the Calibre nmDRC hierarchical engine has identified pairs of edges that meet the criteria, it creates measurement regions for each of the edges in a pair. The application uses measurement regions to measure the separation between edges. Each measurement region extends in the direction of the dimension check, either outside or inside. It contains all points in that direction such that the distance from the edge satisfies the constraint for the operation.");
MGCAddSnippet(63, "The final step in performing the dimension check returns those portions of the edges that intersect the measurement region for the opposing edge. Because the measurement region for edge A does not contain the line containing edge A, dimension checks do not return any existing points of intersection.");
MGCAddSnippet(64, "When preparing mask data for fracturing, you are very likely to need to size the data. Depending on the tool you are using, you may be used to giving the size value per shape, or per edge. With the Calibre SIZE operation you specify the size value per edge. The sizing value must be an integer multiple of the PRECISION defined in the rule deck used to perform the sizing.");
MGCAddSnippet(65, "There are a number of examples of real-life mask data pre-processing tasks, including examples of how you can perform these tasks using SVRF.");
MGCAddSnippet(66, "Both the Size, Shrink, and Grow operations in SVRF perform simple sizing on the entire fracture region in which the border (or bounding box) is sized as well.");
MGCAddSnippet(67, "Reversing the tone of a mask is a common task that must be performed properly in order to guarantee mask fidelity. You can perform tone reversal either using SVRF (before fracturing or in embedded SVRF) or as part of the fracture process, using the reverse_tone keyword. ");
MGCAddSnippet(68, "There are a number of examples available that illustrate proper usage of the FRACTURE operation.:");
MGCAddSnippet(69, "The following is an example MEBES fracture operation.");
MGCAddSnippet(70, "The following illustrates an example JEOL fracture operation.");
MGCAddSnippet(71, "The following illustrates an example VSB11 fracture operation.");
MGCAddSnippet(72, "The following illustrates an example HITACHI fracture operation.");
MGCAddSnippet(73, "The following illustrates an example Micronic fracture operation.");
MGCAddSnippet(74, "The following illustrates an example OASIS.MASK fracture operation.");
MGCAddSnippet(75, "Calibre MDPverify is a Calibre application that allows you to evaluate fractured MDP data by performing different data comparisons.");
MGCAddSnippet(76, "Calibre MDPverify inputs are summarized in the following table.");
MGCAddSnippet(77, "The output of the Calibre MDPverify operation is a one or more derived layers in the Calibre database.You can use this layer in subsequent operations or write it to the Calibre results database. ");
MGCAddSnippet(78, "SVRF mask data preparation command used to verify fractured data.");
MGCAddSnippet(79, "When the shift option is not specified, the behavior of Calibre MDPverify depends on the type of comparison being performed:");
MGCAddSnippet(80, "The MDPVERIFY operation provides transformation controls to ensure that the data you are comparing is the same scale, same orientation, and has the same relative origin.");
MGCAddSnippet(81, "After fracturing, the fractured data can differ from the original data using a number of different methods.");
MGCAddSnippet(82, "If you know the transformations that were applied when generating the fractured files from the original layout for both files, you can use these transformations as input to the MDPVERIFY operation.");
MGCAddSnippet(83, "Comparisons of two Nuflare (VSB11, VSB12, VSB12i, and NUFLARE_MBF) job decks (verify_type VSBJOB2VSBJOB) have the following limitations which differentiate them from fractured-data-to-database and fractured-data-to-fractured-data verifications.");
MGCAddSnippet(84, "The shift keyword lets you shift the data as part of the conversion into the Calibre database format so that it aligns with the data to which it is being compared. ");
MGCAddSnippet(85, "Calibre MDPverify performs automatic shift alignment when comparing external fracture data to an internal Calibre layer and you do not specify the shift keyword in your MDPVERIFY statement.");
MGCAddSnippet(86, "The following is an example of comparing the same region in two files with different origins.");
MGCAddSnippet(87, "One problem you are likely to encounter related to shifting, is comparing two fractured files using the default value for shift but not the default value for the verification region (as specified using INSIDE OF).");
MGCAddSnippet(88, "You specify the portion of the data to be verified or compared by defining the verification region in terms of the Calibre database grid. Because all data must be converted into the Calibre database format before comparison, it is the one representation common to all data. Calibre MDPverify isolates the verification region AFTER the data is transformed and converted into the Calibre database format. Thus, if you have set the transformation controls properly the fractured data is aligned with each other and the verification region identifies the same portion of the design in both sets of data.");
MGCAddSnippet(89, "The following contains sample rule files used to perform several comparisons. Each example begins with the same layout database. However, the transformations applied when fracturing the data may vary.");
MGCAddSnippet(90, "This example creates a MEBES pattern file from a layer, then compares it to the original layer.");
MGCAddSnippet(91, "This example creates a MEBES pattern file from a layer, then compares it to the MEBES file generated in Example 1 from the same layer. ");
MGCAddSnippet(92, "This example creates a JEOL pattern file from a GDS layer, then compares it to the MEBES file generated in Example 1 from the same GDS layer.");
MGCAddSnippet(93, "A Calibre MDPmerge operation reads a job deck and merges individual chips and chip placements into a single chip and placement based on certain criteria. The output is a new job deck consisting of the merged chips and copies of chips that did not meet the merge criteria.");
MGCAddSnippet(94, "For multithreaded operations, Calibre MDPmerge uses one license for the first CPU, and an additional one license per four CPUs. There is no substitute license for Calibre MDPmerge.");
MGCAddSnippet(95, "A number of limitations apply to Calibre MDPmerge.");
MGCAddSnippet(96, "Calibre MDPmerge recommends that you specify the scale value for put, multiput, or matrixput commands in your VSB job deck within a particular range.");
MGCAddSnippet(97, "SVRF mask data preparation command that reads a job deck and merges individual chips and chip placements into a single chip and chip placement.");
MGCAddSnippet(98, "You can use the Calibre MDPview tool for job viewing and visual verification. Calibre MDPview supports a number of job deck parameters and commands for VSB11.");
MGCAddSnippet(99, "The MDPSTAT SVRF operation analyzes Hitachi, JEOL, Micronic and VSB formatted data based on the following criteria, allowing you to assess the quality of the fracture output.");
MGCAddSnippet(100, "Calibre MDPstat reports its statistical information in the Calibre nmDRC-H Executive Module section of the transcript.");
MGCAddSnippet(101, "SVRF mask data preparation command used to generate statistical information.");
MGCAddSnippet(102, "Calibre MDP provides a number of utility commands relating to mask process correction (MPC), OASIS bin injection, and computing the extent of an OASIS layout, and generating input for data-to-database detection software.");
MGCAddSnippet(103, "Mask CD (Critical Dimension) errors are caused by various types of effects including e-beam blur, electron scattering, and etch loading. These effects are caused by different physical mechanisms, and they also affect mask CD errors on very different length scales.");
MGCAddSnippet(104, "The DENSITY CONVOLVE SVRF statement allows you to create a representation of your input layer that shows density values after applying convolution algorithms. Convolution is a mathematical procedure that produces a weighted moving average of two functions, in this case it evaluates the density value of a density window by taking into consideration the values of those windows surrounding it. Therefore the density values are  spread out  to nearby density windows.");
MGCAddSnippet(105, "SVRF mask data preparation command that applies a convolution algorithm to input layers to represent density values");
MGCAddSnippet(106, "The MDP MAPSIZE SVRF statement allows you to variably resize elements of your layout based on their geographical locations, which are determined by map-size regions. The sizing values are selected as a response to the strength of a physical process effect that requires a data-based correction. Examples are density-based process-loading effects and variation of processing by radial location within a particular machine.");
MGCAddSnippet(107, "SVRF mask data preparation command to resize layout elements based on geographical locations");
MGCAddSnippet(108, "The MDP CHECKMAP SVRF statement is used primarily for OASIS bin injection. The command outputs single or multiple layers and datatypes with bin injection for large cells. The criteria for bin injection are based on the physical extent and geometry content of a cell.");
MGCAddSnippet(109, "SVRF mask data preparation command used output layers and data types with bin injection for large cells");
MGCAddSnippet(110, "The MDP OASIS_EXTENT SVRF operation computes the extent of an OASIS layout. The extent can be calculated for a subset of the layout defined in terms of a combination of layer and datatype numbers called layout_subset. Each extent is written to the desired output layer as a rectangle.");
MGCAddSnippet(111, "SVRF mask data preparation command that computes the extent of an OASIS layout");
MGCAddSnippet(112, "MDP DATAPREP is an SVRF command used to generate input for data-to-database detection software. ");
MGCAddSnippet(113, "SVRF mask data preparation command that generates input for data-to-database detection software. ");
MGCAddSnippet(114, "CalibreMASKOPT is a licensed utility that modifies the input geometry to improve fracture quality. Constrained jog movements are applied to form polygons which, when fractured, have fewer shot counts and fewer small figures than the initial fractured polygons.");
MGCAddSnippet(115, "To use Calibre MASKOPT, create a Calibre MASKOPT setup file (a LITHO FILE command block) to be included as part of your Calibre MDP rule deck. ");
MGCAddSnippet(116, "The following table lists the required Calibre MASKOPT setup file commands.");
MGCAddSnippet(117, "SVRF mask data preparation command that defines a LITHO batch operation");
MGCAddSnippet(118, "SVRF mask data preparation command that modifies the input geometry to improve fracture quality");
MGCAddSnippet(119, "Enables Direct Data Entry (DDE) for Calibre MASKOPT. ");
MGCAddSnippet(120, "Enables direct data output of OASIS files. Used with litho-flat configurations only.");
MGCAddSnippet(121, "Sizing data by an odd multiple of address units before fracturing results in that data being off-grid relative to the fracture address unit grid. This has an impact on your data and there are some possible work-arounds that allow you to retain your chosen address unit for optimum mask writing time.");
MGCAddSnippet(122, "The SIZE operation sizes each edge rather than the entire polygon. Because of this, to size an entire polygon by N using the SIZE operation, you must size each edge by (N/2). ");
MGCAddSnippet(123, "In order to maintain alignment within the job deck, each of the fractured files must have its center in the same position relative to the centers of the fractured data as in the original data. ");
MGCAddSnippet(124, "Exceptions are errors or warnings issued due to bad input or parameters. They can occur at the beginning of the program or during program execution, and can be both fatal and non-fatal. Calibre communicates exceptions by messages in the transcript and by the process exit code.");
MGCAddSnippet(125, "Error messages always contain the string  ERROR: , and warning messages always contain the string  WARNING:  However, messages issued from MDP commands such as FRACTURE, MDP EMBED, MDPMERGE, MDPVERIFY, and MDPSTAT use additional MDP-specific text strings. ");
MGCAddSnippet(126, "The following table describes the possible status values.");
MGCAddSnippet(127, "This appendix contains a summary of tips, best practices, and recommendations for MDP.");
MGCAddSnippet(128, "There are a number of recommendations for all MDP tools.");
MGCAddSnippet(129, "Direct Data Entry (DDE) is a method of input where you can bypass the hierarchical database constructor, HDB, and instead take input directly from a specified OASIS.MASK file using the vboasis_path command. ");
MGCAddSnippet(130, "For a given OASIS input file in MDP, it is recommended that you perform pre-indexing and pre-injection on the input file. ");
MGCAddSnippet(131, "In UNIX, the same file cannot be written by two processes at the same time. Since indexing and bin injecting a file requires writing files whose paths are a function solely of the input file, simultaneous indexing and injection by two Calibre processes are not supported. If you want to run parallel Calibre jobs that use DDE (and by extension indexing and injection) on the same input file, care must be taken. There are two modes of operation recommended:");
MGCAddSnippet(132, "In cases where you experience RAM issues, such as a high remote LVHEAP or, in the worst case, remotes going into SWAP, the best method is to reduce the data being sent to the remotes. There are a number of ways you can accomplish this for Calibre Fracture, Calibre MDPverify, and MDP EMBED operations.");
MGCAddSnippet(133, "There are best practices that apply to all fracture formats.");
MGCAddSnippet(134, "There are a number of common settings used for fracture operations.");
MGCAddSnippet(135, "To avoid bottlenecks that may occur during Fracture processing, you should use the an optimized configuration.");
MGCAddSnippet(136, "There are a number of best practices for VSB Fracture and Calibre MDPview.");
MGCAddSnippet(137, "There are a number of best practices recommended for the Calibre FRACTUREt format.");
MGCAddSnippet(138, "Do not use maximum_output_count (used to limit the number of output shapes) for layer generation jobs as your results may be incomplete.");
MGCAddSnippet(139, "There are a number of best practices recommended for DENSITY CONVOLVE,");
MGCAddSnippet(140, "Details on open source and third-party software that may be included with this product are available in the <your_software_installation_location>/legal directory.");

//
//
MGCFrame.BookData[handle]['DataLoaded'] = true;
//
//

// Load search data
//
AddSWrd('d', '$design_dir', [73,2]);
AddSWrd('m', '$mes', [116,15]);
AddSWrd('m', '$mjal', [116,15]);
AddSWrd('m', '$mjar', [116,15]);
AddSWrd('m', '$mjw', [116,15]);
AddSWrd('symbol', '----------------', [99,4 , 39,2]);
AddSWrd('symbol', '-----------------------------------------------------------------', [13,10]);
AddSWrd('symbol', '--------------------------------------------------------------------------------', [13,20]);
AddSWrd('num', '-0.03', [65,2]);
AddSWrd('num', '-0.1', [106,5]);
AddSWrd('num', '-0.3', [106,5]);
AddSWrd('num', '-0.5', [106,5]);
AddSWrd('num', '-1000', [69,2]);
AddSWrd('num', '-12', [100,5 , 104,10 , 12,5 , 77,10]);
AddSWrd('num', '-123', [100,5 , 104,10 , 12,5 , 77,10]);
AddSWrd('num', '-135.000000', [13,10]);
AddSWrd('num', '-200', [70,4]);
AddSWrd('num', '-200.000000', [13,10]);
AddSWrd('num', '-2000', [82,4]);
AddSWrd('num', '-270', [89,4 , 90,4 , 91,4]);
AddSWrd('num', '-335.000000', [13,10]);
AddSWrd('num', '-400', [89,4 , 90,4 , 91,4]);
AddSWrd('num', '-4305', [114,5]);
AddSWrd('num', '-440.000000', [13,10]);
AddSWrd('num', '-4489', [114,5]);
AddSWrd('num', '-5000', [68,4]);
AddSWrd('num', '-523.500', [110,5]);
AddSWrd('num', '-556.500', [110,5]);
AddSWrd('num', '-6.50', [104,5]);
AddSWrd('num', '-670', [89,4 , 90,4 , 91,4]);
AddSWrd('num', '-760', [69,2]);
AddSWrd('num', '-76200', [82,8]);
AddSWrd('num', '-880', [89,4 , 90,4 , 91,4]);
AddSWrd('c', '-cblock', [33,45 , 77,25]);
AddSWrd('c', '-comparison_region', [77,25]);
AddSWrd('d', '-data_search_path', [33,25 , 104,10]);
AddSWrd('d', '-directin', [77,70]);
AddSWrd('d', '-dosemap', [16,20 , 22,20 , 26,20 , 27,20]);
AddSWrd('d', '-drc', [55,2 , 10,45]);
AddSWrd('d', '-dump', [13,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('e', '-ejobdeck_clipping_severity', [33,25]);
AddSWrd('e', '-ejobdeck_pattern_suffix', [33,25 , 104,10]);
AddSWrd('e', '-exclude_region', [117,15]);
AddSWrd('e', '-explicit', [33,35 , 77,35]);
AddSWrd('f', '-fastindex', [33,50 , 104,15 , 13,15 , 77,35 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('f', '-file', [77,10]);
AddSWrd('f', '-file1', [77,90]);
AddSWrd('f', '-file2', [77,90]);
AddSWrd('f', '-file_differences', [77,25]);
AddSWrd('f', '-file_read_error', [77,25]);
AddSWrd('f', '-force', [33,25 , 13,10]);
AddSWrd('f', '-framechip', [112,35]);
AddSWrd('h', '-hier', [55,2 , 10,45 , 28,2]);
AddSWrd('i', '-index', [33,25]);
AddSWrd('l', '-levels', [104,10]);
AddSWrd('m', '-magnify', [33,25]);
AddSWrd('m', '-max_jog_alignment', [114,5 , 116,15 , 117,20]);
AddSWrd('m', '-max_jog_area', [114,5 , 116,15 , 117,20]);
AddSWrd('m', '-max_jog_width', [114,5 , 116,15 , 117,20]);
AddSWrd('m', '-maximum_vertex', [33,45 , 77,25]);
AddSWrd('m', '-min_edge_separation', [114,5 , 116,15 , 117,5]);
AddSWrd('m', '-min_edge_seperation', [117,15]);
AddSWrd('n', '-nocheck', [33,50 , 104,15 , 13,15 , 77,35 , 110,15 , 15,5 , 16,5 , 17,5 , 18,5 , 114,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('n', '-noview', [129,4]);
AddSWrd('p', '-parallelcblocks', [33,25]);
AddSWrd('p', '-persection', [33,45]);
AddSWrd('p', '-precision', [33,25]);
AddSWrd('p', '-preserve', [128,2 , 33,40 , 104,25 , 13,10 , 77,25 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('p', '-pto', [10,15]);
AddSWrd('r', '-rdb', [33,35]);
AddSWrd('r', '-remotedata', [25,10]);
AddSWrd('r', '-remotefile', [9,2 , 10,25]);
AddSWrd('r', '-rw-r--r-', [70,2]);
AddSWrd('r', '-rwxr-xr-x', [70,18]);
AddSWrd('s', '-shift_value_overflow', [77,25]);
AddSWrd('s', '-size', [128,4 , 33,50 , 104,25 , 13,15 , 77,25 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('s', '-size_factor', [128,2 , 33,40 , 104,25 , 13,10 , 77,25 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('s', '-suppress_from_header', [17,15]);
AddSWrd('t', '-topcell', [33,25 , 13,30 , 77,35 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('t', '-turbo', [55,2 , 9,2 , 10,85]);
AddSWrd('t', '-turbo_all', [10,45]);
AddSWrd('t', '-turbo_litho', [55,2 , 10,45]);
AddSWrd('w', '-withindex', [13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('symbol', '...', [104,10]);
AddSWrd('num', '.0001', [104,10]);
AddSWrd('num', '.00025', [79,2]);
AddSWrd('num', '.001', [114,5]);
AddSWrd('num', '.00125', [79,2]);
AddSWrd('num', '.005', [79,2]);
AddSWrd('num', '.025', [17,5]);
AddSWrd('num', '.25', [79,4]);
AddSWrd('m', '.:mb:om', [104,10]);
AddSWrd('e', '.evi', [17,15]);
AddSWrd('f', '.fvi', [13,5]);
AddSWrd('g', '.gz', [33,10 , 13,5 , 77,10]);
AddSWrd('i', '.iph', [15,20]);
AddSWrd('l', '.la', [18,5]);
AddSWrd('l', '.lcb', [33,10 , 118,20 , 134,2 , 104,10 , 13,5 , 77,10]);
AddSWrd('o', '.oas', [33,20]);
AddSWrd('p', '.pf', [12,5 , 13,10]);
AddSWrd('p', '.pfh', [15,20]);
AddSWrd('p', '.pfh3', [15,20]);
AddSWrd('x', '.xvi', [17,10]);
AddSWrd('num', '0-0', [33,10 , 13,5 , 77,10]);
AddSWrd('num', '0-3', [110,10]);
AddSWrd('num', '0.0', [16,5 , 35,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('num', '0.000075', [114,5 , 117,5]);
AddSWrd('num', '0.0004', [116,5 , 132,2]);
AddSWrd('num', '0.0005', [17,5]);
AddSWrd('num', '0.001', [81,2 , 132,2 , 21,15 , 22,20 , 23,15 , 24,25]);
AddSWrd('num', '0.00125', [82,2 , 20,15 , 22,5]);
AddSWrd('num', '0.001for', [24,5]);
AddSWrd('num', '0.004', [132,4 , 31,5]);
AddSWrd('num', '0.005', [81,2 , 114,5 , 77,20]);
AddSWrd('num', '0.007', [102,2]);
AddSWrd('num', '0.008', [102,2]);
AddSWrd('num', '0.01', [70,2]);
AddSWrd('num', '0.010', [81,2 , 114,5 , 116,5 , 117,5 , 102,2 , 90,2]);
AddSWrd('num', '0.011', [102,2]);
AddSWrd('num', '0.012', [102,2]);
AddSWrd('num', '0.013', [102,2]);
AddSWrd('num', '0.015', [114,5 , 117,5]);
AddSWrd('num', '0.02', [68,2 , 31,5]);
AddSWrd('num', '0.020', [89,2]);
AddSWrd('num', '0.025', [17,5 , 81,2 , 13,10]);
AddSWrd('num', '0.03', [65,4]);
AddSWrd('num', '0.035', [114,5 , 117,5]);
AddSWrd('num', '0.05', [33,40 , 114,5 , 12,5]);
AddSWrd('num', '0.05um', [133,2]);
AddSWrd('num', '0.0800', [116,10]);
AddSWrd('num', '0.1', [37,6 , 69,2 , 70,2 , 71,2 , 104,15 , 13,10 , 14,10 , 15,5]);
AddSWrd('num', '0.100', [13,10]);
AddSWrd('num', '0.100000', [104,5]);
AddSWrd('num', '0.15', [99,2 , 14,10]);
AddSWrd('num', '0.150', [102,18]);
AddSWrd('num', '0.150000', [99,2]);
AddSWrd('num', '0.160', [102,8]);
AddSWrd('num', '0.2', [103,2 , 104,15 , 95,4]);
AddSWrd('num', '0.20', [104,10]);
AddSWrd('num', '0.200', [104,5]);
AddSWrd('num', '0.24', [14,5]);
AddSWrd('num', '0.25', [20,15 , 21,5 , 22,5 , 23,5 , 77,10]);
AddSWrd('num', '0.3', [103,4 , 104,20]);
AddSWrd('num', '0.35', [21,5 , 22,5 , 23,5]);
AddSWrd('num', '0.36', [35,5]);
AddSWrd('num', '0.4', [103,4 , 104,20]);
AddSWrd('num', '0.5', [16,5 , 99,4 , 21,20 , 22,20 , 23,20 , 24,25 , 104,10 , 15,5 , 95,4]);
AddSWrd('num', '0.500000', [99,2]);
AddSWrd('num', '0.6', [71,2 , 72,2 , 104,10]);
AddSWrd('num', '0.7', [104,10]);
AddSWrd('num', '0.700', [102,12]);
AddSWrd('num', '0.75', [16,10 , 22,10 , 26,10 , 27,10]);
AddSWrd('num', '0.8', [16,10 , 114,5 , 21,5 , 133,2 , 22,15 , 23,5 , 103,2 , 104,15 , 26,10 , 27,10]);
AddSWrd('num', '0.9', [104,10]);
AddSWrd('num', '000', [16,40 , 13,5 , 15,5]);
AddSWrd('num', '006.10%', [17,10]);
AddSWrd('num', '1-6', [110,10]);
AddSWrd('num', '1-area', [104,5]);
AddSWrd('num', '1.0', [16,30 , 33,10 , 35,10 , 22,30 , 24,25 , 104,50 , 26,30 , 27,55 , 13,5 , 77,10 , 95,8]);
AddSWrd('num', '1.00', [13,10]);
AddSWrd('num', '1.000', [35,10]);
AddSWrd('num', '1.000000', [99,2]);
AddSWrd('num', '1.1', [16,5 , 17,10 , 22,5 , 26,5 , 27,20]);
AddSWrd('num', '1.2', [16,10 , 22,10 , 26,10 , 27,25]);
AddSWrd('num', '1.200', [102,8]);
AddSWrd('num', '1.25', [70,2 , 79,2]);
AddSWrd('num', '1.25nm', [70,2]);
AddSWrd('num', '1.3', [16,10 , 22,10 , 26,10 , 27,10]);
AddSWrd('num', '1.4', [16,10 , 69,2 , 22,10 , 26,10 , 27,10]);
AddSWrd('num', '1.5tb', [25,5]);
AddSWrd('num', '1.5x', [33,10 , 13,5 , 77,10 , 14,10 , 110,10]);
AddSWrd('num', '1.6', [18,10 , 4,2 , 102,4 , 72,2]);
AddSWrd('num', '1.8', [18,10 , 4,2]);
AddSWrd('num', '10%', [13,10]);
AddSWrd('num', '10-6', [82,2]);
AddSWrd('num', '100', [33,25 , 66,2 , 104,90 , 15,10 , 81,6 , 114,10 , 116,5 , 118,5 , 25,10 , 27,5 , 91,2 , 124,5 , 125,5]);
AddSWrd('num', '100%', [25,20]);
AddSWrd('num', '100.000000', [104,5]);
AddSWrd('num', '1000', [132,4 , 69,2 , 70,2 , 71,2 , 72,2 , 73,2 , 13,15 , 77,10 , 15,5 , 16,35 , 81,2 , 18,5 , 82,2 , 25,40 , 89,2 , 26,25 , 90,2 , 27,15 , 91,2 , 33,15 , 102,2 , 104,15 , 41,2 , 106,5 , 43,10 , 108,15 , 45,5 , 110,10 , 114,10]);
AddSWrd('num', '1000.000000', [104,5]);
AddSWrd('num', '10000', [17,5 , 82,2 , 116,10 , 132,2 , 104,10 , 26,5 , 12,30]);
AddSWrd('num', '1000000000', [33,10]);
AddSWrd('num', '100nm', [70,2]);
AddSWrd('num', '101', [36,4]);
AddSWrd('num', '1023', [33,10 , 104,20 , 13,10 , 77,10 , 31,10]);
AddSWrd('num', '1024', [96,10 , 20,25 , 21,30 , 22,35 , 23,35 , 24,65 , 13,5 , 125,5]);
AddSWrd('num', '102400', [70,2]);
AddSWrd('num', '10736', [114,5]);
AddSWrd('num', '10x', [104,10]);
AddSWrd('num', '110000', [12,5]);
AddSWrd('num', '113', [124,5 , 125,5]);
AddSWrd('num', '116', [125,5]);
AddSWrd('num', '11:04:33', [39,2]);
AddSWrd('num', '11:28', [70,18]);
AddSWrd('num', '11:29', [70,4]);
AddSWrd('num', '11:44', [70,2]);
AddSWrd('num', '12.3096%', [17,5]);
AddSWrd('num', '12000', [82,2]);
AddSWrd('num', '120300', [116,5]);
AddSWrd('num', '120500', [116,5]);
AddSWrd('num', '123', [100,5 , 104,10 , 12,5 , 77,10]);
AddSWrd('num', '1234567890123456789012345', [17,5]);
AddSWrd('num', '1234567890123456789012345678901234567890', [17,10]);
AddSWrd('num', '1234567890123456789012345density', [17,5]);
AddSWrd('num', '125', [25,10]);
AddSWrd('num', '128', [114,10 , 20,20 , 21,70 , 22,65 , 23,65 , 24,35 , 125,5]);
AddSWrd('num', '12_v2', [114,5 , 23,10]);
AddSWrd('num', '12i', [22,5]);
AddSWrd('num', '130', [125,5]);
AddSWrd('num', '13000', [25,15]);
AddSWrd('num', '130000', [12,5]);
AddSWrd('num', '131', [125,5]);
AddSWrd('num', '132', [125,5]);
AddSWrd('num', '133', [125,5]);
AddSWrd('num', '138', [81,6]);
AddSWrd('num', '140', [125,5]);
AddSWrd('num', '141', [125,5]);
AddSWrd('num', '142', [125,5]);
AddSWrd('num', '147600', [70,2]);
AddSWrd('num', '14:10:41', [70,2]);
AddSWrd('num', '150', [125,5]);
AddSWrd('num', '152400', [112,30 , 33,30 , 104,20]);
AddSWrd('num', '160', [104,10]);
AddSWrd('num', '1600', [82,2 , 15,5]);
AddSWrd('num', '160300', [116,5]);
AddSWrd('num', '160500', [116,5]);
AddSWrd('num', '180', [100,10 , 13,10 , 77,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 91,4 , 60,2]);
AddSWrd('num', '1808', [70,2]);
AddSWrd('num', '199', [71,2 , 72,2]);
AddSWrd('num', '1e-6', [132,2 , 43,5]);
AddSWrd('num', '1nm', [22,5 , 24,10]);
AddSWrd('num', '2-cpu', [10,10]);
AddSWrd('num', '2.0', [16,5 , 21,5 , 22,5 , 26,5 , 27,25 , 13,10 , 14,5]);
AddSWrd('num', '2.1', [27,20]);
AddSWrd('num', '2.2', [25,20]);
AddSWrd('num', '2.4', [71,2 , 72,2]);
AddSWrd('num', '2.5', [15,5]);
AddSWrd('num', '2.8', [69,2]);
AddSWrd('num', '20%', [25,10]);
AddSWrd('num', '20.72%', [17,5]);
AddSWrd('num', '200', [70,2 , 25,20]);
AddSWrd('num', '2000', [16,20 , 114,5 , 104,5 , 13,10]);
AddSWrd('num', '2000000', [100,10 , 77,10]);
AddSWrd('num', '2001', [104,5]);
AddSWrd('num', '2002', [104,5]);
AddSWrd('num', '2003', [70,2 , 104,5]);
AddSWrd('num', '2004', [104,5]);
AddSWrd('num', '2005', [104,5]);
AddSWrd('num', '2006', [104,5]);
AddSWrd('num', '2007', [104,5]);
AddSWrd('num', '2008', [104,5]);
AddSWrd('num', '2009', [104,5]);
AddSWrd('num', '2010', [104,5]);
AddSWrd('num', '2013', [39,2]);
AddSWrd('num', '202436', [70,2]);
AddSWrd('num', '204124', [70,2]);
AddSWrd('num', '2048', [114,5]);
AddSWrd('num', '2054', [102,2]);
AddSWrd('num', '2120', [13,10]);
AddSWrd('num', '21271', [33,5]);
AddSWrd('num', '215', [114,5]);
AddSWrd('num', '216', [114,5]);
AddSWrd('num', '2182', [102,2]);
AddSWrd('num', '22820', [70,2]);
AddSWrd('num', '23400', [70,2]);
AddSWrd('num', '250', [16,10 , 32,2 , 112,15 , 128,2 , 33,10 , 104,25 , 25,10 , 26,5 , 27,5]);
AddSWrd('num', '255', [17,5]);
AddSWrd('num', '256', [20,60 , 21,30 , 22,15 , 23,15 , 24,50]);
AddSWrd('num', '26000.2', [25,5]);
AddSWrd('num', '26653', [33,5]);
AddSWrd('num', '270', [100,10 , 13,10 , 77,10 , 15,5 , 16,5 , 17,5 , 81,2 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('num', '27518.852', [104,5]);
AddSWrd('num', '294', [26,5 , 27,5]);
AddSWrd('num', '29565.584', [104,5]);
AddSWrd('num', '296', [26,5 , 27,5]);
AddSWrd('num', '2au', [122,2]);
AddSWrd('num', '2db', [77,10]);
AddSWrd('num', '2gb', [104,10 , 25,5 , 13,5 , 15,5]);
AddSWrd('num', '2vboasis', [77,10]);
AddSWrd('num', '3.0', [16,20 , 81,2 , 4,4 , 14,5]);
AddSWrd('num', '3.1', [16,15 , 4,2 , 69,2 , 13,10]);
AddSWrd('num', '300', [72,2]);
AddSWrd('num', '3000', [4,2]);
AddSWrd('num', '301', [104,5 , 106,15]);
AddSWrd('num', '302', [104,5 , 106,15]);
AddSWrd('num', '303', [104,5 , 106,15]);
AddSWrd('num', '306', [33,10]);
AddSWrd('num', '32-bit', [104,10 , 13,5 , 30,2]);
AddSWrd('num', '3200', [82,2]);
AddSWrd('num', '33000', [25,5]);
AddSWrd('num', '3375', [33,40 , 77,40]);
AddSWrd('num', '3427284562', [26,15 , 27,15]);
AddSWrd('num', '34695.968000', [104,5]);
AddSWrd('num', '3500', [114,5 , 4,2]);
AddSWrd('num', '36687.824', [104,5]);
AddSWrd('num', '388', [13,10]);
AddSWrd('num', '4.0', [16,5]);
AddSWrd('num', '40%', [25,10]);
AddSWrd('num', '40.04', [96,10]);
AddSWrd('num', '400', [106,5 , 13,10]);
AddSWrd('num', '4000', [16,5 , 33,5 , 4,2 , 79,2]);
AddSWrd('num', '4000000', [21,15 , 22,15 , 23,15 , 24,25]);
AddSWrd('num', '40100', [116,10]);
AddSWrd('num', '40724', [70,2]);
AddSWrd('num', '41100', [116,10]);
AddSWrd('num', '42140', [116,10]);
AddSWrd('num', '4294967295', [33,10 , 77,10]);
AddSWrd('num', '45-degree', [17,10 , 20,5 , 21,5 , 22,5 , 23,5 , 15,5]);
AddSWrd('num', '4500', [114,5]);
AddSWrd('num', '456', [100,5 , 104,10 , 12,5 , 77,10]);
AddSWrd('num', '45nm', [133,2]);
AddSWrd('num', '470', [16,5]);
AddSWrd('num', '4th', [104,10]);
AddSWrd('num', '5.8', [70,2]);
AddSWrd('num', '500', [16,25 , 131,6 , 69,4 , 25,10 , 26,5 , 27,5 , 13,10 , 77,10]);
AddSWrd('num', '5000', [68,4]);
AddSWrd('num', '50000', [17,5]);
AddSWrd('num', '5000000', [96,30]);
AddSWrd('num', '500um', [16,5]);
AddSWrd('num', '500umx500um', [18,5]);
AddSWrd('num', '501-504', [104,10]);
AddSWrd('num', '508', [104,10]);
AddSWrd('num', '512', [96,40 , 20,10 , 21,15 , 22,15 , 70,4 , 23,15 , 104,10]);
AddSWrd('num', '51200', [70,2]);
AddSWrd('num', '515', [116,30]);
AddSWrd('num', '5150', [116,15]);
AddSWrd('num', '523.500', [110,5]);
AddSWrd('num', '556.500', [110,5]);
AddSWrd('num', '59644', [70,2]);
AddSWrd('num', '5nm', [79,4]);
AddSWrd('num', '60%', [25,10]);
AddSWrd('num', '6000', [4,2]);
AddSWrd('num', '6382400', [70,2]);
AddSWrd('num', '6383232', [70,2]);
AddSWrd('num', '64-bit', [30,2]);
AddSWrd('num', '6400', [82,2]);
AddSWrd('num', '64000', [13,5]);
AddSWrd('num', '648832', [70,2]);
AddSWrd('num', '64gb', [15,10]);
AddSWrd('num', '65534', [17,5]);
AddSWrd('num', '67108864', [70,8]);
AddSWrd('num', '7000', [4,2]);
AddSWrd('num', '7000m', [4,2]);
AddSWrd('num', '702', [16,5]);
AddSWrd('num', '760', [69,2]);
AddSWrd('num', '8-cpu', [10,10]);
AddSWrd('num', '8.2', [104,5]);
AddSWrd('num', '80%', [25,10]);
AddSWrd('num', '800', [82,4 , 4,2 , 26,5 , 79,2]);
AddSWrd('num', '8000', [16,5 , 4,2 , 21,5]);
AddSWrd('num', '8000000', [16,5]);
AddSWrd('num', '800um', [16,5]);
AddSWrd('num', '81.91', [15,5]);
AddSWrd('num', '8191', [96,20 , 114,5 , 20,20 , 21,5]);
AddSWrd('num', '8191mb', [96,20 , 21,5 , 22,5 , 23,5 , 24,20]);
AddSWrd('num', '8192', [33,10 , 21,5 , 22,10 , 23,10 , 24,20 , 77,10]);
AddSWrd('num', '819200', [70,4]);
AddSWrd('num', '82um', [24,10]);
AddSWrd('num', '86920', [70,2]);
AddSWrd('num', '8gb', [15,5]);
AddSWrd('num', '900', [15,5]);
AddSWrd('num', '9000', [4,2 , 21,5]);
AddSWrd('num', '9237', [13,10]);
AddSWrd('num', '936', [70,2]);
AddSWrd('num', '967', [26,5 , 27,5]);
AddSWrd('num', '96808', [70,2]);
AddSWrd('num', '97%', [13,10]);
AddSWrd('num', '9791', [114,5]);
AddSWrd('num', '9951', [33,5]);
AddSWrd('num', '999', [33,5 , 12,5]);
AddSWrd('p', '_posix_synchronized_io', [13,10]);
AddSWrd('a', 'a_in', [33,30]);
AddSWrd('a', 'a_out', [33,30]);
AddSWrd('a', 'aa36182', [18,5]);
AddSWrd('a', 'ab_out.gds', [41,2]);
AddSWrd('a', 'abbreviate', [7,5]);
AddSWrd('a', 'abc.def.la', [18,5]);
AddSWrd('a', 'abc.mic', [18,5]);
AddSWrd('a', 'ability', [18,5 , 4,2 , 101,2 , 77,5 , 31,5]);
AddSWrd('a', 'able', [21,10 , 23,10 , 119,5 , 24,20]);
AddSWrd('a', 'abnormally', [124,5]);
AddSWrd('a', 'aborts', [17,5]);
AddSWrd('a', 'above', [27,5]);
AddSWrd('a', 'absent', [118,10]);
AddSWrd('a', 'absolute', [33,10 , 21,5 , 118,10 , 23,5 , 119,5 , 13,25 , 77,10 , 110,10]);
AddSWrd('a', 'abut', [33,10]);
AddSWrd('a', 'abuts', [100,10]);
AddSWrd('a', 'abutting', [48,2 , 128,2 , 13,10]);
AddSWrd('a', 'accept', [21,5 , 118,5 , 23,5 , 24,10 , 27,5 , 13,5]);
AddSWrd('a', 'acceptable', [79,2]);
AddSWrd('a', 'accepts', [112,5 , 12,10]);
AddSWrd('a', 'access', [33,20 , 134,4 , 119,5 , 135,2 , 56,2 , 104,20 , 123,2 , 13,30 , 77,20]);
AddSWrd('a', 'accessed', [77,10]);
AddSWrd('a', 'accesses', [21,5]);
AddSWrd('a', 'accessible', [21,5 , 13,10]);
AddSWrd('a', 'accomplish', [131,2 , 79,2]);
AddSWrd('a', 'accordance', [105,2 , 125,5]);
AddSWrd('a', 'according', [49,5 , 18,5 , 21,5 , 22,5 , 23,5]);
AddSWrd('a', 'account', [79,2]);
AddSWrd('a', 'accuracy', [32,2 , 104,40]);
AddSWrd('a', 'accurate', [35,15 , 57,2 , 89,2]);
AddSWrd('a', 'accurately', [4,2]);
AddSWrd('a', 'achieve', [77,10]);
AddSWrd('a', 'across', [32,2 , 112,10 , 100,5 , 103,2 , 25,5 , 28,2 , 77,10 , 14,10 , 79,4]);
AddSWrd('a', 'actions', [82,2 , 135,2 , 13,10]);
AddSWrd('a', 'activated', [25,5]);
AddSWrd('a', 'activates', [22,5 , 118,5 , 10,20]);
AddSWrd('a', 'activating', [17,5]);
AddSWrd('a', 'activation', [20,10]);
AddSWrd('a', 'acts', [13,5]);
AddSWrd('a', 'actual', [96,10 , 65,2 , 35,10 , 20,5 , 26,5 , 122,2 , 27,5 , 45,5 , 77,10]);
AddSWrd('a', 'actually', [96,10 , 18,5 , 21,5 , 22,5 , 23,5 , 24,10 , 105,2 , 79,2]);
AddSWrd('a', 'acute', [41,2 , 46,20]);
AddSWrd('a', 'ad-hoc', [129,2]);
AddSWrd('a', 'add', [129,2 , 103,2 , 12,5 , 93,2 , 110,10]);
AddSWrd('a', 'added', [33,10 , 104,40 , 27,10 , 124,5 , 15,5 , 31,10]);
AddSWrd('a', 'adding', [17,5 , 119,10 , 104,10 , 25,10]);
AddSWrd('a', 'addition', [96,10 , 33,10 , 129,2 , 100,5 , 134,2 , 104,35 , 42,5 , 106,10 , 108,10 , 77,10 , 110,10 , 112,10 , 117,10 , 31,10]);
AddSWrd('a', 'additional', [33,10 , 35,5 , 132,2 , 104,40 , 105,2 , 10,20 , 11,2 , 13,5 , 45,10 , 77,40 , 14,5 , 20,5 , 21,5 , 24,5 , 59,2 , 60,2 , 124,5 , 93,2 , 31,10]);
AddSWrd('a', 'additionally', [96,5 , 22,5]);
AddSWrd('a', 'additive', [104,20]);
AddSWrd('a', 'address', [131,30 , 132,2 , 15,5 , 17,10 , 82,6 , 20,5 , 21,5 , 22,5 , 23,5 , 120,6 , 121,6 , 122,10 , 94,2 , 63,4]);
AddSWrd('a', 'address-unit', [63,4]);
AddSWrd('a', 'address_size', [17,30 , 81,4 , 68,2 , 89,2 , 90,2 , 13,10 , 31,5 , 79,2]);
AddSWrd('a', 'adds', [104,10]);
AddSWrd('a', 'adhere', [17,5 , 18,5 , 12,5]);
AddSWrd('a', 'adheres', [104,10 , 25,5]);
AddSWrd('a', 'adhering', [125,5]);
AddSWrd('a', 'adjacent', [102,2 , 105,2 , 92,2]);
AddSWrd('a', 'adjunct', [33,10 , 13,10 , 77,10]);
AddSWrd('a', 'adjust', [122,4 , 12,5]);
AddSWrd('a', 'adjusting', [33,10 , 104,10 , 122,12 , 12,5 , 77,10 , 79,4]);
AddSWrd('a', 'adjustment', [122,2]);
AddSWrd('a', 'adjustments', [83,2 , 122,30]);
AddSWrd('a', 'adjusts', [112,10]);
AddSWrd('a', 'administration', [9,2]);
AddSWrd('a', 'administrator', [6,4 , 25,5 , 10,30 , 13,5 , 111,2]);
AddSWrd('a', 'advanced', [5,2]);
AddSWrd('a', 'advantage', [108,10 , 45,5]);
AddSWrd('a', 'affect', [33,10 , 102,4 , 104,10]);
AddSWrd('a', 'affected', [42,5]);
AddSWrd('a', 'affects', [132,2 , 121,2 , 63,4]);
AddSWrd('a', 'again', [77,10]);
AddSWrd('a', 'against', [86,2 , 104,20 , 90,2 , 91,2 , 77,20]);
AddSWrd('a', 'aggressively', [14,5]);
AddSWrd('a', 'aid', [17,5]);
AddSWrd('a', 'algorithm', [100,10 , 22,5 , 23,5 , 103,4 , 104,65]);
AddSWrd('a', 'algorithms', [103,2 , 104,5]);
AddSWrd('a', 'align', [33,20 , 82,2 , 86,2 , 104,10 , 77,45]);
AddSWrd('a', 'aligned', [117,10 , 86,12 , 87,2 , 105,2 , 77,10]);
AddSWrd('a', 'aligning', [84,2 , 86,12]);
AddSWrd('a', 'alignment', [81,4 , 4,2 , 84,32 , 85,30 , 117,30 , 122,2 , 13,20 , 77,10]);
AddSWrd('a', 'aligns', [33,10 , 18,5 , 83,2 , 86,2 , 104,10 , 77,10]);
AddSWrd('a', 'alist', [104,10]);
AddSWrd('a', 'allout', [31,5]);
AddSWrd('a', 'allow', [33,10 , 35,5 , 4,2 , 120,2 , 26,5 , 59,2 , 13,5 , 77,10 , 110,10]);
AddSWrd('a', 'allowable', [117,30 , 125,5]);
AddSWrd('a', 'allowed', [96,30 , 33,10 , 36,2 , 103,2 , 104,50 , 12,10 , 13,15 , 77,70 , 14,5 , 110,10 , 15,15 , 79,10 , 16,10 , 20,5 , 21,20 , 22,20 , 23,20 , 24,30 , 25,30 , 26,10 , 27,5 , 123,2 , 31,10]);
AddSWrd('a', 'allowing', [98,2 , 4,2 , 118,10 , 25,10 , 12,5]);
AddSWrd('a', 'allows', [33,20 , 130,2 , 4,4 , 132,2 , 5,2 , 133,2 , 38,2 , 103,4 , 104,45 , 105,4 , 42,5 , 74,2 , 106,5 , 13,25 , 77,45 , 14,10 , 17,10 , 81,2 , 18,5 , 20,5 , 22,5 , 25,10 , 31,5 , 63,2]);
AddSWrd('a', 'along', [112,10 , 100,10 , 24,20 , 105,2 , 122,2 , 77,20]);
AddSWrd('a', 'alpha-numeric', [17,5 , 18,10 , 20,5 , 100,5 , 21,5 , 15,10]);
AddSWrd('a', 'alphanumeric', [12,5 , 44,5 , 13,10]);
AddSWrd('a', 'already', [112,10 , 20,5 , 21,10 , 22,10 , 23,10 , 135,2 , 24,20 , 44,5 , 13,15]);
AddSWrd('a', 'alternate', [128,2 , 33,10 , 4,2 , 104,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('a', 'alternately', [33,10 , 118,10 , 104,10 , 13,5 , 77,10]);
AddSWrd('a', 'alternative', [32,2 , 26,5 , 27,5 , 44,5]);
AddSWrd('a', 'alternatively', [104,10 , 77,30]);
AddSWrd('a', 'alternatives', [77,20]);
AddSWrd('a', 'alters', [135,2]);
AddSWrd('a', 'although', [33,10 , 104,10 , 138,2 , 13,5]);
AddSWrd('a', 'always', [32,4 , 100,15 , 132,2 , 104,50 , 13,15 , 77,30 , 109,2 , 14,10 , 78,4 , 79,4 , 16,10 , 17,10 , 81,2 , 18,5 , 22,10 , 24,5 , 25,5 , 26,5 , 27,5 , 60,2 , 124,10]);
AddSWrd('a', 'amount', [32,2 , 33,10 , 98,2 , 100,20 , 108,10 , 13,40 , 77,10 , 110,10 , 16,5 , 21,5 , 25,10 , 93,4 , 63,2]);
AddSWrd('a', 'amounts', [128,2 , 33,20 , 118,10 , 104,10 , 44,5 , 13,5 , 77,10]);
AddSWrd('a', 'analysis', [4,10 , 100,15 , 125,5]);
AddSWrd('a', 'analyze', [3,2]);
AddSWrd('a', 'analyzed', [100,5]);
AddSWrd('a', 'analyzes', [98,2 , 4,2 , 100,5]);
AddSWrd('a', 'angle', [48,2 , 33,10 , 34,10 , 104,10 , 60,8 , 13,5 , 77,10 , 46,5 , 31,10 , 63,2]);
AddSWrd('a', 'angle_fix_yes', [17,10]);
AddSWrd('a', 'angles', [17,10 , 20,5 , 60,12 , 61,2 , 63,2]);
AddSWrd('a', 'annotation', [13,100 , 15,5 , 16,80 , 17,5 , 18,5 , 20,5 , 21,5 , 22,75 , 23,5 , 24,5 , 25,5 , 26,75 , 27,75]);
AddSWrd('a', 'annotations', [16,15 , 22,15 , 26,15 , 27,15]);
AddSWrd('a', 'api', [5,4]);
AddSWrd('a', 'apostrophes', [16,5 , 77,10]);
AddSWrd('a', 'appear', [7,5 , 39,2 , 119,5 , 58,4]);
AddSWrd('a', 'appearing', [96,10 , 112,10 , 33,10 , 4,2 , 100,5 , 104,10 , 106,10 , 108,10 , 77,10 , 110,10 , 31,10]);
AddSWrd('a', 'appears', [33,10 , 18,5 , 77,10]);
AddSWrd('a', 'append', [33,10 , 34,5 , 119,25 , 108,30]);
AddSWrd('a', 'appended', [17,5]);
AddSWrd('a', 'appendix', [126,2 , 63,2]);
AddSWrd('a', 'applicable', [98,2 , 100,5 , 40,2 , 77,10]);
AddSWrd('a', 'application', [4,2 , 100,5 , 42,5 , 74,2 , 12,5 , 44,5 , 13,10 , 45,25 , 77,10 , 46,25 , 49,10 , 53,2 , 55,4 , 56,2 , 60,8 , 61,2 , 62,2 , 63,2]);
AddSWrd('a', 'applications', [10,10 , 28,2 , 13,10 , 77,20 , 30,2]);
AddSWrd('a', 'applied', [33,30 , 100,10 , 104,10 , 105,4 , 42,5 , 12,15 , 13,65 , 77,70 , 79,6 , 81,6 , 113,2 , 117,10 , 88,2 , 25,20 , 26,5 , 27,5 , 31,40]);
AddSWrd('a', 'applies', [33,10 , 4,2 , 103,2 , 104,25 , 25,10 , 106,10 , 108,30 , 77,50 , 15,20]);
AddSWrd('a', 'apply', [128,2 , 33,50 , 35,5 , 100,25 , 132,2 , 101,2 , 102,2 , 104,30 , 12,5 , 13,15 , 77,90 , 110,10 , 15,5 , 16,5 , 17,15 , 18,5 , 114,10 , 51,2 , 85,2 , 22,5 , 24,5 , 26,5 , 27,5 , 94,2]);
AddSWrd('a', 'applying', [103,2 , 104,5 , 31,10]);
AddSWrd('a', 'appropriate', [49,5 , 84,2 , 138,2 , 59,2 , 60,18 , 61,6]);
AddSWrd('a', 'appropriately', [135,2]);
AddSWrd('a', 'approximate', [22,5 , 23,5]);
AddSWrd('a', 'approximately', [93,2]);
AddSWrd('a', 'approximates', [20,10 , 21,5 , 22,5 , 23,5 , 15,5]);
AddSWrd('a', 'approximation', [20,25 , 21,25 , 22,30 , 23,30 , 15,25]);
AddSWrd('a', 'apr', [39,2]);
AddSWrd('a', 'apsm', [112,35]);
AddSWrd('a', 'archiveable', [13,10]);
AddSWrd('a', 'area', [34,10 , 100,5 , 104,145 , 105,2 , 14,10 , 16,15 , 48,6 , 17,10 , 49,15 , 18,15 , 114,5 , 20,15 , 116,15 , 21,15 , 117,20 , 22,15 , 23,10 , 56,2 , 25,10 , 57,4 , 26,15 , 27,15]);
AddSWrd('a', 'areas', [49,10 , 102,4]);
AddSWrd('a', 'aref', [33,10]);
AddSWrd('a', 'argument', [128,4 , 7,20 , 10,50 , 12,20 , 13,235 , 77,90 , 14,55 , 15,75 , 16,50 , 17,45 , 18,30 , 20,130 , 84,2 , 21,105 , 22,85 , 23,85 , 24,250 , 25,60 , 26,10 , 27,35 , 31,10 , 96,20 , 33,200 , 100,15 , 103,2 , 104,140 , 106,10 , 108,10 , 112,160 , 116,15 , 118,35 , 119,50]);
AddSWrd('a', 'arguments', [128,4 , 7,15 , 10,10 , 11,2 , 12,55 , 13,160 , 77,20 , 14,130 , 15,70 , 16,85 , 17,55 , 18,80 , 20,80 , 21,80 , 22,85 , 23,85 , 24,90 , 25,15 , 26,70 , 27,55 , 96,10 , 33,30 , 100,5 , 104,25 , 106,40 , 45,5 , 110,20 , 117,15 , 119,5 , 59,4 , 60,2]);
AddSWrd('a', 'arise', [16,5]);
AddSWrd('a', 'arithmetic', [33,10 , 104,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('a', 'around', [104,10 , 105,2 , 13,20 , 30,2 , 62,2 , 15,5]);
AddSWrd('a', 'array', [20,5 , 21,5 , 42,5]);
AddSWrd('a', 'array_cell_cost_multiplier', [20,10 , 21,10 , 136,2]);
AddSWrd('a', 'ascii', [104,75]);
AddSWrd('a', 'assembly', [65,2]);
AddSWrd('a', 'assert', [77,10]);
AddSWrd('a', 'assess', [98,2 , 4,2]);
AddSWrd('a', 'assign', [17,5 , 53,2 , 56,6 , 104,10 , 44,10]);
AddSWrd('a', 'assigned', [16,10 , 33,10 , 22,10 , 104,10 , 105,2 , 26,10 , 27,10 , 110,10]);
AddSWrd('a', 'assignment', [22,5]);
AddSWrd('a', 'assigns', [17,5 , 104,10 , 44,5]);
AddSWrd('a', 'associated', [33,10 , 116,10 , 5,2 , 104,30 , 25,5 , 12,5 , 13,5 , 77,20]);
AddSWrd('a', 'associates', [58,2]);
AddSWrd('a', 'assume', [85,2 , 86,2 , 13,10 , 77,10 , 62,2 , 79,2]);
AddSWrd('a', 'assumed', [16,5 , 112,10 , 22,5 , 118,10 , 26,5 , 27,5]);
AddSWrd('a', 'assumes', [33,10 , 86,2 , 13,5 , 61,4 , 77,10 , 79,2]);
AddSWrd('a', 'assuming', [77,10]);
AddSWrd('a', 'asterisk', [110,20]);
AddSWrd('a', 'aswell', [28,2]);
AddSWrd('a', 'attempt', [32,2 , 104,20 , 26,5 , 13,5]);
AddSWrd('a', 'attempts', [33,10 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 13,5 , 77,20 , 30,2 , 110,10]);
AddSWrd('a', 'attention', [57,2 , 58,2]);
AddSWrd('a', 'attribute', [22,20 , 13,30]);
AddSWrd('a', 'audit', [34,5]);
AddSWrd('a', 'auto', [33,55 , 104,130 , 13,20 , 77,25 , 14,30 , 110,25 , 15,10 , 16,10 , 17,5 , 18,10 , 114,5 , 20,10 , 21,10 , 22,10 , 23,10 , 24,5 , 25,5 , 26,10 , 27,5]);
AddSWrd('a', 'auto_grid_subframe_division', [24,25]);
AddSWrd('a', 'auto_mode_switch', [17,20]);
AddSWrd('a', 'auto_soft_edge', [25,35]);
AddSWrd('a', 'automatic', [17,5 , 4,4 , 84,34 , 24,20]);
AddSWrd('a', 'automatically', [33,20 , 35,15 , 104,20 , 13,20 , 77,10 , 14,10 , 78,4 , 79,2 , 17,5 , 18,15 , 83,2 , 84,2 , 22,5 , 118,15 , 55,2 , 57,2 , 121,2 , 31,10 , 63,2]);
AddSWrd('a', 'automatically-determined', [13,5]);
AddSWrd('a', 'automation', [129,2 , 12,5]);
AddSWrd('a', 'autoref', [33,10]);
AddSWrd('a', 'auxiliary_layer', [7,5]);
AddSWrd('a', 'available', [32,2 , 33,20 , 67,2 , 6,2 , 104,20 , 105,2 , 10,40 , 139,2 , 44,10 , 13,5 , 77,10 , 14,10 , 78,2 , 56,4]);
AddSWrd('a', 'average', [103,2 , 104,20]);
AddSWrd('a', 'averaging', [104,5]);
AddSWrd('a', 'avoid', [33,10 , 132,2 , 134,32 , 104,20 , 105,2 , 138,2 , 13,5 , 77,10 , 14,10 , 17,10 , 26,10 , 27,5 , 28,2 , 31,10]);
AddSWrd('a', 'avoided', [33,10 , 35,5 , 13,5 , 77,10]);
AddSWrd('a', 'avoiding', [82,2 , 86,30]);
AddSWrd('a', 'avoids', [114,5 , 13,10]);
AddSWrd('a', 'away', [132,2]);
AddSWrd('a', 'awk', [104,10]);
AddSWrd('a', 'axes', [13,20]);
AddSWrd('a', 'axis', [100,5 , 12,5 , 77,10]);
AddSWrd('b', 'b_in', [33,30]);
AddSWrd('b', 'b_out', [33,30]);
AddSWrd('b', 'bad', [100,5 , 72,8 , 123,4 , 124,5 , 13,5 , 125,5]);
AddSWrd('b', 'balance', [104,10 , 15,5]);
AddSWrd('b', 'bandwidth', [28,4]);
AddSWrd('b', 'bars', [5,2 , 7,10]);
AddSWrd('b', 'base', [39,2 , 42,15 , 43,10 , 127,2]);
AddSWrd('b', 'based', [32,2 , 96,10 , 98,2 , 35,15 , 4,2 , 100,5 , 103,2 , 104,20 , 105,4 , 106,10 , 107,2 , 12,5 , 13,30 , 16,5 , 48,2 , 81,2 , 114,5 , 20,5 , 59,2 , 92,4]);
AddSWrd('b', 'basic', [33,5 , 18,5 , 116,5 , 9,2 , 41,2 , 42,5 , 110,5]);
AddSWrd('b', 'basis', [30,2]);
AddSWrd('b', 'batch', [130,2 , 115,2 , 116,10 , 5,4 , 13,10 , 77,10]);
AddSWrd('b', 'bde', [96,40 , 20,20 , 125,5]);
AddSWrd('b', 'bde_filesize_limit', [20,15 , 125,5]);
AddSWrd('b', 'beam', [4,2 , 5,2 , 14,130 , 15,15 , 16,15 , 18,15 , 20,15 , 21,15 , 22,15 , 23,15 , 24,10 , 25,10 , 26,15]);
AddSWrd('b', 'become', [13,10 , 63,2]);
AddSWrd('b', 'becomes', [75,5]);
AddSWrd('b', 'begin', [96,10 , 33,10 , 100,5 , 104,10 , 106,10 , 12,10 , 108,10 , 77,10 , 110,10 , 112,10 , 114,5 , 124,5 , 31,10]);
AddSWrd('b', 'beginning', [33,10 , 129,2 , 104,10 , 123,2 , 13,5 , 77,10 , 31,10]);
AddSWrd('b', 'begins', [88,2 , 123,2 , 60,2 , 62,2]);
AddSWrd('b', 'begun', [123,2]);
AddSWrd('b', 'behaves', [103,2]);
AddSWrd('b', 'behavior', [32,2 , 96,10 , 33,10 , 35,10 , 36,2 , 39,2 , 104,50 , 105,12 , 108,20 , 13,30 , 77,20 , 78,2 , 18,5 , 20,10 , 21,5 , 22,5 , 86,2 , 23,5 , 24,10 , 122,2 , 27,5 , 60,2]);
AddSWrd('b', 'behind', [100,5 , 77,10]);
AddSWrd('b', 'belong', [14,10]);
AddSWrd('b', 'belonging', [25,20]);
AddSWrd('b', 'belongs', [57,2]);
AddSWrd('b', 'below', [17,5 , 133,2 , 102,2]);
AddSWrd('b', 'benefits', [28,2]);
AddSWrd('b', 'best', [131,2 , 132,12 , 135,2 , 104,10 , 136,32 , 105,2 , 137,30 , 10,10 , 42,5 , 138,34 , 107,2 , 13,5 , 126,22 , 127,2]);
AddSWrd('b', 'better', [133,2 , 134,2 , 25,10 , 105,2 , 13,10 , 14,10]);
AddSWrd('b', 'beyond', [16,5 , 35,25 , 104,10 , 57,2 , 63,4]);
AddSWrd('b', 'bias', [105,2]);
AddSWrd('b', 'biasing', [101,2 , 102,2]);
AddSWrd('b', 'biggest', [104,10]);
AddSWrd('b', 'bin', [128,4 , 33,20 , 129,2 , 130,4 , 101,4 , 134,2 , 104,20 , 107,6 , 108,15 , 13,20 , 77,20 , 118,10 , 125,15]);
AddSWrd('b', 'bin-injected', [134,14]);
AddSWrd('b', 'bin_size', [128,2 , 33,70 , 104,55 , 13,25 , 77,55 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 118,55 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('b', 'binary', [112,35 , 104,100]);
AddSWrd('b', 'binned', [32,2 , 33,10 , 118,10 , 104,15 , 13,5 , 77,10]);
AddSWrd('b', 'binning', [33,10 , 118,20 , 104,10 , 13,20 , 77,10]);
AddSWrd('b', 'bins', [128,2 , 33,10 , 129,2 , 118,10 , 104,15 , 13,5 , 77,10]);
AddSWrd('b', 'bit', [26,5 , 27,5]);
AddSWrd('b', 'bitmap', [104,5]);
AddSWrd('b', 'black', [104,10]);
AddSWrd('b', 'blade', [104,20]);
AddSWrd('b', 'blade_shadow', [104,15]);
AddSWrd('b', 'blade_x_um', [104,25]);
AddSWrd('b', 'blade_y_um', [104,25]);
AddSWrd('b', 'blades', [104,10]);
AddSWrd('b', 'blank', [4,4]);
AddSWrd('b', 'blanks', [17,5]);
AddSWrd('b', 'block', [96,10 , 33,20 , 4,2 , 36,2 , 100,5 , 104,10 , 106,10 , 12,25 , 108,10 , 13,20 , 77,30 , 110,10 , 16,5 , 112,15 , 114,25 , 116,20 , 21,10 , 22,10 , 118,5 , 23,10 , 24,20 , 25,10 , 27,5 , 31,10]);
AddSWrd('b', 'block_height', [21,15 , 22,15 , 23,15 , 24,35]);
AddSWrd('b', 'block_width', [21,25 , 22,40 , 23,40 , 24,75]);
AddSWrd('b', 'block_width:1024um', [24,10]);
AddSWrd('b', 'blocks', [33,40 , 119,10 , 12,15]);
AddSWrd('b', 'blue', [38,2 , 57,2]);
AddSWrd('b', 'blur', [102,4]);
AddSWrd('b', 'bold', [81,2 , 7,20]);
AddSWrd('b', 'bolded', [38,2]);
AddSWrd('b', 'boolean', [114,5 , 56,2 , 28,2 , 77,10]);
AddSWrd('b', 'border', [65,14 , 104,20 , 25,10 , 105,6 , 122,14]);
AddSWrd('b', 'border-aware', [65,44 , 122,32 , 63,2]);
AddSWrd('b', 'border-edge', [122,2]);
AddSWrd('b', 'border_ring', [65,4 , 122,4]);
AddSWrd('b', 'borders', [104,20]);
AddSWrd('b', 'bottleneck', [13,10]);
AddSWrd('b', 'bottlenecks', [134,32]);
AddSWrd('b', 'bottom', [16,5 , 104,20 , 77,10]);
AddSWrd('b', 'bottom-left', [81,2 , 18,5]);
AddSWrd('b', 'bound', [34,50 , 35,305 , 77,10]);
AddSWrd('b', 'boundaries', [16,5 , 32,2 , 33,10 , 104,10 , 105,4 , 106,10 , 28,2 , 61,8]);
AddSWrd('b', 'boundaries.this', [14,10]);
AddSWrd('b', 'boundary', [16,5 , 32,4 , 96,10 , 49,5 , 35,10 , 104,90 , 105,22 , 77,20 , 15,5]);
AddSWrd('b', 'bounded', [104,10]);
AddSWrd('b', 'bounding', [32,2 , 112,40 , 49,10 , 65,4 , 122,2]);
AddSWrd('b', 'box', [112,20 , 49,5 , 65,4 , 104,40 , 122,2]);
AddSWrd('b', 'boxes', [112,20]);
AddSWrd('b', 'braces', [118,5 , 7,15 , 104,10]);
AddSWrd('b', 'bracket', [96,10 , 33,20 , 100,5 , 104,20 , 12,25 , 13,10 , 77,30 , 109,4 , 31,40]);
AddSWrd('b', 'brackets', [96,50 , 33,90 , 36,6 , 100,25 , 7,15 , 104,80 , 106,50 , 12,30 , 108,50 , 13,10 , 77,60 , 109,2 , 110,50 , 112,50 , 31,50]);
AddSWrd('b', 'breaking', [105,2]);
AddSWrd('b', 'breaks', [104,10]);
AddSWrd('b', 'bring', [81,4]);
AddSWrd('b', 'broken', [14,20]);
AddSWrd('b', 'buffer', [33,10 , 13,5 , 30,2 , 31,50]);
AddSWrd('b', 'bug', [123,2]);
AddSWrd('b', 'built', [104,10]);
AddSWrd('b', 'bulk', [77,20]);
AddSWrd('b', 'bypass', [128,2 , 13,5 , 77,10]);
AddSWrd('b', 'bypassing', [96,5]);
AddSWrd('c', 'c_in', [33,30]);
AddSWrd('c', 'c_n', [104,20]);
AddSWrd('c', 'c_out', [33,30]);
AddSWrd('c', 'calculate', [81,2 , 85,4]);
AddSWrd('c', 'calculated', [35,15 , 77,20 , 109,2 , 110,5]);
AddSWrd('c', 'calculates', [103,2 , 104,20 , 31,10]);
AddSWrd('c', 'calculating', [85,12 , 104,10 , 138,2 , 77,10]);
AddSWrd('c', 'calculation', [35,5 , 23,5 , 104,5 , 31,10]);
AddSWrd('c', 'calculations', [104,10]);
AddSWrd('c', 'calibr', [13,5]);
AddSWrd('c', 'calibre', [3,2 , 4,154 , 5,160 , 6,44 , 8,26 , 9,50 , 10,405 , 11,14 , 12,210 , 13,395 , 14,20 , 15,35 , 16,45 , 17,60 , 18,40 , 20,85 , 21,80 , 22,70 , 23,70 , 24,90 , 25,55 , 26,35 , 27,35 , 28,78 , 29,22 , 31,75 , 32,2 , 33,150 , 36,2 , 37,30 , 40,2 , 42,20 , 44,45 , 45,25 , 46,5 , 47,6 , 52,22 , 53,8 , 54,2 , 55,42 , 56,34 , 57,6 , 59,4 , 60,2 , 61,6 , 63,4 , 70,2 , 74,30 , 75,65 , 76,55 , 77,200 , 78,2 , 79,4 , 81,12 , 83,2 , 84,4 , 85,2 , 86,2 , 87,10 , 89,30 , 92,26 , 93,8 , 94,36 , 95,10 , 96,65 , 97,40 , 98,24 , 99,34 , 100,90 , 101,24 , 102,40 , 103,8 , 104,195 , 105,10 , 106,30 , 108,50 , 110,20 , 111,4 , 113,22 , 114,90 , 115,26 , 116,15 , 117,20 , 118,20 , 119,25 , 121,2 , 123,12 , 124,5 , 125,15 , 127,4 , 128,8 , 129,18 , 130,12 , 131,6 , 132,20 , 133,2 , 134,2 , 135,36 , 136,32]);
AddSWrd('c', 'calibre::drc-h', [39,4]);
AddSWrd('c', 'calibre::mdp', [13,10]);
AddSWrd('c', 'calibre_mdp_ignore_redundant_cells', [13,5]);
AddSWrd('c', 'calibre_relax_mebes_segment_limit', [17,5]);
AddSWrd('c', 'calibremdpv', [129,4]);
AddSWrd('c', 'call', [33,10 , 116,5 , 77,10]);
AddSWrd('c', 'called', [33,10 , 49,5 , 114,5 , 22,5 , 24,5 , 56,2 , 109,2 , 110,5]);
AddSWrd('c', 'calling', [96,5]);
AddSWrd('c', 'calls', [33,10 , 104,10 , 13,20 , 77,10]);
AddSWrd('c', 'cannot', [130,2 , 135,2 , 10,10 , 12,15 , 13,10 , 77,60 , 15,5 , 16,5 , 17,5 , 18,5 , 82,2 , 20,10 , 21,5 , 22,5 , 23,5 , 28,4 , 30,2 , 31,20 , 32,2 , 96,20 , 33,20 , 34,10 , 100,10 , 38,2 , 104,60 , 106,10 , 44,5 , 108,10 , 109,2 , 110,10 , 112,10 , 118,10 , 119,5 , 56,2 , 123,2 , 125,5]);
AddSWrd('c', 'capability', [32,2 , 4,4 , 9,2 , 13,10 , 77,10]);
AddSWrd('c', 'capitalized', [104,10 , 13,5 , 31,10]);
AddSWrd('c', 'capture', [104,10]);
AddSWrd('c', 'captured', [14,10]);
AddSWrd('c', 'care', [33,10 , 130,2 , 21,5 , 23,5 , 24,10 , 104,10 , 13,15 , 77,10]);
AddSWrd('c', 'care_region', [112,20]);
AddSWrd('c', 'carefully', [12,5]);
AddSWrd('c', 'carries', [58,2]);
AddSWrd('c', 'carrying', [58,2]);
AddSWrd('c', 'cartesian', [26,5 , 79,2]);
AddSWrd('c', 'case', [32,2 , 33,30 , 34,10 , 131,2 , 134,2 , 103,2 , 104,25 , 105,2 , 77,60 , 109,2 , 14,10 , 17,5 , 18,5 , 21,5 , 22,5 , 23,5 , 24,20 , 123,2 , 31,10]);
AddSWrd('c', 'case-insensitive', [7,5]);
AddSWrd('c', 'case-sensitive', [104,10]);
AddSWrd('c', 'cases', [32,2 , 131,2 , 4,2 , 7,5 , 57,2 , 44,5 , 13,45 , 77,30 , 63,2]);
AddSWrd('c', 'categories', [57,4]);
AddSWrd('c', 'cause', [33,10 , 100,15 , 135,2 , 104,10 , 121,2 , 26,5 , 27,5 , 124,10 , 13,5 , 77,20 , 110,10]);
AddSWrd('c', 'caused', [102,4 , 121,12 , 122,2 , 13,10]);
AddSWrd('c', 'causes', [33,20 , 37,2 , 86,2 , 118,5 , 13,30 , 77,30 , 63,2]);
AddSWrd('c', 'caveats', [128,2 , 33,10 , 104,10 , 13,5 , 110,10]);
AddSWrd('c', 'cbdedata', [20,10]);
AddSWrd('c', 'cblock', [128,2 , 33,30 , 116,5 , 26,20 , 27,15 , 108,25 , 13,5 , 77,20]);
AddSWrd('c', 'cblocks', [33,10]);
AddSWrd('c', 'cd_max_length', [14,10]);
AddSWrd('c', 'cd_max_width', [16,10 , 18,10 , 20,10 , 21,10 , 22,10 , 23,10 , 26,10 , 14,100 , 15,10]);
AddSWrd('c', 'cd_min_length', [16,10 , 18,10 , 20,10 , 21,10 , 22,10 , 23,10 , 26,10 , 14,80 , 15,10]);
AddSWrd('c', 'cd_min_width', [16,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 26,5 , 14,40 , 15,5]);
AddSWrd('c', 'cdata', [20,10 , 21,10]);
AddSWrd('c', 'cds', [102,4 , 26,5]);
AddSWrd('c', 'cell', [13,115 , 77,90 , 14,10 , 20,40 , 21,60 , 22,55 , 23,30 , 24,90 , 25,35 , 26,50 , 27,30 , 30,4 , 94,2 , 96,30 , 33,80 , 103,2 , 104,30 , 42,10 , 107,2 , 108,20 , 112,10 , 114,5 , 116,5 , 118,10 , 119,30]);
AddSWrd('c', 'cell-by-cell', [30,2]);
AddSWrd('c', 'cell.common', [21,10 , 22,5 , 23,5 , 24,10]);
AddSWrd('c', 'cell.maxheight', [70,2]);
AddSWrd('c', 'cell.maxwidth', [70,2]);
AddSWrd('c', 'cell.subfield.margin', [70,2]);
AddSWrd('c', 'cell.subfield.size', [70,2]);
AddSWrd('c', 'cell.translate.x', [70,2]);
AddSWrd('c', 'cell.translate.y', [70,2]);
AddSWrd('c', 'cell.x', [21,5 , 22,10 , 23,5 , 24,15]);
AddSWrd('c', 'cell_coverage', [27,5]);
AddSWrd('c', 'cell_def_max', [96,15]);
AddSWrd('c', 'cell_loc_max', [96,15]);
AddSWrd('c', 'cell_max_height', [20,10 , 21,15 , 22,10 , 23,10 , 24,25]);
AddSWrd('c', 'cell_max_width', [20,10 , 21,15 , 22,10 , 23,10 , 24,25]);
AddSWrd('c', 'cell_size', [131,2 , 26,15 , 27,15]);
AddSWrd('c', 'cell_size_x', [25,35 , 26,10 , 27,10]);
AddSWrd('c', 'cell_size_y', [25,45 , 26,10 , 27,10]);
AddSWrd('c', 'cell_subfield_margin', [20,10 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('c', 'cell_subfield_size', [20,10 , 21,10]);
AddSWrd('c', 'cellname', [33,15 , 13,10 , 77,15 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('c', 'cellname2', [77,15]);
AddSWrd('c', 'cells', [128,8 , 33,50 , 129,2 , 104,50 , 107,2 , 108,20 , 13,50 , 77,40 , 112,10 , 21,5 , 22,10 , 118,40 , 23,5 , 24,10 , 25,20 , 26,20 , 27,5 , 30,2]);
AddSWrd('c', 'cells_in_x', [27,15]);
AddSWrd('c', 'cells_in_x_dir', [25,35]);
AddSWrd('c', 'cells_in_y', [27,15]);
AddSWrd('c', 'cells_in_y_dir', [25,55]);
AddSWrd('c', 'center', [100,5 , 121,6 , 122,22 , 13,10 , 77,10 , 15,20]);
AddSWrd('c', 'center-shifting', [121,14]);
AddSWrd('c', 'centers', [121,6 , 122,2]);
AddSWrd('c', 'certain', [34,5 , 4,2 , 7,5 , 103,2 , 46,5 , 15,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 56,2 , 123,2 , 92,4]);
AddSWrd('c', 'cfg', [99,4 , 104,15]);
AddSWrd('c', 'cg_n', [104,30]);
AddSWrd('c', 'changed', [32,4 , 33,10 , 35,10 , 104,10 , 13,10 , 77,10]);
AddSWrd('c', 'changes', [28,4]);
AddSWrd('c', 'changing', [132,2 , 21,5 , 22,5 , 23,5 , 24,10 , 136,2]);
AddSWrd('c', 'chapter', [4,14 , 132,2 , 121,2 , 122,2 , 13,10]);
AddSWrd('c', 'chapters', [4,2]);
AddSWrd('c', 'character', [96,10 , 33,10 , 100,5 , 104,10 , 106,10 , 12,10 , 108,10 , 77,10 , 110,10 , 15,5 , 112,10 , 17,5 , 18,10]);
AddSWrd('c', 'characterized', [32,2]);
AddSWrd('c', 'characters', [17,50 , 33,10 , 18,15 , 100,5 , 7,5 , 104,20 , 12,20 , 13,20 , 77,10 , 15,10 , 31,20]);
AddSWrd('c', 'check', [72,2 , 73,8 , 13,15 , 77,10 , 81,2 , 89,4 , 90,4 , 91,4 , 28,2 , 31,20 , 33,80 , 36,10 , 37,12 , 38,8 , 104,125 , 106,25 , 108,10 , 45,15 , 110,25 , 114,10 , 116,15 , 53,2 , 56,6 , 58,2 , 59,4 , 123,2 , 60,8 , 61,2 , 125,5 , 62,2]);
AddSWrd('c', 'check_gds', [89,8]);
AddSWrd('c', 'check_jeol_mebes', [91,8]);
AddSWrd('c', 'check_mebes', [90,8]);
AddSWrd('c', 'check_vsb', [82,2]);
AddSWrd('c', 'checked', [104,20 , 13,5]);
AddSWrd('c', 'checking', [33,10 , 35,10 , 100,5 , 5,2 , 134,2 , 104,20 , 10,20 , 13,15 , 77,10 , 30,2]);
AddSWrd('c', 'checkmap', [101,2 , 107,12 , 108,145 , 13,5]);
AddSWrd('c', 'checks', [32,6 , 33,55 , 4,4 , 100,20 , 104,20 , 13,20 , 77,20 , 48,2 , 112,10 , 58,16 , 59,32 , 60,2 , 61,12 , 62,8 , 31,10]);
AddSWrd('c', 'checksum', [18,15]);
AddSWrd('c', 'chip', [96,50 , 33,10 , 4,6 , 70,10 , 12,5 , 13,10 , 77,20 , 15,5 , 16,5 , 112,60 , 20,20 , 21,15 , 22,20 , 23,10 , 24,55 , 92,6 , 125,5 , 95,4]);
AddSWrd('c', 'chip.cnf', [96,5 , 20,10 , 21,10 , 22,10 , 70,4 , 23,5 , 24,15]);
AddSWrd('c', 'chip.directory', [70,2]);
AddSWrd('c', 'chip.frames', [70,2]);
AddSWrd('c', 'chip.ini', [96,5 , 20,10 , 21,10 , 22,10 , 23,10 , 24,20]);
AddSWrd('c', 'chip.name', [70,2]);
AddSWrd('c', 'chip.size.x', [70,2]);
AddSWrd('c', 'chip.size.y', [70,2]);
AddSWrd('c', 'chip_data_format', [97,5]);
AddSWrd('c', 'chip_dir', [96,5 , 97,5]);
AddSWrd('c', 'chip_directory', [81,2 , 114,5 , 20,15 , 21,25 , 22,20 , 70,2 , 23,10 , 24,25 , 12,10 , 13,10]);
AddSWrd('c', 'chip_id', [96,5]);
AddSWrd('c', 'chip_name', [96,5 , 97,5 , 20,10 , 21,10]);
AddSWrd('c', 'chips', [96,35 , 112,60 , 82,2 , 4,8 , 104,10 , 92,8 , 77,10 , 94,2]);
AddSWrd('c', 'choice', [18,5 , 7,5]);
AddSWrd('c', 'choices', [104,20]);
AddSWrd('c', 'choose', [16,5 , 65,2 , 18,5 , 100,15 , 8,2 , 122,2]);
AddSWrd('c', 'choosing', [10,10]);
AddSWrd('c', 'chosen', [32,2 , 104,10 , 120,2 , 138,2]);
AddSWrd('c', 'circumstances', [34,5 , 20,5 , 132,2 , 104,10 , 13,20]);
AddSWrd('c', 'citing', [130,2]);
AddSWrd('c', 'class', [97,10]);
AddSWrd('c', 'classification', [4,8 , 119,5]);
AddSWrd('c', 'classified', [35,5]);
AddSWrd('c', 'classify', [57,2 , 59,2]);
AddSWrd('c', 'client', [130,2]);
AddSWrd('c', 'clip', [32,4]);
AddSWrd('c', 'clockwise', [100,5 , 77,10 , 79,4]);
AddSWrd('c', 'close', [20,10 , 21,10 , 22,10 , 102,2 , 23,10 , 57,2 , 58,2 , 15,10]);
AddSWrd('c', 'closer', [58,4 , 92,2 , 62,2]);
AddSWrd('c', 'cluster', [56,4 , 57,2 , 28,4 , 30,2]);
AddSWrd('c', 'clustering', [4,2]);
AddSWrd('c', 'clusters', [56,2 , 25,10 , 57,2 , 13,15 , 30,2]);
AddSWrd('c', 'cmi', [5,4]);
AddSWrd('c', 'cmp', [99,4]);
AddSWrd('c', 'code', [33,30 , 65,2 , 66,2 , 132,2 , 7,5 , 12,5 , 13,5 , 77,10 , 110,10 , 81,4 , 122,2 , 123,4 , 124,20]);
AddSWrd('c', 'codes', [123,4]);
AddSWrd('c', 'coefficients', [104,20]);
AddSWrd('c', 'coincident', [48,10 , 34,30 , 57,12 , 58,18]);
AddSWrd('c', 'coincidentally', [100,10]);
AddSWrd('c', 'colinear', [57,2]);
AddSWrd('c', 'colon', [104,10]);
AddSWrd('c', 'colon-separated', [33,10 , 104,10 , 13,10 , 77,10]);
AddSWrd('c', 'color', [104,70]);
AddSWrd('c', 'colour', [104,15]);
AddSWrd('c', 'column', [104,10]);
AddSWrd('c', 'columns', [104,10 , 27,5]);
AddSWrd('c', 'combination', [16,5 , 33,10 , 104,10 , 26,5 , 27,5 , 13,5 , 77,10 , 109,2 , 110,15]);
AddSWrd('c', 'combinations', [110,10]);
AddSWrd('c', 'combine', [121,2 , 13,5 , 31,5]);
AddSWrd('c', 'combined', [104,10 , 42,5 , 13,5 , 14,10]);
AddSWrd('c', 'combining', [49,5 , 104,15 , 138,2]);
AddSWrd('c', 'comes', [58,2 , 77,10]);
AddSWrd('c', 'command', [128,4 , 132,4 , 7,40 , 9,2 , 10,20 , 138,2 , 75,5 , 13,25 , 77,80 , 15,5 , 16,5 , 17,10 , 18,5 , 82,2 , 19,2 , 24,5 , 25,10 , 26,5 , 27,5 , 28,2 , 31,5 , 95,4 , 32,2 , 96,10 , 33,40 , 34,30 , 35,5 , 36,4 , 100,20 , 37,4 , 102,2 , 103,2 , 104,35 , 105,2 , 106,5 , 107,2 , 108,10 , 110,5 , 111,4 , 112,15 , 114,35 , 115,2 , 116,30 , 117,5 , 118,15 , 119,20]);
AddSWrd('c', 'command-line', [4,2]);
AddSWrd('c', 'command-line-based', [3,2]);
AddSWrd('c', 'command_count_limit', [16,10]);
AddSWrd('c', 'commands', [32,12 , 128,2 , 33,15 , 97,5 , 34,10 , 35,25 , 4,14 , 36,4 , 5,2 , 37,4 , 101,22 , 7,5 , 9,2 , 12,5 , 13,10 , 16,5 , 114,5 , 115,24 , 124,5 , 30,2 , 31,135 , 95,2]);
AddSWrd('c', 'commas', [104,10]);
AddSWrd('c', 'comment', [96,20 , 33,20 , 100,10 , 104,40 , 106,20 , 12,25 , 108,20 , 77,20 , 110,20 , 15,10 , 112,20 , 18,10 , 31,20]);
AddSWrd('c', 'commented', [12,5]);
AddSWrd('c', 'comments', [96,20 , 112,20 , 33,30 , 97,5 , 100,10 , 104,20 , 106,20 , 12,15 , 108,20 , 77,20 , 110,20 , 31,30]);
AddSWrd('c', 'common', [64,10 , 66,2 , 132,2 , 133,32 , 12,5 , 13,15 , 77,60 , 14,130 , 78,2 , 15,35 , 79,2 , 16,40 , 17,20 , 18,35 , 20,35 , 21,35 , 85,2 , 22,45 , 23,35 , 87,2 , 24,35 , 26,35 , 27,20 , 96,20 , 104,15 , 49,15]);
AddSWrd('c', 'common.bdemaxdata', [70,2]);
AddSWrd('c', 'common.chp', [96,20 , 20,15 , 22,5 , 70,2 , 24,5]);
AddSWrd('c', 'common.maxdata', [70,2]);
AddSWrd('c', 'common_bde_max_data', [96,15 , 20,10]);
AddSWrd('c', 'common_cell_max', [96,15]);
AddSWrd('c', 'common_max_data', [96,15 , 20,10 , 21,10]);
AddSWrd('c', 'commonly', [48,14 , 49,20 , 43,5 , 59,2 , 45,5 , 46,5]);
AddSWrd('c', 'commonly-used', [5,2]);
AddSWrd('c', 'communicates', [123,2]);
AddSWrd('c', 'compaction', [17,5 , 13,50]);
AddSWrd('c', 'compaction_stripes', [17,10 , 68,2 , 89,2 , 90,2]);
AddSWrd('c', 'compare', [80,30 , 81,30 , 82,2 , 86,2 , 87,6 , 77,25 , 110,5]);
AddSWrd('c', 'compared', [81,4 , 83,2 , 87,2 , 104,10]);
AddSWrd('c', 'compares', [89,2 , 90,2 , 91,2]);
AddSWrd('c', 'comparing', [80,14 , 81,32 , 82,46 , 84,6 , 85,2 , 86,2 , 75,10 , 77,30 , 79,6]);
AddSWrd('c', 'comparison', [81,2 , 82,6 , 87,2 , 77,190 , 125,10 , 78,8]);
AddSWrd('c', 'comparisons', [81,2 , 82,2 , 4,2 , 88,2 , 74,4 , 77,10]);
AddSWrd('c', 'compatible', [27,5]);
AddSWrd('c', 'compensate', [80,2 , 12,5]);
AddSWrd('c', 'compensates', [83,2]);
AddSWrd('c', 'compilation', [123,4]);
AddSWrd('c', 'compile', [17,10 , 123,2]);
AddSWrd('c', 'compile-time', [104,10 , 13,10]);
AddSWrd('c', 'compiler', [119,5 , 26,5 , 27,5 , 123,2]);
AddSWrd('c', 'compiling', [55,2]);
AddSWrd('c', 'complement', [25,10 , 13,10]);
AddSWrd('c', 'complete', [33,10 , 35,5 , 100,5 , 5,12 , 102,4 , 8,2 , 40,2 , 104,5 , 106,5 , 75,5 , 110,10 , 48,2 , 49,5 , 116,5 , 55,2 , 123,2 , 28,2 , 31,10]);
AddSWrd('c', 'completed', [33,20 , 99,4 , 39,4 , 13,10 , 77,30]);
AddSWrd('c', 'completely', [135,2 , 104,10]);
AddSWrd('c', 'completes', [17,5 , 5,2 , 77,10]);
AddSWrd('c', 'completion', [44,5]);
AddSWrd('c', 'complex', [13,5]);
AddSWrd('c', 'complexity', [63,2]);
AddSWrd('c', 'compliance', [4,2]);
AddSWrd('c', 'compliant', [17,5]);
AddSWrd('c', 'complies', [17,5]);
AddSWrd('c', 'comply', [96,10 , 112,10 , 33,10 , 100,5 , 104,10 , 106,10 , 108,10 , 13,10 , 77,10 , 110,10]);
AddSWrd('c', 'components', [17,5 , 104,10 , 13,5 , 77,10]);
AddSWrd('c', 'composed', [26,5]);
AddSWrd('c', 'composite', [21,5 , 23,5 , 24,10]);
AddSWrd('c', 'compressed', [33,20 , 22,5 , 75,10 , 108,10 , 13,5 , 77,20]);
AddSWrd('c', 'compression', [20,10 , 21,10 , 22,30 , 24,5 , 104,10 , 26,5 , 108,10]);
AddSWrd('c', 'comprised', [9,2]);
AddSWrd('c', 'computation', [112,10 , 18,5 , 104,30 , 26,5 , 13,10 , 77,20 , 30,2 , 78,30]);
AddSWrd('c', 'computation-intensive', [118,10]);
AddSWrd('c', 'computation_mode', [68,2 , 133,2 , 102,2 , 13,25 , 110,10 , 15,5 , 16,5 , 112,15 , 17,25 , 18,5 , 114,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,20 , 26,5 , 27,15 , 31,5]);
AddSWrd('c', 'computational', [129,2]);
AddSWrd('c', 'computations', [129,2 , 104,10]);
AddSWrd('c', 'compute', [16,5 , 20,5 , 21,5 , 22,5 , 103,2 , 104,25 , 26,5 , 27,5 , 13,10]);
AddSWrd('c', 'computed', [16,5 , 17,20 , 33,10 , 35,10 , 104,10 , 13,10 , 78,4 , 110,10]);
AddSWrd('c', 'computer', [33,10 , 21,5 , 13,5]);
AddSWrd('c', 'computers', [33,20 , 13,10]);
AddSWrd('c', 'computes', [101,2 , 109,2 , 110,10]);
AddSWrd('c', 'computing', [101,2 , 104,10 , 77,10 , 30,2]);
AddSWrd('c', 'concatenated', [17,5 , 42,5]);
AddSWrd('c', 'concepts', [51,12]);
AddSWrd('c', 'concerning', [28,2]);
AddSWrd('c', 'concludes', [5,2]);
AddSWrd('c', 'concurrent', [103,2 , 77,20]);
AddSWrd('c', 'concurrently', [37,2 , 103,2 , 10,10]);
AddSWrd('c', 'condition', [112,10 , 33,10 , 124,5]);
AddSWrd('c', 'conditions', [112,20 , 104,10 , 13,10]);
AddSWrd('c', 'configuration', [22,5 , 134,2 , 24,5 , 10,20 , 13,20]);
AddSWrd('c', 'configurations', [115,2 , 119,5]);
AddSWrd('c', 'configuring', [80,2]);
AddSWrd('c', 'conflict', [26,5 , 27,5 , 125,5]);
AddSWrd('c', 'conform', [8,2 , 104,10 , 13,10]);
AddSWrd('c', 'conformance', [26,10 , 27,5]);
AddSWrd('c', 'conforms', [25,5 , 26,5 , 13,10]);
AddSWrd('c', 'confused', [135,2]);
AddSWrd('c', 'conjunction', [17,10 , 33,40 , 116,5 , 118,5 , 13,5]);
AddSWrd('c', 'consecutive', [100,20]);
AddSWrd('c', 'consequently', [96,5]);
AddSWrd('c', 'consider', [104,10 , 77,10]);
AddSWrd('c', 'consideration', [35,5 , 103,2 , 104,5]);
AddSWrd('c', 'considerations', [10,10 , 28,30]);
AddSWrd('c', 'considered', [33,10 , 52,2 , 100,20 , 118,10 , 104,10 , 13,5 , 77,10 , 14,20]);
AddSWrd('c', 'considering', [104,10 , 79,2]);
AddSWrd('c', 'considers', [60,2]);
AddSWrd('c', 'consist', [18,5]);
AddSWrd('c', 'consistency', [13,10]);
AddSWrd('c', 'consistent', [138,2]);
AddSWrd('c', 'consisting', [49,5 , 4,2 , 100,5 , 12,5 , 92,2 , 77,10 , 62,2]);
AddSWrd('c', 'consists', [22,5 , 103,2 , 24,5 , 25,10 , 57,4 , 13,10 , 62,4 , 47,2]);
AddSWrd('c', 'constant', [104,10]);
AddSWrd('c', 'constrained', [113,2 , 117,5 , 104,10 , 26,5 , 13,5]);
AddSWrd('c', 'constraint', [48,4 , 49,5 , 34,35 , 103,2 , 104,80 , 61,6]);
AddSWrd('c', 'constraints', [48,2 , 34,10 , 35,10 , 20,5 , 117,10 , 133,2 , 104,10 , 13,5]);
AddSWrd('c', 'construct', [49,5 , 59,2]);
AddSWrd('c', 'constructed', [104,10 , 13,5]);
AddSWrd('c', 'constructing', [62,2]);
AddSWrd('c', 'construction', [32,4 , 114,5]);
AddSWrd('c', 'constructor', [128,2 , 49,20 , 13,5 , 47,2]);
AddSWrd('c', 'constructors', [49,35]);
AddSWrd('c', 'constructs', [24,5]);
AddSWrd('c', 'consult', [104,10 , 138,2]);
AddSWrd('c', 'consume', [117,10]);
AddSWrd('c', 'consumption', [10,20 , 93,2]);
AddSWrd('c', 'contain', [8,2 , 12,10 , 13,10 , 77,30 , 15,10 , 16,10 , 17,10 , 18,10 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10 , 96,10 , 33,20 , 100,5 , 104,75 , 105,2 , 42,5 , 109,2 , 118,15 , 56,4 , 57,2 , 124,10 , 61,2 , 62,2]);
AddSWrd('c', 'contained', [96,20 , 112,20 , 33,20 , 49,5 , 100,10 , 104,20 , 106,20 , 108,20 , 77,10 , 110,20]);
AddSWrd('c', 'containing', [128,2 , 4,2 , 75,40 , 13,5 , 77,10 , 82,2 , 85,2 , 22,5 , 24,5 , 31,10 , 96,5 , 33,10 , 34,5 , 98,2 , 99,2 , 100,5 , 103,2 , 104,25 , 105,2 , 46,5 , 112,10 , 49,5 , 116,20 , 117,20 , 56,4 , 124,5 , 61,2 , 62,2]);
AddSWrd('c', 'contains', [33,20 , 36,4 , 132,2 , 104,35 , 105,4 , 10,10 , 42,5 , 106,10 , 12,5 , 108,10 , 13,10 , 77,30 , 18,5 , 114,5 , 117,10 , 22,5 , 54,2 , 24,5 , 88,2 , 58,6 , 28,2 , 61,2 , 126,2 , 63,2]);
AddSWrd('c', 'content', [70,2 , 107,2]);
AddSWrd('c', 'contents', [112,10 , 81,2 , 50,5 , 10,10 , 13,10]);
AddSWrd('c', 'context', [35,5]);
AddSWrd('c', 'continuation', [5,2]);
AddSWrd('c', 'continue', [112,10 , 77,70]);
AddSWrd('c', 'continued', [18,15]);
AddSWrd('c', 'continues', [18,5 , 13,10 , 95,2]);
AddSWrd('c', 'continuing', [112,10 , 79,2]);
AddSWrd('c', 'continuous', [25,10]);
AddSWrd('c', 'contracts', [49,5]);
AddSWrd('c', 'contrast', [30,2]);
AddSWrd('c', 'control', [32,2 , 33,10 , 35,5 , 104,30 , 12,15 , 45,5 , 77,30 , 14,10 , 46,5 , 15,10 , 22,5 , 24,5 , 25,10 , 92,2 , 61,2 , 63,2]);
AddSWrd('c', 'controlled', [17,5 , 65,2]);
AddSWrd('c', 'controlling', [20,5 , 21,5 , 13,5 , 14,10]);
AddSWrd('c', 'controls', [131,2 , 87,2 , 12,10 , 108,10 , 13,10 , 14,5 , 79,4]);
AddSWrd('c', 'convention', [17,10 , 18,15 , 22,5 , 7,5 , 24,5]);
AddSWrd('c', 'conventions', [18,5 , 7,45 , 12,5 , 13,20]);
AddSWrd('c', 'conversion', [4,4 , 5,2 , 70,2 , 104,10 , 13,5 , 79,2 , 80,2 , 82,6 , 83,2 , 20,5 , 21,5 , 22,10 , 23,5 , 24,5 , 31,10]);
AddSWrd('c', 'conversion.addressunit', [70,2]);
AddSWrd('c', 'conversion.machine', [70,2]);
AddSWrd('c', 'conversion.machine.id', [70,2]);
AddSWrd('c', 'conversion.machine.os', [70,2]);
AddSWrd('c', 'conversion.system', [70,2]);
AddSWrd('c', 'conversion_address_unit', [114,5 , 20,10 , 21,10 , 22,15 , 23,10 , 24,20]);
AddSWrd('c', 'conversion_address_units', [81,2]);
AddSWrd('c', 'conversions', [22,5 , 24,5]);
AddSWrd('c', 'convert', [36,2 , 102,2]);
AddSWrd('c', 'converted', [16,5 , 36,2 , 22,5 , 87,4 , 8,2 , 26,5 , 11,2 , 27,5 , 79,2]);
AddSWrd('c', 'converters', [104,10 , 13,5]);
AddSWrd('c', 'converting', [36,32 , 132,2]);
AddSWrd('c', 'converts', [4,2 , 8,2 , 11,2 , 14,10]);
AddSWrd('c', 'convex', [48,6 , 34,10]);
AddSWrd('c', 'convolution', [103,22 , 104,275 , 138,4]);
AddSWrd('c', 'convolution_grid', [104,70]);
AddSWrd('c', 'convolutions', [102,2]);
AddSWrd('c', 'convolve', [128,2 , 34,5 , 4,2 , 101,2 , 102,2 , 103,38 , 104,280 , 105,4 , 138,38 , 13,10 , 77,10 , 30,2]);
AddSWrd('c', 'convolve_out_1', [104,25]);
AddSWrd('c', 'convolve_out_2', [104,25]);
AddSWrd('c', 'convolve_out_3', [104,25]);
AddSWrd('c', 'convolve_param', [104,10]);
AddSWrd('c', 'convolve_parameters', [103,8 , 104,80]);
AddSWrd('c', 'convolve_parametersdc00', [104,5]);
AddSWrd('c', 'convolve_ring_output.oas', [104,5 , 106,5]);
AddSWrd('c', 'convolved', [104,20]);
AddSWrd('c', 'coordinate', [33,60 , 100,45 , 8,2 , 104,50 , 42,5 , 11,2 , 12,5 , 13,20 , 45,5 , 77,90 , 79,2 , 17,5 , 81,8 , 82,4 , 86,2 , 26,5 , 27,5]);
AddSWrd('c', 'coordinates', [66,2 , 100,25 , 132,6 , 104,20 , 12,55 , 77,80 , 78,2 , 79,2 , 112,20 , 81,6 , 18,20 , 84,2 , 85,6 , 86,6 , 87,8 , 57,2]);
AddSWrd('c', 'copied', [96,5]);
AddSWrd('c', 'copies', [48,2 , 4,2 , 92,2]);
AddSWrd('c', 'copy', [34,5 , 99,4 , 36,4 , 37,8 , 38,8 , 72,2 , 104,75 , 73,8 , 106,25 , 12,5 , 108,10 , 13,10 , 110,10 , 48,8 , 114,10 , 116,15 , 118,10 , 89,4 , 90,4 , 91,4 , 31,5]);
AddSWrd('c', 'core', [28,2]);
AddSWrd('c', 'cores', [39,6]);
AddSWrd('c', 'corner', [100,5 , 12,10 , 77,30 , 79,2 , 16,5 , 17,5 , 81,2 , 18,25 , 84,6 , 22,5 , 86,4 , 24,5 , 26,5 , 122,2 , 27,5]);
AddSWrd('c', 'corners', [104,20 , 61,8]);
AddSWrd('c', 'correct', [33,10 , 3,2 , 35,10 , 102,2 , 104,10 , 13,5 , 77,20 , 110,10 , 15,5 , 47,2 , 86,2 , 26,5 , 122,2 , 124,5]);
AddSWrd('c', 'corrected', [45,5]);
AddSWrd('c', 'correcting', [4,4 , 122,2]);
AddSWrd('c', 'correction', [5,4 , 101,4 , 102,4 , 105,2 , 106,5 , 138,2 , 92,2 , 31,10]);
AddSWrd('c', 'corrections', [114,5 , 4,2 , 101,2 , 22,5]);
AddSWrd('c', 'correctness', [32,2]);
AddSWrd('c', 'corrects', [102,2 , 121,12]);
AddSWrd('c', 'corresponding', [96,10 , 112,35 , 33,20 , 18,5 , 100,10 , 104,40 , 13,10 , 77,20 , 31,20]);
AddSWrd('c', 'corresponds', [33,10 , 23,5 , 77,10]);
AddSWrd('c', 'cost', [20,5 , 21,5]);
AddSWrd('c', 'count', [33,15 , 99,6 , 4,2 , 39,10 , 104,5 , 105,2 , 10,20 , 76,5 , 13,130 , 77,15 , 14,30 , 23,5 , 89,2 , 26,30 , 27,30]);
AddSWrd('c', 'counted', [104,10]);
AddSWrd('c', 'counter', [79,2]);
AddSWrd('c', 'counter-clockwise', [100,5 , 77,10]);
AddSWrd('c', 'countries', [13,5]);
AddSWrd('c', 'counts', [33,10 , 113,2 , 20,5 , 21,5 , 117,5 , 39,30 , 25,10 , 77,10]);
AddSWrd('c', 'courier', [7,5]);
AddSWrd('c', 'cover', [118,5 , 26,5]);
AddSWrd('c', 'coverage', [23,5]);
AddSWrd('c', 'covered', [16,10 , 20,10 , 21,10 , 22,10 , 118,5 , 104,20 , 26,10 , 27,10]);
AddSWrd('c', 'covers', [112,20]);
AddSWrd('c', 'cpl', [112,35]);
AddSWrd('c', 'cpu', [117,10 , 39,2 , 104,20 , 10,20 , 13,10 , 93,2 , 30,2]);
AddSWrd('c', 'cpus', [10,70 , 93,10]);
AddSWrd('c', 'create', [66,2 , 4,2 , 134,2 , 12,5 , 79,2 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 28,2 , 33,20 , 37,4 , 103,4 , 104,20 , 105,2 , 44,5 , 47,2 , 112,10 , 49,10 , 114,10 , 56,2 , 122,2 , 61,30 , 125,5]);
AddSWrd('c', 'created', [96,10 , 33,30 , 134,6 , 104,25 , 12,5 , 13,10 , 77,30 , 14,10 , 15,5 , 20,10 , 116,10 , 21,10 , 117,10 , 22,20 , 23,10 , 119,10 , 24,10 , 90,2 , 91,2 , 125,5]);
AddSWrd('c', 'creates', [32,2 , 33,30 , 103,2 , 104,20 , 136,2 , 106,10 , 44,5 , 13,5 , 45,5 , 77,10 , 112,20 , 49,25 , 50,5 , 20,5 , 21,5 , 22,5 , 118,10 , 23,5 , 24,10 , 56,2 , 89,2 , 90,2 , 91,2 , 61,2]);
AddSWrd('c', 'creating', [112,5 , 20,5 , 21,5 , 105,2 , 14,10 , 62,12]);
AddSWrd('c', 'creation', [16,5 , 33,10 , 129,2 , 50,35 , 103,2 , 77,10 , 14,10 , 47,2]);
AddSWrd('c', 'creators', [48,2]);
AddSWrd('c', 'criteria', [48,2 , 98,2 , 4,4 , 100,15 , 107,2 , 60,2 , 92,6 , 61,2 , 14,30]);
AddSWrd('c', 'criterion', [60,4]);
AddSWrd('c', 'critical', [98,4 , 102,2 , 25,10 , 14,50]);
AddSWrd('c', 'critically', [14,100]);
AddSWrd('c', 'critically-dimensioned', [98,4 , 14,10]);
AddSWrd('c', 'cross', [105,2 , 106,10]);
AddSWrd('c', 'crosses', [105,4]);
AddSWrd('c', 'crossing', [28,2]);
AddSWrd('c', 'cumulative', [100,10]);
AddSWrd('c', 'current', [18,10 , 68,2]);
AddSWrd('c', 'currently', [33,10 , 38,2 , 104,10 , 13,10 , 77,10 , 15,5 , 17,5 , 21,5 , 22,5 , 23,5 , 24,10 , 28,2 , 92,2]);
AddSWrd('c', 'curvilinear', [4,2]);
AddSWrd('c', 'custom', [12,5 , 13,10]);
AddSWrd('c', 'customize', [104,10 , 14,5]);
AddSWrd('c', 'customized', [104,10]);
AddSWrd('c', 'cut', [34,10 , 105,2]);
AddSWrd('c', 'cutline', [105,2]);
AddSWrd('c', 'cutoff', [104,20]);
AddSWrd('c', 'cutouts', [104,10]);
AddSWrd('d', 'd10', [104,5]);
AddSWrd('d', 'd2dbdataprep', [111,2]);
AddSWrd('d', 'd_out', [33,40]);
AddSWrd('d', 'dashed', [57,2]);
AddSWrd('d', 'dashes', [17,5]);
AddSWrd('d', 'data', [3,22 , 4,26 , 5,6 , 6,2 , 8,10 , 11,4 , 12,25 , 13,155 , 14,20 , 15,15 , 16,15 , 17,45 , 18,15 , 19,2 , 20,10 , 21,20 , 22,55 , 23,20 , 24,75 , 25,35 , 26,25 , 27,20 , 28,2 , 30,16 , 31,70 , 32,36 , 33,225 , 34,5 , 35,20 , 38,4 , 40,4 , 41,2 , 42,20 , 44,25 , 45,5 , 47,36 , 48,6 , 49,40 , 51,2 , 52,4 , 53,4 , 55,4 , 56,42 , 57,74 , 58,46 , 59,4 , 62,2 , 63,8 , 64,2 , 65,4 , 70,12 , 74,14 , 75,45 , 77,215 , 79,38 , 80,54 , 81,104 , 82,2 , 83,4 , 84,16 , 85,10 , 86,48 , 87,24 , 88,2 , 89,4 , 96,20 , 98,4 , 99,2 , 100,30 , 101,2 , 102,4 , 103,2 , 104,225 , 105,24 , 106,25 , 108,30 , 110,25 , 112,35 , 115,4 , 116,15 , 117,25 , 118,45 , 119,10 , 120,6 , 121,34 , 122,12 , 123,2 , 125,35 , 128,12 , 129,4 , 130,2 , 131,32 , 132,2 , 133,4 , 134,16 , 135,4 , 138,2]);
AddSWrd('d', 'data-based', [105,2 , 106,5]);
AddSWrd('d', 'data-to-database', [112,10 , 101,4 , 111,2]);
AddSWrd('d', 'data_extent', [32,2 , 33,65 , 77,35]);
AddSWrd('d', 'data_flow_branch', [13,10]);
AddSWrd('d', 'database', [128,2 , 4,2 , 132,4 , 135,6 , 8,4 , 12,15 , 13,50 , 30,4 , 31,5 , 32,2 , 33,50 , 35,10 , 37,2 , 38,10 , 41,2 , 42,35 , 43,15 , 44,25 , 45,80 , 49,5 , 52,2 , 53,42 , 56,6 , 66,2 , 70,2 , 71,2 , 72,2 , 73,2 , 74,2 , 75,5 , 76,5 , 77,130 , 79,6 , 80,46 , 81,4 , 83,2 , 85,2 , 86,6 , 87,12 , 88,2 , 89,8 , 90,2 , 91,2 , 96,15 , 100,10 , 102,2 , 103,2 , 104,85 , 106,5 , 108,5 , 114,5 , 116,5 , 118,10 , 123,2 , 125,5]);
AddSWrd('d', 'database-to-detection', [112,5]);
AddSWrd('d', 'database.you', [76,5]);
AddSWrd('d', 'databases', [81,34 , 42,15 , 108,20 , 29,2 , 30,4]);
AddSWrd('d', 'dataextent', [33,30 , 104,75 , 110,10]);
AddSWrd('d', 'dataprep', [112,160 , 101,2 , 111,14]);
AddSWrd('d', 'datatype', [33,90 , 104,35 , 44,5 , 108,35 , 13,5 , 77,55 , 109,2 , 110,20 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 118,40 , 23,5 , 119,10 , 24,5 , 56,2 , 25,5 , 26,15 , 27,15]);
AddSWrd('d', 'datatype_range', [110,25]);
AddSWrd('d', 'datatypes', [33,10 , 118,20 , 104,10 , 107,2 , 108,5 , 13,5 , 77,20 , 110,15]);
AddSWrd('d', 'date', [13,20]);
AddSWrd('d', 'db_extent', [116,30]);
AddSWrd('d', 'dbu', [132,2 , 31,10 , 79,2]);
AddSWrd('d', 'dc00', [104,20]);
AddSWrd('d', 'dc01', [104,20]);
AddSWrd('d', 'dc02', [104,20]);
AddSWrd('d', 'dc03', [104,20]);
AddSWrd('d', 'dc04', [104,20]);
AddSWrd('d', 'dc05', [104,20]);
AddSWrd('d', 'dc06', [104,20]);
AddSWrd('d', 'dc07', [104,20]);
AddSWrd('d', 'dc08', [104,20]);
AddSWrd('d', 'dc09', [104,20]);
AddSWrd('d', 'dc10', [104,20]);
AddSWrd('d', 'dde', [128,36 , 17,5 , 33,90 , 130,32 , 115,2 , 133,2 , 118,15 , 13,50 , 77,70 , 125,10 , 30,2 , 31,40]);
AddSWrd('d', 'dde_extent', [33,15]);
AddSWrd('d', 'ddo', [33,60 , 38,44 , 77,10]);
AddSWrd('d', 'ddo.oas', [38,6]);
AddSWrd('d', 'ddo_files', [33,20]);
AddSWrd('d', 'ddo_mdp_dde_dual.oas', [33,5]);
AddSWrd('d', 'deactivate', [77,10]);
AddSWrd('d', 'deactivated', [18,5 , 22,5]);
AddSWrd('d', 'deactivates', [33,10 , 21,5 , 23,5 , 24,10]);
AddSWrd('d', 'deangle', [34,5]);
AddSWrd('d', 'decided', [13,5]);
AddSWrd('d', 'deciding', [47,2]);
AddSWrd('d', 'decimal', [17,10]);
AddSWrd('d', 'decisions', [133,2]);
AddSWrd('d', 'deck', [65,2 , 129,2 , 4,10 , 5,4 , 75,10 , 12,10 , 76,5 , 77,140 , 82,10 , 22,10 , 92,4 , 94,4 , 31,40 , 95,34 , 96,55 , 33,125 , 97,5 , 36,6 , 102,4 , 104,30 , 112,100 , 114,5 , 121,2 , 122,2 , 125,5 , 63,2]);
AddSWrd('d', 'deck-to-job', [77,30]);
AddSWrd('d', 'decks', [112,55 , 33,25 , 82,62 , 4,8 , 103,2 , 104,10 , 74,2 , 92,2 , 77,25]);
AddSWrd('d', 'declaration', [118,10 , 44,5]);
AddSWrd('d', 'declare', [56,2 , 44,5]);
AddSWrd('d', 'declared', [33,10 , 35,5 , 13,5 , 77,10 , 110,10]);
AddSWrd('d', 'declares', [44,5]);
AddSWrd('d', 'declaring', [56,2 , 44,5]);
AddSWrd('d', 'decompressed', [75,10 , 77,10]);
AddSWrd('d', 'decompression', [75,5 , 125,5]);
AddSWrd('d', 'decrease', [20,10 , 21,15 , 22,5 , 23,5 , 24,10 , 136,6]);
AddSWrd('d', 'decreased', [82,2]);
AddSWrd('d', 'decreasing', [131,2 , 14,10]);
AddSWrd('d', 'dedicated', [30,2]);
AddSWrd('d', 'deepest', [13,10 , 77,10]);
AddSWrd('d', 'default', [131,2 , 134,2 , 7,10 , 136,4 , 138,4 , 12,10 , 13,120 , 77,290 , 14,25 , 78,32 , 15,35 , 79,2 , 16,50 , 17,25 , 18,40 , 82,4 , 20,95 , 84,14 , 21,165 , 22,140 , 86,8 , 23,145 , 24,240 , 25,70 , 26,20 , 27,20 , 31,30 , 32,2 , 96,80 , 33,160 , 35,50 , 100,45 , 38,6 , 104,200 , 41,4 , 106,10 , 43,30 , 108,20 , 45,5 , 110,10 , 112,60 , 114,5 , 117,10 , 118,10 , 60,4 , 61,2 , 62,4 , 63,2]);
AddSWrd('d', 'defaults', [77,30]);
AddSWrd('d', 'defect', [4,2]);
AddSWrd('d', 'defectclassify', [4,4 , 5,4]);
AddSWrd('d', 'defectreview', [4,4 , 5,4]);
AddSWrd('d', 'defects', [4,8]);
AddSWrd('d', 'define', [96,10 , 33,20 , 35,5 , 100,5 , 8,2 , 105,2 , 42,5 , 11,2 , 43,5 , 12,45 , 13,15 , 77,10 , 79,4 , 17,5 , 49,20 , 18,5 , 114,5 , 20,5 , 21,5 , 85,2 , 22,10 , 23,5 , 87,30 , 24,15]);
AddSWrd('d', 'defined', [96,10 , 33,20 , 34,5 , 35,10 , 100,5 , 104,20 , 106,10 , 12,20 , 108,20 , 13,25 , 77,10 , 109,2 , 110,20 , 79,6 , 112,30 , 49,5 , 82,2 , 116,10 , 118,5 , 119,5 , 27,5 , 63,2]);
AddSWrd('d', 'defines', [100,15 , 104,20 , 42,5 , 43,10 , 12,5 , 77,40 , 14,5 , 110,20 , 79,4 , 48,6 , 115,2 , 20,10 , 116,5 , 21,5 , 59,6]);
AddSWrd('d', 'defining', [100,5 , 132,2 , 12,10 , 13,10 , 77,20 , 15,10 , 16,5 , 17,10 , 20,50 , 21,30 , 22,20 , 118,10 , 23,20 , 87,2 , 24,30 , 63,2]);
AddSWrd('d', 'definition', [96,25 , 50,35 , 114,5 , 100,10 , 132,2 , 12,35 , 61,2 , 77,30 , 110,5 , 31,20]);
AddSWrd('d', 'definitions', [96,20 , 114,10 , 104,10 , 58,2]);
AddSWrd('d', 'degradation', [77,20]);
AddSWrd('d', 'degrade', [128,2 , 33,20 , 118,10 , 104,10 , 105,2 , 13,5]);
AddSWrd('d', 'degraded', [32,2 , 13,5]);
AddSWrd('d', 'degree', [20,5 , 132,2 , 21,5 , 22,15 , 23,15 , 15,5 , 63,2]);
AddSWrd('d', 'degrees', [20,15 , 21,10 , 22,10 , 23,10 , 60,2 , 61,2 , 15,10 , 63,2 , 79,4]);
AddSWrd('d', 'deletes', [44,5]);
AddSWrd('d', 'delimiter', [18,5 , 15,5]);
AddSWrd('d', 'delta', [104,10]);
AddSWrd('d', 'delta_x_um', [104,55]);
AddSWrd('d', 'delta_y_um', [104,55]);
AddSWrd('d', 'demo', [41,2]);
AddSWrd('d', 'demo.pfh3', [71,2]);
AddSWrd('d', 'demo_ab.gds', [41,2]);
AddSWrd('d', 'demo_ab.rep', [41,2]);
AddSWrd('d', 'demo_hitachi.gds', [71,2]);
AddSWrd('d', 'demo_hitachi.rep', [71,2]);
AddSWrd('d', 'demo_merged.gds', [71,2]);
AddSWrd('d', 'demo_wrapper', [71,2]);
AddSWrd('d', 'demonstrates', [102,2]);
AddSWrd('d', 'denominator', [33,20 , 18,5 , 100,15 , 104,30 , 13,5 , 77,30 , 110,10 , 15,15]);
AddSWrd('d', 'dense', [102,4]);
AddSWrd('d', 'density', [128,2 , 34,5 , 4,2 , 101,2 , 102,6 , 103,72 , 104,655 , 105,6 , 138,44 , 13,10 , 77,10 , 17,65 , 49,25 , 18,30 , 23,10 , 30,2]);
AddSWrd('d', 'density-based', [105,2]);
AddSWrd('d', 'density_algorithm', [104,55]);
AddSWrd('d', 'density_expr', [104,25]);
AddSWrd('d', 'density_expression', [103,2]);
AddSWrd('d', 'density_precision', [104,15]);
AddSWrd('d', 'depend', [16,5 , 112,10 , 102,2 , 10,10 , 77,10]);
AddSWrd('d', 'dependence', [58,14]);
AddSWrd('d', 'dependencies', [102,2]);
AddSWrd('d', 'dependent', [93,2]);
AddSWrd('d', 'depending', [112,15 , 17,5 , 102,2 , 105,2 , 58,4 , 12,5 , 15,5 , 63,2]);
AddSWrd('d', 'depends', [16,5 , 112,10 , 34,10 , 21,5 , 22,10 , 23,10 , 24,20 , 26,5 , 27,5 , 78,2]);
AddSWrd('d', 'depiction', [57,2]);
AddSWrd('d', 'deprecated', [21,5]);
AddSWrd('d', 'depth', [26,35 , 27,10 , 13,5]);
AddSWrd('d', 'derivation', [5,2]);
AddSWrd('d', 'derivations', [36,2]);
AddSWrd('d', 'derive', [116,5 , 104,5 , 105,2]);
AddSWrd('d', 'derived', [33,10 , 104,30 , 9,2 , 106,20 , 12,15 , 76,5 , 108,10 , 77,10 , 47,2 , 49,10 , 50,10 , 56,12 , 28,2 , 31,10]);
AddSWrd('d', 'describe', [18,5 , 41,2 , 59,2]);
AddSWrd('d', 'described', [128,2 , 33,20 , 24,10 , 9,2 , 121,2 , 122,2 , 13,25 , 77,10]);
AddSWrd('d', 'describes', [48,2 , 49,5 , 125,5 , 14,20]);
AddSWrd('d', 'describing', [54,2]);
AddSWrd('d', 'description', [102,2 , 7,5 , 103,2 , 8,2 , 42,5 , 43,5 , 12,5 , 44,5 , 45,5 , 46,5 , 110,10 , 48,2 , 49,5 , 50,5 , 115,2 , 20,10 , 21,10 , 55,2 , 25,5 , 125,10]);
AddSWrd('d', 'descriptions', [128,4 , 7,5 , 12,10]);
AddSWrd('d', 'descriptive', [124,5]);
AddSWrd('d', 'descriptor', [26,5 , 27,5]);
AddSWrd('d', 'descriptors', [13,10]);
AddSWrd('d', 'design', [4,2 , 5,2 , 101,2 , 105,4 , 42,15 , 44,20 , 14,50 , 79,2 , 17,25 , 82,2 , 114,15 , 118,10 , 55,2 , 87,2 , 119,5 , 56,2 , 90,2 , 91,2 , 29,2 , 30,4]);
AddSWrd('d', 'designates', [119,10]);
AddSWrd('d', 'designator', [20,5 , 21,5]);
AddSWrd('d', 'designed', [4,2]);
AddSWrd('d', 'designrev', [5,4]);
AddSWrd('d', 'designs', [102,2 , 25,10 , 10,10 , 27,5 , 28,2 , 13,10]);
AddSWrd('d', 'desired', [16,15 , 33,30 , 35,5 , 104,20 , 25,30 , 26,20 , 27,20 , 77,30 , 109,2 , 110,5]);
AddSWrd('d', 'detail', [128,2 , 123,2 , 13,5]);
AddSWrd('d', 'detailed', [103,2 , 104,10 , 124,5 , 63,2]);
AddSWrd('d', 'details', [33,20 , 34,5 , 36,2 , 134,2 , 9,2 , 139,2 , 12,5 , 13,10 , 77,20 , 82,2 , 21,5 , 23,5 , 24,10 , 28,2]);
AddSWrd('d', 'detected', [125,10]);
AddSWrd('d', 'detecting', [98,2]);
AddSWrd('d', 'detection', [112,10 , 98,6 , 100,15 , 101,4 , 77,10 , 111,2]);
AddSWrd('d', 'detections', [100,10]);
AddSWrd('d', 'detects', [98,4 , 100,20 , 123,2]);
AddSWrd('d', 'determine', [35,15 , 100,10]);
AddSWrd('d', 'determined', [32,2 , 17,5 , 33,20 , 130,2 , 118,10 , 104,20 , 105,2 , 106,5 , 13,15 , 31,10]);
AddSWrd('d', 'determines', [18,5 , 20,5 , 21,5 , 22,10 , 23,10 , 24,10]);
AddSWrd('d', 'dev', [70,2 , 104,10]);
AddSWrd('d', 'develop', [4,2 , 101,2]);
AddSWrd('d', 'device', [16,25 , 21,20 , 69,2 , 22,20 , 7,5 , 23,20 , 24,15 , 13,10 , 77,10]);
AddSWrd('d', 'device_layer', [7,5]);
AddSWrd('d', 'device_name', [16,15]);
AddSWrd('d', 'devices', [16,25]);
AddSWrd('d', 'dfm', [34,20 , 28,2]);
AddSWrd('d', 'dfname', [17,15]);
AddSWrd('d', 'differ', [80,2 , 123,2 , 28,2]);
AddSWrd('d', 'difference', [99,2 , 103,2 , 10,10]);
AddSWrd('d', 'differences', [80,2 , 83,2 , 89,4 , 31,10]);
AddSWrd('d', 'different', [65,2 , 130,2 , 4,2 , 74,4 , 13,20 , 77,20 , 14,10 , 79,2 , 16,20 , 80,4 , 81,24 , 82,2 , 21,5 , 85,4 , 22,10 , 23,10 , 24,10 , 25,10 , 26,5 , 27,5 , 28,2 , 31,10 , 32,2 , 33,20 , 102,4 , 39,2 , 104,20 , 105,6 , 53,6 , 119,5 , 57,2 , 58,6 , 125,5 , 63,2]);
AddSWrd('d', 'differentiate', [82,2 , 39,2]);
AddSWrd('d', 'differently', [17,5]);
AddSWrd('d', 'differs', [104,10 , 13,10]);
AddSWrd('d', 'digits', [18,5]);
AddSWrd('d', 'dimension', [16,5 , 48,2 , 98,4 , 100,20 , 102,2 , 56,4 , 58,16 , 27,5 , 59,34 , 60,10 , 61,14 , 62,10]);
AddSWrd('d', 'dimensional', [56,2 , 104,10]);
AddSWrd('d', 'dimensioned', [14,100]);
AddSWrd('d', 'dimensionless', [104,10]);
AddSWrd('d', 'dimensions', [102,2 , 26,5 , 27,10 , 14,10 , 63,2]);
AddSWrd('d', 'dir', [33,5 , 134,2 , 13,20]);
AddSWrd('d', 'dir..', [10,10]);
AddSWrd('d', 'dir1', [96,15]);
AddSWrd('d', 'dir2', [96,15]);
AddSWrd('d', 'direct', [128,12 , 33,60 , 38,4 , 102,2 , 104,65 , 13,45 , 77,40 , 110,10 , 17,5 , 115,4 , 118,20 , 119,20 , 26,5 , 28,2 , 30,2 , 31,10]);
AddSWrd('d', 'direct-data-entry', [102,2 , 13,10 , 77,10]);
AddSWrd('d', 'direct-input', [33,20 , 104,20 , 13,10 , 77,40]);
AddSWrd('d', 'direct-to-oasis', [38,2]);
AddSWrd('d', 'direct_fs_access', [33,30 , 104,25 , 13,20 , 77,15 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('d', 'direct_input', [114,25 , 115,2 , 116,5 , 118,150]);
AddSWrd('d', 'direct_output', [114,15 , 115,2 , 116,5 , 119,160]);
AddSWrd('d', 'directed', [38,4]);
AddSWrd('d', 'directin', [33,60 , 119,20 , 77,50]);
AddSWrd('d', 'directing', [38,2]);
AddSWrd('d', 'direction', [49,10 , 100,5 , 25,20 , 57,2 , 58,2 , 27,15 , 43,5 , 61,4 , 77,10]);
AddSWrd('d', 'directions', [57,4 , 105,2 , 58,2 , 122,4 , 13,10]);
AddSWrd('d', 'directly', [96,5 , 128,2 , 33,30 , 35,5 , 38,2 , 103,4 , 104,20 , 13,40 , 77,30 , 112,5 , 114,20 , 21,10 , 118,10 , 30,2]);
AddSWrd('d', 'directories', [33,20 , 130,2 , 134,8 , 104,40 , 13,20 , 77,20]);
AddSWrd('d', 'directory', [96,30 , 33,60 , 130,2 , 68,2 , 134,24 , 104,50 , 9,2 , 10,10 , 75,25 , 139,2 , 12,5 , 44,20 , 13,45 , 77,50 , 112,20 , 20,30 , 21,25 , 22,55 , 118,30 , 23,25 , 119,10 , 24,70]);
AddSWrd('d', 'directory_path', [77,5]);
AddSWrd('d', 'directroy', [70,2]);
AddSWrd('d', 'directs', [16,5 , 20,5 , 21,5 , 22,5 , 104,5 , 26,5 , 27,5]);
AddSWrd('d', 'disc', [96,10]);
AddSWrd('d', 'discarded', [31,10]);
AddSWrd('d', 'discovered', [123,4]);
AddSWrd('d', 'discussed', [13,5]);
AddSWrd('d', 'discussion', [40,2 , 63,2]);
AddSWrd('d', 'disk', [17,5 , 114,5 , 21,5 , 134,20 , 10,10 , 77,30 , 30,2]);
AddSWrd('d', 'disk-based', [44,5]);
AddSWrd('d', 'disk_file_name', [17,30]);
AddSWrd('d', 'disks', [134,12 , 13,10]);
AddSWrd('d', 'display', [33,10 , 4,2]);
AddSWrd('d', 'displays', [55,2 , 103,2]);
AddSWrd('d', 'distance', [32,4 , 96,45 , 14,10 , 15,10 , 49,5 , 20,10 , 21,10 , 22,10 , 23,10 , 60,2 , 92,4 , 61,2 , 63,8]);
AddSWrd('d', 'distances', [58,2 , 59,2]);
AddSWrd('d', 'distinguishes', [56,2]);
AddSWrd('d', 'distortions', [4,2]);
AddSWrd('d', 'distribute', [25,10]);
AddSWrd('d', 'distributed', [104,20 , 9,2 , 10,30 , 28,2 , 13,10]);
AddSWrd('d', 'distributing', [25,5]);
AddSWrd('d', 'distribution', [99,4]);
AddSWrd('d', 'divert', [38,2]);
AddSWrd('d', 'diverted', [38,2]);
AddSWrd('d', 'diverts', [33,10 , 77,10]);
AddSWrd('d', 'divide', [16,5 , 18,15 , 25,10 , 26,10 , 27,5]);
AddSWrd('d', 'divided', [22,5 , 24,55 , 104,10]);
AddSWrd('d', 'divides', [57,28]);
AddSWrd('d', 'dividing', [57,6 , 58,2]);
AddSWrd('d', 'division', [20,5 , 21,5 , 22,5 , 23,5 , 24,40 , 104,10 , 15,5]);
AddSWrd('d', 'divisions', [18,5]);
AddSWrd('d', 'document', [18,5 , 6,2 , 7,5 , 13,5 , 63,2]);
AddSWrd('d', 'documentation', [5,2]);
AddSWrd('d', 'documented', [128,2 , 33,10 , 129,2 , 34,5 , 4,16 , 110,10 , 15,5]);
AddSWrd('d', 'documents', [5,2 , 55,2]);
AddSWrd('d', 'dollar', [13,5]);
AddSWrd('d', 'domain', [81,6]);
AddSWrd('d', 'domains', [81,4]);
AddSWrd('d', 'done', [33,10 , 108,10 , 13,25 , 30,2]);
AddSWrd('d', 'donut', [34,10]);
AddSWrd('d', 'dose', [16,45 , 22,55 , 104,105 , 25,80 , 26,45 , 27,45]);
AddSWrd('d', 'dose-based', [22,5 , 13,10]);
AddSWrd('d', 'dose_ring', [104,45]);
AddSWrd('d', 'dot', [17,5]);
AddSWrd('d', 'dots', [7,5]);
AddSWrd('d', 'dotted', [57,2]);
AddSWrd('d', 'double', [96,10 , 33,10 , 97,5 , 100,15 , 7,5 , 104,45 , 106,10 , 12,10 , 44,5 , 108,10 , 77,20 , 110,10 , 112,10 , 118,10 , 93,2 , 31,10]);
AddSWrd('d', 'double-forward', [12,5]);
AddSWrd('d', 'double-quotes', [18,5]);
AddSWrd('d', 'down', [20,5 , 21,10 , 22,5 , 102,4 , 23,5 , 71,2 , 24,10 , 72,2 , 136,2]);
AddSWrd('d', 'down-sampled', [138,2]);
AddSWrd('d', 'downstream', [133,2]);
AddSWrd('d', 'dpc', [39,2]);
AddSWrd('d', 'dpc1', [39,8]);
AddSWrd('d', 'dpc2', [39,8]);
AddSWrd('d', 'draw', [97,5]);
AddSWrd('d', 'drawing', [96,20 , 33,10 , 97,5 , 22,5 , 24,5 , 105,2 , 92,4 , 94,4]);
AddSWrd('d', 'drawn', [34,5 , 56,4 , 57,6 , 63,2]);
AddSWrd('d', 'drc', [4,2 , 70,6 , 71,8 , 8,2 , 72,8 , 73,14 , 10,40 , 76,5 , 13,5 , 81,2 , 89,12 , 90,8 , 91,8 , 28,2 , 31,10 , 32,2 , 33,105 , 99,6 , 36,12 , 37,16 , 38,12 , 102,4 , 39,2 , 103,2 , 104,155 , 41,6 , 106,35 , 108,20 , 45,95 , 110,25 , 114,20 , 52,2 , 116,25 , 53,4 , 54,32 , 119,5]);
AddSWrd('d', 'drc-like', [32,2 , 4,2]);
AddSWrd('d', 'drwxr-xr-x', [70,4]);
AddSWrd('d', 'dual', [38,6]);
AddSWrd('d', 'dual-direct-data-entry', [77,10]);
AddSWrd('d', 'due', [99,2 , 123,2 , 28,2 , 77,10 , 125,5 , 31,20]);
AddSWrd('d', 'dummy', [96,5 , 33,10 , 102,4 , 118,5 , 103,2 , 119,5 , 104,70 , 12,5 , 110,65]);
AddSWrd('d', 'dummy.oas', [33,5 , 114,10 , 116,10 , 102,2 , 104,15]);
AddSWrd('d', 'dummy1', [114,15 , 118,10]);
AddSWrd('d', 'dummy3', [118,10]);
AddSWrd('d', 'dummy4', [118,10]);
AddSWrd('d', 'dummy_1000.oas', [33,5 , 104,10]);
AddSWrd('d', 'dummy_fill', [104,55]);
AddSWrd('d', 'dummy_mdp_dde_dual.oas', [33,5]);
AddSWrd('d', 'dummy_out.oas', [114,5]);
AddSWrd('d', 'dummy_output', [116,5]);
AddSWrd('d', 'duplicate', [130,2]);
AddSWrd('d', 'duplicated', [104,10]);
AddSWrd('d', 'duplicating', [104,10]);
AddSWrd('d', 'duration', [104,10 , 13,5]);
AddSWrd('d', 'during', [33,20 , 36,2 , 134,32 , 104,20 , 138,2 , 44,10 , 13,15 , 77,40 , 79,2 , 17,10 , 117,20 , 22,5 , 55,2 , 25,15 , 27,5 , 123,12 , 63,2]);
AddSWrd('d', 'dynamically', [16,5]);
AddSWrd('e', 'e-beam', [21,5 , 22,5 , 102,4 , 23,5]);
AddSWrd('e', 'e_in', [33,30]);
AddSWrd('e', 'e_mdp_ignore_redundant_cells', [13,5]);
AddSWrd('e', 'e_out', [33,30]);
AddSWrd('e', 'eapsm', [112,35]);
AddSWrd('e', 'earliest', [105,2]);
AddSWrd('e', 'early', [100,5 , 77,10]);
AddSWrd('e', 'ease', [104,10]);
AddSWrd('e', 'easier', [129,2 , 104,10]);
AddSWrd('e', 'easy', [86,2]);
AddSWrd('e', 'ebm', [4,2 , 21,10]);
AddSWrd('e', 'ebm6000', [21,15 , 133,2 , 22,15 , 23,15]);
AddSWrd('e', 'ebm7000', [21,15 , 22,15 , 23,15]);
AddSWrd('e', 'ebm8000', [21,10 , 22,15 , 23,15]);
AddSWrd('e', 'ebm9000', [21,10 , 22,15 , 23,15]);
AddSWrd('e', 'echo', [13,10]);
AddSWrd('e', 'echoed', [123,2]);
AddSWrd('e', 'ect', [99,4]);
AddSWrd('e', 'eda', [21,5 , 22,5 , 23,5 , 119,5 , 24,10 , 25,10]);
AddSWrd('e', 'edge', [65,2 , 4,2 , 13,25 , 14,10 , 15,10 , 20,10 , 21,10 , 22,15 , 23,15 , 25,10 , 28,2 , 31,15 , 32,4 , 33,35 , 34,115 , 100,10 , 102,2 , 104,20 , 105,8 , 106,10 , 46,5 , 47,8 , 48,26 , 49,20 , 117,10 , 56,8 , 57,58 , 121,4 , 58,16 , 122,2 , 59,10 , 60,106 , 61,18 , 62,26 , 63,10]);
AddSWrd('e', 'edge-directed', [56,2]);
AddSWrd('e', 'edge-type', [33,10]);
AddSWrd('e', 'edges', [132,2 , 13,10 , 14,30 , 15,5 , 16,5 , 20,10 , 21,5 , 22,25 , 23,25 , 25,10 , 28,6 , 31,10 , 98,2 , 100,10 , 104,10 , 105,6 , 106,10 , 47,2 , 48,16 , 49,10 , 117,10 , 56,4 , 57,18 , 58,26 , 122,2 , 59,10 , 60,14 , 61,22 , 62,34]);
AddSWrd('e', 'edit', [35,5 , 4,2]);
AddSWrd('e', 'editor', [4,4 , 5,4 , 105,2]);
AddSWrd('e', 'effect', [16,5 , 104,10 , 105,2 , 42,5 , 58,14 , 106,5 , 13,5 , 45,5 , 77,10 , 63,2 , 79,16]);
AddSWrd('e', 'effective', [131,2 , 13,10 , 77,20]);
AddSWrd('e', 'effectively', [104,10 , 105,2 , 13,5 , 31,10]);
AddSWrd('e', 'effects', [4,4 , 101,4 , 102,8 , 104,10 , 105,2 , 13,5]);
AddSWrd('e', 'efficiency', [32,2 , 30,2]);
AddSWrd('e', 'efficient', [4,2]);
AddSWrd('e', 'efficiently', [129,2 , 108,10 , 13,5 , 30,2 , 31,5]);
AddSWrd('e', 'effort', [26,5]);
AddSWrd('e', 'eight', [16,5 , 22,5 , 26,5 , 27,5 , 93,2]);
AddSWrd('e', 'either', [66,2 , 7,5 , 9,2 , 12,20 , 13,10 , 77,10 , 15,5 , 79,2 , 16,10 , 17,10 , 18,10 , 20,5 , 21,10 , 22,5 , 23,5 , 89,2 , 28,2 , 31,10 , 32,2 , 96,10 , 33,10 , 36,2 , 100,5 , 38,2 , 103,2 , 104,30 , 105,4 , 110,10 , 47,2 , 48,2 , 49,5 , 53,2 , 118,10 , 57,2 , 61,2]);
AddSWrd('e', 'ejb', [104,10]);
AddSWrd('e', 'el1', [116,25]);
AddSWrd('e', 'el2', [116,20]);
AddSWrd('e', 'electron', [102,4]);
AddSWrd('e', 'element_name', [7,5]);
AddSWrd('e', 'elements', [105,6 , 106,10]);
AddSWrd('e', 'ellipsis', [7,10]);
AddSWrd('e', 'embed', [32,58 , 128,2 , 33,355 , 129,2 , 34,5 , 35,20 , 131,4 , 4,8 , 36,10 , 37,52 , 133,2 , 38,40 , 102,2 , 39,46 , 137,32 , 13,30 , 77,10 , 124,5 , 29,20 , 30,2 , 31,135]);
AddSWrd('e', 'embedded', [33,210 , 34,60 , 66,2 , 35,45 , 4,6 , 36,52 , 5,2 , 37,38 , 104,100 , 105,2 , 13,145 , 77,210 , 110,20 , 79,2 , 16,10 , 22,10 , 25,10 , 26,10 , 27,15 , 28,2 , 29,22 , 30,4 , 31,140]);
AddSWrd('e', 'embedded.inc', [36,4]);
AddSWrd('e', 'embedded_svrf_scale', [13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('e', 'empty', [96,5 , 17,5 , 18,5 , 114,5 , 116,5 , 103,2 , 119,5 , 56,2 , 104,15 , 44,5 , 125,10]);
AddSWrd('e', 'empty.oas', [104,5]);
AddSWrd('e', 'empty_10000.oas', [103,2]);
AddSWrd('e', 'emrc', [33,20]);
AddSWrd('e', 'enable', [34,5 , 35,10 , 92,2]);
AddSWrd('e', 'enable_checksum', [18,10]);
AddSWrd('e', 'enabled', [17,10 , 24,40 , 13,5]);
AddSWrd('e', 'enables', [32,2 , 33,20 , 35,10 , 4,4 , 10,10 , 13,35 , 77,20 , 14,10 , 16,15 , 17,10 , 115,4 , 20,10 , 21,15 , 22,5 , 118,10 , 23,5 , 119,10 , 24,30 , 26,5 , 27,5]);
AddSWrd('e', 'enabling', [33,10 , 119,5 , 25,5]);
AddSWrd('e', 'enclose', [34,20 , 100,5 , 7,15 , 104,10 , 77,10]);
AddSWrd('e', 'enclosed', [104,20 , 59,2 , 12,20]);
AddSWrd('e', 'enclosure', [48,8 , 34,10 , 59,6 , 60,18]);
AddSWrd('e', 'encoding', [104,10]);
AddSWrd('e', 'encounter', [86,4]);
AddSWrd('e', 'encountered', [33,10 , 104,10 , 124,5 , 13,5 , 45,5 , 77,20 , 125,5]);
AddSWrd('e', 'encountering', [18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('e', 'encounters', [33,10 , 18,5 , 20,5 , 77,20 , 46,25]);
AddSWrd('e', 'end', [17,5 , 33,10 , 35,5 , 39,2 , 119,10 , 104,25 , 123,2 , 124,5 , 13,5 , 77,20 , 31,10]);
AddSWrd('e', 'ending', [33,10 , 13,5 , 77,10]);
AddSWrd('e', 'ends', [48,2]);
AddSWrd('e', 'energy', [104,10]);
AddSWrd('e', 'enforced', [96,10 , 25,5]);
AddSWrd('e', 'enforces', [25,5]);
AddSWrd('e', 'engine', [8,2 , 40,2 , 9,4 , 10,30 , 42,10 , 12,15 , 44,10 , 45,5 , 46,5 , 47,2 , 17,5 , 52,6 , 53,4 , 54,2 , 55,2 , 56,2 , 57,4 , 59,4 , 28,6 , 60,2 , 61,4]);
AddSWrd('e', 'engineer', [104,10 , 138,2]);
AddSWrd('e', 'enhance', [17,5]);
AddSWrd('e', 'enhancement', [5,2]);
AddSWrd('e', 'enough', [118,10]);
AddSWrd('e', 'ensure', [32,2 , 132,4 , 12,5 , 13,5 , 45,5 , 79,2 , 22,10 , 118,5 , 23,10 , 24,15 , 89,4 , 26,5 , 27,5]);
AddSWrd('e', 'ensures', [25,20]);
AddSWrd('e', 'ensuring', [66,2]);
AddSWrd('e', 'enter', [7,5 , 23,5 , 79,2]);
AddSWrd('e', 'entered', [7,5]);
AddSWrd('e', 'entering', [7,25]);
AddSWrd('e', 'enters', [123,2]);
AddSWrd('e', 'entire', [65,2 , 35,10 , 100,5 , 102,2 , 87,2 , 104,15 , 105,2 , 121,4 , 12,5 , 13,10 , 63,4]);
AddSWrd('e', 'entirely', [33,10 , 104,10 , 58,2 , 13,5]);
AddSWrd('e', 'entitled', [28,2]);
AddSWrd('e', 'entry', [128,4 , 17,5 , 115,2 , 102,2 , 118,10 , 104,10 , 12,5 , 13,5 , 30,2 , 31,10]);
AddSWrd('e', 'environment', [33,10 , 129,2 , 36,2 , 134,2 , 104,30 , 41,10 , 13,30 , 77,20 , 17,15 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('e', 'epsm1', [112,40]);
AddSWrd('e', 'epsm2', [112,35]);
AddSWrd('e', 'equal', [66,2 , 106,10 , 138,2 , 15,10 , 17,25 , 18,5 , 82,2 , 20,5 , 21,5 , 117,10 , 22,5 , 23,15 , 26,5 , 63,2]);
AddSWrd('e', 'equally', [121,2 , 63,2]);
AddSWrd('e', 'equals', [49,5]);
AddSWrd('e', 'equates', [79,2]);
AddSWrd('e', 'equation', [16,5 , 25,10 , 26,5 , 27,5]);
AddSWrd('e', 'equipment', [4,2]);
AddSWrd('e', 'equivalent', [80,2 , 103,2 , 12,5 , 77,30]);
AddSWrd('e', 'era', [5,2]);
AddSWrd('e', 'error', [132,8 , 12,5 , 13,35 , 77,20 , 15,5 , 17,5 , 81,2 , 18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 25,10 , 26,5 , 27,5 , 28,2 , 31,15 , 95,8 , 32,2 , 33,30 , 36,4 , 100,5 , 37,6 , 104,10 , 45,15 , 46,30 , 118,10 , 56,8 , 57,2 , 123,8 , 124,30 , 125,15]);
AddSWrd('e', 'error-directed', [56,2]);
AddSWrd('e', 'errors', [33,10 , 100,5 , 102,8 , 104,10 , 13,5 , 45,10 , 77,30 , 46,5 , 15,15 , 17,5 , 86,2 , 56,2 , 123,8 , 124,25 , 125,5 , 30,2 , 31,10]);
AddSWrd('e', 'especially', [131,2 , 104,10]);
AddSWrd('e', 'essentially', [32,2 , 4,2]);
AddSWrd('e', 'estimate', [26,10 , 27,10]);
AddSWrd('e', 'esvrf', [102,4]);
AddSWrd('e', 'esvrf_1', [33,70]);
AddSWrd('e', 'esvrf_2', [33,10]);
AddSWrd('e', 'etch', [102,4]);
AddSWrd('e', 'etch-loading', [4,2 , 101,2]);
AddSWrd('e', 'euclidean', [61,6 , 62,2]);
AddSWrd('e', 'euv', [104,10]);
AddSWrd('e', 'euvl', [4,2]);
AddSWrd('e', 'evaluate', [4,4 , 74,2]);
AddSWrd('e', 'evaluated', [104,10 , 28,2 , 79,2]);
AddSWrd('e', 'evaluates', [103,2 , 104,5]);
AddSWrd('e', 'evaluating', [60,2]);
AddSWrd('e', 'evaluation', [104,5]);
AddSWrd('e', 'even', [18,5 , 35,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 12,5 , 77,10 , 15,25 , 95,2]);
AddSWrd('e', 'evenly', [16,5 , 18,15 , 25,10 , 26,10 , 27,5]);
AddSWrd('e', 'event', [55,4]);
AddSWrd('e', 'everything', [96,10 , 112,10 , 33,10 , 100,5 , 118,5 , 104,10 , 106,10 , 108,10 , 77,10 , 125,5 , 110,10]);
AddSWrd('e', 'exact', [33,10 , 84,2 , 100,10 , 104,5 , 105,2 , 10,10]);
AddSWrd('e', 'exactly', [33,10 , 49,5 , 36,2 , 104,10 , 121,2 , 77,10 , 63,2]);
AddSWrd('e', 'examined', [49,5]);
AddSWrd('e', 'example', [129,4 , 132,4 , 133,2 , 134,2 , 7,5 , 9,2 , 10,20 , 12,25 , 13,60 , 14,10 , 16,5 , 17,25 , 18,10 , 25,20 , 26,10 , 27,10 , 28,2 , 30,2 , 31,5 , 33,65 , 35,15 , 36,4 , 38,14 , 39,2 , 42,5 , 58,18 , 59,2 , 62,4 , 65,2 , 66,2 , 68,32 , 69,32 , 70,32 , 71,32 , 72,32 , 73,32 , 77,60 , 78,6 , 79,10 , 81,10 , 82,8 , 85,2 , 88,2 , 89,32 , 90,36 , 91,36 , 92,2 , 93,2 , 95,4 , 96,20 , 100,10 , 102,6 , 103,2 , 104,100 , 105,18 , 108,5 , 110,20 , 112,10 , 114,5 , 116,10 , 119,5 , 123,4 , 124,10 , 125,5]);
AddSWrd('e', 'example1', [108,5]);
AddSWrd('e', 'example1.gds', [89,2]);
AddSWrd('e', 'example2.gds', [90,2]);
AddSWrd('e', 'example3.gds', [91,2]);
AddSWrd('e', 'examples', [64,14 , 67,22 , 100,50 , 103,12 , 88,10 , 104,10 , 105,6]);
AddSWrd('e', 'exceed', [96,20 , 33,10 , 104,10 , 44,5 , 13,5 , 77,10 , 15,5 , 20,25 , 21,20 , 22,10 , 118,10 , 23,10 , 24,20 , 25,10 , 26,5 , 27,5 , 31,10]);
AddSWrd('e', 'exceeds', [16,5 , 17,20 , 100,10 , 21,10 , 22,10 , 23,10 , 24,20 , 77,10]);
AddSWrd('e', 'except', [104,10 , 27,5 , 44,5 , 13,5 , 77,20]);
AddSWrd('e', 'exception', [16,5 , 36,4 , 123,4 , 124,5 , 77,30]);
AddSWrd('e', 'exceptions', [33,10 , 75,5 , 123,26 , 124,10 , 13,5]);
AddSWrd('e', 'excerpt', [41,2 , 122,2]);
AddSWrd('e', 'excessive', [13,10]);
AddSWrd('e', 'exchange', [33,10]);
AddSWrd('e', 'exclude_layer', [117,15]);
AddSWrd('e', 'exclusive', [33,10 , 100,5 , 74,2 , 12,5 , 13,10 , 77,10 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 26,5 , 27,5]);
AddSWrd('e', 'execute', [9,2]);
AddSWrd('e', 'executed', [32,2 , 10,15 , 30,2 , 31,20 , 79,2]);
AddSWrd('e', 'executes', [112,5 , 20,10 , 21,5 , 22,5 , 23,5 , 103,2 , 24,10 , 9,2 , 77,10 , 30,4]);
AddSWrd('e', 'execution', [35,20 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 123,6 , 13,10]);
AddSWrd('e', 'executive', [99,2]);
AddSWrd('e', 'exercise', [13,10]);
AddSWrd('e', 'exist', [20,5 , 119,10 , 56,6 , 44,5 , 13,10]);
AddSWrd('e', 'existence', [35,5]);
AddSWrd('e', 'existing', [48,2 , 33,10 , 49,15 , 36,4 , 104,10 , 105,4 , 13,10 , 77,10 , 125,5 , 62,2 , 47,4]);
AddSWrd('e', 'exists', [112,10 , 82,2 , 20,5 , 21,5 , 22,10 , 23,5 , 24,15 , 44,5 , 77,20 , 14,10 , 110,10]);
AddSWrd('e', 'exit', [18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 123,4 , 124,15 , 77,40]);
AddSWrd('e', 'exits', [17,5 , 18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 28,2 , 13,10 , 77,10]);
AddSWrd('e', 'expand', [49,15 , 34,10]);
AddSWrd('e', 'expanded', [77,10]);
AddSWrd('e', 'expanding', [122,2]);
AddSWrd('e', 'expands', [49,20]);
AddSWrd('e', 'expansion', [49,5]);
AddSWrd('e', 'expansion_set', [34,5]);
AddSWrd('e', 'expect', [15,5]);
AddSWrd('e', 'expected', [33,10 , 104,10 , 13,5 , 77,10]);
AddSWrd('e', 'expense', [104,10 , 14,5]);
AddSWrd('e', 'experience', [131,2 , 104,20]);
AddSWrd('e', 'explanation', [85,2]);
AddSWrd('e', 'explicit', [132,2 , 22,5 , 119,10 , 12,10 , 77,10]);
AddSWrd('e', 'explicitly', [33,30 , 82,2 , 35,5 , 132,2 , 118,10 , 119,10 , 104,10 , 138,2 , 12,10 , 13,20 , 77,20 , 110,5]);
AddSWrd('e', 'export', [119,5]);
AddSWrd('e', 'exposed', [98,2 , 100,30]);
AddSWrd('e', 'exposed_area', [16,10 , 20,10 , 21,10 , 22,10 , 23,10 , 26,10 , 27,10]);
AddSWrd('e', 'express', [33,10 , 13,5 , 77,10 , 110,10 , 79,2]);
AddSWrd('e', 'expressed', [16,5 , 23,5 , 26,5 , 27,5 , 77,10 , 79,2]);
AddSWrd('e', 'expression', [104,45]);
AddSWrd('e', 'ext', [33,10 , 35,5]);
AddSWrd('e', 'extend', [104,10 , 61,8 , 63,8]);
AddSWrd('e', 'extended', [16,5 , 112,10 , 33,15 , 34,5 , 102,12 , 104,40 , 61,6]);
AddSWrd('e', 'extending', [32,2 , 57,2]);
AddSWrd('e', 'extends', [17,5 , 35,10 , 57,2 , 61,2]);
AddSWrd('e', 'extension', [16,15 , 17,10 , 33,20 , 18,15 , 130,2 , 100,5 , 104,10 , 12,5 , 13,15 , 77,10 , 15,10]);
AddSWrd('e', 'extensions', [15,10]);
AddSWrd('e', 'extent', [128,2 , 65,2 , 132,2 , 73,4 , 138,2 , 12,35 , 13,80 , 77,255 , 14,5 , 78,4 , 15,5 , 79,2 , 16,5 , 17,10 , 81,16 , 18,5 , 20,5 , 21,5 , 22,5 , 86,2 , 23,10 , 24,5 , 25,20 , 26,20 , 27,20 , 28,2 , 31,10 , 32,8 , 96,10 , 33,185 , 34,10 , 35,25 , 100,75 , 101,4 , 103,2 , 104,125 , 107,2 , 109,6 , 110,80 , 49,10 , 114,15 , 116,5 , 118,25 , 122,2 , 123,2 , 125,5]);
AddSWrd('e', 'extents', [33,10 , 81,16 , 34,5 , 82,2 , 86,2 , 77,30 , 125,10 , 78,2 , 110,10 , 15,5]);
AddSWrd('e', 'exterior', [48,4 , 59,4 , 47,2]);
AddSWrd('e', 'external', [34,5 , 35,10 , 100,5 , 75,35 , 77,50 , 14,110 , 15,5 , 79,2 , 16,5 , 48,8 , 18,5 , 82,2 , 20,5 , 84,6 , 21,5 , 22,5 , 23,5 , 26,5 , 59,6 , 28,2 , 60,18]);
AddSWrd('e', 'external_1ls', [35,10]);
AddSWrd('e', 'externally', [96,5]);
AddSWrd('e', 'extra', [33,10 , 36,2 , 37,4 , 104,10 , 15,5]);
AddSWrd('e', 'extraction', [28,2]);
AddSWrd('e', 'extreme', [4,2]);
AddSWrd('f', 'f_out', [33,20]);
AddSWrd('f', 'facing', [58,4]);
AddSWrd('f', 'fact', [16,5 , 122,2]);
AddSWrd('f', 'factor', [17,15 , 34,10 , 132,8 , 104,40 , 43,5]);
AddSWrd('f', 'factors', [32,2]);
AddSWrd('f', 'fade-out', [25,10]);
AddSWrd('f', 'fail', [104,10 , 123,2]);
AddSWrd('f', 'failed', [125,15 , 95,2]);
AddSWrd('f', 'fails', [17,10 , 33,10 , 75,5 , 13,5 , 77,10 , 110,10]);
AddSWrd('f', 'failure', [35,5 , 123,2 , 125,5]);
AddSWrd('f', 'falls', [32,2 , 17,5]);
AddSWrd('f', 'false', [13,5]);
AddSWrd('f', 'far', [16,5 , 102,2 , 63,2]);
AddSWrd('f', 'fast', [33,40 , 134,2 , 13,20 , 77,40]);
AddSWrd('f', 'faster', [128,2 , 33,20 , 104,30 , 26,5]);
AddSWrd('f', 'fatal', [123,4 , 124,5 , 45,5]);
AddSWrd('f', 'fbdedata', [20,10]);
AddSWrd('f', 'fdata', [20,10 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('f', 'feasible', [21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('f', 'feature', [100,10 , 22,10 , 23,10 , 24,15 , 104,10 , 25,20 , 138,2 , 14,40 , 79,2]);
AddSWrd('f', 'features', [33,10 , 4,2 , 25,20 , 13,10 , 14,70]);
AddSWrd('f', 'few', [32,2 , 48,2 , 49,5]);
AddSWrd('f', 'fewer', [113,4 , 20,5 , 21,5 , 117,10 , 10,10]);
AddSWrd('f', 'fgc', [104,15]);
AddSWrd('f', 'fidelity', [66,2]);
AddSWrd('f', 'field', [16,60 , 17,5 , 18,15 , 15,5]);
AddSWrd('f', 'field_oversize', [16,10 , 13,10]);
AddSWrd('f', 'field_size', [16,15 , 131,4 , 69,2 , 13,10 , 77,35]);
AddSWrd('f', 'field_size_multiplier', [77,35]);
AddSWrd('f', 'field_size_x', [16,15]);
AddSWrd('f', 'field_size_y', [16,15]);
AddSWrd('f', 'fields', [16,15 , 125,5]);
AddSWrd('f', 'fields_per_section', [16,10]);
AddSWrd('f', 'figure', [65,2 , 12,10 , 14,40 , 15,5 , 79,2 , 81,4 , 18,10 , 82,2 , 20,5 , 21,5 , 22,5 , 23,10 , 32,4 , 96,5 , 35,5 , 99,2 , 103,2 , 105,6 , 117,5 , 57,6 , 121,6 , 58,4 , 122,4 , 60,4 , 61,4 , 63,6]);
AddSWrd('f', 'figures', [16,5 , 113,2 , 100,10 , 117,5 , 23,5 , 14,30 , 15,5]);
AddSWrd('f', 'file', [128,6 , 129,10 , 130,14 , 4,4 , 132,6 , 6,2 , 134,4 , 8,6 , 9,6 , 10,50 , 12,110 , 13,435 , 14,5 , 15,95 , 16,45 , 17,95 , 18,45 , 20,60 , 21,65 , 22,70 , 23,45 , 24,115 , 25,25 , 26,65 , 27,60 , 28,4 , 31,75 , 33,575 , 35,5 , 36,48 , 37,18 , 38,30 , 39,2 , 41,4 , 42,5 , 44,5 , 45,10 , 52,2 , 53,4 , 54,6 , 55,4 , 56,4 , 66,2 , 68,4 , 69,2 , 70,6 , 71,4 , 72,6 , 73,6 , 74,4 , 75,30 , 77,825 , 78,2 , 79,12 , 81,10 , 82,4 , 84,16 , 87,4 , 89,6 , 90,10 , 91,10 , 95,4 , 96,135 , 99,4 , 100,105 , 102,4 , 103,22 , 104,555 , 106,60 , 108,75 , 110,135 , 112,50 , 114,110 , 115,2 , 116,75 , 118,90 , 119,55 , 121,2 , 122,2 , 123,8 , 124,10 , 125,45]);
AddSWrd('f', 'file-to-file', [125,5]);
AddSWrd('f', 'file1', [77,120 , 31,5]);
AddSWrd('f', 'file2', [33,25 , 77,110 , 31,5]);
AddSWrd('f', 'file3', [33,25]);
AddSWrd('f', 'file4', [33,25]);
AddSWrd('f', 'file_format', [104,15]);
AddSWrd('f', 'file_name', [68,2 , 69,2 , 71,2 , 72,2 , 73,2 , 12,10 , 13,40 , 15,15 , 16,10 , 17,45 , 81,6 , 18,15 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 25,5 , 89,2 , 26,5 , 90,2 , 27,5 , 91,2 , 31,5 , 100,5 , 102,2 , 110,10]);
AddSWrd('f', 'file_name_restrictions', [18,10 , 125,5]);
AddSWrd('f', 'file_path', [33,30 , 118,40 , 104,60 , 13,20 , 77,30 , 110,15]);
AddSWrd('f', 'filename', [9,2 , 10,15 , 12,20 , 13,45 , 77,35 , 14,5 , 15,20 , 16,20 , 17,35 , 18,45 , 20,10 , 21,10 , 22,25 , 23,10 , 24,30 , 25,5 , 26,10 , 27,10 , 31,10 , 95,4 , 33,10 , 100,15 , 104,140 , 108,25 , 118,30 , 119,30 , 125,5]);
AddSWrd('f', 'filename_n', [104,15]);
AddSWrd('f', 'filenames', [15,5]);
AddSWrd('f', 'filepath', [33,30 , 13,15 , 77,15 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('f', 'files', [129,30 , 130,2 , 4,6 , 6,4 , 134,4 , 10,20 , 75,10 , 13,140 , 77,190 , 79,6 , 17,15 , 81,10 , 20,10 , 84,2 , 85,2 , 22,45 , 86,12 , 24,55 , 88,2 , 25,10 , 28,2 , 96,35 , 33,155 , 104,175 , 42,5 , 107,2 , 112,20 , 114,5 , 115,2 , 53,4 , 118,5 , 119,10 , 121,4 , 122,2 , 125,5]);
AddSWrd('f', 'fill', [5,2 , 31,15]);
AddSWrd('f', 'filtering', [4,2]);
AddSWrd('f', 'final', [32,2 , 17,5 , 4,2 , 20,5 , 21,5 , 122,2 , 12,5 , 77,10 , 62,2 , 63,2]);
AddSWrd('f', 'finally', [11,2 , 13,10]);
AddSWrd('f', 'find', [4,2 , 58,4 , 60,2 , 13,10]);
AddSWrd('f', 'fine-tune', [59,2]);
AddSWrd('f', 'finely-discretized', [16,5]);
AddSWrd('f', 'finer', [33,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('f', 'finish', [20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 77,10]);
AddSWrd('f', 'first', [33,15 , 130,2 , 104,20 , 42,5 , 12,10 , 13,10 , 77,80 , 79,4 , 112,10 , 118,10 , 119,10 , 60,6 , 61,2 , 93,2 , 31,10]);
AddSWrd('f', 'five', [61,2]);
AddSWrd('f', 'fixed', [35,5 , 27,5 , 15,10]);
AddSWrd('f', 'flag', [36,2 , 104,10 , 41,6 , 46,80]);
AddSWrd('f', 'flagged', [38,2]);
AddSWrd('f', 'flags', [17,5]);
AddSWrd('f', 'flare', [104,20]);
AddSWrd('f', 'flat', [32,2 , 33,20 , 99,4 , 133,2 , 9,2 , 74,2 , 44,5 , 13,10 , 77,10 , 112,55 , 114,10 , 116,5 , 118,5 , 25,10 , 26,5 , 27,5 , 30,2]);
AddSWrd('f', 'flat1', [36,16]);
AddSWrd('f', 'flat1:', [33,10 , 77,10]);
AddSWrd('f', 'flat2:', [33,10 , 77,10]);
AddSWrd('f', 'flat_mapped_datatypes.oas', [108,5]);
AddSWrd('f', 'flattening', [13,10 , 30,2]);
AddSWrd('f', 'flayer1', [37,4]);
AddSWrd('f', 'flayer2', [37,4]);
AddSWrd('f', 'flayerdo', [37,4]);
AddSWrd('f', 'flayere0', [37,2]);
AddSWrd('f', 'flayereo', [37,2]);
AddSWrd('f', 'flex', [33,5 , 114,5 , 116,5 , 104,10 , 108,5]);
AddSWrd('f', 'flexibility', [17,5]);
AddSWrd('f', 'float', [18,15 , 104,25]);
AddSWrd('f', 'floating', [96,10 , 100,10 , 23,10 , 104,20 , 77,10]);
AddSWrd('f', 'floating-point', [104,10]);
AddSWrd('f', 'flow', [129,2 , 5,18 , 102,4 , 42,5 , 28,6 , 14,5 , 127,2]);
AddSWrd('f', 'flows', [33,20 , 132,2]);
AddSWrd('f', 'fogging', [4,2 , 101,2 , 102,2]);
AddSWrd('f', 'follow', [35,5 , 41,2 , 59,2]);
AddSWrd('f', 'followed', [116,10 , 132,2 , 104,20 , 28,2 , 13,10]);
AddSWrd('f', 'following', [4,2 , 6,2 , 134,2 , 12,10 , 13,65 , 14,60 , 15,20 , 16,25 , 17,30 , 18,40 , 20,25 , 21,25 , 22,25 , 23,30 , 24,35 , 25,5 , 26,25 , 27,25 , 31,30 , 32,4 , 33,65 , 35,20 , 36,4 , 37,2 , 38,8 , 41,2 , 58,4 , 59,2 , 65,2 , 66,2 , 68,2 , 69,2 , 70,2 , 71,2 , 72,2 , 73,2 , 75,5 , 77,30 , 79,2 , 80,2 , 82,2 , 84,2 , 85,2 , 88,2 , 92,2 , 96,10 , 98,2 , 100,40 , 102,4 , 104,50 , 106,15 , 108,10 , 110,20 , 112,45 , 114,5 , 115,2 , 116,10 , 119,10 , 122,2 , 125,5]);
AddSWrd('f', 'following:', [104,10]);
AddSWrd('f', 'follows', [33,20 , 36,2 , 37,2 , 7,5 , 104,10 , 12,5 , 13,15 , 77,40 , 14,5 , 15,5 , 16,5 , 81,4 , 22,5 , 24,10 , 26,5 , 58,2 , 27,5 , 31,10]);
AddSWrd('f', 'font', [7,25]);
AddSWrd('f', 'fonts', [7,15]);
AddSWrd('f', 'forbidden', [28,2]);
AddSWrd('f', 'force', [85,2 , 122,2]);
AddSWrd('f', 'forces', [122,2]);
AddSWrd('f', 'form', [33,30 , 100,5 , 104,30 , 13,5 , 77,120 , 113,2 , 18,5 , 82,2 , 117,5 , 22,5 , 24,20 , 31,10 , 63,2]);
AddSWrd('f', 'format', [128,2 , 4,4 , 132,2 , 5,4 , 8,8 , 136,4 , 11,6 , 12,20 , 13,50 , 77,60 , 15,50 , 79,2 , 16,30 , 80,2 , 17,20 , 81,2 , 18,15 , 19,8 , 83,2 , 20,140 , 21,175 , 22,165 , 23,170 , 87,4 , 24,60 , 25,20 , 26,30 , 27,60 , 92,2 , 96,30 , 34,5 , 100,10 , 40,2 , 104,115 , 42,5 , 108,40 , 45,10 , 48,2 , 49,5 , 52,2 , 59,2 , 125,10]);
AddSWrd('f', 'format-for-format', [78,2]);
AddSWrd('f', 'format-specific', [12,5]);
AddSWrd('f', 'format-to-db', [78,2]);
AddSWrd('f', 'format-to-format', [78,2]);
AddSWrd('f', 'format-to-oasis', [104,10 , 13,5]);
AddSWrd('f', 'format_specific_options', [104,15]);
AddSWrd('f', 'format_type', [81,2 , 71,2 , 15,100]);
AddSWrd('f', 'formats', [4,18 , 132,4 , 5,4 , 6,2 , 74,2 , 11,2 , 75,5 , 12,10 , 13,60 , 77,20 , 14,130 , 15,25 , 79,2 , 16,25 , 17,5 , 81,4 , 18,20 , 19,2 , 83,2 , 20,15 , 21,15 , 22,25 , 23,15 , 24,15 , 25,5 , 26,20 , 27,10 , 28,2 , 98,2 , 100,10 , 103,2 , 104,20]);
AddSWrd('f', 'formatted', [17,5 , 98,2 , 4,4 , 100,10 , 8,2 , 11,2]);
AddSWrd('f', 'formed', [124,5]);
AddSWrd('f', 'forms', [33,10 , 12,5 , 13,10 , 61,8 , 77,10]);
AddSWrd('f', 'formula', [77,20]);
AddSWrd('f', 'forward', [96,10 , 112,10 , 33,10 , 100,5 , 102,2 , 104,10 , 106,10 , 12,10 , 108,10 , 77,20 , 110,10 , 31,10]);
AddSWrd('f', 'found', [6,2 , 22,5 , 118,5 , 23,5 , 24,10 , 104,10 , 26,5 , 27,5 , 13,5 , 77,10 , 125,5]);
AddSWrd('f', 'foundation', [59,2]);
AddSWrd('f', 'four', [134,2 , 56,4 , 25,10 , 93,2]);
AddSWrd('f', 'fourth', [33,30 , 134,2]);
AddSWrd('f', 'fps', [16,10]);
AddSWrd('f', 'frac', [102,2 , 110,10]);
AddSWrd('f', 'frac1', [73,2]);
AddSWrd('f', 'frac_log_frac_mic_with_corrections_and_hdb_bypass.log', [102,2]);
AddSWrd('f', 'frac_mic_out_with_corrections.oas', [102,2]);
AddSWrd('f', 'fract1', [12,20]);
AddSWrd('f', 'fract2', [12,15]);
AddSWrd('f', 'fractal', [104,260 , 138,6]);
AddSWrd('f', 'fraction', [33,10 , 13,15 , 77,10 , 110,10]);
AddSWrd('f', 'fractional', [100,5 , 77,10]);
AddSWrd('f', 'fracture', [128,6 , 129,2 , 131,4 , 4,28 , 132,32 , 133,34 , 6,2 , 134,36 , 135,32 , 8,28 , 136,6 , 9,42 , 10,140 , 11,16 , 12,465 , 13,400 , 14,95 , 15,190 , 16,185 , 17,190 , 18,215 , 19,10 , 20,85 , 21,85 , 22,120 , 23,95 , 24,265 , 25,185 , 26,220 , 27,240 , 28,2 , 30,8 , 31,190 , 33,10 , 34,5 , 39,4 , 40,2 , 41,2 , 42,5 , 44,5 , 45,5 , 52,2 , 53,2 , 63,2 , 65,2 , 66,8 , 67,22 , 68,6 , 69,4 , 70,4 , 71,4 , 72,4 , 73,4 , 75,5 , 77,120 , 79,18 , 80,4 , 81,44 , 83,2 , 84,4 , 86,8 , 87,2 , 89,4 , 90,2 , 91,2 , 98,2 , 100,30 , 102,4 , 104,60 , 105,2 , 110,40 , 113,2 , 114,20 , 115,2 , 117,10 , 120,2 , 121,2 , 122,8 , 123,2 , 124,5 , 125,10]);
AddSWrd('f', 'fracture.drc', [55,2]);
AddSWrd('f', 'fracture.jeol', [77,30]);
AddSWrd('f', 'fracture.log', [55,2]);
AddSWrd('f', 'fracture1', [68,2]);
AddSWrd('f', 'fracture2', [90,2]);
AddSWrd('f', 'fracture3', [69,2 , 91,2]);
AddSWrd('f', 'fracture6', [89,2]);
AddSWrd('f', 'fracture_extent', [114,40 , 116,5 , 12,15]);
AddSWrd('f', 'fracture_units', [16,35 , 81,4 , 69,2 , 25,15 , 73,2 , 26,10 , 27,10 , 91,2 , 13,10 , 110,10 , 79,2]);
AddSWrd('f', 'fracture_units_2', [16,15 , 13,10]);
AddSWrd('f', 'fracturec', [18,125 , 4,4 , 5,2 , 12,10 , 14,5]);
AddSWrd('f', 'fractured', [4,8 , 70,12 , 74,8 , 75,40 , 12,15 , 13,30 , 77,30 , 15,5 , 79,2 , 80,46 , 81,82 , 20,15 , 84,8 , 21,15 , 22,10 , 86,22 , 23,5 , 87,12 , 24,15 , 89,2 , 27,25 , 31,10 , 100,5 , 45,5 , 113,4 , 117,5 , 121,4 , 122,6]);
AddSWrd('f', 'fractured-data-to-database', [82,2]);
AddSWrd('f', 'fractured-data-to-fractured-data', [82,2]);
AddSWrd('f', 'fractureh', [4,4 , 5,2 , 12,10 , 14,5 , 15,135]);
AddSWrd('f', 'fracturei', [4,4 , 5,2 , 27,125 , 12,10]);
AddSWrd('f', 'fracturej', [16,135 , 4,4 , 5,2 , 12,10 , 125,5 , 14,5]);
AddSWrd('f', 'fracturem', [17,145 , 4,4 , 5,2 , 12,10]);
AddSWrd('f', 'fracturen', [4,4 , 5,2 , 24,125 , 12,10 , 13,10]);
AddSWrd('f', 'fracturep', [4,4 , 5,2 , 25,125 , 12,10]);
AddSWrd('f', 'fractures', [14,20]);
AddSWrd('f', 'fracturet', [19,10 , 4,4 , 5,2 , 22,5 , 136,34 , 12,10 , 13,10 , 14,5]);
AddSWrd('f', 'fracturev', [4,4 , 5,2 , 26,125 , 12,10 , 14,5]);
AddSWrd('f', 'fracturing', [66,2 , 4,2 , 135,2 , 8,2 , 10,10 , 13,55 , 77,40 , 79,6 , 80,2 , 17,10 , 18,15 , 20,10 , 21,10 , 22,5 , 23,5 , 87,2 , 24,10 , 88,2 , 90,2 , 91,2 , 31,10 , 100,10 , 101,2 , 52,2 , 120,2 , 63,2]);
AddSWrd('f', 'fragment', [102,2 , 105,2]);
AddSWrd('f', 'frame', [96,40 , 112,50 , 131,2 , 20,45 , 21,40 , 22,75 , 23,50 , 24,135 , 13,5 , 125,5]);
AddSWrd('f', 'frame-splitting', [23,5]);
AddSWrd('f', 'frame.1', [70,2]);
AddSWrd('f', 'frame.2', [70,2]);
AddSWrd('f', 'frame.3', [70,2]);
AddSWrd('f', 'frame.4', [70,2]);
AddSWrd('f', 'frame.5', [70,2]);
AddSWrd('f', 'frame.6', [70,2]);
AddSWrd('f', 'frame.7', [70,2]);
AddSWrd('f', 'frame.8', [70,2]);
AddSWrd('f', 'frame.8.width', [70,2]);
AddSWrd('f', 'frame.bdemaxdata', [70,2]);
AddSWrd('f', 'frame.maxdata', [70,2]);
AddSWrd('f', 'frame.width', [70,2]);
AddSWrd('f', 'frame.x', [96,40 , 22,5]);
AddSWrd('f', 'frame_bde_max_data', [96,25 , 20,15]);
AddSWrd('f', 'frame_chip_path', [112,25]);
AddSWrd('f', 'frame_max_data', [96,25 , 114,5 , 20,15 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('f', 'frame_max_num_cell_locations', [21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('f', 'frame_width', [96,15 , 114,5 , 131,2 , 20,15 , 21,20 , 22,30 , 23,25 , 24,110 , 125,5]);
AddSWrd('f', 'frame_width_range', [20,10 , 21,10 , 22,10 , 23,10 , 24,15 , 125,5]);
AddSWrd('f', 'frame_width_val', [24,30]);
AddSWrd('f', 'framechip1.oas', [112,5]);
AddSWrd('f', 'framechip2.oas', [112,5]);
AddSWrd('f', 'frames', [20,10 , 21,15 , 22,25 , 23,15 , 24,80 , 13,5]);
AddSWrd('f', 'frees', [133,2]);
AddSWrd('f', 'frequently', [105,2 , 77,10]);
AddSWrd('f', 'fri', [70,2]);
AddSWrd('f', 'full', [33,30 , 134,2 , 25,5 , 105,2 , 75,5 , 13,20 , 45,10]);
AddSWrd('f', 'full-featured', [104,10]);
AddSWrd('f', 'full-mask', [104,5]);
AddSWrd('f', 'fullscale', [10,20 , 28,56]);
AddSWrd('f', 'fully', [100,20]);
AddSWrd('f', 'function', [130,2 , 104,20 , 10,10 , 125,5]);
AddSWrd('f', 'functionality', [33,40 , 35,5 , 101,2 , 40,2 , 104,10 , 10,10 , 106,10 , 108,10 , 45,5 , 14,20 , 79,2 , 16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('f', 'functions', [129,8 , 4,4 , 5,2 , 23,5 , 103,2 , 56,4 , 104,15 , 123,4 , 28,2 , 13,10]);
AddSWrd('f', 'fundamental', [9,2]);
AddSWrd('f', 'further', [33,10 , 34,5 , 4,4 , 104,10 , 136,4 , 12,5 , 13,5 , 111,2 , 20,10 , 21,15 , 86,2 , 23,5 , 24,30 , 125,5]);
AddSWrd('f', 'future', [21,5]);
AddSWrd('g', 'gate', [14,10]);
AddSWrd('g', 'gauss', [103,4 , 104,55]);
AddSWrd('g', 'gaussian', [103,2 , 104,65 , 138,2]);
AddSWrd('g', 'gbit', [28,2]);
AddSWrd('g', 'gds', [18,5 , 53,2 , 6,2 , 71,4 , 72,4 , 104,20 , 9,2 , 41,2 , 73,2 , 89,2 , 91,4]);
AddSWrd('g', 'gdsii', [5,2 , 53,2 , 70,4 , 71,4 , 72,4 , 41,4 , 73,4 , 89,4 , 90,4 , 91,4 , 108,20]);
AddSWrd('g', 'gdsout', [41,2]);
AddSWrd('g', 'general', [35,10 , 117,10 , 24,10 , 77,10 , 127,10]);
AddSWrd('g', 'general-purpose', [77,10]);
AddSWrd('g', 'general_and_format_specific_parameters', [31,5]);
AddSWrd('g', 'generally', [128,2 , 37,2 , 28,2]);
AddSWrd('g', 'generate', [32,2 , 3,2 , 35,5 , 4,2 , 100,15 , 8,2 , 77,10 , 47,2 , 111,2 , 112,5 , 17,5 , 58,2 , 28,2 , 124,5 , 30,2]);
AddSWrd('g', 'generate_index_file', [17,10]);
AddSWrd('g', 'generated', [129,2 , 4,2 , 8,2 , 12,10 , 13,15 , 77,90 , 79,4 , 17,10 , 18,15 , 21,15 , 22,5 , 23,15 , 24,40 , 25,5 , 90,2 , 91,2 , 30,4 , 33,20 , 35,5 , 100,5 , 37,2 , 104,30 , 44,5 , 112,15 , 52,2 , 119,5 , 56,4]);
AddSWrd('g', 'generates', [33,20 , 98,2 , 100,15 , 101,2 , 104,10 , 9,4 , 12,5 , 13,10 , 77,20 , 112,15 , 17,5 , 49,5 , 81,2 , 20,5 , 52,2 , 21,5 , 22,20 , 54,2 , 23,20 , 55,2 , 24,10 , 25,5 , 27,20]);
AddSWrd('g', 'generating', [81,2 , 100,5 , 101,2 , 77,20 , 15,25]);
AddSWrd('g', 'generation', [17,5 , 33,30 , 100,5 , 137,2 , 27,5 , 13,35 , 77,40]);
AddSWrd('g', 'generic', [124,15 , 125,10]);
AddSWrd('g', 'generic_108528-12', [70,2]);
AddSWrd('g', 'geographic', [26,5]);
AddSWrd('g', 'geographical', [105,2 , 106,10]);
AddSWrd('g', 'geometric', [117,10 , 104,20 , 57,4 , 58,4 , 44,5]);
AddSWrd('g', 'geometrical', [35,20 , 4,2 , 104,20 , 26,5]);
AddSWrd('g', 'geometries', [65,2 , 66,2 , 98,2 , 100,10 , 104,35 , 105,2 , 12,15 , 76,5 , 45,5 , 49,5 , 25,5 , 122,2 , 63,2]);
AddSWrd('g', 'geometry', [96,5 , 33,20 , 4,2 , 5,2 , 38,2 , 104,20 , 107,2 , 13,15 , 77,35 , 113,2 , 115,2 , 117,20 , 25,10 , 89,2 , 30,2 , 31,10 , 63,2]);
AddSWrd('g', 'gigabytes', [15,15]);
AddSWrd('g', 'give', [25,10]);
AddSWrd('g', 'given', [96,10 , 129,4 , 100,5 , 104,45 , 42,10 , 43,5 , 13,5 , 45,5 , 77,10 , 21,5 , 22,10 , 118,10 , 23,5 , 24,10 , 31,20]);
AddSWrd('g', 'gives', [108,10 , 31,5]);
AddSWrd('g', 'giving', [63,2]);
AddSWrd('g', 'global', [128,4 , 33,10 , 34,5 , 35,15 , 132,10 , 5,2 , 104,30 , 12,130 , 13,130 , 110,10 , 15,30 , 16,25 , 17,25 , 18,25 , 20,25 , 21,25 , 22,25 , 23,25 , 24,25 , 25,5 , 26,25 , 27,25]);
AddSWrd('g', 'globalmapfile', [104,15]);
AddSWrd('g', 'going', [131,2 , 37,2]);
AddSWrd('g', 'good', [55,2 , 58,2 , 77,10]);
AddSWrd('g', 'gradient', [25,10]);
AddSWrd('g', 'gradual', [25,10]);
AddSWrd('g', 'granularity', [21,5 , 22,5 , 23,5 , 24,10 , 136,2]);
AddSWrd('g', 'graphical', [4,2 , 104,5]);
AddSWrd('g', 'graphics', [105,2]);
AddSWrd('g', 'gray', [104,45]);
AddSWrd('g', 'greater', [100,40 , 10,10 , 13,5 , 77,10 , 14,20 , 79,2 , 17,10 , 20,5 , 21,10 , 22,25 , 23,15 , 24,30 , 28,2]);
AddSWrd('g', 'greatest', [13,10]);
AddSWrd('g', 'grebinski', [4,2]);
AddSWrd('g', 'green', [20,5 , 21,5 , 22,5 , 23,5 , 57,2 , 121,2 , 15,5]);
AddSWrd('g', 'grey', [104,15]);
AddSWrd('g', 'grid', [132,2 , 103,4 , 104,80 , 138,6 , 43,10 , 44,5 , 77,10 , 79,4 , 16,30 , 80,2 , 17,15 , 49,10 , 87,2 , 24,80 , 120,22 , 25,20 , 121,40 , 26,15 , 122,30 , 27,15 , 63,24]);
AddSWrd('g', 'grid-based', [4,2]);
AddSWrd('g', 'grid_subframe_division', [24,25]);
AddSWrd('g', 'grids', [17,5 , 104,20]);
AddSWrd('g', 'gridsize', [16,30 , 17,5 , 25,55 , 26,30 , 27,30]);
AddSWrd('g', 'group', [96,20 , 33,50 , 35,5 , 37,2 , 7,5 , 104,40 , 44,5 , 13,80 , 77,40 , 16,10 , 22,10 , 26,10 , 27,10 , 92,4 , 94,2 , 31,45]);
AddSWrd('g', 'grouping', [7,5]);
AddSWrd('g', 'groups', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('g', 'grow', [49,5 , 65,2 , 34,5 , 122,2]);
AddSWrd('g', 'guarantee', [66,2]);
AddSWrd('g', 'gui', [4,2]);
AddSWrd('g', 'guide', [6,4 , 9,2 , 25,5 , 10,30 , 111,2]);
AddSWrd('h', 'half-plane', [62,2]);
AddSWrd('h', 'halts', [10,10 , 77,10]);
AddSWrd('h', 'hand', [31,10]);
AddSWrd('h', 'hand-drawn', [13,10]);
AddSWrd('h', 'hand-off', [26,5]);
AddSWrd('h', 'handle', [102,2 , 13,5]);
AddSWrd('h', 'handled', [104,10 , 25,10]);
AddSWrd('h', 'handles', [31,10]);
AddSWrd('h', 'handling', [36,4 , 46,30]);
AddSWrd('h', 'happen', [33,10 , 104,10 , 13,5 , 77,10]);
AddSWrd('h', 'hardware', [129,2 , 21,5 , 23,5 , 24,10 , 28,2 , 13,10]);
AddSWrd('h', 'harming', [117,10]);
AddSWrd('h', 'having', [48,2 , 104,10 , 13,5]);
AddSWrd('h', 'hdb', [32,4 , 128,2 , 33,220 , 38,52 , 104,80 , 13,45 , 77,180 , 114,5 , 118,10 , 119,20 , 125,15 , 30,2 , 31,40]);
AddSWrd('h', 'hdb-entry', [102,2]);
AddSWrd('h', 'hdb.oas', [38,8]);
AddSWrd('h', 'hdbs', [33,10]);
AddSWrd('h', 'header', [17,35 , 18,5 , 36,6 , 22,5 , 13,10 , 77,10]);
AddSWrd('h', 'header.inc', [36,2]);
AddSWrd('h', 'heading', [54,2]);
AddSWrd('h', 'heavy', [7,5]);
AddSWrd('h', 'height', [33,20 , 18,5 , 20,5 , 21,5 , 22,5 , 118,10 , 23,5 , 24,10 , 104,20 , 13,5 , 77,20 , 125,5]);
AddSWrd('h', 'heir', [112,10]);
AddSWrd('h', 'hello', [108,5]);
AddSWrd('h', 'help', [25,10]);
AddSWrd('h', 'helpful', [77,10]);
AddSWrd('h', 'helps', [17,5 , 21,5]);
AddSWrd('h', 'hence', [104,10 , 77,10 , 31,10]);
AddSWrd('h', 'heterogeneous', [30,2]);
AddSWrd('h', 'heuristically', [22,5 , 23,5]);
AddSWrd('h', 'heuristics', [133,2]);
AddSWrd('h', 'hgc', [104,20]);
AddSWrd('h', 'hier', [104,15 , 13,30 , 15,5 , 16,5 , 112,15 , 17,10 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('h', 'hierarchal', [17,5]);
AddSWrd('h', 'hierarchical', [128,2 , 5,4 , 8,2 , 9,6 , 10,25 , 12,25 , 13,70 , 77,20 , 17,5 , 28,4 , 30,20 , 32,10 , 33,10 , 100,5 , 38,4 , 39,2 , 40,2 , 104,45 , 42,15 , 44,10 , 45,5 , 46,5 , 47,2 , 112,20 , 52,4 , 53,4 , 54,2 , 55,2 , 56,2 , 57,4 , 59,4 , 60,2 , 61,4 , 127,2]);
AddSWrd('h', 'hierarchies', [104,10 , 13,5]);
AddSWrd('h', 'hierarchy', [32,2 , 128,2 , 33,10 , 133,2 , 8,2 , 105,2 , 11,2 , 13,40 , 45,5 , 77,30 , 26,15 , 27,5 , 30,2]);
AddSWrd('h', 'high', [131,2 , 20,5 , 21,10 , 22,5 , 23,5 , 24,10 , 136,2 , 28,2 , 13,20]);
AddSWrd('h', 'high-capacity', [77,10]);
AddSWrd('h', 'high-performance', [33,10 , 77,10]);
AddSWrd('h', 'high-quality', [13,10]);
AddSWrd('h', 'higher', [104,10 , 13,5 , 110,10]);
AddSWrd('h', 'highest', [132,2 , 21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('h', 'highlighted', [14,10]);
AddSWrd('h', 'highly', [102,2 , 104,10 , 138,2]);
AddSWrd('h', 'highly-scalable', [102,2]);
AddSWrd('h', 'hitachi', [98,2 , 4,6 , 100,10 , 71,34 , 8,2 , 9,4 , 74,2 , 11,2 , 75,15 , 12,20 , 77,10 , 14,15 , 15,235 , 81,6]);
AddSWrd('h', 'hitachi-specific', [15,5]);
AddSWrd('h', 'hitachi2db', [100,15 , 77,15 , 31,5]);
AddSWrd('h', 'hitachi2hitachi', [77,15 , 31,5]);
AddSWrd('h', 'hitachi_3', [81,4]);
AddSWrd('h', 'hitachi_type3.log', [81,2]);
AddSWrd('h', 'hitachi_type3.pfh3', [81,2]);
AddSWrd('h', 'hl-7000', [15,10]);
AddSWrd('h', 'hl-7000m', [15,30]);
AddSWrd('h', 'hl-800', [15,25]);
AddSWrd('h', 'hl-800m', [15,5]);
AddSWrd('h', 'hl-900', [15,10]);
AddSWrd('h', 'hl-900d', [15,25]);
AddSWrd('h', 'hl-950m', [15,25]);
AddSWrd('h', 'hl900d', [4,2]);
AddSWrd('h', 'hl950m', [4,2]);
AddSWrd('h', 'hname', [119,10]);
AddSWrd('h', 'hole', [73,12]);
AddSWrd('h', 'hole.gds.z', [73,2]);
AddSWrd('h', 'holes', [34,5]);
AddSWrd('h', 'horizontal', [20,10 , 21,10 , 22,25 , 23,15 , 24,10 , 14,20 , 15,10]);
AddSWrd('h', 'host', [134,2 , 119,5 , 25,5 , 10,10 , 28,2 , 13,20]);
AddSWrd('h', 'hosts', [25,5 , 10,20 , 28,2]);
AddSWrd('h', 'however', [131,2 , 136,2 , 12,10 , 13,10 , 77,20 , 15,5 , 17,10 , 18,10 , 20,5 , 21,5 , 86,2 , 88,2 , 26,10 , 28,2 , 33,10 , 34,5 , 35,5 , 103,2 , 104,10 , 44,5 , 57,2 , 121,2 , 58,2 , 123,2 , 60,2 , 124,5 , 63,2]);
AddSWrd('h', 'hsc', [16,5 , 125,5]);
AddSWrd('h', 'hsc_limit', [16,10]);
AddSWrd('h', 'hsclimit', [125,5]);
AddSWrd('h', 'hyperscaling', [28,2]);
AddSWrd('h', 'hyphen', [110,10]);
AddSWrd('i', 'ideal', [128,2]);
AddSWrd('i', 'ideally', [132,2 , 134,2]);
AddSWrd('i', 'identical', [32,2 , 82,2 , 13,10 , 77,10]);
AddSWrd('i', 'identified', [4,2 , 61,2 , 110,10]);
AddSWrd('i', 'identifier', [110,30]);
AddSWrd('i', 'identifiers', [110,10]);
AddSWrd('i', 'identifies', [7,5 , 87,2 , 42,10 , 14,10]);
AddSWrd('i', 'identify', [85,4 , 41,2 , 42,5 , 59,2 , 60,30 , 14,10 , 110,10]);
AddSWrd('i', 'ignore', [33,10 , 13,5]);
AddSWrd('i', 'ignored', [18,5 , 36,2 , 104,10 , 26,5]);
AddSWrd('i', 'ignores', [33,10 , 44,5 , 13,5 , 30,2 , 15,5]);
AddSWrd('i', 'illustrate', [67,2 , 100,10 , 14,20]);
AddSWrd('i', 'illustrated', [65,2 , 82,2 , 38,4 , 55,2]);
AddSWrd('i', 'illustrates', [32,2 , 96,5 , 33,20 , 35,5 , 69,2 , 70,2 , 71,2 , 72,2 , 73,2 , 12,5 , 13,10 , 18,5 , 114,5 , 117,5 , 122,4]);
AddSWrd('i', 'illustration', [117,15 , 57,2 , 58,4 , 59,2 , 60,6 , 61,2]);
AddSWrd('i', 'image', [117,10 , 104,10]);
AddSWrd('i', 'images', [103,2]);
AddSWrd('i', 'imagine', [57,2]);
AddSWrd('i', 'immediately', [18,5 , 13,10 , 77,10]);
AddSWrd('i', 'impact', [120,2 , 14,10]);
AddSWrd('i', 'implement', [36,2]);
AddSWrd('i', 'implementations', [17,5]);
AddSWrd('i', 'implementing', [13,10]);
AddSWrd('i', 'implication', [33,10]);
AddSWrd('i', 'implicitly', [35,10 , 12,10]);
AddSWrd('i', 'implies', [26,5 , 13,10]);
AddSWrd('i', 'importance', [104,20]);
AddSWrd('i', 'important', [81,2 , 35,10 , 58,2 , 44,5 , 77,10]);
AddSWrd('i', 'improve', [32,2 , 113,2 , 129,2 , 114,5 , 115,2 , 4,4 , 117,10 , 133,2 , 25,5 , 138,2 , 13,5 , 14,5]);
AddSWrd('i', 'improved', [14,5 , 30,2]);
AddSWrd('i', 'improvements', [20,5 , 21,5 , 136,2]);
AddSWrd('i', 'improves', [22,5 , 23,5 , 25,10 , 10,10 , 27,5 , 28,2 , 13,20]);
AddSWrd('i', 'improving', [21,5 , 117,10 , 22,5 , 23,5 , 24,10 , 136,2]);
AddSWrd('i', 'ims', [27,5]);
AddSWrd('i', 'in-batch', [13,5]);
AddSWrd('i', 'in-line', [15,5]);
AddSWrd('i', 'in_layer', [65,4]);
AddSWrd('i', 'in_layer1', [66,4]);
AddSWrd('i', 'in_layerxxxx', [65,2]);
AddSWrd('i', 'in_lyr1', [33,10]);
AddSWrd('i', 'in_lyr2', [33,10]);
AddSWrd('i', 'inch', [43,5]);
AddSWrd('i', 'include', [4,6 , 132,2 , 134,2 , 7,25 , 10,10 , 74,2 , 12,10 , 76,5 , 77,20 , 80,2 , 20,5 , 89,2 , 28,2 , 31,10 , 96,10 , 33,10 , 35,15 , 36,6 , 100,5 , 104,20 , 106,10 , 108,10 , 45,5 , 110,10 , 48,2 , 112,10 , 52,2]);
AddSWrd('i', 'included', [16,5 , 32,2 , 114,5 , 35,25 , 36,2 , 8,2 , 104,10 , 57,2 , 27,5 , 139,2 , 12,5]);
AddSWrd('i', 'includes', [4,4 , 20,5 , 5,2 , 21,5 , 101,4 , 22,5 , 134,2 , 23,5 , 39,2 , 24,10 , 104,10 , 79,4]);
AddSWrd('i', 'including', [64,2 , 33,10 , 35,5 , 4,2 , 5,2 , 102,2 , 9,4 , 42,5 , 74,2 , 13,20 , 77,10 , 82,2 , 114,15 , 25,10]);
AddSWrd('i', 'inclusive', [17,5 , 104,10 , 15,5]);
AddSWrd('i', 'incompatible', [26,5]);
AddSWrd('i', 'incomplete', [137,2]);
AddSWrd('i', 'incorrect', [35,5 , 77,10 , 125,10]);
AddSWrd('i', 'incorrectly', [123,2]);
AddSWrd('i', 'increase', [132,2 , 25,5 , 122,2 , 14,10]);
AddSWrd('i', 'increased', [13,5 , 14,5]);
AddSWrd('i', 'increases', [13,5 , 93,2]);
AddSWrd('i', 'increasing', [132,2 , 122,2]);
AddSWrd('i', 'independent', [13,5]);
AddSWrd('i', 'independently', [39,2 , 30,4]);
AddSWrd('i', 'index', [17,25 , 33,60 , 129,6 , 130,2 , 118,10 , 134,2 , 104,40 , 13,65 , 77,100 , 125,20 , 110,10]);
AddSWrd('i', 'index_mask_files', [77,25]);
AddSWrd('i', 'index_options', [33,15 , 13,10 , 77,15 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('i', 'indexed', [33,10]);
AddSWrd('i', 'indexing', [33,30 , 129,32 , 130,8 , 4,2 , 36,4 , 107,4 , 13,30 , 77,30]);
AddSWrd('i', 'indicate', [7,20 , 26,5 , 12,5 , 124,15 , 31,10]);
AddSWrd('i', 'indicates', [96,10 , 33,10 , 34,5 , 100,5 , 7,10 , 104,20 , 106,10 , 12,5 , 108,10 , 77,30 , 110,10 , 16,10 , 112,10 , 22,5 , 26,15 , 27,5]);
AddSWrd('i', 'indicating', [33,20 , 100,5 , 116,10 , 104,20 , 123,2 , 13,10 , 77,20 , 31,20]);
AddSWrd('i', 'indices', [104,20 , 13,10]);
AddSWrd('i', 'individual', [96,5 , 4,2 , 39,2 , 57,2 , 105,2 , 92,6 , 79,2]);
AddSWrd('i', 'indivudial', [32,2]);
AddSWrd('i', 'industry-standard', [4,2]);
AddSWrd('i', 'inermediate', [13,10]);
AddSWrd('i', 'infer', [33,10 , 104,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('i', 'inference', [77,10]);
AddSWrd('i', 'inferred', [33,10 , 104,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('i', 'infinite', [35,20]);
AddSWrd('i', 'influence', [18,5 , 34,5 , 35,125 , 102,2]);
AddSWrd('i', 'influences', [17,5 , 102,2 , 12,5]);
AddSWrd('i', 'information', [4,4 , 132,4 , 6,2 , 136,2 , 9,2 , 137,2 , 10,70 , 138,2 , 139,0 , 12,10 , 13,80 , 15,10 , 16,5 , 17,25 , 18,10 , 20,5 , 21,5 , 22,30 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 28,4 , 31,10 , 33,30 , 41,2 , 42,5 , 43,5 , 47,2 , 54,2 , 55,2 , 56,2 , 59,2 , 61,2 , 76,5 , 77,40 , 87,2 , 96,20 , 99,2 , 100,15 , 102,2 , 103,2 , 104,20 , 110,10 , 111,2 , 114,10 , 124,5 , 125,5 , 127,2]);
AddSWrd('i', 'informational', [4,2]);
AddSWrd('i', 'inherent', [30,2]);
AddSWrd('i', 'initial', [32,2 , 81,4 , 113,2 , 103,2]);
AddSWrd('i', 'initially', [118,5]);
AddSWrd('i', 'inject', [130,2]);
AddSWrd('i', 'inject_mask_files', [77,15]);
AddSWrd('i', 'injected', [134,2]);
AddSWrd('i', 'injecting', [130,2]);
AddSWrd('i', 'injection', [128,4 , 33,10 , 129,36 , 130,6 , 101,4 , 134,2 , 107,10 , 108,15 , 13,20 , 77,40 , 125,15]);
AddSWrd('i', 'inline', [96,10 , 33,10 , 100,5 , 104,10 , 106,10 , 12,15 , 108,10 , 13,10 , 110,10 , 16,5 , 112,10 , 17,5 , 20,5 , 21,5 , 22,10 , 23,5 , 24,15]);
AddSWrd('i', 'inline_parameters', [100,5]);
AddSWrd('i', 'inp_1', [33,40]);
AddSWrd('i', 'inp_2', [33,10]);
AddSWrd('i', 'input', [128,52 , 129,8 , 130,8 , 4,2 , 132,2 , 133,2 , 134,12 , 8,2 , 9,2 , 138,2 , 11,2 , 12,45 , 13,250 , 15,25 , 16,5 , 17,30 , 18,10 , 20,5 , 21,5 , 22,5 , 23,10 , 24,5 , 25,5 , 26,15 , 27,10 , 28,4 , 31,45 , 32,4 , 33,225 , 36,4 , 41,2 , 42,5 , 45,20 , 47,2 , 49,15 , 60,4 , 65,2 , 70,2 , 71,2 , 72,2 , 73,2 , 77,405 , 79,4 , 81,4 , 82,2 , 96,35 , 100,10 , 101,4 , 103,8 , 104,265 , 105,2 , 108,15 , 110,40 , 111,2 , 112,115 , 113,2 , 114,35 , 115,2 , 116,25 , 117,20 , 118,85 , 119,10 , 123,2 , 125,20]);
AddSWrd('i', 'input.oas', [104,5]);
AddSWrd('i', 'input1', [77,20]);
AddSWrd('i', 'input1.oas', [33,5]);
AddSWrd('i', 'input2.oas', [33,5]);
AddSWrd('i', 'input_dir', [96,25]);
AddSWrd('i', 'input_extent', [77,30]);
AddSWrd('i', 'input_file', [33,10 , 82,2 , 100,15 , 72,2 , 73,2 , 89,2 , 90,2 , 91,2 , 77,85 , 31,5]);
AddSWrd('i', 'input_final', [114,40 , 119,5]);
AddSWrd('i', 'input_layer', [33,15 , 117,15 , 103,2 , 104,55 , 105,2 , 106,25 , 108,15]);
AddSWrd('i', 'input_layer_name', [116,15]);
AddSWrd('i', 'input_layern', [33,15]);
AddSWrd('i', 'input_mask', [104,60]);
AddSWrd('i', 'input_number', [118,45]);
AddSWrd('i', 'input_region_severity', [13,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('i', 'inputfilename', [134,4]);
AddSWrd('i', 'inputs', [112,45 , 33,20 , 134,2 , 104,10 , 75,50 , 12,5 , 77,80 , 79,2]);
AddSWrd('i', 'inputting', [44,5]);
AddSWrd('i', 'insert', [4,2]);
AddSWrd('i', 'inserted', [18,5 , 15,5]);
AddSWrd('i', 'inserts', [17,5]);
AddSWrd('i', 'inside', [66,2 , 68,2 , 132,4 , 69,2 , 73,4 , 12,90 , 13,15 , 77,145 , 14,5 , 15,5 , 16,5 , 17,5 , 81,8 , 18,5 , 82,18 , 20,5 , 84,2 , 21,5 , 22,10 , 86,2 , 23,5 , 24,10 , 25,5 , 89,4 , 26,5 , 90,4 , 27,5 , 91,4 , 28,4 , 31,35 , 34,50 , 35,10 , 99,4 , 36,2 , 100,70 , 37,2 , 102,2 , 103,2 , 104,165 , 105,2 , 110,15 , 48,8 , 114,5 , 57,20 , 58,4 , 60,6 , 61,2]);
AddSWrd('i', 'inspect', [4,2]);
AddSWrd('i', 'inspection', [4,4 , 13,10]);
AddSWrd('i', 'inspections', [4,2]);
AddSWrd('i', 'install', [6,2]);
AddSWrd('i', 'instance', [33,10 , 21,5 , 117,10 , 22,10 , 23,10 , 24,20 , 124,5 , 13,10 , 77,40 , 110,10 , 31,10]);
AddSWrd('i', 'instances', [100,10 , 30,2]);
AddSWrd('i', 'instantiation', [74,2]);
AddSWrd('i', 'instead', [128,4 , 33,20 , 36,2 , 38,2 , 104,35 , 13,30 , 77,50 , 110,10 , 16,5 , 17,10 , 22,10 , 23,5 , 24,5 , 26,5 , 27,5 , 28,4 , 31,10]);
AddSWrd('i', 'instruct', [53,2]);
AddSWrd('i', 'instructing', [100,20 , 77,50]);
AddSWrd('i', 'instruction', [35,5 , 13,10]);
AddSWrd('i', 'instructions', [6,2]);
AddSWrd('i', 'instructs', [100,5 , 104,50 , 10,10 , 106,10 , 108,20 , 13,10 , 45,10 , 46,25 , 62,2]);
AddSWrd('i', 'int', [33,20]);
AddSWrd('i', 'int_denom', [18,10]);
AddSWrd('i', 'int_numer', [18,10]);
AddSWrd('i', 'integer', [100,5 , 104,10 , 10,20 , 13,20 , 15,20 , 16,25 , 17,15 , 18,15 , 82,2 , 21,5 , 22,20 , 23,5 , 24,15 , 25,40 , 26,20 , 27,20 , 63,2]);
AddSWrd('i', 'integers', [18,5 , 100,5 , 104,20 , 43,5]);
AddSWrd('i', 'integrated', [5,2]);
AddSWrd('i', 'integrates', [4,2]);
AddSWrd('i', 'integrity', [132,2]);
AddSWrd('i', 'intend', [129,2 , 66,2 , 56,2 , 42,5]);
AddSWrd('i', 'intended', [16,5 , 129,2 , 35,5 , 104,10 , 13,10 , 30,2]);
AddSWrd('i', 'intending', [86,2]);
AddSWrd('i', 'intensity', [104,10]);
AddSWrd('i', 'intent', [100,5 , 77,10]);
AddSWrd('i', 'interact', [48,2 , 34,10 , 35,10]);
AddSWrd('i', 'interaction', [32,6 , 34,5 , 35,130 , 31,10]);
AddSWrd('i', 'interactive', [129,2 , 5,4]);
AddSWrd('i', 'interactively', [4,2]);
AddSWrd('i', 'interacts', [33,10]);
AddSWrd('i', 'interested', [104,10 , 59,2]);
AddSWrd('i', 'interface', [4,2 , 5,4]);
AddSWrd('i', 'interior', [48,4 , 59,4 , 47,2]);
AddSWrd('i', 'intermediate', [33,40 , 13,60 , 77,35 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 28,2]);
AddSWrd('i', 'internal', [33,10 , 34,5 , 69,2 , 102,2 , 13,10 , 14,70 , 15,5 , 79,2 , 16,5 , 48,8 , 17,10 , 18,5 , 114,5 , 20,5 , 84,2 , 21,5 , 22,5 , 23,5 , 89,30 , 26,5 , 58,10 , 59,6 , 60,18]);
AddSWrd('i', 'internally', [16,5 , 22,5 , 104,10 , 26,5 , 58,4 , 27,5 , 75,5 , 13,10]);
AddSWrd('i', 'international', [4,2]);
AddSWrd('i', 'interpolation', [104,20]);
AddSWrd('i', 'interpreting', [28,4]);
AddSWrd('i', 'intersect', [112,30 , 59,2 , 62,2]);
AddSWrd('i', 'intersection', [62,32]);
AddSWrd('i', 'intersects', [104,10 , 62,4]);
AddSWrd('i', 'interval', [112,25]);
AddSWrd('i', 'introduce', [33,10 , 132,2 , 13,5 , 63,2]);
AddSWrd('i', 'introducing', [17,5]);
AddSWrd('i', 'introduction', [3,20]);
AddSWrd('i', 'invalid', [18,5 , 118,10]);
AddSWrd('i', 'inverse', [33,10 , 66,2 , 100,20 , 104,10 , 77,70 , 78,2 , 79,2]);
AddSWrd('i', 'invert', [66,2]);
AddSWrd('i', 'inverted', [13,10 , 79,6]);
AddSWrd('i', 'inverts', [77,10]);
AddSWrd('i', 'invocation', [33,20 , 129,2 , 4,2 , 9,4 , 25,5 , 10,135 , 13,15 , 77,10]);
AddSWrd('i', 'invoke', [130,2 , 55,2 , 8,2 , 10,5 , 28,4]);
AddSWrd('i', 'invoked', [128,2 , 4,6 , 55,2]);
AddSWrd('i', 'invokes', [13,10]);
AddSWrd('i', 'invoking', [53,2 , 40,2 , 10,10]);
AddSWrd('i', 'involved', [81,2 , 27,15]);
AddSWrd('i', 'involves', [122,2]);
AddSWrd('i', 'involving', [82,2 , 77,10 , 63,2]);
AddSWrd('i', 'inward', [49,5]);
AddSWrd('i', 'isolate', [47,2]);
AddSWrd('i', 'isolated', [13,20 , 47,2 , 79,4]);
AddSWrd('i', 'isolates', [87,2]);
AddSWrd('i', 'issue', [128,2 , 33,10 , 21,5 , 22,5 , 23,5 , 24,10 , 104,10 , 136,2 , 123,2 , 13,5 , 46,25]);
AddSWrd('i', 'issued', [16,5 , 33,10 , 24,10 , 123,2 , 124,5 , 13,20]);
AddSWrd('i', 'issues', [112,20 , 33,10 , 131,32 , 20,5 , 26,5 , 27,5 , 13,15 , 15,5 , 31,5 , 95,8]);
AddSWrd('i', 'italic', [7,15]);
AddSWrd('i', 'item', [7,5]);
AddSWrd('i', 'items', [7,5]);
AddSWrd('i', 'itself', [57,2 , 121,2 , 46,5]);
AddSWrd('i', 'ix1', [77,30]);
AddSWrd('i', 'ix2', [77,30]);
AddSWrd('i', 'iy1', [77,30]);
AddSWrd('i', 'iy2', [77,30]);
AddSWrd('j', 'jb1.ejb', [33,5]);
AddSWrd('j', 'jb1_1', [33,15]);
AddSWrd('j', 'jb2.ejb', [33,5]);
AddSWrd('j', 'jb2_1', [33,15]);
AddSWrd('j', 'jbx-3030mv', [16,20 , 4,2 , 69,2]);
AddSWrd('j', 'jbx-3040mv', [16,20 , 4,2]);
AddSWrd('j', 'jbx-3050mv', [16,35 , 13,10]);
AddSWrd('j', 'jbx-3200mv', [16,15 , 4,2]);
AddSWrd('j', 'jbx-9000mv', [16,5 , 4,2]);
AddSWrd('j', 'jbx-9300fs-100kv', [16,15 , 4,2]);
AddSWrd('j', 'jbx-9300fs-50kv', [16,5 , 4,2]);
AddSWrd('j', 'jeol', [66,2 , 98,2 , 131,2 , 4,6 , 100,10 , 69,34 , 8,2 , 9,4 , 74,2 , 11,2 , 75,15 , 12,40 , 13,45 , 77,20 , 14,15 , 79,2 , 16,225 , 81,6 , 52,2 , 91,34 , 28,2 , 125,10]);
AddSWrd('j', 'jeol-specific', [16,5]);
AddSWrd('j', 'jeol2db', [100,15 , 77,35 , 31,5]);
AddSWrd('j', 'jeol2hitachi', [77,25 , 31,5]);
AddSWrd('j', 'jeol2jeol', [77,15 , 31,5]);
AddSWrd('j', 'jeol2vsb', [77,15 , 31,5]);
AddSWrd('j', 'jeol_30', [81,2]);
AddSWrd('j', 'jeol_30.jeol', [81,2]);
AddSWrd('j', 'jeol_30.log', [81,2]);
AddSWrd('j', 'jeol_fracture.log', [69,2]);
AddSWrd('j', 'jeol_poly_data', [12,5]);
AddSWrd('j', 'jeoljob', [77,40]);
AddSWrd('j', 'jeoljob2jeoljob', [77,35 , 31,5]);
AddSWrd('j', 'jjj', [70,2]);
AddSWrd('j', 'job', [96,55 , 33,120 , 65,2 , 97,10 , 129,2 , 4,20 , 5,4 , 102,4 , 103,2 , 104,30 , 74,2 , 75,10 , 12,5 , 77,165 , 112,155 , 17,10 , 82,72 , 22,10 , 121,2 , 122,2 , 92,6 , 94,4 , 31,10 , 95,34]);
AddSWrd('j', 'job1.ejb', [112,5]);
AddSWrd('j', 'job2.ejb', [112,5]);
AddSWrd('j', 'jobdeck', [112,25 , 33,40 , 104,30]);
AddSWrd('j', 'jobdeck1', [112,65]);
AddSWrd('j', 'jobdeck2', [112,55 , 33,15]);
AddSWrd('j', 'jobdeck3', [112,10]);
AddSWrd('j', 'jobdeck_density.map.oas', [104,15]);
AddSWrd('j', 'jobdeck_path', [104,20]);
AddSWrd('j', 'jobdecks', [82,4 , 104,60]);
AddSWrd('j', 'jobs', [128,2 , 130,4 , 137,2 , 77,10 , 127,2]);
AddSWrd('j', 'jobtooasis', [4,2 , 102,4]);
AddSWrd('j', 'jog', [113,2 , 117,65 , 105,2]);
AddSWrd('j', 'jog_alignment', [117,15]);
AddSWrd('j', 'jog_width', [117,15]);
AddSWrd('j', 'jogs', [117,20 , 105,2 , 14,20]);
AddSWrd('j', 'jose', [4,2]);
AddSWrd('j', 'jun', [70,2]);
AddSWrd('j', 'junk.oas', [108,5]);
AddSWrd('j', 'just', [17,5 , 58,2 , 47,2]);
AddSWrd('j', 'justification', [77,50]);
AddSWrd('j', 'justified', [77,10]);
AddSWrd('j', 'justifies', [13,5]);
AddSWrd('k', 'keep', [18,5 , 130,2 , 134,6 , 25,10 , 63,2]);
AddSWrd('k', 'kept', [32,2 , 18,10 , 20,5 , 21,5 , 134,2 , 136,2]);
AddSWrd('k', 'kerf', [104,10]);
AddSWrd('k', 'kernel', [104,180 , 138,2]);
AddSWrd('k', 'kernels', [103,2 , 104,120 , 138,4]);
AddSWrd('k', 'key', [66,2 , 51,12 , 59,2]);
AddSWrd('k', 'keyword', [128,4 , 66,2 , 131,2 , 134,2 , 7,15 , 136,4 , 138,2 , 12,40 , 13,135 , 77,640 , 14,40 , 15,25 , 79,2 , 16,25 , 17,50 , 18,10 , 82,2 , 83,2 , 20,30 , 84,2 , 21,75 , 22,70 , 23,65 , 24,65 , 25,35 , 26,20 , 27,35 , 28,2 , 31,60 , 32,8 , 96,150 , 33,320 , 34,35 , 35,200 , 100,80 , 37,2 , 38,4 , 104,450 , 105,2 , 106,80 , 108,130 , 45,5 , 110,90 , 112,20 , 116,40 , 117,60 , 118,40]);
AddSWrd('k', 'keywords', [12,5 , 13,15 , 77,50 , 82,6 , 20,5 , 21,10 , 22,10 , 23,10 , 24,30 , 25,10 , 26,5 , 27,10 , 28,4 , 96,10 , 33,50 , 34,5 , 35,10 , 100,10 , 38,4 , 103,2 , 104,10 , 106,10 , 108,10 , 110,10 , 112,10]);
AddSWrd('k', 'know', [81,4]);
AddSWrd('k', 'known', [104,10 , 13,5 , 79,2]);
AddSWrd('l', 'l1_6', [110,20]);
AddSWrd('l', 'l28', [110,20]);
AddSWrd('l', 'l28_0', [110,20]);
AddSWrd('l', 'l28_0_3', [110,20]);
AddSWrd('l', 'large', [128,6 , 33,30 , 129,2 , 66,2 , 35,5 , 4,2 , 100,5 , 102,4 , 104,50 , 107,2 , 44,5 , 108,20 , 13,40 , 77,50 , 14,10 , 16,5 , 17,5 , 20,5 , 21,10 , 22,5 , 118,35 , 25,10 , 30,2 , 63,2]);
AddSWrd('l', 'large_output_file', [15,10]);
AddSWrd('l', 'larger', [33,30 , 37,2 , 104,20 , 138,2 , 13,10 , 77,20 , 15,15 , 16,10 , 112,10 , 49,5 , 18,5 , 20,5 , 21,10 , 117,10 , 22,5 , 23,5 , 24,10 , 25,15 , 121,4 , 26,15 , 122,2 , 27,15 , 63,2]);
AddSWrd('l', 'largest', [13,5]);
AddSWrd('l', 'last', [17,5 , 35,10 , 26,5 , 27,5 , 12,5]);
AddSWrd('l', 'later', [33,10 , 104,10 , 13,5 , 77,10]);
AddSWrd('l', 'launching', [10,10]);
AddSWrd('l', 'lay1', [73,10 , 12,15]);
AddSWrd('l', 'lay2', [73,10 , 12,15]);
AddSWrd('l', 'lay3', [12,5]);
AddSWrd('l', 'layer', [4,4 , 132,2 , 5,2 , 8,10 , 9,2 , 137,2 , 11,6 , 12,155 , 13,100 , 14,10 , 15,15 , 16,20 , 17,25 , 18,15 , 20,15 , 21,15 , 22,20 , 23,20 , 24,15 , 25,15 , 26,20 , 27,20 , 28,4 , 31,75 , 32,2 , 33,270 , 34,15 , 36,10 , 37,8 , 38,22 , 42,35 , 43,20 , 44,155 , 45,10 , 47,16 , 48,64 , 49,100 , 50,95 , 53,2 , 56,64 , 57,2 , 58,96 , 59,10 , 60,6 , 63,4 , 65,2 , 66,10 , 70,2 , 71,2 , 72,2 , 73,4 , 74,4 , 75,15 , 76,5 , 77,360 , 84,2 , 89,36 , 90,6 , 91,6 , 98,2 , 99,4 , 100,30 , 102,2 , 103,18 , 104,315 , 105,12 , 106,60 , 108,85 , 109,6 , 110,40 , 112,40 , 114,75 , 116,120 , 117,90 , 118,130 , 119,55 , 125,10 , 127,2]);
AddSWrd('l', 'layer-datatype', [33,30 , 13,15 , 77,30]);
AddSWrd('l', 'layer0', [37,10]);
AddSWrd('l', 'layer1', [48,10 , 49,20 , 81,8 , 100,15 , 37,10 , 104,10 , 77,45 , 31,10]);
AddSWrd('l', 'layer2', [37,10 , 104,45 , 12,20 , 13,5 , 14,5 , 15,5 , 16,5 , 48,12 , 17,5 , 49,20 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,5]);
AddSWrd('l', 'layer28', [110,15]);
AddSWrd('l', 'layer_0', [36,2]);
AddSWrd('l', 'layer_datatype', [119,15 , 13,10 , 77,85]);
AddSWrd('l', 'layer_definition', [45,10]);
AddSWrd('l', 'layer_ext', [77,35 , 31,5]);
AddSWrd('l', 'layer_i', [36,4]);
AddSWrd('l', 'layer_name', [33,70 , 104,70 , 13,15 , 77,125 , 15,10 , 16,10 , 17,10 , 18,10 , 50,5 , 20,10 , 21,10 , 22,10 , 23,10 , 24,10 , 25,10 , 26,10 , 27,10 , 31,20]);
AddSWrd('l', 'layer_num', [77,105]);
AddSWrd('l', 'layer_number', [119,15]);
AddSWrd('l', 'layer_number1', [13,5]);
AddSWrd('l', 'layer_number2', [13,5]);
AddSWrd('l', 'layer_o', [36,2]);
AddSWrd('l', 'layer_operation', [50,5 , 45,10]);
AddSWrd('l', 'layer_range', [110,25]);
AddSWrd('l', 'layerdi', [37,4]);
AddSWrd('l', 'layerei', [37,4]);
AddSWrd('l', 'layern', [12,10 , 13,5 , 77,15 , 14,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('l', 'layers', [9,2 , 74,2 , 12,15 , 76,5 , 13,15 , 77,50 , 16,5 , 22,5 , 26,5 , 27,5 , 28,2 , 31,20 , 96,5 , 33,125 , 34,10 , 99,2 , 36,4 , 37,10 , 38,6 , 103,2 , 104,35 , 41,2 , 105,22 , 42,5 , 106,10 , 107,2 , 44,15 , 108,20 , 110,30 , 47,4 , 48,2 , 112,10 , 114,30 , 116,5 , 53,2 , 54,2 , 118,75 , 119,30 , 56,32 , 57,6 , 60,2]);
AddSWrd('l', 'layerx', [82,2]);
AddSWrd('l', 'layout', [128,2 , 4,6 , 5,2 , 6,2 , 8,2 , 9,2 , 13,5 , 28,2 , 31,15 , 33,55 , 34,5 , 36,6 , 37,6 , 41,8 , 42,160 , 43,25 , 45,20 , 56,8 , 70,6 , 71,8 , 72,8 , 73,6 , 74,2 , 75,5 , 77,90 , 79,8 , 80,44 , 81,4 , 82,2 , 84,4 , 86,4 , 87,6 , 88,2 , 89,8 , 90,6 , 91,6 , 96,30 , 101,4 , 102,6 , 103,4 , 104,145 , 105,4 , 106,25 , 108,30 , 109,4 , 110,45 , 114,25 , 116,25 , 127,4]);
AddSWrd('l', 'layout.ini', [96,20]);
AddSWrd('l', 'layout1', [89,2 , 90,2 , 91,2]);
AddSWrd('l', 'layout_name', [96,25 , 97,5 , 77,30]);
AddSWrd('l', 'layout_subset', [109,4 , 110,110]);
AddSWrd('l', 'layout_system', [97,5]);
AddSWrd('l', 'layouts', [96,10 , 128,2 , 33,10 , 82,2 , 3,2 , 4,2 , 13,10 , 77,40]);
AddSWrd('l', 'lb_limit', [16,10]);
AddSWrd('l', 'lead', [21,5 , 22,5 , 23,5 , 24,10 , 63,2]);
AddSWrd('l', 'least', [96,5 , 18,5 , 34,5 , 66,2 , 118,15 , 13,5]);
AddSWrd('l', 'leaves', [104,10]);
AddSWrd('l', 'leaving', [21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('l', 'left', [12,30 , 13,30 , 77,70 , 16,5 , 17,5 , 18,10 , 84,6 , 22,5 , 86,4 , 24,5 , 25,15 , 26,5 , 27,5 , 31,50 , 96,20 , 33,40 , 36,2 , 100,10 , 104,70 , 106,10 , 108,10 , 109,4 , 110,10 , 112,10 , 118,5 , 122,2]);
AddSWrd('l', 'legal', [22,10 , 23,10 , 24,15 , 139,2]);
AddSWrd('l', 'legally', [13,10]);
AddSWrd('l', 'length', [34,20 , 98,2 , 100,20 , 132,2 , 102,2 , 104,10 , 43,30 , 77,10 , 14,40 , 16,10 , 48,12 , 82,2 , 117,10 , 25,5]);
AddSWrd('l', 'lengths', [100,20]);
AddSWrd('l', 'lengthwise', [98,2]);
AddSWrd('l', 'less', [96,30 , 33,10 , 35,5 , 100,30 , 104,10 , 13,20 , 14,40 , 15,5 , 17,15 , 18,5 , 26,5 , 27,5 , 60,2 , 31,10]);
AddSWrd('l', 'lessens', [129,2]);
AddSWrd('l', 'lets', [83,2]);
AddSWrd('l', 'letters', [16,5 , 18,10 , 7,5 , 77,10]);
AddSWrd('l', 'lev', [112,15]);
AddSWrd('l', 'level', [112,95 , 33,10 , 20,5 , 21,5 , 22,5 , 134,2 , 23,5 , 24,10 , 26,5 , 42,5 , 77,20]);
AddSWrd('l', 'level-2', [25,20 , 13,5]);
AddSWrd('l', 'level1', [112,75]);
AddSWrd('l', 'level2', [112,65]);
AddSWrd('l', 'level3', [112,20]);
AddSWrd('l', 'level_name', [112,15]);
AddSWrd('l', 'level_num', [112,15]);
AddSWrd('l', 'level_number', [77,15]);
AddSWrd('l', 'levels', [112,10 , 104,40 , 25,30 , 26,15 , 45,5]);
AddSWrd('l', 'leveraged', [102,2 , 30,2]);
AddSWrd('l', 'library', [16,5]);
AddSWrd('l', 'license', [6,2 , 10,40 , 93,6 , 111,2]);
AddSWrd('l', 'licensed', [113,2 , 4,2 , 39,2 , 10,10 , 28,2]);
AddSWrd('l', 'licenses', [6,2 , 10,30]);
AddSWrd('l', 'licensing', [6,4 , 39,4]);
AddSWrd('l', 'lie', [48,4]);
AddSWrd('l', 'lies', [121,2 , 79,2]);
AddSWrd('l', 'likely', [16,5 , 86,2 , 104,10 , 13,5 , 63,2]);
AddSWrd('l', 'limit', [96,10 , 33,10 , 35,5 , 99,6 , 100,20 , 104,10 , 137,2 , 13,25 , 77,25 , 15,5 , 16,15 , 17,40 , 18,5 , 20,15 , 21,10 , 22,10 , 23,10 , 24,15 , 25,10 , 26,10 , 27,10 , 125,5]);
AddSWrd('l', 'limit_value', [16,15]);
AddSWrd('l', 'limitations', [82,2 , 119,5 , 28,2 , 125,5 , 94,32]);
AddSWrd('l', 'limited', [16,5 , 32,6 , 17,10 , 33,25 , 4,2 , 100,5 , 104,20 , 27,10 , 13,25 , 77,10]);
AddSWrd('l', 'limits', [16,5 , 17,5 , 4,2 , 21,5 , 22,5 , 118,10 , 23,5 , 24,10 , 44,5 , 13,5]);
AddSWrd('l', 'line', [5,2 , 7,5 , 10,25 , 12,15 , 13,5 , 77,30 , 15,5 , 20,5 , 21,5 , 22,5 , 23,5 , 25,5 , 26,5 , 27,5 , 31,40 , 95,4 , 96,10 , 33,30 , 35,10 , 100,5 , 104,20 , 106,10 , 108,10 , 109,2 , 110,10 , 47,2 , 112,10 , 57,12 , 121,2 , 124,5 , 61,2 , 62,2]);
AddSWrd('l', 'linear', [104,80 , 138,2 , 13,10]);
AddSWrd('l', 'linearity', [4,2 , 101,2]);
AddSWrd('l', 'lined', [86,2]);
AddSWrd('l', 'lines', [96,10 , 33,10 , 100,5 , 104,25 , 106,10 , 12,5 , 108,10 , 13,5 , 77,10 , 109,2 , 110,10 , 15,15 , 16,5 , 112,10 , 20,15 , 21,15 , 22,15 , 86,2 , 23,15 , 31,10]);
AddSWrd('l', 'link', [130,4 , 21,5 , 22,5 , 134,2 , 23,5 , 24,30]);
AddSWrd('l', 'link.x', [21,5 , 22,10 , 23,5 , 24,15]);
AddSWrd('l', 'linked', [134,2]);
AddSWrd('l', 'lint', [13,70 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 124,5 , 125,10]);
AddSWrd('l', 'linus', [13,5]);
AddSWrd('l', 'linux', [13,10]);
AddSWrd('l', 'list', [33,20 , 104,50 , 105,2 , 12,5 , 13,15 , 77,10 , 16,15 , 48,2 , 112,10 , 49,5 , 22,15 , 54,2 , 26,15 , 27,15 , 123,20 , 28,2]);
AddSWrd('l', 'listed', [33,10 , 35,5 , 4,2 , 118,10 , 104,10 , 12,10 , 13,10 , 77,10 , 111,2]);
AddSWrd('l', 'listing', [70,2]);
AddSWrd('l', 'lists', [34,5 , 50,5 , 115,2 , 5,2 , 42,5 , 43,5 , 44,5 , 45,5 , 46,5]);
AddSWrd('l', 'literal', [33,10 , 104,10 , 13,5 , 77,10 , 31,10]);
AddSWrd('l', 'literally', [7,5]);
AddSWrd('l', 'litho', [96,10 , 33,60 , 99,4 , 100,5 , 132,2 , 37,8 , 38,4 , 103,4 , 104,45 , 106,10 , 12,30 , 108,10 , 77,10 , 110,20 , 112,10 , 17,25 , 114,40 , 115,4 , 116,190 , 118,20 , 119,5 , 28,2]);
AddSWrd('l', 'litho-flat', [115,2 , 118,5 , 119,10]);
AddSWrd('l', 'litho_file_block', [33,15]);
AddSWrd('l', 'lithographic', [105,2]);
AddSWrd('l', 'lithography', [4,2 , 25,5]);
AddSWrd('l', 'little', [133,2 , 105,2 , 30,2]);
AddSWrd('l', 'load', [33,10 , 129,2 , 28,2]);
AddSWrd('l', 'loaded', [128,2 , 33,10 , 135,2 , 104,10 , 13,10]);
AddSWrd('l', 'loading', [33,10 , 129,4 , 102,4 , 55,2]);
AddSWrd('l', 'loads', [33,10]);
AddSWrd('l', 'local', [32,2 , 96,10 , 33,10 , 134,12 , 119,10 , 25,5 , 10,30 , 13,25]);
AddSWrd('l', 'localization', [25,5]);
AddSWrd('l', 'localized', [24,10]);
AddSWrd('l', 'locate', [97,5 , 85,2]);
AddSWrd('l', 'located', [16,5 , 17,5 , 33,10 , 22,5 , 24,5 , 104,10 , 77,10 , 15,5]);
AddSWrd('l', 'location', [33,30 , 130,2 , 134,4 , 104,20 , 105,4 , 10,10 , 12,15 , 13,20 , 77,30 , 112,20 , 18,10 , 118,10 , 121,2]);
AddSWrd('l', 'locations', [96,10 , 20,5 , 21,20 , 22,15 , 23,15 , 24,30 , 105,2 , 121,2 , 106,10]);
AddSWrd('l', 'locator_id', [96,5]);
AddSWrd('l', 'log', [112,20 , 17,5 , 18,5 , 102,2 , 55,2 , 26,5 , 27,5 , 13,30]);
AddSWrd('l', 'log_file_name', [68,2 , 69,2 , 102,2 , 72,2 , 73,2 , 13,20 , 15,5 , 16,5 , 17,5 , 81,8 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('l', 'log_level', [112,20]);
AddSWrd('l', 'logged', [13,10]);
AddSWrd('l', 'logical', [33,10]);
AddSWrd('l', 'logs', [55,2]);
AddSWrd('l', 'long', [32,2 , 35,20 , 132,2 , 117,10 , 14,10]);
AddSWrd('l', 'long-range', [102,2]);
AddSWrd('l', 'longer', [35,10 , 100,30 , 101,2 , 104,20 , 25,20 , 13,10 , 14,20]);
AddSWrd('l', 'longer-range', [4,2]);
AddSWrd('l', 'longest', [100,10 , 105,2]);
AddSWrd('l', 'look', [105,2]);
AddSWrd('l', 'looking', [58,2]);
AddSWrd('l', 'looks', [58,2]);
AddSWrd('l', 'loss-less', [104,10]);
AddSWrd('l', 'low', [102,2 , 25,10 , 15,5]);
AddSWrd('l', 'lower', [12,5 , 13,10 , 77,20 , 17,5 , 18,10 , 84,6 , 22,5 , 86,4 , 24,5 , 25,5 , 26,5 , 58,2 , 122,2 , 27,5]);
AddSWrd('l', 'lower-bound', [34,5]);
AddSWrd('l', 'lower-case', [18,5]);
AddSWrd('l', 'lower-left', [18,10 , 100,5 , 104,10 , 77,50 , 79,2]);
AddSWrd('l', 'lowercase', [96,5 , 7,5]);
AddSWrd('l', 'lowest', [79,2]);
AddSWrd('l', 'lsb1', [15,40]);
AddSWrd('l', 'lsb2', [15,15]);
AddSWrd('l', 'lsb3', [15,15]);
AddSWrd('l', 'lvheap', [131,4 , 20,10 , 21,10 , 104,20 , 136,4]);
AddSWrd('l', 'lvs', [28,2]);
AddSWrd('l', 'lying', [105,2]);
AddSWrd('m', 'm1_mpc.oas', [116,5]);
AddSWrd('m', 'm1fill', [114,10]);
AddSWrd('m', 'm1opc', [114,10]);
AddSWrd('m', 'm8051.jeol', [13,10]);
AddSWrd('m', 'm8051.mic', [72,4]);
AddSWrd('m', 'm8051_jeol.log', [13,10]);
AddSWrd('m', 'm8051_mic.gds', [72,2]);
AddSWrd('m', 'm8051warp_merged.gds', [72,2]);
AddSWrd('m', 'm8051warp_wrapper', [72,2]);
AddSWrd('m', 'machine', [119,5 , 105,2 , 10,20 , 92,2 , 13,10 , 15,5]);
AddSWrd('m', 'machine1', [119,5]);
AddSWrd('m', 'machines', [119,5 , 24,5 , 10,10 , 27,5]);
AddSWrd('m', 'macros', [97,20 , 94,4]);
AddSWrd('m', 'made', [33,10 , 129,2 , 77,10]);
AddSWrd('m', 'mag', [33,5 , 132,2 , 104,25 , 13,20 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('m', 'magnification', [17,5 , 100,20 , 132,4 , 12,5 , 13,30 , 77,30 , 31,10 , 79,8]);
AddSWrd('m', 'magnifications', [13,10]);
AddSWrd('m', 'magnified', [17,5 , 104,10 , 42,5 , 13,10 , 45,5]);
AddSWrd('m', 'magnifies', [100,5 , 77,20]);
AddSWrd('m', 'magnify', [68,32 , 69,2 , 70,2 , 71,2 , 72,2 , 73,4 , 12,5 , 13,80 , 77,140 , 15,5 , 79,14 , 16,5 , 17,5 , 81,8 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 89,4 , 26,5 , 90,4 , 27,5 , 91,4 , 33,10 , 100,20 , 104,10 , 42,10 , 45,5 , 110,10 , 114,5]);
AddSWrd('m', 'magnitude', [104,20 , 138,2]);
AddSWrd('m', 'main', [112,20 , 134,2 , 104,10 , 13,40]);
AddSWrd('m', 'maintain', [17,5 , 122,2]);
AddSWrd('m', 'maintaining', [77,10]);
AddSWrd('m', 'maintains', [86,2 , 105,2 , 47,2]);
AddSWrd('m', 'major', [103,2 , 104,10]);
AddSWrd('m', 'majority', [105,2]);
AddSWrd('m', 'make_chip_ini', [20,10 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('m', 'makes', [16,5 , 20,5 , 21,5 , 56,2]);
AddSWrd('m', 'making', [4,2 , 103,2 , 90,2 , 91,2 , 44,5]);
AddSWrd('m', 'mall_figure_size', [23,5]);
AddSWrd('m', 'manhattan', [22,10 , 23,10 , 13,20]);
AddSWrd('m', 'manipulate', [57,2]);
AddSWrd('m', 'manipulated', [12,5]);
AddSWrd('m', 'manipulating', [12,5]);
AddSWrd('m', 'manipulation', [4,2 , 47,10]);
AddSWrd('m', 'manipulations', [5,2]);
AddSWrd('m', 'manner', [104,30]);
AddSWrd('m', 'manual', [129,2 , 4,20 , 5,40 , 134,2 , 8,2 , 10,10 , 13,15 , 77,10 , 85,30 , 23,5 , 28,6 , 31,10 , 33,20 , 34,5 , 36,2 , 102,4 , 40,2 , 104,20 , 42,5 , 48,2 , 49,5 , 114,5 , 55,2 , 56,2 , 59,2 , 61,2 , 127,2]);
AddSWrd('m', 'manually', [4,2 , 21,5 , 22,5 , 23,5 , 105,2]);
AddSWrd('m', 'manuals', [5,12]);
AddSWrd('m', 'manufacturer', [21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('m', 'manufacturing', [4,6 , 5,2]);
AddSWrd('m', 'map', [72,2 , 73,8 , 77,75 , 81,2 , 18,5 , 22,5 , 89,4 , 90,4 , 91,4 , 31,5 , 33,245 , 36,14 , 37,22 , 38,16 , 104,135 , 105,22 , 106,45 , 44,15 , 108,20 , 45,15 , 109,2 , 110,130 , 112,10 , 114,20 , 116,50 , 53,2 , 118,30 , 56,2]);
AddSWrd('m', 'map-matched', [38,2]);
AddSWrd('m', 'map-size', [105,20 , 106,25]);
AddSWrd('m', 'map-sizing', [105,4 , 106,20 , 108,10]);
AddSWrd('m', 'map.ejb', [104,10]);
AddSWrd('m', 'map_layer', [106,30]);
AddSWrd('m', 'map_layer_1', [106,15]);
AddSWrd('m', 'map_layer_n', [106,15]);
AddSWrd('m', 'map_name', [33,35 , 13,30 , 15,5 , 16,25 , 17,5 , 18,5 , 20,5 , 21,5 , 22,20 , 23,5 , 24,5 , 25,5 , 26,20 , 27,20]);
AddSWrd('m', 'map_names', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('m', 'map_size', [106,30]);
AddSWrd('m', 'mapi', [5,4]);
AddSWrd('m', 'mapped', [33,10 , 37,2 , 38,6 , 118,10 , 119,15 , 108,40 , 77,10]);
AddSWrd('m', 'mapper', [25,15]);
AddSWrd('m', 'mapping', [44,5 , 108,10 , 110,10]);
AddSWrd('m', 'maps', [33,20 , 119,10 , 104,5]);
AddSWrd('m', 'mapsize', [34,5 , 101,2 , 102,2 , 105,28 , 106,140]);
AddSWrd('m', 'mapsize_out', [105,2 , 106,20]);
AddSWrd('m', 'mapstring', [77,40 , 31,5]);
AddSWrd('m', 'margin', [20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 105,4 , 15,10]);
AddSWrd('m', 'marker', [104,10 , 105,4 , 31,15]);
AddSWrd('m', 'marker_layer', [104,45]);
AddSWrd('m', 'marks', [7,5]);
AddSWrd('m', 'mask', [3,22 , 4,26 , 132,6 , 5,14 , 133,2 , 6,2 , 138,2 , 12,5 , 13,25 , 14,75 , 15,20 , 16,20 , 17,15 , 18,15 , 19,2 , 20,35 , 21,45 , 22,40 , 23,45 , 24,70 , 25,10 , 26,15 , 27,15 , 30,2 , 31,55 , 32,4 , 33,35 , 40,4 , 51,2 , 57,4 , 63,4 , 64,2 , 66,4 , 77,45 , 82,4 , 90,2 , 91,2 , 92,2 , 96,35 , 100,5 , 101,4 , 102,14 , 103,2 , 104,60 , 106,5 , 108,5 , 110,5 , 112,95 , 116,5 , 117,15 , 120,2 , 123,2 , 125,5]);
AddSWrd('m', 'mask-level', [138,2]);
AddSWrd('m', 'mask-making', [5,2]);
AddSWrd('m', 'mask-writer', [26,5]);
AddSWrd('m', 'mask1', [82,4 , 77,35]);
AddSWrd('m', 'mask2', [82,4 , 77,45]);
AddSWrd('m', 'mask_info', [17,55]);
AddSWrd('m', 'mask_mirror', [97,5]);
AddSWrd('m', 'mask_name', [104,10]);
AddSWrd('m', 'mask_size', [97,5]);
AddSWrd('m', 'mask_size_x', [97,5]);
AddSWrd('m', 'mask_size_y', [97,5]);
AddSWrd('m', 'mask_type', [112,40]);
AddSWrd('m', 'masking', [104,10]);
AddSWrd('m', 'maskopt', [113,22 , 114,80 , 115,28 , 4,6 , 116,165 , 5,2 , 117,15 , 118,20 , 39,2 , 119,10]);
AddSWrd('m', 'maskopt.setup', [114,20 , 116,5 , 118,15]);
AddSWrd('m', 'maskopt_dummy.oas', [116,5]);
AddSWrd('m', 'maskopt_out.oas', [116,5]);
AddSWrd('m', 'maskopt_vsb12_fracture', [114,5]);
AddSWrd('m', 'masks', [112,10 , 102,2 , 14,10]);
AddSWrd('m', 'maskshop_info', [13,10]);
AddSWrd('m', 'match', [96,10 , 33,40 , 34,5 , 35,5 , 100,15 , 37,4 , 133,2 , 103,2 , 104,30 , 106,10 , 12,5 , 108,10 , 13,25 , 77,70 , 14,5 , 16,5 , 22,5 , 26,5 , 27,5 , 31,20]);
AddSWrd('m', 'matches', [33,10 , 104,10 , 77,10 , 31,10]);
AddSWrd('m', 'matching', [13,10 , 109,2]);
AddSWrd('m', 'materials', [4,2]);
AddSWrd('m', 'mathematical', [103,2 , 104,5]);
AddSWrd('m', 'matrix', [104,10]);
AddSWrd('m', 'matrixput', [97,5 , 95,6]);
AddSWrd('m', 'max_cells_in_y_direction', [25,20]);
AddSWrd('m', 'max_common_bde_size', [96,15]);
AddSWrd('m', 'max_file_size', [96,25]);
AddSWrd('m', 'max_frame_bde_size', [96,15]);
AddSWrd('m', 'max_frame_size', [96,25]);
AddSWrd('m', 'max_jog_alignment', [117,55]);
AddSWrd('m', 'max_jog_area', [117,20]);
AddSWrd('m', 'max_jog_width', [117,55]);
AddSWrd('m', 'max_skew_approximation_erro', [20,5 , 21,5 , 22,5 , 23,5]);
AddSWrd('m', 'max_skew_approximation_error', [81,4 , 114,5 , 20,10 , 21,10 , 22,10 , 70,2 , 23,10 , 71,2 , 15,15]);
AddSWrd('m', 'maximize', [27,15 , 30,2]);
AddSWrd('m', 'maximum', [70,2 , 71,4 , 72,4 , 73,2 , 10,40 , 13,20 , 77,30 , 14,20 , 15,40 , 16,40 , 20,35 , 21,25 , 22,30 , 23,20 , 24,40 , 25,55 , 89,4 , 26,30 , 90,2 , 27,25 , 91,2 , 31,5 , 96,80 , 33,50 , 35,15 , 100,10 , 37,2 , 102,2 , 104,40 , 41,2 , 106,5 , 108,5 , 45,20 , 114,5 , 116,5 , 117,30]);
AddSWrd('m', 'maximum_output_count', [33,25 , 100,15 , 137,2 , 77,15]);
AddSWrd('m', 'maxskewappoximationerror', [70,2]);
AddSWrd('m', 'may', [4,2 , 132,2 , 134,2 , 7,10 , 137,2 , 10,10 , 139,2 , 12,5 , 13,80 , 77,70 , 14,5 , 16,5 , 18,5 , 82,2 , 21,5 , 22,5 , 23,5 , 24,20 , 88,2 , 25,5 , 26,5 , 27,5 , 28,4 , 31,30 , 33,60 , 34,10 , 35,5 , 100,10 , 39,2 , 104,90 , 110,20 , 48,2 , 118,10 , 119,10 , 123,6 , 63,2]);
AddSWrd('m', 'mbf', [24,15 , 13,10]);
AddSWrd('m', 'mbf-specific', [24,5]);
AddSWrd('m', 'mbm1000', [24,35]);
AddSWrd('m', 'mbs', [96,100 , 20,20 , 21,10 , 22,5 , 23,5 , 24,10 , 77,10]);
AddSWrd('m', 'mbw_overlap_free', [27,5]);
AddSWrd('m', 'mdp', [128,4 , 129,8 , 3,2 , 131,4 , 4,52 , 132,2 , 5,36 , 133,2 , 6,38 , 137,32 , 10,20 , 138,2 , 13,105 , 17,10 , 18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 28,8 , 29,22 , 30,2 , 31,10 , 32,48 , 33,355 , 34,10 , 35,20 , 36,10 , 37,52 , 38,40 , 39,48 , 49,5 , 72,4 , 74,2 , 77,65 , 101,30 , 102,4 , 104,10 , 105,28 , 106,140 , 107,12 , 108,145 , 109,14 , 110,180 , 111,14 , 112,160 , 114,5 , 117,15 , 123,10 , 124,65 , 125,15 , 126,22 , 127,12]);
AddSWrd('m', 'mdp-specific', [124,5]);
AddSWrd('m', 'mdp_maskopt', [114,15 , 115,2 , 116,20 , 117,135]);
AddSWrd('m', 'mdp_mebes_reader_version_value', [17,25]);
AddSWrd('m', 'mdp_missing_reference', [36,2]);
AddSWrd('m', 'mdp_remote_tmp', [33,15 , 13,5]);
AddSWrd('m', 'mdpautoclassify', [4,4 , 5,4]);
AddSWrd('m', 'mdpdatasearchpath', [33,10]);
AddSWrd('m', 'mdpdefectavoidance', [4,4 , 5,4]);
AddSWrd('m', 'mdpindexsearchpath', [33,10 , 134,2 , 104,20 , 13,10 , 77,10]);
AddSWrd('m', 'mdpmerge', [96,205 , 97,30 , 4,6 , 5,2 , 92,26 , 124,5 , 93,8 , 94,36 , 95,12]);
AddSWrd('m', 'mdpstat', [98,32 , 99,38 , 4,6 , 100,215 , 5,2 , 124,5]);
AddSWrd('m', 'mdpverify', [128,2 , 129,2 , 131,4 , 4,10 , 132,6 , 5,2 , 133,2 , 72,2 , 73,2 , 74,24 , 75,60 , 76,45 , 13,20 , 77,530 , 78,2 , 79,36 , 80,4 , 17,5 , 81,26 , 18,5 , 82,8 , 83,2 , 84,6 , 86,2 , 87,2 , 89,8 , 90,2 , 91,2 , 30,2 , 31,140 , 34,5 , 36,4 , 37,46 , 123,2 , 124,15 , 125,35]);
AddSWrd('m', 'mdpverify_parameters', [31,5]);
AddSWrd('m', 'mdpview', [33,10 , 97,10 , 129,10 , 4,12 , 36,2 , 5,4 , 102,2 , 134,2 , 135,36 , 104,10 , 105,2 , 13,35 , 77,10 , 23,10]);
AddSWrd('m', 'mean', [52,2]);
AddSWrd('m', 'meaning', [104,10]);
AddSWrd('m', 'meaningful', [104,10 , 13,5]);
AddSWrd('m', 'meanings', [57,2]);
AddSWrd('m', 'means', [32,2 , 33,10 , 21,15 , 117,10 , 22,5 , 24,5 , 105,2 , 26,5 , 77,30]);
AddSWrd('m', 'measure', [49,5 , 58,2 , 59,2 , 60,2 , 61,2]);
AddSWrd('m', 'measured', [60,42]);
AddSWrd('m', 'measurement', [100,15 , 59,4 , 60,2 , 61,58 , 62,22]);
AddSWrd('m', 'measures', [60,8]);
AddSWrd('m', 'measuring', [60,12 , 61,2]);
AddSWrd('m', 'mebes', [33,25 , 4,10 , 68,40 , 8,2 , 104,80 , 9,4 , 74,2 , 11,2 , 75,25 , 12,10 , 13,10 , 77,60 , 79,2 , 112,10 , 17,315 , 81,6 , 52,2 , 89,34 , 90,68 , 91,34 , 31,5]);
AddSWrd('m', 'mebes-compliant', [17,5]);
AddSWrd('m', 'mebes-extended', [33,10]);
AddSWrd('m', 'mebes-specific', [17,5]);
AddSWrd('m', 'mebes2db', [89,2 , 77,25 , 78,2 , 31,5]);
AddSWrd('m', 'mebes2hitachi', [77,15 , 31,5]);
AddSWrd('m', 'mebes2jeol', [91,2 , 77,25 , 78,2 , 31,5]);
AddSWrd('m', 'mebes2mebes', [90,2 , 77,25 , 31,5]);
AddSWrd('m', 'mebes2micronic', [77,15 , 31,5]);
AddSWrd('m', 'mebes2oasis', [4,2]);
AddSWrd('m', 'mebes2vsb', [81,2 , 77,15 , 31,5]);
AddSWrd('m', 'mebes_5', [81,2]);
AddSWrd('m', 'mebes_fracture.log', [68,2]);
AddSWrd('m', 'mebes_pattern_path', [104,10]);
AddSWrd('m', 'mebesinfo', [4,2]);
AddSWrd('m', 'mebesjob', [104,50 , 75,5 , 77,30]);
AddSWrd('m', 'mebesjob2db', [77,15]);
AddSWrd('m', 'mebesjob2jeoljob', [77,25]);
AddSWrd('m', 'mebesjob2mebesjob', [77,45]);
AddSWrd('m', 'mebesjob2vsbjob', [77,90 , 31,5]);
AddSWrd('m', 'mebesmod5.log', [81,2]);
AddSWrd('m', 'mebesmod5.pf', [81,2]);
AddSWrd('m', 'mechanisms', [102,2]);
AddSWrd('m', 'meet', [48,2 , 80,2 , 35,5 , 4,2 , 60,2 , 92,2 , 61,2 , 125,5 , 14,10]);
AddSWrd('m', 'meets', [49,5 , 104,10 , 13,5 , 14,20]);
AddSWrd('m', 'megabytes', [96,10 , 24,10]);
AddSWrd('m', 'memory', [16,5 , 33,10 , 135,2 , 104,20 , 25,10 , 28,2 , 44,10 , 13,10 , 93,6]);
AddSWrd('m', 'memory-based', [44,5]);
AddSWrd('m', 'merge', [96,10 , 49,5 , 4,2 , 104,10 , 27,20 , 92,2]);
AddSWrd('m', 'merge_dis', [96,25]);
AddSWrd('m', 'merged', [96,15 , 4,2 , 103,2 , 104,35 , 57,4 , 42,5 , 92,4 , 94,2]);
AddSWrd('m', 'merged_direction', [27,10]);
AddSWrd('m', 'merges', [96,5 , 4,2 , 57,4 , 92,2]);
AddSWrd('m', 'merging', [49,5 , 99,2 , 57,2 , 31,20]);
AddSWrd('m', 'mes', [116,5]);
AddSWrd('m', 'message', [17,5 , 33,10 , 18,10 , 26,10 , 27,5 , 124,10 , 13,20 , 77,20]);
AddSWrd('m', 'messages', [112,10 , 55,4 , 25,10 , 123,2 , 124,45]);
AddSWrd('m', 'met', [112,40 , 104,5]);
AddSWrd('m', 'metacharacters', [7,10]);
AddSWrd('m', 'metal', [58,14]);
AddSWrd('m', 'metal2', [12,5]);
AddSWrd('m', 'meter', [112,10]);
AddSWrd('m', 'meters', [82,2 , 132,2 , 43,5]);
AddSWrd('m', 'method', [32,4 , 128,4 , 33,10 , 35,5 , 131,4 , 4,2 , 132,6 , 37,4 , 38,6 , 103,2 , 104,20 , 12,15 , 13,40 , 77,10 , 110,10 , 118,5 , 25,10 , 26,10 , 27,15 , 29,2 , 30,4]);
AddSWrd('m', 'methods', [80,4 , 132,2 , 38,2 , 134,2 , 13,10 , 14,15]);
AddSWrd('m', 'metric', [61,26 , 62,4]);
AddSWrd('m', 'metrics', [61,6 , 62,2]);
AddSWrd('m', 'metrology', [4,2 , 5,8]);
AddSWrd('m', 'mheight', [20,10 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('m', 'mic.log', [72,2]);
AddSWrd('m', 'mic_file.la', [18,5]);
AddSWrd('m', 'mic_frac', [102,2]);
AddSWrd('m', 'mic_frac_corrected', [102,2]);
AddSWrd('m', 'micrometer', [102,2]);
AddSWrd('m', 'micron', [16,5 , 82,2 , 21,5 , 22,5 , 23,5 , 24,10 , 25,10 , 26,5 , 27,5 , 43,10 , 15,5]);
AddSWrd('m', 'micronic', [98,2 , 4,4 , 100,10 , 102,2 , 8,2 , 72,34 , 74,2 , 11,2 , 75,15 , 12,20 , 77,10 , 14,15 , 18,240 , 125,5]);
AddSWrd('m', 'micronic-specific', [18,5]);
AddSWrd('m', 'micronic.la.oas', [102,2]);
AddSWrd('m', 'micronic2db', [100,15 , 72,2 , 77,15 , 31,5]);
AddSWrd('m', 'micronic2micronic', [77,15 , 31,5]);
AddSWrd('m', 'micronic_with_corrections_and_hdb_bypass.la', [102,2]);
AddSWrd('m', 'microns', [13,15 , 77,10 , 14,15 , 15,15 , 79,6 , 16,55 , 17,10 , 18,5 , 82,2 , 20,45 , 21,65 , 22,70 , 23,80 , 24,130 , 25,10 , 26,15 , 27,15 , 96,40 , 33,20 , 104,60 , 108,10 , 112,40 , 117,10 , 118,10 , 58,4 , 125,10 , 62,4]);
AddSWrd('m', 'microns.the', [15,5]);
AddSWrd('m', 'mil', [43,5]);
AddSWrd('m', 'millimeter', [102,2]);
AddSWrd('m', 'min_edge_separation', [117,5]);
AddSWrd('m', 'minbiaslength', [102,2]);
AddSWrd('m', 'mind', [63,2]);
AddSWrd('m', 'minimize', [30,2]);
AddSWrd('m', 'minimum', [16,5 , 114,5 , 130,2 , 117,10 , 7,10 , 23,10 , 104,10 , 106,10 , 59,6 , 15,5]);
AddSWrd('m', 'minor', [14,5 , 31,10]);
AddSWrd('m', 'mirror', [97,5 , 100,30 , 13,20 , 77,105 , 15,5 , 79,22 , 16,5 , 112,10 , 17,5 , 81,6 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 90,4 , 27,5 , 91,4 , 94,2 , 31,10]);
AddSWrd('m', 'mirror1', [100,15 , 90,2 , 77,15 , 79,2]);
AddSWrd('m', 'mirror2', [91,2 , 77,15 , 79,2]);
AddSWrd('m', 'mirrored', [80,2 , 13,10]);
AddSWrd('m', 'mirroring', [100,10 , 5,2 , 13,40 , 77,10]);
AddSWrd('m', 'misalignment', [77,10]);
AddSWrd('m', 'miscellaneous', [97,5]);
AddSWrd('m', 'mismatch', [37,2 , 77,10]);
AddSWrd('m', 'mismatched', [104,10]);
AddSWrd('m', 'missed', [100,10]);
AddSWrd('m', 'mitigate', [16,5]);
AddSWrd('m', 'mixed', [16,5 , 30,2]);
AddSWrd('m', 'mjal', [116,5]);
AddSWrd('m', 'mjar', [116,5]);
AddSWrd('m', 'mjw', [116,5]);
AddSWrd('m', 'mode', [128,2 , 4,4 , 68,4 , 13,70 , 77,50 , 14,10 , 78,2 , 17,125 , 81,2 , 18,5 , 20,5 , 21,5 , 22,10 , 23,10 , 25,10 , 89,2 , 26,5 , 90,2 , 27,5 , 28,2 , 31,5 , 32,2 , 33,60 , 38,2 , 104,90 , 105,2 , 108,50 , 118,15 , 119,10]);
AddSWrd('m', 'model', [123,2 , 77,20]);
AddSWrd('m', 'model_name', [7,5]);
AddSWrd('m', 'modeling', [104,10]);
AddSWrd('m', 'modelling', [4,2]);
AddSWrd('m', 'models', [4,4 , 104,10]);
AddSWrd('m', 'modes', [112,10 , 129,2 , 130,2 , 118,10 , 119,10 , 104,10 , 25,5]);
AddSWrd('m', 'modification', [96,5]);
AddSWrd('m', 'modifications', [33,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('m', 'modified', [8,2 , 11,2]);
AddSWrd('m', 'modifies', [113,2 , 115,2 , 4,2 , 117,10]);
AddSWrd('m', 'modify', [96,5 , 135,2 , 47,2]);
AddSWrd('m', 'modifying', [49,5 , 47,2]);
AddSWrd('m', 'module', [17,15 , 33,10 , 99,2 , 39,2 , 13,10 , 77,20]);
AddSWrd('m', 'mondo', [104,10]);
AddSWrd('m', 'monospace', [7,15]);
AddSWrd('m', 'monotone', [27,20]);
AddSWrd('m', 'mopt', [114,45 , 117,5 , 119,5]);
AddSWrd('m', 'mopts', [116,20]);
AddSWrd('m', 'move', [117,10 , 102,12 , 77,30]);
AddSWrd('m', 'moved', [18,5 , 117,30 , 77,20 , 63,2]);
AddSWrd('m', 'movement', [117,10 , 77,10]);
AddSWrd('m', 'movements', [113,2 , 117,15]);
AddSWrd('m', 'moving', [117,10 , 103,2 , 104,5]);
AddSWrd('m', 'mpc', [4,10 , 5,2 , 101,22 , 138,2 , 13,10]);
AddSWrd('m', 'mpc0', [116,10]);
AddSWrd('m', 'mpc0_opt', [116,35]);
AddSWrd('m', 'mpc1', [116,10]);
AddSWrd('m', 'mpc1_opt', [116,35]);
AddSWrd('m', 'mpc2', [116,10]);
AddSWrd('m', 'mpc2_opt', [116,35]);
AddSWrd('m', 'mpcpro', [4,2 , 5,2 , 101,4 , 102,36]);
AddSWrd('m', 'mpcverify', [4,4 , 5,4]);
AddSWrd('m', 'mpn', [99,4]);
AddSWrd('m', 'mrc', [33,20 , 5,2 , 30,2]);
AddSWrd('m', 'mrc_1', [33,20]);
AddSWrd('m', 'mrc_2', [33,20]);
AddSWrd('m', 'mrc_err.oas', [33,20]);
AddSWrd('m', 'mrc_only', [33,15]);
AddSWrd('m', 'mtflex', [33,20 , 129,4 , 21,5 , 118,10 , 119,5 , 104,30 , 9,4 , 25,10 , 10,20 , 13,30 , 77,10]);
AddSWrd('m', 'multi', [25,5]);
AddSWrd('m', 'multibeam', [24,5 , 27,15]);
AddSWrd('m', 'multilayer', [16,5 , 22,5 , 26,5 , 27,5 , 13,10]);
AddSWrd('m', 'multiple', [4,2 , 13,45 , 77,40 , 15,5 , 17,10 , 82,2 , 22,10 , 24,10 , 31,10 , 95,2 , 32,2 , 33,90 , 37,40 , 103,2 , 104,50 , 42,10 , 107,2 , 108,5 , 109,2 , 110,20 , 112,25 , 119,10 , 120,2 , 121,2 , 124,5 , 63,6]);
AddSWrd('m', 'multiples', [20,5 , 15,15]);
AddSWrd('m', 'multiplied', [132,2 , 104,30 , 42,5]);
AddSWrd('m', 'multiplier', [33,20 , 20,20 , 21,20 , 13,15 , 77,20 , 110,10]);
AddSWrd('m', 'multiplies', [33,10 , 13,5 , 110,10]);
AddSWrd('m', 'multiply', [104,10 , 77,10]);
AddSWrd('m', 'multiput', [97,5 , 95,6]);
AddSWrd('m', 'multithreaded', [10,20 , 93,34]);
AddSWrd('m', 'multithreading', [104,10 , 9,2]);
AddSWrd('m', 'mutually', [33,10 , 20,5 , 100,5 , 21,5 , 22,5 , 23,5 , 24,10 , 26,5 , 27,5 , 12,5 , 13,10 , 77,10]);
AddSWrd('m', 'mwidth', [20,10 , 21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('m', 'my_fracture', [71,2 , 72,2 , 13,10]);
AddSWrd('m', 'my_mdp_embed', [33,30]);
AddSWrd('m', 'myrules', [37,8]);
AddSWrd('m', 'mywkdr', [33,30]);
AddSWrd('n', 'n_n', [104,15]);
AddSWrd('n', 'name', [134,2 , 10,10 , 12,25 , 13,60 , 77,120 , 15,20 , 16,5 , 17,30 , 18,5 , 20,20 , 21,20 , 22,20 , 23,5 , 24,10 , 25,5 , 26,5 , 27,5 , 31,20 , 96,10 , 33,110 , 100,5 , 38,2 , 103,2 , 104,40 , 42,5 , 106,20 , 44,20 , 108,20 , 45,5 , 109,2 , 110,25 , 112,10 , 50,5 , 116,20 , 117,20 , 118,10 , 119,45 , 56,6 , 123,2]);
AddSWrd('n', 'name1', [13,5]);
AddSWrd('n', 'name2', [13,5]);
AddSWrd('n', 'name_of_file', [100,15 , 108,15 , 77,25 , 31,5]);
AddSWrd('n', 'name_of_input_layout', [96,25]);
AddSWrd('n', 'named', [17,15 , 33,20 , 22,5 , 38,4 , 118,20 , 24,5 , 104,15 , 12,10 , 13,5 , 77,10]);
AddSWrd('n', 'names', [33,50 , 104,20 , 44,10 , 108,20 , 13,20 , 77,50 , 16,5 , 18,10 , 82,2 , 22,10 , 119,10 , 24,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('n', 'naming', [17,10 , 18,10]);
AddSWrd('n', 'nanometer', [18,5 , 43,5]);
AddSWrd('n', 'nanometers', [16,5 , 18,15 , 25,10 , 26,5 , 27,5]);
AddSWrd('n', 'narrow', [117,10]);
AddSWrd('n', 'narrower', [14,10]);
AddSWrd('n', 'navigation', [4,2]);
AddSWrd('n', 'near', [32,2]);
AddSWrd('n', 'nearby', [117,10 , 103,2 , 104,5]);
AddSWrd('n', 'nearest', [121,2]);
AddSWrd('n', 'nearing', [20,5 , 21,5 , 136,2]);
AddSWrd('n', 'necessarily', [124,5]);
AddSWrd('n', 'necessary', [33,10 , 65,2 , 81,2 , 114,5 , 20,5 , 21,5 , 85,2 , 136,2 , 15,5]);
AddSWrd('n', 'need', [96,5 , 33,10 , 129,2 , 82,2 , 23,5 , 103,2 , 56,2 , 104,10 , 12,5 , 77,40 , 110,10 , 63,2]);
AddSWrd('n', 'needed', [96,10 , 33,10 , 41,2 , 44,5]);
AddSWrd('n', 'needs', [18,5 , 35,5]);
AddSWrd('n', 'negative', [100,5 , 104,30 , 105,2 , 12,5 , 77,10]);
AddSWrd('n', 'neighbor', [34,10]);
AddSWrd('n', 'net', [34,25 , 7,5 , 119,5]);
AddSWrd('n', 'network', [21,5 , 134,4 , 28,2]);
AddSWrd('n', 'networks', [13,10]);
AddSWrd('n', 'new', [33,10 , 98,2 , 4,2 , 100,5 , 8,2 , 105,2 , 11,2 , 12,5 , 44,10 , 77,10 , 47,4 , 49,25 , 116,20 , 117,20 , 56,4 , 92,2]);
AddSWrd('n', 'new_layer', [66,8]);
AddSWrd('n', 'newer', [17,5]);
AddSWrd('n', 'newlayout', [103,2]);
AddSWrd('n', 'newline', [96,10 , 112,10 , 33,10 , 100,5 , 104,10 , 106,10 , 12,10 , 108,10 , 77,10 , 110,10 , 31,10]);
AddSWrd('n', 'next', [96,10 , 33,20 , 100,5 , 104,20 , 41,2 , 106,10 , 12,15 , 108,10 , 77,10 , 110,10 , 112,10 , 25,10 , 31,10]);
AddSWrd('n', 'nmclmpc', [4,8 , 5,4]);
AddSWrd('n', 'nmdrc', [5,2 , 6,2 , 40,2 , 104,10 , 9,4 , 10,5 , 42,10 , 12,10 , 44,10 , 13,5 , 45,25 , 46,5 , 47,2 , 17,5 , 52,4 , 53,4 , 54,2 , 55,2 , 56,2 , 57,4 , 59,4 , 60,2 , 61,4]);
AddSWrd('n', 'nmdrc-h', [99,2 , 5,2 , 10,40 , 44,10 , 108,20]);
AddSWrd('n', 'nmmpc', [4,8 , 5,4 , 39,2]);
AddSWrd('n', 'nmopc', [5,4]);
AddSWrd('n', 'no-layer', [34,5]);
AddSWrd('n', 'nodes', [21,5 , 133,2]);
AddSWrd('n', 'nomenclature', [33,10 , 104,10]);
AddSWrd('n', 'nominal', [104,10 , 138,2 , 77,10]);
AddSWrd('n', 'non-45', [20,5 , 132,2 , 21,5 , 22,5 , 23,5 , 15,5]);
AddSWrd('n', 'non-45-degree', [20,5]);
AddSWrd('n', 'non-conflicting', [130,2]);
AddSWrd('n', 'non-conforming', [18,5]);
AddSWrd('n', 'non-empty', [125,5]);
AddSWrd('n', 'non-fatal', [123,2 , 124,5]);
AddSWrd('n', 'non-frame', [112,20]);
AddSWrd('n', 'non-isothetic', [125,5]);
AddSWrd('n', 'non-manhattan', [28,2]);
AddSWrd('n', 'non-mcpo', [33,10]);
AddSWrd('n', 'non-monotone', [27,5]);
AddSWrd('n', 'non-negative', [35,10 , 77,10]);
AddSWrd('n', 'non-orthogonal', [132,2]);
AddSWrd('n', 'non-overlapping', [105,2]);
AddSWrd('n', 'non-parallel', [61,2]);
AddSWrd('n', 'non-simple', [46,10]);
AddSWrd('n', 'non-strict', [33,20]);
AddSWrd('n', 'non-zero', [16,5 , 104,20]);
AddSWrd('n', 'none', [118,10 , 104,35 , 27,15 , 77,165]);
AddSWrd('n', 'nonsimple', [46,10]);
AddSWrd('n', 'normal', [14,30]);
AddSWrd('n', 'normalization', [104,40]);
AddSWrd('n', 'normalizes', [104,10]);
AddSWrd('n', 'normally', [96,5 , 104,10 , 57,2 , 10,10 , 123,2]);
AddSWrd('n', 'not-merged', [27,5]);
AddSWrd('n', 'not_merged', [27,15]);
AddSWrd('n', 'notch', [35,10]);
AddSWrd('n', 'note', [96,10 , 100,5 , 104,30 , 42,5 , 12,5 , 77,10 , 81,4 , 21,5 , 22,10 , 86,2 , 23,20 , 24,20 , 57,2 , 61,2 , 30,2]);
AddSWrd('n', 'notes', [16,5 , 17,5 , 18,5 , 5,6 , 22,5 , 24,5 , 26,5 , 27,5 , 15,5]);
AddSWrd('n', 'notice', [121,2 , 63,4]);
AddSWrd('n', 'noview', [33,35]);
AddSWrd('n', 'nuflare', [131,2 , 4,6 , 133,2 , 70,2 , 8,2 , 136,2 , 9,4 , 74,2 , 11,2 , 75,25 , 12,20 , 13,30 , 77,10 , 14,15 , 81,4 , 82,2 , 114,5 , 19,12 , 20,15 , 21,25 , 22,20 , 23,25 , 24,25]);
AddSWrd('n', 'nuflare_12', [81,2]);
AddSWrd('n', 'nuflare_mbf', [82,2 , 4,2 , 100,5 , 8,2 , 24,270 , 11,2 , 75,10 , 12,20 , 13,20]);
AddSWrd('n', 'nuflare_vsb12', [81,2]);
AddSWrd('n', 'nuflare_vsb12.log', [81,2]);
AddSWrd('n', 'null', [70,2 , 104,10]);
AddSWrd('n', 'num', [21,10 , 22,10 , 23,10 , 24,15]);
AddSWrd('n', 'num_dose_levels', [25,45]);
AddSWrd('n', 'number', [131,2 , 133,2 , 6,2 , 135,2 , 136,2 , 137,2 , 10,90 , 138,2 , 13,40 , 14,10 , 15,70 , 16,55 , 17,40 , 18,10 , 20,5 , 21,50 , 22,75 , 23,55 , 24,110 , 25,60 , 26,35 , 27,50 , 28,2 , 31,10 , 33,90 , 36,4 , 37,8 , 42,5 , 43,5 , 44,5 , 45,5 , 51,2 , 56,4 , 63,12 , 64,2 , 67,2 , 76,5 , 77,110 , 80,2 , 93,2 , 94,2 , 96,30 , 97,5 , 99,6 , 100,25 , 101,2 , 104,95 , 106,50 , 108,20 , 110,50 , 112,30 , 118,50 , 119,10 , 127,2]);
AddSWrd('n', 'number_of_processors', [10,90]);
AddSWrd('n', 'numbers', [33,20 , 100,5 , 38,2 , 104,30 , 136,4 , 13,5 , 77,40 , 109,2 , 110,55 , 16,5 , 17,5 , 20,10 , 21,10 , 26,5 , 27,5 , 31,10]);
AddSWrd('n', 'numerator', [33,20 , 18,5 , 100,15 , 104,30 , 13,5 , 77,30 , 110,10 , 15,5]);
AddSWrd('n', 'numeric', [104,10 , 31,10]);
AddSWrd('o', 'oas', [104,20]);
AddSWrd('o', 'oas_in', [33,5 , 104,10 , 110,20]);
AddSWrd('o', 'oas_out', [33,10 , 104,15 , 110,10]);
AddSWrd('o', 'oas_results', [108,5]);
AddSWrd('o', 'oasis', [128,6 , 129,32 , 4,8 , 5,2 , 6,2 , 9,2 , 75,10 , 13,185 , 77,250 , 14,10 , 81,2 , 18,5 , 25,20 , 26,20 , 27,20 , 31,70 , 32,2 , 33,525 , 36,4 , 100,10 , 37,4 , 101,8 , 38,14 , 102,8 , 103,4 , 104,230 , 106,10 , 107,4 , 108,75 , 109,2 , 110,40 , 112,30 , 114,25 , 115,2 , 116,30 , 53,2 , 118,45 , 119,5 , 125,30]);
AddSWrd('o', 'oasis-derivative', [77,10]);
AddSWrd('o', 'oasis-direct-input', [33,10 , 104,10 , 77,10]);
AddSWrd('o', 'oasis-style', [74,2]);
AddSWrd('o', 'oasis-to-oasis', [77,10]);
AddSWrd('o', 'oasis-type', [33,10]);
AddSWrd('o', 'oasis.mapper', [4,4 , 8,2 , 9,2 , 25,30 , 11,2 , 75,5 , 13,10]);
AddSWrd('o', 'oasis.mask', [128,6 , 33,20 , 131,2 , 4,4 , 8,2 , 104,10 , 9,2 , 73,32 , 11,2 , 75,5 , 13,50 , 77,50 , 26,35 , 27,15]);
AddSWrd('o', 'oasis.mbw', [4,4 , 8,2 , 9,2 , 27,55 , 75,5]);
AddSWrd('o', 'oasis.vsb', [104,10]);
AddSWrd('o', 'oasis_extent', [128,2 , 101,2 , 109,12 , 110,170]);
AddSWrd('o', 'oasis_extent-derived', [110,10]);
AddSWrd('o', 'oasis_input_file', [129,4]);
AddSWrd('o', 'oasis_layer_datatype', [33,30 , 104,35 , 13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('o', 'oasis_layer_number', [33,30 , 104,35 , 13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('o', 'oasis_mapper', [25,170 , 12,20]);
AddSWrd('o', 'oasis_mapper-specific', [25,5]);
AddSWrd('o', 'oasis_mapper_field_dimension_in_y', [25,10]);
AddSWrd('o', 'oasis_mask', [73,2 , 26,150 , 12,20 , 14,5 , 110,10]);
AddSWrd('o', 'oasis_mask-specific', [26,5]);
AddSWrd('o', 'oasis_mbw', [11,2 , 27,160 , 12,20]);
AddSWrd('o', 'oasis_mbw-specific', [27,5]);
AddSWrd('o', 'oasis_out', [102,4]);
AddSWrd('o', 'oasis_output_layers', [33,75 , 38,10 , 77,25]);
AddSWrd('o', 'oasis_output_options', [33,35 , 77,15]);
AddSWrd('o', 'oasis_output_path', [33,95 , 38,8 , 77,35]);
AddSWrd('o', 'oasis_output_primary', [33,45 , 77,25]);
AddSWrd('o', 'oasis_vsb_conformance_severity', [26,10 , 27,5]);
AddSWrd('o', 'oasisindex', [129,2 , 130,2 , 13,30 , 77,30]);
AddSWrd('o', 'oasisinjection', [129,2 , 130,2 , 134,2]);
AddSWrd('o', 'obey', [104,10 , 13,5]);
AddSWrd('o', 'object', [94,2]);
AddSWrd('o', 'objectives', [26,5]);
AddSWrd('o', 'observed', [4,4]);
AddSWrd('o', 'obtain', [25,10 , 121,2 , 10,10 , 42,5 , 63,2 , 127,2]);
AddSWrd('o', 'occasions', [33,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('o', 'occupy', [100,5]);
AddSWrd('o', 'occur', [33,10 , 129,2 , 134,2 , 135,2 , 104,20 , 123,4 , 13,20 , 77,10 , 15,5 , 31,10]);
AddSWrd('o', 'occurred', [104,10 , 123,2]);
AddSWrd('o', 'occurrence', [33,10 , 104,10 , 13,5 , 77,10 , 31,10]);
AddSWrd('o', 'occurs', [35,5 , 131,2 , 37,2 , 13,20 , 79,2]);
AddSWrd('o', 'oct', [99,4 , 70,24]);
AddSWrd('o', 'odd', [120,2 , 15,5 , 63,16]);
AddSWrd('o', 'odd-multiple', [120,20 , 121,44 , 122,46 , 63,4]);
AddSWrd('o', 'off-grid', [120,2 , 121,30 , 13,10 , 46,5 , 63,4 , 79,4]);
AddSWrd('o', 'offgrid', [49,10 , 41,2 , 46,15]);
AddSWrd('o', 'offset', [17,10 , 122,2]);
AddSWrd('o', 'offsets', [13,5]);
AddSWrd('o', 'often', [65,2 , 35,5 , 104,10 , 77,10]);
AddSWrd('o', 'older', [17,5]);
AddSWrd('o', 'omit', [7,5 , 12,5]);
AddSWrd('o', 'omitted', [77,20]);
AddSWrd('o', 'omitting', [129,2]);
AddSWrd('o', 'on-demand', [13,5]);
AddSWrd('o', 'on-disk', [135,4]);
AddSWrd('o', 'on-the-fly', [134,2]);
AddSWrd('o', 'once', [129,2 , 18,5 , 7,5 , 103,2 , 119,15 , 25,20 , 13,5 , 61,2 , 15,5 , 95,2]);
AddSWrd('o', 'one-dimensional', [26,5]);
AddSWrd('o', 'one-layer', [77,10]);
AddSWrd('o', 'one-to-one', [16,5 , 22,5 , 26,5 , 27,5 , 13,10 , 110,10]);
AddSWrd('o', 'online', [119,20]);
AddSWrd('o', 'onto', [118,10 , 121,2 , 13,10 , 63,2]);
AddSWrd('o', 'opc', [17,5 , 5,2 , 102,4 , 138,2 , 31,10]);
AddSWrd('o', 'opc_fill', [114,5]);
AddSWrd('o', 'opc_input', [114,5 , 117,5]);
AddSWrd('o', 'opc_input1', [118,10]);
AddSWrd('o', 'opc_input2', [118,10]);
AddSWrd('o', 'opc_input3', [118,5]);
AddSWrd('o', 'opcbias', [101,2 , 102,6]);
AddSWrd('o', 'opcverify', [114,20 , 119,5]);
AddSWrd('o', 'open', [104,10 , 139,2 , 125,5]);
AddSWrd('o', 'opened', [135,2]);
AddSWrd('o', 'operate', [114,5 , 35,10 , 9,2 , 42,10 , 47,2 , 79,2]);
AddSWrd('o', 'operates', [57,2 , 10,10 , 42,5 , 74,2 , 47,4]);
AddSWrd('o', 'operating', [55,2 , 104,10]);
AddSWrd('o', 'operation', [129,2 , 130,2 , 135,2 , 8,4 , 9,2 , 11,2 , 12,70 , 13,45 , 14,20 , 15,15 , 16,5 , 17,5 , 18,20 , 20,35 , 21,30 , 22,40 , 23,30 , 24,65 , 27,5 , 31,55 , 33,20 , 34,15 , 35,45 , 37,2 , 47,8 , 48,2 , 49,20 , 50,10 , 52,2 , 56,2 , 57,6 , 58,4 , 60,44 , 61,2 , 62,4 , 63,44 , 68,2 , 69,2 , 70,2 , 71,2 , 72,2 , 73,2 , 76,10 , 77,140 , 79,2 , 80,2 , 81,2 , 83,2 , 84,2 , 92,2 , 95,2 , 96,30 , 98,2 , 100,40 , 103,2 , 104,50 , 105,2 , 106,20 , 108,10 , 109,2 , 110,25 , 112,10 , 114,15 , 115,2 , 116,20 , 117,15 , 118,10 , 121,10 , 122,4 , 123,2 , 125,15]);
AddSWrd('o', 'operation.', [67,2]);
AddSWrd('o', 'operations', [129,2 , 131,4 , 4,6 , 132,4 , 133,4 , 6,2 , 134,2 , 135,2 , 8,20 , 10,20 , 12,20 , 13,15 , 14,5 , 20,15 , 21,5 , 22,10 , 23,5 , 24,10 , 28,16 , 29,2 , 30,4 , 31,50 , 32,2 , 33,10 , 34,10 , 35,45 , 39,4 , 40,4 , 42,5 , 44,15 , 45,10 , 47,2 , 48,38 , 49,50 , 50,5 , 51,2 , 53,2 , 56,10 , 58,2 , 59,4 , 65,2 , 76,5 , 77,20 , 81,6 , 86,2 , 93,32 , 103,2 , 105,4 , 112,10 , 123,2]);
AddSWrd('o', 'operator', [33,10]);
AddSWrd('o', 'operators', [104,20]);
AddSWrd('o', 'opposing', [59,2 , 62,2]);
AddSWrd('o', 'opposite', [35,10 , 102,12 , 58,2 , 59,2 , 61,18 , 62,2]);
AddSWrd('o', 'ops', [104,5]);
AddSWrd('o', 'optical', [5,2 , 104,10]);
AddSWrd('o', 'optimal', [26,5]);
AddSWrd('o', 'optimally', [26,5]);
AddSWrd('o', 'optimization', [4,2 , 117,20 , 14,5]);
AddSWrd('o', 'optimize', [92,4 , 13,5]);
AddSWrd('o', 'optimized', [4,2 , 134,2 , 119,5]);
AddSWrd('o', 'optimizes', [14,10]);
AddSWrd('o', 'optimum', [120,2]);
AddSWrd('o', 'option', [128,2 , 33,110 , 100,5 , 134,2 , 104,80 , 9,2 , 10,40 , 12,15 , 13,100 , 77,140 , 14,10 , 78,4 , 15,5 , 79,2 , 18,15 , 21,10 , 22,10 , 23,5 , 24,15 , 25,20 , 26,10 , 125,5]);
AddSWrd('o', 'optional', [7,5 , 10,30 , 138,2 , 12,5 , 13,195 , 77,340 , 14,45 , 15,30 , 16,45 , 17,20 , 18,35 , 20,90 , 21,80 , 22,55 , 23,55 , 24,140 , 25,30 , 26,5 , 27,35 , 31,30 , 96,80 , 33,220 , 35,10 , 36,4 , 100,30 , 104,230 , 42,5 , 108,80 , 45,10 , 110,40 , 112,60 , 117,20 , 118,20 , 119,30]);
AddSWrd('o', 'optionally', [112,10 , 8,2 , 11,2 , 12,10 , 13,10 , 77,20 , 31,10]);
AddSWrd('o', 'options', [33,60 , 104,20 , 25,10 , 10,20 , 13,20 , 77,30 , 14,10 , 94,2]);
AddSWrd('o', 'order', [33,10 , 66,2 , 100,20 , 104,60 , 105,2 , 138,2 , 12,5 , 13,50 , 77,80 , 14,5 , 79,2 , 16,5 , 86,2 , 118,25 , 119,5 , 122,2 , 94,2]);
AddSWrd('o', 'orders', [104,10 , 138,2]);
AddSWrd('o', 'orientable', [46,5]);
AddSWrd('o', 'orientation', [85,2 , 117,10 , 57,4 , 60,2 , 77,5 , 79,2]);
AddSWrd('o', 'orig3', [104,20 , 106,20]);
AddSWrd('o', 'orig301', [106,20]);
AddSWrd('o', 'orig302', [106,20]);
AddSWrd('o', 'orig303', [106,20]);
AddSWrd('o', 'orig6', [68,2 , 89,12 , 90,12 , 91,12 , 13,10]);
AddSWrd('o', 'orig8', [69,2]);
AddSWrd('o', 'orig_input', [116,10]);
AddSWrd('o', 'origin', [100,5 , 104,10 , 12,20 , 13,20 , 77,10 , 15,10 , 79,4 , 16,5 , 80,2 , 17,5 , 18,75 , 83,2 , 22,5 , 86,6 , 24,5 , 26,10 , 58,66 , 122,2 , 27,10 , 59,2]);
AddSWrd('o', 'original', [66,2 , 130,2 , 4,2 , 8,2 , 74,2 , 75,5 , 12,10 , 13,5 , 77,30 , 15,5 , 79,4 , 80,2 , 81,4 , 20,5 , 84,4 , 21,15 , 22,5 , 86,34 , 23,15 , 87,6 , 89,4 , 33,20 , 36,4 , 104,40 , 105,4 , 106,25 , 44,30 , 108,10 , 46,5 , 110,10 , 56,18 , 57,6 , 121,4 , 122,4 , 63,6]);
AddSWrd('o', 'originally', [80,2]);
AddSWrd('o', 'originates', [77,10]);
AddSWrd('o', 'origins', [85,2 , 77,10]);
AddSWrd('o', 'others', [48,2 , 49,5]);
AddSWrd('o', 'otherwise', [34,5 , 37,2 , 103,2 , 104,10 , 77,20 , 16,10 , 17,5 , 81,2 , 21,5 , 22,5 , 26,5 , 122,2 , 27,5]);
AddSWrd('o', 'out.oas', [33,20 , 37,2 , 119,10 , 31,5]);
AddSWrd('o', 'out_a', [38,8]);
AddSWrd('o', 'out_b', [38,8]);
AddSWrd('o', 'out_data.oas', [114,10 , 119,5]);
AddSWrd('o', 'output', [128,2 , 4,6 , 132,2 , 5,2 , 134,10 , 8,10 , 136,2 , 9,2 , 137,2 , 11,2 , 12,80 , 13,170 , 15,85 , 16,30 , 17,45 , 18,70 , 20,20 , 21,40 , 22,70 , 23,60 , 24,100 , 25,40 , 26,55 , 27,40 , 30,4 , 31,60 , 32,8 , 33,360 , 36,8 , 37,12 , 38,60 , 39,2 , 41,2 , 45,25 , 49,5 , 52,4 , 55,2 , 62,2 , 63,2 , 68,2 , 70,2 , 74,2 , 76,10 , 77,200 , 89,2 , 92,2 , 94,2 , 96,60 , 98,2 , 100,50 , 103,6 , 104,110 , 105,8 , 108,55 , 109,2 , 110,25 , 112,50 , 114,40 , 115,2 , 116,45 , 117,15 , 119,95 , 124,20 , 125,15]);
AddSWrd('o', 'output.ddo.oas', [33,5]);
AddSWrd('o', 'output.hdb.oas', [33,5]);
AddSWrd('o', 'output.hdb.rep', [33,5]);
AddSWrd('o', 'output_cell_size', [112,40]);
AddSWrd('o', 'output_dir', [96,15 , 112,5]);
AddSWrd('o', 'output_directory', [20,20 , 21,20 , 22,20 , 23,20 , 24,35]);
AddSWrd('o', 'output_file_name', [12,15 , 13,25 , 14,5 , 15,10 , 16,10 , 17,10 , 18,10 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,10 , 26,10 , 27,10 , 31,5]);
AddSWrd('o', 'output_layer', [33,35 , 116,15 , 117,15 , 108,25]);
AddSWrd('o', 'output_layer_name', [116,15]);
AddSWrd('o', 'output_path', [112,20]);
AddSWrd('o', 'output_window', [119,5]);
AddSWrd('o', 'outputs', [32,2 , 33,30 , 36,2 , 100,25 , 37,38 , 104,10 , 107,2 , 76,30 , 108,5 , 13,15 , 77,30 , 110,10 , 15,10 , 16,5 , 17,5 , 22,5 , 24,5 , 124,5 , 30,2]);
AddSWrd('o', 'outside', [32,2 , 129,2 , 34,40 , 98,2 , 35,5 , 36,2 , 100,25 , 135,2 , 104,10 , 48,12 , 17,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 57,16 , 58,2 , 60,6 , 61,4 , 125,5 , 30,2 , 62,6 , 95,6]);
AddSWrd('o', 'outward', [49,5]);
AddSWrd('o', 'overall', [17,5]);
AddSWrd('o', 'overcome', [128,2 , 33,10 , 118,10 , 104,10 , 13,5]);
AddSWrd('o', 'overflow', [16,5 , 33,10 , 24,30 , 104,10 , 13,5 , 77,20 , 110,10]);
AddSWrd('o', 'overflowed', [125,5]);
AddSWrd('o', 'overlap', [112,20 , 33,10 , 49,5 , 34,10 , 25,40 , 57,2 , 46,5 , 15,5]);
AddSWrd('o', 'overlapped', [104,20]);
AddSWrd('o', 'overlapping', [32,2 , 49,5 , 103,2 , 104,30]);
AddSWrd('o', 'overlaps', [49,5 , 104,10 , 46,5]);
AddSWrd('o', 'overlay', [86,2 , 13,10]);
AddSWrd('o', 'overridden', [32,2 , 31,10]);
AddSWrd('o', 'override', [33,10 , 35,5 , 60,2 , 13,10 , 77,20]);
AddSWrd('o', 'overrides', [21,5 , 22,5 , 23,5 , 104,10]);
AddSWrd('o', 'oversizes', [63,2]);
AddSWrd('o', 'oversizing', [63,14]);
AddSWrd('o', 'overview', [98,2 , 4,30 , 100,10 , 28,2]);
AddSWrd('o', 'overwrites', [20,5 , 21,5 , 22,5 , 23,5 , 24,10]);
AddSWrd('o', 'overwritten', [112,10 , 22,5 , 24,5]);
AddSWrd('p', 'p1_opc', [108,15]);
AddSWrd('p', 'pair', [33,20 , 18,5 , 100,10 , 104,50 , 12,5 , 60,4 , 108,10 , 13,10 , 61,2 , 77,110 , 62,2 , 47,2]);
AddSWrd('p', 'pairings', [60,32]);
AddSWrd('p', 'pairs', [59,2 , 60,60 , 108,10 , 61,2 , 77,10]);
AddSWrd('p', 'parallel', [33,20 , 130,32 , 100,10 , 134,6 , 10,10 , 60,2 , 13,15 , 30,2]);
AddSWrd('p', 'parallel-distributed', [13,10]);
AddSWrd('p', 'parallelogram', [13,20]);
AddSWrd('p', 'parameter', [96,45 , 33,40 , 97,15 , 35,10 , 100,15 , 104,60 , 106,10 , 12,55 , 108,20 , 77,60 , 110,10 , 112,10 , 49,5 , 116,10 , 118,10 , 92,2 , 94,2 , 31,10]);
AddSWrd('p', 'parameter_block', [112,15 , 104,15 , 106,15 , 108,15 , 110,15]);
AddSWrd('p', 'parameter_block_name', [96,15 , 100,10 , 132,2 , 12,20 , 13,5 , 77,15 , 14,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 116,15 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('p', 'parameter_list', [12,25 , 13,10 , 14,5 , 15,10 , 16,10 , 17,10 , 18,10 , 20,10 , 21,10 , 22,10 , 23,10 , 24,10 , 25,10 , 26,10 , 27,10]);
AddSWrd('p', 'parameters', [96,30 , 33,40 , 97,10 , 100,20 , 132,4 , 104,50 , 105,2 , 106,40 , 12,40 , 108,40 , 13,10 , 77,65 , 109,2 , 78,2 , 110,40 , 79,2 , 112,40 , 49,15 , 89,2 , 123,2 , 125,10 , 31,20]);
AddSWrd('p', 'parasitic', [28,2]);
AddSWrd('p', 'parentheses', [100,5 , 7,10 , 104,20 , 12,5 , 77,10]);
AddSWrd('p', 'parse', [125,5 , 31,5 , 95,2]);
AddSWrd('p', 'parsed', [33,10 , 104,10 , 13,5]);
AddSWrd('p', 'parser', [104,10]);
AddSWrd('p', 'parsing', [33,20 , 104,10 , 13,15 , 77,10]);
AddSWrd('p', 'part', [96,5 , 66,2 , 35,10 , 100,5 , 12,10 , 76,5 , 13,15 , 77,20 , 114,5 , 83,2 , 22,5 , 24,5 , 57,2 , 26,5 , 27,5]);
AddSWrd('p', 'partial', [104,115 , 138,8]);
AddSWrd('p', 'particular', [35,5 , 104,20 , 105,2 , 92,2 , 13,20 , 110,10 , 95,2]);
AddSWrd('p', 'particularly', [33,10]);
AddSWrd('p', 'particulars', [54,2]);
AddSWrd('p', 'partition', [105,2]);
AddSWrd('p', 'partitioned', [32,2 , 128,2 , 33,10 , 129,2 , 118,10 , 104,10 , 13,5 , 30,2]);
AddSWrd('p', 'partitioning', [13,5 , 77,10]);
AddSWrd('p', 'partitions', [10,10 , 30,2]);
AddSWrd('p', 'parts', [46,5]);
AddSWrd('p', 'pass', [36,2 , 118,5 , 122,4 , 12,5 , 77,10 , 125,5 , 47,2]);
AddSWrd('p', 'passed', [77,10 , 94,2]);
AddSWrd('p', 'passing', [13,10]);
AddSWrd('p', 'past', [61,8]);
AddSWrd('p', 'path', [130,4 , 70,2 , 134,2 , 71,2 , 8,2 , 72,2 , 73,2 , 10,10 , 13,110 , 77,75 , 15,5 , 16,5 , 17,10 , 20,15 , 21,25 , 22,10 , 23,10 , 24,20 , 89,2 , 90,2 , 91,2 , 28,2 , 31,5 , 96,20 , 33,115 , 37,2 , 102,2 , 103,2 , 104,105 , 41,2 , 42,25 , 106,5 , 44,5 , 108,5 , 46,10 , 110,10 , 112,10 , 114,5 , 116,5 , 118,10 , 119,15]);
AddSWrd('p', 'pathname', [16,5 , 112,15 , 18,5 , 100,10 , 54,2 , 104,10 , 45,15 , 77,30 , 15,5]);
AddSWrd('p', 'pathnames', [77,20]);
AddSWrd('p', 'paths', [130,2 , 119,5 , 42,5 , 13,40]);
AddSWrd('p', 'pattern', [4,8 , 68,2 , 132,2 , 9,4 , 74,4 , 75,5 , 12,5 , 13,20 , 77,145 , 15,40 , 79,12 , 16,25 , 17,35 , 81,4 , 18,10 , 20,20 , 21,25 , 22,20 , 23,5 , 24,10 , 89,2 , 26,15 , 90,2 , 27,15 , 91,2 , 33,10 , 102,4 , 104,40 , 105,2 , 112,10]);
AddSWrd('p', 'pattern-based', [4,2 , 101,2]);
AddSWrd('p', 'pattern-to-db', [77,10]);
AddSWrd('p', 'pattern-to-pattern', [77,10]);
AddSWrd('p', 'pattern.arraycompression', [70,2]);
AddSWrd('p', 'pattern.compression', [70,2]);
AddSWrd('p', 'pattern.set', [70,2]);
AddSWrd('p', 'pattern.slit.width', [70,2]);
AddSWrd('p', 'pattern_array_compression', [20,10 , 21,10]);
AddSWrd('p', 'pattern_composite_rep', [21,10 , 23,10 , 24,15]);
AddSWrd('p', 'pattern_compression', [20,10 , 21,10]);
AddSWrd('p', 'pattern_set', [20,10 , 21,10]);
AddSWrd('p', 'patterned', [4,2]);
AddSWrd('p', 'patternfile1', [77,20]);
AddSWrd('p', 'patternfile2', [77,10]);
AddSWrd('p', 'patterning', [4,2]);
AddSWrd('p', 'patterns', [112,10 , 4,2 , 77,10]);
AddSWrd('p', 'pay', [57,2 , 58,2]);
AddSWrd('p', 'pdt', [70,2]);
AddSWrd('p', 'pending', [77,10]);
AddSWrd('p', 'per', [36,2 , 104,5 , 12,5 , 13,15 , 15,5 , 16,15 , 17,5 , 21,5 , 22,10 , 23,5 , 119,15 , 24,35 , 25,30 , 26,5 , 27,5 , 28,4 , 93,2 , 63,6]);
AddSWrd('p', 'per-rule', [33,10 , 77,10]);
AddSWrd('p', 'per-trapezoid', [13,20]);
AddSWrd('p', 'perc', [28,2]);
AddSWrd('p', 'percent', [104,30]);
AddSWrd('p', 'percentage', [16,5 , 17,5 , 20,5 , 21,5 , 22,5 , 23,5 , 25,10 , 26,5 , 27,5]);
AddSWrd('p', 'perform', [64,2 , 65,2 , 129,2 , 66,2 , 4,2 , 100,5 , 6,2 , 38,2 , 102,4 , 40,2 , 42,5 , 106,10 , 77,10 , 79,2 , 81,2 , 82,2 , 88,2 , 122,2 , 123,2 , 63,2]);
AddSWrd('p', 'performance', [128,4 , 33,30 , 133,2 , 104,20 , 105,2 , 42,5 , 138,2 , 13,50 , 77,30 , 17,10 , 82,2 , 118,10 , 25,15 , 27,5 , 125,5 , 30,2 , 127,2]);
AddSWrd('p', 'performed', [66,2 , 4,2 , 100,5 , 104,20 , 13,10 , 77,30 , 14,5 , 78,2 , 79,6 , 83,2 , 53,2 , 22,5 , 118,10 , 24,5 , 28,2]);
AddSWrd('p', 'performing', [17,5 , 129,2 , 66,2 , 4,2 , 100,15 , 74,2 , 122,2 , 59,2 , 29,2 , 77,40 , 93,2 , 62,2]);
AddSWrd('p', 'performs', [33,10 , 65,2 , 114,5 , 4,2 , 84,2 , 23,5 , 55,2 , 104,20 , 122,2 , 59,2 , 13,10 , 79,2]);
AddSWrd('p', 'perimeter', [34,5]);
AddSWrd('p', 'period', [17,10 , 18,5 , 100,5 , 12,5 , 13,10 , 15,5]);
AddSWrd('p', 'peripheral', [32,2]);
AddSWrd('p', 'permits', [33,10 , 117,10 , 104,10 , 13,10 , 77,10]);
AddSWrd('p', 'permitted', [33,10 , 77,10 , 31,10]);
AddSWrd('p', 'perpendicular', [14,10]);
AddSWrd('p', 'persection', [33,10]);
AddSWrd('p', 'persistent', [77,10]);
AddSWrd('p', 'ph4', [22,5 , 13,10]);
AddSWrd('p', 'phase', [5,2 , 104,15]);
AddSWrd('p', 'photomask', [17,5 , 3,2]);
AddSWrd('p', 'physical', [102,2 , 119,5 , 105,2 , 106,5 , 107,2 , 13,5]);
AddSWrd('p', 'pick', [13,20 , 77,20]);
AddSWrd('p', 'pieces', [65,2]);
AddSWrd('p', 'pin_layer', [7,5]);
AddSWrd('p', 'pin_name', [7,5]);
AddSWrd('p', 'pipe', [55,2]);
AddSWrd('p', 'pipes', [7,10]);
AddSWrd('p', 'pitches', [42,5]);
AddSWrd('p', 'pivoting', [13,10]);
AddSWrd('p', 'place', [114,5 , 116,5 , 103,2 , 104,20 , 77,10]);
AddSWrd('p', 'placed', [33,40 , 26,5 , 27,5 , 13,20 , 77,10]);
AddSWrd('p', 'placeholder', [75,5 , 77,10]);
AddSWrd('p', 'placement', [96,5 , 112,10 , 4,4 , 42,5 , 12,5 , 92,2 , 15,5]);
AddSWrd('p', 'placements', [96,5 , 112,20 , 4,2 , 22,10 , 24,10 , 104,50 , 92,8]);
AddSWrd('p', 'places', [112,10 , 17,10]);
AddSWrd('p', 'planarization', [5,2]);
AddSWrd('p', 'platform', [5,12 , 6,2 , 28,8]);
AddSWrd('p', 'platforms', [6,2]);
AddSWrd('p', 'plays', [77,10]);
AddSWrd('p', 'plus', [17,5 , 89,2 , 26,5 , 122,2]);
AddSWrd('p', 'png', [104,105]);
AddSWrd('p', 'point', [96,10 , 100,10 , 85,2 , 23,10 , 119,5 , 104,20 , 121,2 , 123,2 , 77,10 , 46,5 , 79,2]);
AddSWrd('p', 'points', [104,70 , 57,6 , 42,5 , 61,4 , 62,6]);
AddSWrd('p', 'poly', [99,4 , 70,4 , 71,4 , 72,6 , 104,10 , 58,10 , 12,10 , 13,30 , 77,10 , 110,20 , 31,15]);
AddSWrd('p', 'polygon', [66,4 , 132,2 , 8,4 , 11,2 , 12,10 , 13,10 , 77,10 , 27,5 , 31,15 , 33,45 , 100,30 , 104,50 , 105,4 , 42,5 , 106,20 , 108,10 , 47,6 , 48,4 , 49,70 , 114,15 , 116,15 , 117,30 , 118,5 , 56,4 , 57,54 , 121,6 , 58,10 , 63,16]);
AddSWrd('p', 'polygon-directed', [56,2 , 110,10]);
AddSWrd('p', 'polygonal', [117,10]);
AddSWrd('p', 'polygons', [33,10 , 98,2 , 4,2 , 100,25 , 132,2 , 8,2 , 104,20 , 105,6 , 11,2 , 77,30 , 14,10 , 46,5 , 47,2 , 48,16 , 49,75 , 113,4 , 117,5 , 56,4 , 57,12 , 27,40 , 59,2 , 63,2]);
AddSWrd('p', 'polynomial', [104,10]);
AddSWrd('p', 'poor', [104,10 , 13,10]);
AddSWrd('p', 'portion', [66,2 , 39,2 , 104,10 , 42,5 , 12,30 , 77,10 , 14,70 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 84,2 , 21,5 , 86,4 , 87,6 , 25,10 , 57,4 , 62,4]);
AddSWrd('p', 'portions', [82,2 , 57,2 , 59,2 , 14,50 , 46,5 , 62,2]);
AddSWrd('p', 'position', [104,10 , 42,5 , 122,2]);
AddSWrd('p', 'position-set', [16,5]);
AddSWrd('p', 'positions', [121,4]);
AddSWrd('p', 'positive', [104,40 , 25,20 , 105,2 , 10,20 , 13,30]);
AddSWrd('p', 'positive_output_extent', [26,10 , 27,10]);
AddSWrd('p', 'posix', [13,20]);
AddSWrd('p', 'possible', [33,20 , 134,2 , 104,20 , 105,2 , 75,5 , 13,20 , 77,10 , 78,2 , 16,5 , 119,5 , 120,2 , 26,5 , 123,2 , 125,5]);
AddSWrd('p', 'possibly', [77,10 , 125,5 , 30,2]);
AddSWrd('p', 'post-fracture', [77,5]);
AddSWrd('p', 'post-fractured', [25,5]);
AddSWrd('p', 'post-opc', [133,2 , 30,2]);
AddSWrd('p', 'post-processing', [61,2]);
AddSWrd('p', 'post-tape-out', [4,2]);
AddSWrd('p', 'post-tapeout', [5,4 , 103,2 , 10,10 , 42,5 , 28,8 , 127,2]);
AddSWrd('p', 'posttapeout', [118,10]);
AddSWrd('p', 'potential', [132,6 , 124,5 , 13,10 , 125,10 , 30,4]);
AddSWrd('p', 'potentially', [13,10]);
AddSWrd('p', 'pound', [12,10]);
AddSWrd('p', 'power', [104,10]);
AddSWrd('p', 'practical', [104,10 , 13,5]);
AddSWrd('p', 'practice', [55,2]);
AddSWrd('p', 'practices', [132,12 , 135,2 , 136,32 , 137,30 , 138,32 , 107,2 , 126,22]);
AddSWrd('p', 'pre', [77,5]);
AddSWrd('p', 'pre-fractured', [81,2 , 77,5]);
AddSWrd('p', 'pre-index', [129,2]);
AddSWrd('p', 'pre-indexing', [129,6]);
AddSWrd('p', 'pre-inject', [129,2]);
AddSWrd('p', 'pre-injection', [129,6 , 134,2]);
AddSWrd('p', 'pre-processing', [64,12 , 114,5 , 42,5]);
AddSWrd('p', 'pre-production', [70,2]);
AddSWrd('p', 'precautions', [13,10]);
AddSWrd('p', 'preceded', [13,5]);
AddSWrd('p', 'precision', [132,8 , 70,2 , 71,2 , 72,2 , 13,65 , 77,80 , 15,15 , 79,24 , 16,15 , 17,5 , 82,6 , 89,2 , 26,5 , 90,2 , 91,2 , 31,50 , 33,150 , 36,2 , 102,2 , 103,4 , 104,125 , 41,2 , 106,5 , 43,30 , 45,10 , 110,30 , 112,10 , 114,5 , 116,5 , 63,2]);
AddSWrd('p', 'precisions', [104,10]);
AddSWrd('p', 'predefined', [49,5 , 22,5 , 24,5]);
AddSWrd('p', 'predict', [4,2]);
AddSWrd('p', 'preferable', [104,5]);
AddSWrd('p', 'preferential', [17,5]);
AddSWrd('p', 'preferred', [104,20]);
AddSWrd('p', 'prefix', [33,10 , 123,2 , 108,30 , 124,5]);
AddSWrd('p', 'prefixes', [124,5]);
AddSWrd('p', 'preparation', [128,30 , 3,22 , 5,2 , 6,2 , 13,10 , 77,5 , 15,5 , 16,5 , 17,5 , 18,5 , 19,2 , 24,5 , 25,5 , 26,5 , 27,5 , 96,5 , 33,5 , 100,5 , 40,2 , 104,15 , 106,5 , 108,5 , 110,5 , 112,5 , 51,2 , 116,5 , 117,5 , 123,2]);
AddSWrd('p', 'prepare', [105,2]);
AddSWrd('p', 'preparing', [128,2 , 63,2]);
AddSWrd('p', 'prepending', [124,5]);
AddSWrd('p', 'preprocessing', [40,22 , 121,4 , 122,4]);
AddSWrd('p', 'prerequisites', [6,32]);
AddSWrd('p', 'presence', [16,5 , 17,10]);
AddSWrd('p', 'present', [32,2 , 13,15 , 16,5 , 17,5 , 49,5 , 20,5 , 21,5 , 22,10 , 118,10 , 23,15 , 119,5 , 24,10 , 25,10 , 26,15 , 27,10]);
AddSWrd('p', 'presented', [12,5 , 13,10]);
AddSWrd('p', 'preserve', [65,2 , 104,10 , 122,2 , 13,10 , 77,10]);
AddSWrd('p', 'preserved', [33,10 , 104,10 , 13,10 , 77,10 , 63,2]);
AddSWrd('p', 'preserves', [104,10]);
AddSWrd('p', 'preserving', [65,2 , 13,10]);
AddSWrd('p', 'prevent', [4,2 , 104,10 , 15,15]);
AddSWrd('p', 'prevents', [37,2 , 77,30]);
AddSWrd('p', 'previous', [82,2 , 77,20]);
AddSWrd('p', 'primarily', [33,10 , 101,2 , 104,10 , 107,2 , 108,5 , 77,10 , 30,2]);
AddSWrd('p', 'primary', [33,10 , 37,2 , 70,2 , 102,2 , 71,2 , 72,2 , 104,35 , 41,2 , 73,2 , 42,20 , 106,5 , 108,5 , 13,10 , 45,10 , 114,5 , 116,5 , 89,2 , 90,2 , 91,2 , 123,2 , 28,2 , 31,5]);
AddSWrd('p', 'prime', [102,4]);
AddSWrd('p', 'prime0', [104,5]);
AddSWrd('p', 'prime_frac', [31,5]);
AddSWrd('p', 'print', [16,5 , 20,5 , 21,5 , 22,5 , 104,120 , 26,5 , 27,5 , 123,2]);
AddSWrd('p', 'print.dc00.txt', [104,15]);
AddSWrd('p', 'print.dc01.txt', [104,5]);
AddSWrd('p', 'print.dc02.txt', [104,5]);
AddSWrd('p', 'print.dc03.txt', [104,5]);
AddSWrd('p', 'print.dc04.txt', [104,5]);
AddSWrd('p', 'print.dc05.txt', [104,5]);
AddSWrd('p', 'print.dc06.txt', [104,5]);
AddSWrd('p', 'print.dc07.txt', [104,5]);
AddSWrd('p', 'print.dc08.txt', [104,5]);
AddSWrd('p', 'print.dc09.txt', [104,5]);
AddSWrd('p', 'print.dc10.txt', [104,5]);
AddSWrd('p', 'printed', [16,10 , 20,10 , 21,10 , 22,10 , 39,2 , 26,10 , 27,10]);
AddSWrd('p', 'prior', [17,5 , 4,4 , 101,2 , 13,40]);
AddSWrd('p', 'problem', [16,5 , 86,4 , 118,10 , 124,5 , 125,15]);
AddSWrd('p', 'problems', [82,2 , 86,30 , 121,2 , 13,30]);
AddSWrd('p', 'procedure', [118,10 , 103,2 , 104,5]);
AddSWrd('p', 'proceeds', [77,10]);
AddSWrd('p', 'process', [129,4 , 66,2 , 130,2 , 4,10 , 132,2 , 5,14 , 135,2 , 9,2 , 138,4 , 13,10 , 77,10 , 17,5 , 21,5 , 22,10 , 23,5 , 24,15 , 25,5 , 27,5 , 30,2 , 31,10 , 36,2 , 101,4 , 104,20 , 105,2 , 106,5 , 112,20 , 122,2 , 59,2 , 123,4 , 60,2]);
AddSWrd('p', 'process-loading', [105,2]);
AddSWrd('p', 'processed', [16,5 , 32,4 , 112,10 , 22,5 , 118,5 , 41,4 , 26,5 , 27,5 , 13,10 , 30,2]);
AddSWrd('p', 'processes', [96,10 , 33,30 , 130,6 , 4,2 , 21,5 , 104,30 , 10,10 , 13,65 , 77,30]);
AddSWrd('p', 'processing', [128,2 , 4,12 , 5,2 , 133,2 , 134,2 , 9,2 , 10,30 , 13,110 , 77,30 , 15,5 , 17,5 , 86,2 , 25,20 , 26,10 , 27,10 , 29,22 , 93,2 , 30,64 , 31,30 , 32,22 , 33,40 , 35,15 , 36,4 , 101,2 , 103,2 , 104,30 , 105,2 , 42,5 , 112,50 , 54,2 , 118,10 , 59,2 , 62,2 , 63,2]);
AddSWrd('p', 'processing_mode', [114,10 , 116,5 , 118,5]);
AddSWrd('p', 'processor', [39,40]);
AddSWrd('p', 'processors', [10,20]);
AddSWrd('p', 'produce', [32,2 , 104,5 , 26,5 , 58,2 , 31,10]);
AddSWrd('p', 'produced', [33,10 , 76,5 , 125,5]);
AddSWrd('p', 'produces', [17,5 , 33,20 , 18,5 , 103,2 , 104,5 , 27,5 , 28,2 , 77,10]);
AddSWrd('p', 'product', [5,2 , 139,2]);
AddSWrd('p', 'products', [4,2 , 5,16 , 39,8]);
AddSWrd('p', 'program', [16,5 , 20,5 , 21,5 , 22,5 , 26,5 , 27,5 , 123,10 , 124,5 , 13,20 , 77,10 , 31,10]);
AddSWrd('p', 'progress', [112,10 , 13,20]);
AddSWrd('p', 'progress_report_interval', [112,15]);
AddSWrd('p', 'proper', [67,2 , 83,10 , 52,2 , 87,2]);
AddSWrd('p', 'properly', [66,2 , 82,2 , 86,2 , 87,2]);
AddSWrd('p', 'properties', [112,10 , 33,10 , 7,5 , 119,5 , 25,5 , 59,2]);
AddSWrd('p', 'property', [34,5 , 27,10]);
AddSWrd('p', 'proprietary', [25,5]);
AddSWrd('p', 'protocol', [104,10 , 13,20]);
AddSWrd('p', 'provide', [103,2 , 41,2 , 58,2 , 43,5 , 13,10 , 77,10 , 30,2]);
AddSWrd('p', 'provided', [101,2 , 40,2 , 104,10 , 25,10]);
AddSWrd('p', 'provides', [32,2 , 33,5 , 4,4 , 101,4 , 104,10 , 77,20 , 14,5 , 79,2 , 26,5 , 27,5 , 59,2 , 29,2 , 94,2 , 31,5]);
AddSWrd('p', 'providing', [32,2 , 33,10 , 4,2 , 21,5 , 104,10 , 13,5 , 77,10]);
AddSWrd('p', 'proximity', [4,2 , 5,2 , 101,2 , 92,2]);
AddSWrd('p', 'pseudo', [37,2 , 70,2 , 102,2 , 71,2 , 72,2 , 104,15 , 41,2 , 73,2 , 106,5 , 108,5 , 45,5 , 114,5 , 89,2 , 90,2 , 91,2 , 31,5]);
AddSWrd('p', 'psm', [5,2]);
AddSWrd('p', 'pto', [28,2]);
AddSWrd('p', 'purpose', [33,10 , 56,2 , 104,10 , 13,5 , 77,10]);
AddSWrd('p', 'purposes', [129,2 , 26,5 , 90,2 , 91,2]);
AddSWrd('p', 'put', [97,5 , 130,2 , 95,6]);
AddSWrd('p', 'pyxis', [104,10]);
AddSWrd('q', 'qualified', [117,10]);
AddSWrd('q', 'quality', [113,2 , 98,2 , 115,2 , 4,6 , 117,20 , 22,5 , 23,5 , 105,2 , 14,10]);
AddSWrd('q', 'quickly', [129,2 , 104,10 , 26,5 , 13,10]);
AddSWrd('q', 'quotation', [7,5]);
AddSWrd('q', 'quoted', [7,10]);
AddSWrd('q', 'quotes', [118,10 , 7,10 , 44,5]);
AddSWrd('r', 'r1_n', [104,25]);
AddSWrd('r', 'r2_n', [104,25]);
AddSWrd('r', 'r_n', [104,10]);
AddSWrd('r', 'radial', [105,2]);
AddSWrd('r', 'radius', [104,40]);
AddSWrd('r', 'raid', [134,4]);
AddSWrd('r', 'raise', [13,5]);
AddSWrd('r', 'raised', [13,5]);
AddSWrd('r', 'ram', [131,34 , 25,10]);
AddSWrd('r', 'ram-enabled', [102,2]);
AddSWrd('r', 'range', [32,10 , 34,10 , 35,290 , 101,2 , 102,4 , 103,2 , 104,20 , 14,5 , 110,30 , 16,10 , 17,5 , 18,5 , 20,5 , 21,5 , 22,10 , 23,5 , 24,10 , 25,30 , 26,10 , 27,10 , 125,5 , 95,14]);
AddSWrd('r', 'ranges', [35,10 , 104,10 , 31,10]);
AddSWrd('r', 'rank', [16,10 , 13,30]);
AddSWrd('r', 'rare', [100,10 , 132,2]);
AddSWrd('r', 'rasterized', [104,10]);
AddSWrd('r', 'rasterizer', [25,10]);
AddSWrd('r', 'rate', [93,2]);
AddSWrd('r', 'rather', [129,2 , 132,2 , 121,2 , 13,20 , 30,2 , 63,2]);
AddSWrd('r', 'ratio', [33,20 , 49,5 , 18,5 , 104,40 , 43,10 , 13,10 , 77,20 , 110,20]);
AddSWrd('r', 'rational', [33,30 , 104,20 , 13,10 , 77,30 , 110,20]);
AddSWrd('r', 'rdb', [33,10 , 103,2 , 104,95]);
AddSWrd('r', 'rds', [25,15 , 28,6]);
AddSWrd('r', 're-fracture', [135,2]);
AddSWrd('r', 're-fracturing', [135,2]);
AddSWrd('r', 're-interpret', [33,10 , 13,5 , 77,10 , 110,10]);
AddSWrd('r', 're-orient', [13,10]);
AddSWrd('r', 're-routes', [119,5]);
AddSWrd('r', 'reached', [16,5]);
AddSWrd('r', 'read', [128,2 , 33,30 , 103,2 , 104,70 , 42,5 , 75,5 , 12,5 , 108,10 , 13,20 , 77,35 , 79,2 , 112,10 , 118,20 , 125,5 , 95,2]);
AddSWrd('r', 'read-access', [13,10]);
AddSWrd('r', 'readability', [13,5]);
AddSWrd('r', 'reading', [33,10 , 4,2 , 104,10 , 108,10 , 124,10 , 13,20 , 45,5 , 77,10 , 125,5]);
AddSWrd('r', 'reads', [96,10 , 17,10 , 114,5 , 4,2 , 104,10 , 92,2]);
AddSWrd('r', 'ready', [6,2]);
AddSWrd('r', 'real', [39,2 , 104,30 , 13,10 , 77,20]);
AddSWrd('r', 'real-life', [64,2]);
AddSWrd('r', 'rearranged', [8,2 , 11,2]);
AddSWrd('r', 'reason', [105,2 , 31,10]);
AddSWrd('r', 'reasonable', [104,10 , 13,5]);
AddSWrd('r', 'reassembled', [30,2]);
AddSWrd('r', 'rebuild', [104,10]);
AddSWrd('r', 'recall', [104,5]);
AddSWrd('r', 'recognize', [13,10]);
AddSWrd('r', 'recommend', [103,2]);
AddSWrd('r', 'recommendations', [130,30 , 134,2 , 126,2 , 127,12]);
AddSWrd('r', 'recommended', [32,2 , 128,2 , 33,10 , 129,2 , 130,2 , 104,10 , 136,6 , 42,5 , 138,4 , 12,15 , 13,5 , 114,5 , 21,10 , 117,10 , 22,5 , 23,10 , 24,20 , 26,5 , 28,2 , 95,8 , 127,2]);
AddSWrd('r', 'recommends', [21,5 , 22,5 , 23,5 , 24,10 , 25,10 , 95,2]);
AddSWrd('r', 'record', [33,10 , 57,2 , 108,10 , 77,10 , 15,5 , 47,2]);
AddSWrd('r', 'records', [16,20 , 26,5 , 74,2 , 27,10]);
AddSWrd('r', 'recreated', [110,10]);
AddSWrd('r', 'rectangle', [49,10 , 34,45 , 100,5 , 57,4 , 13,10 , 77,20 , 109,2 , 110,5]);
AddSWrd('r', 'rectangles', [49,10 , 34,10 , 100,10 , 14,20]);
AddSWrd('r', 'rectangular', [16,5 , 100,60 , 8,2 , 104,40 , 11,2 , 12,5]);
AddSWrd('r', 'red', [38,2 , 57,2]);
AddSWrd('r', 'redirecting', [55,2]);
AddSWrd('r', 'reduce', [33,10 , 131,38 , 4,2 , 132,2 , 104,20 , 25,5 , 26,5 , 27,5 , 77,10 , 14,10 , 15,5]);
AddSWrd('r', 'reduce_run_time', [16,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 26,5 , 14,5 , 15,5]);
AddSWrd('r', 'reduce_shot_count', [16,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 26,5 , 14,5 , 15,5]);
AddSWrd('r', 'reduced', [26,5]);
AddSWrd('r', 'reduces', [33,10 , 132,2 , 21,5 , 23,5 , 24,10 , 13,5 , 14,10]);
AddSWrd('r', 'reducing', [131,6 , 13,5]);
AddSWrd('r', 'reduction', [105,2 , 14,15]);
AddSWrd('r', 'redundancies', [30,2]);
AddSWrd('r', 'redundancy', [134,2]);
AddSWrd('r', 'redundant', [13,10]);
AddSWrd('r', 'ref', [21,5 , 22,5 , 23,5 , 24,30]);
AddSWrd('r', 'ref.x', [21,5 , 22,10 , 23,5 , 24,15]);
AddSWrd('r', 'refer', [4,4 , 132,4 , 6,4 , 134,2 , 8,2 , 136,2 , 9,4 , 137,2 , 10,20 , 138,2 , 13,15 , 77,30 , 15,10 , 16,10 , 17,10 , 18,10 , 82,2 , 20,10 , 21,15 , 22,10 , 23,20 , 87,2 , 24,20 , 25,10 , 26,10 , 27,10 , 31,10 , 33,30 , 97,5 , 36,2 , 102,2 , 103,2 , 40,2 , 104,10 , 42,5 , 47,2 , 111,2 , 48,2 , 49,5 , 114,5 , 55,2 , 56,2 , 59,2 , 124,5 , 61,2 , 125,5 , 63,2 , 127,2]);
AddSWrd('r', 'reference', [33,20 , 129,2 , 4,6 , 36,2 , 5,16 , 102,2 , 134,2 , 104,10 , 12,5 , 13,10 , 50,5 , 114,5 , 23,5 , 56,4 , 57,8 , 58,36 , 59,2]);
AddSWrd('r', 'referenced', [33,10 , 22,5 , 24,5 , 12,5 , 44,5]);
AddSWrd('r', 'references', [44,5]);
AddSWrd('r', 'referred', [118,5 , 105,2 , 13,10]);
AddSWrd('r', 'referring', [21,5 , 22,10 , 23,5 , 24,15]);
AddSWrd('r', 'refers', [57,4 , 13,5 , 79,2]);
AddSWrd('r', 'reflect', [4,2 , 39,2 , 135,2 , 79,2]);
AddSWrd('r', 'reflections', [104,10]);
AddSWrd('r', 'reformat', [96,5]);
AddSWrd('r', 'regardless', [16,5 , 18,5 , 100,10 , 22,5 , 10,10 , 26,5 , 42,5 , 27,5 , 12,5 , 77,30 , 14,10 , 78,2]);
AddSWrd('r', 'region', [65,2 , 66,6 , 12,35 , 13,115 , 77,170 , 78,38 , 15,5 , 79,8 , 16,5 , 80,4 , 81,4 , 82,6 , 20,5 , 84,6 , 21,5 , 85,4 , 22,5 , 86,32 , 87,40 , 25,40 , 26,5 , 27,5 , 28,2 , 30,2 , 31,10 , 33,45 , 34,5 , 35,10 , 100,30 , 104,30 , 105,20 , 106,10 , 112,20 , 49,5 , 121,4 , 122,22 , 59,2 , 61,16 , 125,5 , 62,12]);
AddSWrd('r', 'regions', [104,10 , 105,12 , 106,15 , 12,20 , 112,10 , 49,20 , 82,12 , 22,5 , 23,5 , 25,20 , 59,2 , 61,54 , 62,14]);
AddSWrd('r', 'registered', [4,4 , 13,5]);
AddSWrd('r', 'registration', [92,2]);
AddSWrd('r', 'regulate', [12,5]);
AddSWrd('r', 'related', [96,5 , 5,16 , 86,2 , 59,2 , 13,5 , 45,5]);
AddSWrd('r', 'relates', [57,2 , 60,4]);
AddSWrd('r', 'relating', [33,10 , 101,2 , 107,2 , 77,10]);
AddSWrd('r', 'relationship', [112,20 , 104,10 , 13,5]);
AddSWrd('r', 'relationships', [65,2 , 122,2]);
AddSWrd('r', 'relative', [100,5 , 104,10 , 105,2 , 12,5 , 13,10 , 77,10 , 79,4 , 17,5 , 23,5 , 87,4 , 120,2 , 25,10 , 57,12 , 121,8 , 58,2 , 122,2 , 63,2]);
AddSWrd('r', 'relaxing', [133,2]);
AddSWrd('r', 'release', [5,6]);
AddSWrd('r', 'releases', [21,5]);
AddSWrd('r', 'relevant', [52,2]);
AddSWrd('r', 'relying', [129,2]);
AddSWrd('r', 'remaining', [20,20 , 21,10 , 22,10 , 23,10 , 24,20 , 77,10]);
AddSWrd('r', 'remains', [38,2]);
AddSWrd('r', 'remedy', [125,5]);
AddSWrd('r', 'remember', [81,2]);
AddSWrd('r', 'remote', [33,20 , 131,4 , 104,50 , 136,4 , 10,20 , 13,85 , 77,30 , 20,10 , 21,25 , 119,5 , 25,20 , 123,4 , 28,4]);
AddSWrd('r', 'remote_direct_merge', [21,10]);
AddSWrd('r', 'remotes', [131,4 , 20,5 , 21,5 , 119,5 , 104,10 , 136,2 , 123,2 , 13,55]);
AddSWrd('r', 'remove', [36,2 , 37,2 , 125,5]);
AddSWrd('r', 'removed', [32,2 , 36,4 , 75,5 , 125,5 , 30,2]);
AddSWrd('r', 'repeatability', [4,2]);
AddSWrd('r', 'repeated', [132,2 , 104,10]);
AddSWrd('r', 'replace', [65,2 , 34,5 , 36,6 , 122,2 , 31,10]);
AddSWrd('r', 'replaced', [33,10 , 21,5 , 118,5 , 104,20 , 13,10 , 77,10 , 31,10]);
AddSWrd('r', 'report', [33,5 , 54,2 , 70,2 , 39,2 , 71,2 , 104,30 , 41,2 , 73,2 , 89,2 , 76,10 , 13,20 , 45,20]);
AddSWrd('r', 'report.convolve_ring', [104,5]);
AddSWrd('r', 'reported', [104,10 , 123,2 , 28,2 , 124,5]);
AddSWrd('r', 'reporting', [17,5 , 33,10 , 99,30 , 100,10 , 56,2 , 45,30 , 77,10]);
AddSWrd('r', 'reports', [99,2 , 100,40 , 71,2 , 72,2 , 104,20 , 41,2 , 13,10]);
AddSWrd('r', 'represent', [86,2 , 56,4 , 104,5]);
AddSWrd('r', 'representation', [21,5 , 23,5 , 87,2 , 103,4 , 24,10 , 104,5]);
AddSWrd('r', 'representations', [104,5]);
AddSWrd('r', 'represented', [26,5 , 27,5 , 14,10]);
AddSWrd('r', 'representing', [104,30]);
AddSWrd('r', 'represents', [104,10 , 57,2 , 26,5 , 27,5]);
AddSWrd('r', 'reprocessed', [13,10]);
AddSWrd('r', 'requested', [8,2 , 10,20 , 11,2 , 30,2]);
AddSWrd('r', 'require', [112,10 , 82,2 , 35,15 , 28,2 , 77,10 , 125,5]);
AddSWrd('r', 'required', [5,2 , 6,4 , 7,5 , 10,30 , 12,5 , 13,50 , 77,130 , 15,35 , 16,10 , 17,15 , 18,15 , 20,15 , 21,15 , 22,15 , 23,15 , 24,50 , 25,20 , 26,10 , 27,20 , 31,20 , 96,70 , 33,40 , 34,15 , 35,10 , 100,35 , 103,2 , 104,90 , 42,15 , 106,60 , 108,30 , 110,30 , 48,6 , 112,70 , 115,2 , 116,40 , 117,50 , 118,45 , 119,20 , 121,2 , 63,2]);
AddSWrd('r', 'requirement', [34,5]);
AddSWrd('r', 'requirements', [96,10 , 33,10 , 4,2 , 100,5 , 8,4 , 104,10 , 106,10 , 12,5 , 108,10 , 13,10 , 77,10 , 14,10 , 110,10 , 79,2 , 80,2 , 112,10 , 114,5 , 25,10 , 28,2 , 125,5]);
AddSWrd('r', 'requires', [33,30 , 65,2 , 130,2 , 35,5 , 135,2 , 104,25 , 105,2 , 106,5 , 12,5 , 13,15 , 77,40 , 110,10 , 111,2 , 16,5 , 112,20 , 17,5 , 22,5 , 25,10 , 26,10 , 27,5]);
AddSWrd('r', 'reserved', [44,5]);
AddSWrd('r', 'reset', [22,5 , 23,5 , 24,10]);
AddSWrd('r', 'reshape', [34,10]);
AddSWrd('r', 'resides', [96,10]);
AddSWrd('r', 'resize', [105,4 , 106,10]);
AddSWrd('r', 'resized', [105,4]);
AddSWrd('r', 'resizes', [105,6]);
AddSWrd('r', 'resizing', [106,5]);
AddSWrd('r', 'resolution', [49,15 , 36,2 , 5,2 , 70,2 , 71,2 , 72,2 , 41,2 , 43,20 , 13,5 , 110,10]);
AddSWrd('r', 'respect', [17,5 , 13,10]);
AddSWrd('r', 'respective', [10,10 , 106,10]);
AddSWrd('r', 'respectively', [16,5 , 33,30 , 18,5 , 4,2 , 104,10 , 31,10]);
AddSWrd('r', 'responds', [46,5]);
AddSWrd('r', 'response', [105,2 , 106,5]);
AddSWrd('r', 'restricted', [16,5 , 104,10 , 13,5]);
AddSWrd('r', 'restrictions', [128,2 , 33,10 , 104,20 , 12,10 , 13,20 , 110,10 , 15,20 , 24,10 , 26,5 , 27,5 , 28,2 , 92,2 , 125,5]);
AddSWrd('r', 'result', [32,4 , 33,10 , 129,2 , 34,10 , 35,20 , 104,70 , 13,5 , 45,5 , 77,10 , 82,2 , 117,10 , 119,5 , 56,6 , 121,4 , 122,2 , 123,2]);
AddSWrd('r', 'resultant', [96,20]);
AddSWrd('r', 'resulting', [100,5 , 104,10 , 12,5 , 77,10 , 47,2 , 16,5 , 49,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,20 , 121,2]);
AddSWrd('r', 'results', [128,2 , 4,6 , 8,2 , 137,2 , 13,10 , 14,20 , 17,5 , 20,5 , 21,5 , 28,2 , 30,2 , 31,20 , 33,60 , 35,20 , 37,6 , 38,6 , 41,4 , 45,135 , 50,10 , 52,20 , 53,40 , 54,32 , 58,4 , 59,2 , 63,2 , 70,4 , 71,4 , 72,4 , 73,4 , 76,10 , 77,40 , 79,4 , 81,4 , 86,2 , 89,12 , 90,4 , 91,4 , 97,30 , 99,8 , 102,4 , 103,2 , 104,105 , 106,10 , 108,35 , 114,20 , 116,20 , 117,20 , 120,2 , 125,5]);
AddSWrd('r', 'ret', [34,5 , 35,5 , 5,2 , 10,20 , 59,2 , 28,2]);
AddSWrd('r', 'retain', [33,10 , 120,2 , 122,2 , 13,5 , 77,10 , 110,10]);
AddSWrd('r', 'return', [52,2 , 104,10 , 59,4 , 12,5 , 62,34]);
AddSWrd('r', 'returned', [32,2 , 52,2 , 116,10 , 86,2 , 118,10 , 125,5 , 62,2]);
AddSWrd('r', 'returning', [32,2 , 59,2]);
AddSWrd('r', 'returns', [32,2 , 65,2 , 104,20 , 57,2 , 122,2 , 76,5 , 62,2]);
AddSWrd('r', 'reusability', [129,2]);
AddSWrd('r', 'reusable', [96,10 , 112,10 , 33,10 , 100,5 , 104,10 , 106,10 , 12,10 , 108,10 , 77,10 , 110,10]);
AddSWrd('r', 'reuse', [132,4 , 104,10 , 12,5 , 13,5]);
AddSWrd('r', 'reused', [33,10 , 104,10 , 13,5 , 77,10]);
AddSWrd('r', 'rev_tone', [77,20]);
AddSWrd('r', 'reversal', [66,4 , 77,10]);
AddSWrd('r', 'reverse', [82,2 , 100,10 , 13,20 , 77,50 , 14,20 , 79,4]);
AddSWrd('r', 'reverse-tone', [104,20 , 14,10]);
AddSWrd('r', 'reverse_tone', [66,2 , 68,2 , 13,10 , 77,25 , 15,5 , 79,6 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('r', 'reversed', [80,2 , 79,2]);
AddSWrd('r', 'reverses', [89,2 , 79,6]);
AddSWrd('r', 'reversing', [66,2]);
AddSWrd('r', 'right', [96,20 , 33,30 , 36,2 , 100,10 , 104,50 , 106,10 , 12,30 , 108,10 , 13,20 , 77,50 , 109,4 , 110,10 , 15,5 , 16,5 , 112,10 , 20,5 , 21,5 , 25,20 , 121,2 , 31,40]);
AddSWrd('r', 'right-angle', [61,6]);
AddSWrd('r', 'right-brackets', [33,10 , 104,20 , 13,10 , 77,10 , 31,10]);
AddSWrd('r', 'right-hand', [104,10]);
AddSWrd('r', 'ring', [104,15 , 106,5 , 122,2]);
AddSWrd('r', 'ring.oas', [104,5]);
AddSWrd('r', 'ring_mapsize_output.oas', [106,5]);
AddSWrd('r', 'rmax', [104,35]);
AddSWrd('r', 'rmax_n', [104,35]);
AddSWrd('r', 'rmin', [104,35]);
AddSWrd('r', 'rmin_n', [104,15]);
AddSWrd('r', 'role', [77,10]);
AddSWrd('r', 'roll-off', [104,30]);
AddSWrd('r', 'rotate', [68,32 , 100,35 , 13,20 , 77,85 , 15,5 , 79,14 , 16,5 , 17,5 , 81,4 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 90,6 , 27,5 , 91,6]);
AddSWrd('r', 'rotate1', [77,15]);
AddSWrd('r', 'rotate2', [77,15]);
AddSWrd('r', 'rotated', [80,2 , 13,10]);
AddSWrd('r', 'rotation', [100,25 , 5,2 , 13,30 , 77,75 , 31,10 , 79,10]);
AddSWrd('r', 'rounded', [17,10 , 61,4]);
AddSWrd('r', 'rounding', [31,10]);
AddSWrd('r', 'rows', [27,5]);
AddSWrd('r', 'rule', [4,6 , 132,2 , 5,4 , 8,8 , 9,2 , 10,20 , 138,2 , 11,2 , 12,10 , 13,55 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 26,5 , 27,5 , 28,6 , 30,2 , 31,90 , 32,2 , 33,85 , 34,5 , 35,5 , 36,44 , 40,2 , 41,4 , 42,5 , 48,2 , 49,5 , 53,2 , 55,2 , 56,2 , 59,4 , 63,2 , 76,5 , 77,80 , 82,2 , 88,2 , 96,10 , 100,20 , 103,2 , 104,50 , 106,5 , 110,10 , 112,5 , 114,5 , 116,15 , 125,5]);
AddSWrd('r', 'rule-based', [4,8 , 101,20 , 102,2]);
AddSWrd('r', 'rule_file', [10,20]);
AddSWrd('r', 'rulecheck', [33,20 , 99,6 , 76,5 , 45,15 , 77,20]);
AddSWrd('r', 'rulechecks', [42,5]);
AddSWrd('r', 'rules', [112,15 , 35,5 , 36,2 , 100,10 , 37,2 , 104,10 , 10,15 , 12,5 , 13,5]);
AddSWrd('r', 'rules.frac.tst.results.gds', [73,2]);
AddSWrd('r', 'rules.frac.tst.summary.txt', [73,2]);
AddSWrd('r', 'run', [129,2 , 130,34 , 132,4 , 5,2 , 136,2 , 10,30 , 75,5 , 13,30 , 77,20 , 14,25 , 79,2 , 17,20 , 20,5 , 21,15 , 22,5 , 23,5 , 24,10 , 25,5 , 28,10 , 95,2 , 32,2 , 96,5 , 33,30 , 36,2 , 100,5 , 37,4 , 39,2 , 104,30 , 44,15 , 111,2 , 54,2 , 55,2 , 119,5 , 123,12 , 124,5 , 125,5]);
AddSWrd('r', 'running', [129,2 , 114,5 , 100,5 , 39,6 , 104,5 , 13,10 , 77,10]);
AddSWrd('r', 'runs', [10,40 , 28,32 , 31,10]);
AddSWrd('r', 'runtime', [22,5 , 54,4 , 118,10 , 23,5 , 55,2 , 104,10 , 10,10 , 138,2 , 28,2 , 124,20 , 13,25 , 125,5]);
AddSWrd('r', 'runtime_exception_severity', [18,10 , 20,20 , 21,10 , 22,10 , 23,10 , 24,15 , 77,15]);
AddSWrd('r', 'rve', [5,4 , 104,10]);
AddSWrd('s', 's0:', [99,2]);
AddSWrd('s', 's1:', [99,2]);
AddSWrd('s', 's_n', [104,15]);
AddSWrd('s', 'sample', [88,2 , 104,10]);
AddSWrd('s', 'sample-chip', [20,5 , 21,5]);
AddSWrd('s', 'sample.gds', [89,2 , 90,2 , 91,2]);
AddSWrd('s', 'sample.oas', [31,5]);
AddSWrd('s', 'samplepol.pf', [31,5]);
AddSWrd('s', 'samples', [104,10]);
AddSWrd('s', 'samplet', [70,24]);
AddSWrd('s', 'san', [4,2]);
AddSWrd('s', 'satisfies', [16,5 , 48,2 , 103,2 , 25,10 , 26,5 , 27,5 , 61,2]);
AddSWrd('s', 'satisfy', [48,2 , 20,5 , 24,10 , 104,15]);
AddSWrd('s', 'satisfying', [104,10]);
AddSWrd('s', 'saturating', [28,2]);
AddSWrd('s', 'save', [55,2 , 103,2 , 44,5 , 45,5]);
AddSWrd('s', 'saved', [89,2 , 45,5]);
AddSWrd('s', 'saves', [54,2 , 104,10 , 45,5]);
AddSWrd('s', 'saving', [103,2 , 41,2 , 45,10]);
AddSWrd('s', 'savings', [104,10]);
AddSWrd('s', 'sb_value', [106,15]);
AddSWrd('s', 'sbar', [13,50]);
AddSWrd('s', 'sbars', [13,10]);
AddSWrd('s', 'scalability', [32,2 , 4,2 , 136,2 , 10,10 , 13,10 , 21,10 , 22,5 , 23,5 , 24,10 , 25,10 , 27,5 , 28,2 , 30,2 , 127,2]);
AddSWrd('s', 'scale', [96,20 , 33,90 , 132,6 , 103,4 , 104,160 , 12,5 , 13,35 , 77,80 , 14,15 , 110,10 , 15,10 , 79,2 , 16,5 , 18,20 , 20,30 , 21,45 , 85,2 , 22,45 , 23,45 , 24,80 , 90,2 , 91,2 , 31,60 , 95,24]);
AddSWrd('s', 'scaled', [80,2 , 13,10]);
AddSWrd('s', 'scales', [102,2 , 13,5 , 110,10]);
AddSWrd('s', 'scaling', [5,2 , 104,10 , 10,20 , 12,5 , 13,20]);
AddSWrd('s', 'scattering', [5,2 , 102,4]);
AddSWrd('s', 'scenario', [77,10]);
AddSWrd('s', 'scheme', [100,10]);
AddSWrd('s', 'scope', [110,10]);
AddSWrd('s', 'screen', [13,10]);
AddSWrd('s', 'script', [97,5 , 104,5 , 94,2]);
AddSWrd('s', 'script-based', [4,2]);
AddSWrd('s', 'scripting', [12,5]);
AddSWrd('s', 'scripts', [119,5]);
AddSWrd('s', 'seamless', [5,2]);
AddSWrd('s', 'seamlessly', [4,2]);
AddSWrd('s', 'search', [33,10 , 104,10]);
AddSWrd('s', 'searched', [33,10 , 104,10 , 13,15 , 77,10]);
AddSWrd('s', 'sec', [28,2]);
AddSWrd('s', 'sec_value', [33,15 , 108,15]);
AddSWrd('s', 'second', [33,55 , 38,2 , 103,2 , 135,2 , 75,5 , 60,6 , 61,2 , 77,90]);
AddSWrd('s', 'secondary', [33,10 , 34,15 , 35,10 , 104,10 , 77,10]);
AddSWrd('s', 'seconds', [112,20]);
AddSWrd('s', 'section', [128,2 , 131,2 , 68,2 , 133,2 , 134,2 , 8,2 , 9,2 , 11,2 , 12,15 , 13,100 , 77,100 , 15,5 , 16,20 , 17,20 , 18,10 , 20,5 , 21,5 , 22,10 , 23,10 , 24,15 , 25,80 , 26,10 , 27,25 , 28,2 , 30,16 , 31,60 , 32,26 , 96,10 , 33,90 , 34,5 , 35,60 , 99,6 , 36,16 , 100,10 , 102,2 , 104,50 , 105,4 , 106,10 , 108,20 , 110,20 , 112,20 , 114,5 , 118,10]);
AddSWrd('s', 'section-based', [32,6 , 33,20 , 35,5 , 4,10 , 36,2 , 5,4 , 133,2 , 13,50 , 77,10 , 17,5 , 20,5 , 21,5 , 22,5 , 23,5 , 25,10 , 27,5 , 29,22 , 30,50 , 31,5]);
AddSWrd('s', 'section-centric', [32,2]);
AddSWrd('s', 'section-order-independent', [18,5]);
AddSWrd('s', 'section-processing', [105,2 , 13,5]);
AddSWrd('s', 'section_count_limit', [16,10 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 26,5 , 27,5 , 13,15 , 15,5]);
AddSWrd('s', 'section_density', [25,15 , 27,10]);
AddSWrd('s', 'section_size', [32,4 , 112,40 , 33,20 , 131,2 , 104,15 , 108,25]);
AddSWrd('s', 'section_width', [22,20 , 23,20 , 24,35]);
AddSWrd('s', 'sectioning', [32,12]);
AddSWrd('s', 'sections', [32,6 , 33,10 , 36,2 , 103,2 , 136,2 , 41,2 , 12,10 , 13,5 , 77,10 , 15,10 , 16,10 , 17,10 , 18,10 , 20,10 , 21,15 , 22,15 , 23,15 , 24,20 , 26,15 , 27,15 , 59,2 , 30,2]);
AddSWrd('s', 'segment', [48,2 , 17,5 , 100,10 , 105,2 , 106,10 , 13,10]);
AddSWrd('s', 'segments', [48,2 , 17,25 , 100,10 , 56,2 , 13,10 , 47,2]);
AddSWrd('s', 'select', [48,8 , 103,2 , 47,2]);
AddSWrd('s', 'selected', [25,10 , 105,2 , 58,4 , 106,5 , 13,10 , 61,8]);
AddSWrd('s', 'selection', [4,2 , 100,5]);
AddSWrd('s', 'selective', [5,2]);
AddSWrd('s', 'selector', [48,14 , 47,2]);
AddSWrd('s', 'selectors', [48,36]);
AddSWrd('s', 'selects', [48,16]);
AddSWrd('s', 'semi', [4,4]);
AddSWrd('s', 'semiconductor', [4,2]);
AddSWrd('s', 'sends', [55,2]);
AddSWrd('s', 'sensitive', [104,10]);
AddSWrd('s', 'sent', [131,2 , 104,40]);
AddSWrd('s', 'sep', [117,15]);
AddSWrd('s', 'separate', [33,20 , 130,4 , 4,2 , 37,2 , 134,2 , 104,20 , 13,5 , 111,2 , 16,5 , 116,10 , 22,5 , 24,5 , 30,2]);
AddSWrd('s', 'separately', [16,5 , 22,5 , 10,10 , 26,5 , 27,5 , 28,2 , 13,10]);
AddSWrd('s', 'separates', [104,5]);
AddSWrd('s', 'separation', [48,6 , 59,6 , 61,2]);
AddSWrd('s', 'sequence', [32,2 , 100,5 , 58,8 , 92,2 , 77,20 , 30,2 , 79,2]);
AddSWrd('s', 'sequencing', [31,10]);
AddSWrd('s', 'sequential', [33,10]);
AddSWrd('s', 'sequentially', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('s', 'series', [3,2 , 104,10]);
AddSWrd('s', 'serve', [59,2 , 75,5]);
AddSWrd('s', 'server', [25,10]);
AddSWrd('s', 'servers', [28,2]);
AddSWrd('s', 'setenv', [17,10]);
AddSWrd('s', 'setlayer', [114,25 , 115,2 , 116,20 , 117,135 , 118,10 , 119,5]);
AddSWrd('s', 'sets', [33,20 , 104,20 , 105,2 , 13,15 , 81,26 , 84,2 , 21,5 , 85,4 , 22,10 , 23,10 , 87,2 , 24,10 , 27,5]);
AddSWrd('s', 'setting', [134,2 , 10,10 , 12,10 , 13,65 , 77,110 , 14,10 , 15,35 , 79,2 , 16,10 , 17,25 , 18,10 , 82,2 , 20,10 , 21,30 , 22,10 , 23,25 , 24,50 , 25,10 , 26,15 , 27,5 , 31,30 , 33,120 , 100,10 , 104,50 , 112,10]);
AddSWrd('s', 'setting.edges', [23,5]);
AddSWrd('s', 'settings', [16,25 , 80,2 , 33,10 , 18,5 , 133,32 , 103,4 , 104,10 , 89,2 , 12,5 , 13,15 , 15,5 , 31,10]);
AddSWrd('s', 'setup', [33,20 , 114,65 , 115,2 , 116,10 , 118,40 , 119,5 , 41,10 , 12,5]);
AddSWrd('s', 'seven.the', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('s', 'several', [128,2 , 33,30 , 132,2 , 7,5 , 40,2 , 104,20 , 12,5 , 13,10 , 77,20 , 14,5 , 110,10 , 19,2 , 52,2 , 88,2]);
AddSWrd('s', 'severe', [124,10]);
AddSWrd('s', 'severely', [32,2 , 105,2]);
AddSWrd('s', 'shaded', [14,50]);
AddSWrd('s', 'shadowing', [104,20]);
AddSWrd('s', 'shallow', [128,2 , 13,20 , 77,10]);
AddSWrd('s', 'shape', [33,20 , 102,2 , 7,5 , 105,2 , 121,2 , 13,5 , 61,4 , 77,20 , 110,10 , 63,2 , 79,8]);
AddSWrd('s', 'shapes', [33,20 , 105,2 , 137,2]);
AddSWrd('s', 'share', [48,2 , 57,2]);
AddSWrd('s', 'sharp', [105,2]);
AddSWrd('s', 'shell', [36,2 , 7,5 , 55,2 , 135,2]);
AddSWrd('s', 'shift', [5,2 , 13,40 , 77,320 , 78,36 , 79,2 , 16,5 , 17,5 , 81,2 , 18,35 , 82,2 , 83,14 , 20,5 , 84,38 , 21,5 , 85,46 , 22,5 , 86,10 , 23,5 , 87,4 , 24,5 , 26,5 , 27,5 , 34,15 , 100,25 , 122,4 , 125,5]);
AddSWrd('s', 'shift_origin_ll', [18,20]);
AddSWrd('s', 'shifted', [80,2 , 18,10 , 85,6 , 25,5 , 121,2 , 79,2]);
AddSWrd('s', 'shifting', [18,5 , 82,4 , 83,2 , 84,12 , 132,2 , 86,32 , 87,2 , 121,2 , 122,12 , 77,10]);
AddSWrd('s', 'shifts', [18,5 , 4,2 , 84,2 , 100,5 , 13,10]);
AddSWrd('s', 'short', [32,2]);
AddSWrd('s', 'short-range', [102,2]);
AddSWrd('s', 'shorter', [100,10]);
AddSWrd('s', 'shortly', [13,10]);
AddSWrd('s', 'shot', [16,10 , 113,2 , 4,2 , 117,5 , 23,5 , 105,2 , 13,30 , 14,35]);
AddSWrd('s', 'shot_count_stats', [114,5 , 23,10]);
AddSWrd('s', 'shot_size', [16,5 , 18,5 , 114,5 , 20,5 , 21,40 , 133,4 , 22,40 , 23,60 , 26,5 , 27,5 , 14,10 , 15,5]);
AddSWrd('s', 'shots', [27,15]);
AddSWrd('s', 'show', [20,5 , 21,5 , 22,5 , 7,5 , 23,5 , 103,2 , 104,10 , 57,2 , 15,5]);
AddSWrd('s', 'showing', [36,2 , 103,2]);
AddSWrd('s', 'shown', [81,4 , 38,6 , 121,2 , 75,5 , 12,5]);
AddSWrd('s', 'shows', [33,5 , 103,4 , 104,10 , 41,2 , 105,6 , 14,20 , 82,2 , 57,6 , 121,2 , 58,2 , 59,2 , 60,2 , 61,2 , 63,6]);
AddSWrd('s', 'shrink', [49,5 , 65,28 , 34,5 , 122,4 , 13,10]);
AddSWrd('s', 'shrink-wrapped', [32,2]);
AddSWrd('s', 'shrinking', [65,2 , 122,16 , 79,2]);
AddSWrd('s', 'shrinks', [49,5]);
AddSWrd('s', 'side', [16,5 , 48,4 , 100,40 , 104,20 , 57,4 , 105,2 , 59,4 , 60,6 , 13,5 , 77,10 , 15,5 , 47,2]);
AddSWrd('s', 'side-effect', [121,2]);
AddSWrd('s', 'sides', [16,10 , 48,4 , 100,40 , 59,4 , 60,2]);
AddSWrd('s', 'siemens', [21,5 , 22,5 , 23,5 , 119,5 , 24,10 , 25,10]);
AddSWrd('s', 'sigma', [104,10]);
AddSWrd('s', 'sigmas', [104,10]);
AddSWrd('s', 'sign', [12,5 , 13,5]);
AddSWrd('s', 'significant', [104,10 , 44,5]);
AddSWrd('s', 'significantly', [117,10 , 26,5]);
AddSWrd('s', 'similar', [20,5 , 132,2 , 21,10 , 22,20 , 23,15 , 24,25 , 104,15 , 26,5 , 27,10 , 62,2]);
AddSWrd('s', 'similarly', [103,2 , 110,10]);
AddSWrd('s', 'simple', [65,14 , 59,2 , 63,14]);
AddSWrd('s', 'simple.oas', [37,2]);
AddSWrd('s', 'simply', [77,10]);
AddSWrd('s', 'simulate', [134,2]);
AddSWrd('s', 'simulating', [4,2]);
AddSWrd('s', 'simulation', [104,10]);
AddSWrd('s', 'simulator', [4,2 , 104,10]);
AddSWrd('s', 'simultaneous', [130,2]);
AddSWrd('s', 'simultaneously', [79,2]);
AddSWrd('s', 'single', [131,2 , 4,2 , 68,2 , 7,5 , 9,2 , 10,10 , 12,5 , 13,35 , 77,50 , 15,5 , 16,10 , 17,5 , 18,5 , 22,5 , 24,5 , 25,5 , 92,2 , 31,20 , 96,5 , 33,80 , 104,65 , 42,5 , 43,5 , 107,2 , 44,5 , 108,5 , 47,2 , 118,10 , 119,5 , 57,2]);
AddSWrd('s', 'singular', [33,10]);
AddSWrd('s', 'situation', [20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 121,2 , 26,5 , 27,5 , 125,5 , 63,2]);
AddSWrd('s', 'situations', [84,2 , 121,2 , 123,2 , 12,5]);
AddSWrd('s', 'size', [128,2 , 65,10 , 131,32 , 132,4 , 138,4 , 12,30 , 13,40 , 77,225 , 14,15 , 15,80 , 79,8 , 16,95 , 80,2 , 17,40 , 18,25 , 82,4 , 20,65 , 21,85 , 22,60 , 23,65 , 24,120 , 25,55 , 26,75 , 27,70 , 94,2 , 31,15 , 32,10 , 96,40 , 33,100 , 34,10 , 37,6 , 102,6 , 103,4 , 104,130 , 105,2 , 106,30 , 43,10 , 108,20 , 110,10 , 112,70 , 49,15 , 118,45 , 121,10 , 122,8 , 125,5 , 63,56]);
AddSWrd('s', 'size_in_mbs', [77,35]);
AddSWrd('s', 'size_multiplier', [128,2 , 33,40 , 104,35 , 13,15 , 77,35 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('s', 'size_value', [106,30 , 77,25]);
AddSWrd('s', 'size_value_1', [106,15]);
AddSWrd('s', 'size_value_n', [106,15]);
AddSWrd('s', 'sized', [33,30 , 49,5 , 65,2 , 102,4 , 105,2 , 30,2 , 31,10 , 63,2]);
AddSWrd('s', 'sized.oas', [33,10]);
AddSWrd('s', 'sized_layer', [65,2 , 122,2]);
AddSWrd('s', 'sizes', [33,20 , 18,5 , 130,2 , 21,5 , 22,5 , 23,5 , 24,20 , 104,20 , 121,2 , 15,5 , 63,2]);
AddSWrd('s', 'sizing', [49,10 , 65,32 , 5,2 , 120,22 , 105,6 , 121,48 , 106,5 , 122,50 , 77,10 , 63,30]);
AddSWrd('s', 'skew', [4,2 , 132,2 , 22,10 , 23,10 , 41,2 , 28,4 , 46,20 , 31,10]);
AddSWrd('s', 'skew_approximation_mode', [22,10 , 23,10]);
AddSWrd('s', 'skew_error', [20,15 , 21,15 , 22,15 , 23,15 , 15,15]);
AddSWrd('s', 'skewed', [13,10]);
AddSWrd('s', 'skip', [104,15]);
AddSWrd('s', 'skipped', [104,10]);
AddSWrd('s', 'skips', [95,2]);
AddSWrd('s', 'slanted', [7,5]);
AddSWrd('s', 'slash', [96,10 , 112,10 , 33,10 , 97,5 , 100,10 , 104,10 , 106,10 , 12,15 , 108,10 , 77,20 , 110,10 , 31,10]);
AddSWrd('s', 'slight', [13,10]);
AddSWrd('s', 'slightly', [57,2]);
AddSWrd('s', 'sliver', [100,10]);
AddSWrd('s', 'sllows', [33,10]);
AddSWrd('s', 'slow', [13,20]);
AddSWrd('s', 'slower', [33,10]);
AddSWrd('s', 'small', [32,2 , 128,2 , 33,20 , 98,2 , 99,2 , 100,35 , 102,4 , 104,10 , 138,2 , 13,25 , 77,10 , 14,10 , 15,5 , 16,5 , 113,2 , 21,5 , 117,5 , 22,5 , 23,5 , 24,10 , 57,4 , 26,10 , 27,5]);
AddSWrd('s', 'small-outside', [100,20]);
AddSWrd('s', 'small_figure_size', [23,10]);
AddSWrd('s', 'small_value', [69,2 , 133,2 , 70,4 , 13,10 , 14,10 , 15,5 , 16,5 , 18,5 , 114,5 , 20,5 , 21,5 , 22,5 , 23,10 , 26,5 , 27,5]);
AddSWrd('s', 'smaller', [128,2 , 33,15 , 100,20 , 104,30 , 138,2 , 15,5 , 81,2 , 21,5 , 117,30 , 22,5 , 23,5 , 24,10 , 25,10 , 63,2]);
AddSWrd('s', 'smallest', [100,10 , 21,5 , 22,5 , 23,5 , 24,10 , 138,4 , 79,12]);
AddSWrd('s', 'smalloutsidetrap', [99,2 , 100,75]);
AddSWrd('s', 'smalltrap', [100,35]);
AddSWrd('s', 'smart_boundary', [25,35]);
AddSWrd('s', 'smashing', [4,2 , 102,2]);
AddSWrd('s', 'snap', [49,10 , 34,5 , 132,2]);
AddSWrd('s', 'snapped', [121,2]);
AddSWrd('s', 'snapping', [17,15 , 132,2 , 121,28 , 12,5 , 13,10 , 77,10 , 15,20 , 63,2 , 79,6]);
AddSWrd('s', 'snapping-related', [17,5]);
AddSWrd('s', 'snaps', [49,10 , 121,4 , 63,2]);
AddSWrd('s', 'soft', [16,5 , 134,4 , 25,20 , 105,20]);
AddSWrd('s', 'soft-boundary', [26,5 , 27,5]);
AddSWrd('s', 'soft_boundary', [105,4 , 106,20]);
AddSWrd('s', 'soft_edge_all', [25,35]);
AddSWrd('s', 'software', [4,2 , 101,4 , 6,2 , 8,2 , 40,2 , 9,4 , 10,5 , 139,2 , 14,10 , 111,2 , 112,10 , 17,10 , 53,2]);
AddSWrd('s', 'solely', [130,2]);
AddSWrd('s', 'solution', [86,6]);
AddSWrd('s', 'solutions', [86,2]);
AddSWrd('s', 'something', [31,10]);
AddSWrd('s', 'source', [33,10 , 114,5 , 118,10 , 119,25 , 139,2 , 77,70]);
AddSWrd('s', 'sources', [82,2 , 77,20]);
AddSWrd('s', 'space', [17,5 , 35,20 , 102,12 , 104,30 , 57,42 , 58,2]);
AddSWrd('s', 'spaces', [18,5 , 63,2]);
AddSWrd('s', 'spacing', [59,2]);
AddSWrd('s', 'sparse', [102,4]);
AddSWrd('s', 'spatial', [104,10 , 13,5]);
AddSWrd('s', 'spatialpolynomial', [104,25]);
AddSWrd('s', 'spec', [34,10 , 25,5]);
AddSWrd('s', 'special', [63,2]);
AddSWrd('s', 'specific', [104,5 , 12,10 , 15,10 , 47,2 , 16,10 , 17,10 , 18,10 , 82,2 , 20,15 , 21,10 , 22,15 , 23,15 , 24,10 , 26,10 , 58,4 , 27,10 , 60,4]);
AddSWrd('s', 'specifically', [33,10 , 4,2 , 13,5]);
AddSWrd('s', 'specification', [33,20 , 36,2 , 41,4 , 44,55 , 77,20 , 14,5 , 79,4 , 16,5 , 49,10 , 20,5 , 21,10 , 22,15 , 23,10 , 24,30 , 25,10 , 26,10 , 27,10]);
AddSWrd('s', 'specifications', [18,5 , 28,2 , 13,10 , 125,5]);
AddSWrd('s', 'specified', [128,2 , 4,2 , 134,4 , 136,2 , 10,30 , 12,30 , 13,95 , 14,35 , 15,45 , 16,75 , 17,45 , 18,15 , 20,60 , 21,60 , 22,80 , 23,55 , 24,90 , 25,20 , 26,45 , 27,40 , 31,30 , 32,6 , 33,230 , 34,50 , 35,50 , 42,15 , 43,5 , 44,15 , 45,15 , 47,2 , 48,12 , 49,15 , 50,5 , 53,2 , 60,2 , 63,2 , 77,260 , 78,6 , 79,6 , 82,2 , 84,2 , 86,4 , 96,30 , 98,2 , 100,135 , 103,4 , 104,255 , 105,2 , 110,60 , 112,70 , 116,20 , 117,10 , 118,65 , 119,50]);
AddSWrd('s', 'specified.when', [33,10 , 104,10 , 13,5]);
AddSWrd('s', 'specifies', [10,30 , 12,20 , 13,65 , 77,160 , 15,35 , 16,25 , 17,5 , 18,5 , 21,25 , 22,20 , 23,25 , 24,50 , 25,50 , 26,15 , 27,30 , 31,30 , 96,130 , 33,140 , 100,10 , 104,210 , 42,15 , 106,50 , 43,15 , 44,5 , 108,70 , 45,35 , 110,40 , 112,150 , 114,5 , 116,20 , 117,60 , 118,20 , 119,10]);
AddSWrd('s', 'specify', [134,2 , 8,2 , 10,40 , 138,2 , 12,50 , 13,90 , 77,180 , 15,15 , 16,10 , 17,25 , 18,15 , 82,8 , 20,15 , 84,2 , 21,20 , 22,35 , 86,4 , 23,25 , 87,10 , 24,55 , 25,10 , 93,2 , 31,20 , 95,6 , 96,10 , 33,50 , 34,25 , 35,5 , 36,2 , 100,30 , 103,2 , 104,150 , 41,2 , 105,2 , 42,5 , 106,20 , 45,10 , 49,5 , 54,2 , 118,10 , 56,2 , 123,2 , 61,2 , 63,2]);
AddSWrd('s', 'specifying', [10,40 , 12,20 , 13,90 , 77,80 , 14,10 , 15,35 , 16,30 , 17,5 , 81,2 , 18,10 , 20,25 , 21,35 , 22,25 , 23,20 , 24,40 , 25,20 , 26,15 , 27,15 , 93,2 , 96,10 , 33,30 , 35,20 , 100,15 , 37,2 , 104,90 , 108,10 , 116,10 , 117,10 , 119,20 , 61,2]);
AddSWrd('s', 'speed', [17,5 , 33,10 , 129,4 , 104,30]);
AddSWrd('s', 'speed_mode', [26,15 , 27,5]);
AddSWrd('s', 'spends', [138,2]);
AddSWrd('s', 'spike', [63,2]);
AddSWrd('s', 'spikes', [63,18]);
AddSWrd('s', 'split', [98,4 , 99,2 , 20,5 , 36,4 , 100,5 , 21,5 , 22,5 , 23,5 , 24,10 , 25,10 , 26,5]);
AddSWrd('s', 'splitcd', [99,2 , 100,55]);
AddSWrd('s', 'splitting', [131,2 , 21,5 , 22,15 , 23,10 , 24,25 , 13,5]);
AddSWrd('s', 'spread', [103,2 , 104,5]);
AddSWrd('s', 'square', [32,2 , 96,40 , 33,50 , 36,6 , 100,20 , 7,5 , 104,20 , 106,40 , 12,10 , 108,50 , 77,40 , 14,5 , 110,40 , 16,10 , 112,40 , 20,5 , 21,5 , 117,10 , 22,5 , 118,5 , 26,5 , 27,5 , 61,6 , 31,20]);
AddSWrd('s', 'squared', [104,10]);
AddSWrd('s', 'srt', [99,4]);
AddSWrd('s', 'ssf_margin', [15,15]);
AddSWrd('s', 'ssf_size', [15,10]);
AddSWrd('s', 'stair-stepping', [104,20 , 138,2]);
AddSWrd('s', 'staircase', [20,5 , 21,5 , 22,5 , 23,5 , 15,5]);
AddSWrd('s', 'stairstep', [20,15 , 21,15 , 22,15 , 23,15 , 15,15]);
AddSWrd('s', 'standard', [32,2 , 96,25 , 34,5 , 4,4 , 5,2 , 8,4 , 40,2 , 11,2 , 16,5 , 48,2 , 49,5 , 21,5 , 22,5 , 23,5 , 24,10 , 26,10 , 27,5 , 59,2 , 123,2 , 124,5]);
AddSWrd('s', 'standardized', [104,10]);
AddSWrd('s', 'start', [131,6]);
AddSWrd('s', 'started', [28,2]);
AddSWrd('s', 'starts', [118,10]);
AddSWrd('s', 'state', [135,2 , 123,2]);
AddSWrd('s', 'stated', [33,10]);
AddSWrd('s', 'statement', [8,2 , 12,25 , 76,5 , 13,25 , 77,100 , 15,5 , 79,4 , 16,5 , 17,5 , 82,4 , 84,2 , 22,5 , 24,5 , 31,55 , 32,10 , 96,10 , 33,110 , 34,10 , 35,5 , 100,5 , 37,2 , 101,8 , 103,22 , 104,85 , 105,14 , 42,15 , 106,15 , 43,20 , 107,12 , 44,15 , 108,15 , 45,25 , 109,12 , 46,5 , 110,10 , 111,10 , 112,10 , 49,10 , 50,20 , 114,15 , 53,4 , 54,2 , 118,10 , 119,10 , 56,10 , 127,2]);
AddSWrd('s', 'statements', [10,10 , 13,15 , 77,20 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 31,135 , 33,30 , 34,15 , 36,6 , 37,8 , 101,2 , 103,8 , 40,4 , 104,30 , 41,8 , 42,80 , 43,65 , 44,75 , 45,50 , 46,40 , 110,10 , 47,2 , 50,60 , 119,5]);
AddSWrd('s', 'statistical', [98,2 , 99,2 , 100,20]);
AddSWrd('s', 'statistics', [100,5 , 54,2 , 23,5 , 104,10 , 76,5]);
AddSWrd('s', 'status', [17,5 , 18,5 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 123,10 , 124,25 , 77,40 , 125,65]);
AddSWrd('s', 'stdout', [55,2]);
AddSWrd('s', 'step', [103,2 , 105,2 , 138,2 , 43,10 , 59,2 , 13,5 , 77,10 , 62,2 , 79,2]);
AddSWrd('s', 'steps', [104,10 , 9,2 , 27,5]);
AddSWrd('s', 'stepsize', [17,10]);
AddSWrd('s', 'stitching', [25,30]);
AddSWrd('s', 'stitching_strategy', [25,25]);
AddSWrd('s', 'stop', [77,110]);
AddSWrd('s', 'storage', [44,10]);
AddSWrd('s', 'store', [50,5 , 20,5 , 21,5 , 22,5 , 134,2 , 23,5 , 24,10 , 104,10 , 41,2 , 77,10]);
AddSWrd('s', 'stored', [96,10 , 22,5 , 24,5 , 10,10 , 58,2]);
AddSWrd('s', 'stores', [17,5 , 53,2 , 22,5 , 24,5 , 12,5 , 44,5 , 77,10]);
AddSWrd('s', 'storing', [134,2]);
AddSWrd('s', 'strategy', [25,10]);
AddSWrd('s', 'streamlined', [21,5 , 23,5]);
AddSWrd('s', 'strength', [105,2 , 106,5]);
AddSWrd('s', 'stress', [28,2]);
AddSWrd('s', 'stretches', [105,2]);
AddSWrd('s', 'strict', [128,2 , 116,5 , 108,75 , 13,5]);
AddSWrd('s', 'strictly', [96,10 , 33,10 , 100,5 , 104,30 , 106,10 , 12,5 , 108,10 , 77,10 , 109,2 , 110,10 , 112,10 , 26,5 , 31,10]);
AddSWrd('s', 'strictness', [26,5]);
AddSWrd('s', 'string', [33,30 , 39,2 , 104,10 , 12,5 , 44,5 , 108,50 , 77,30 , 15,5 , 17,10 , 18,10 , 20,10 , 21,10 , 123,2 , 124,10]);
AddSWrd('s', 'strings', [18,5 , 39,2 , 124,10]);
AddSWrd('s', 'stripe', [17,15 , 22,5 , 24,5 , 25,50 , 13,5]);
AddSWrd('s', 'striped', [57,2]);
AddSWrd('s', 'stripes', [17,15 , 22,5 , 24,5 , 25,25 , 13,10]);
AddSWrd('s', 'strongly', [17,5 , 12,5]);
AddSWrd('s', 'structure', [112,10 , 128,2 , 20,5 , 36,4 , 21,5 , 22,5 , 134,2 , 23,5 , 24,10 , 12,5 , 30,2]);
AddSWrd('s', 'structures', [63,2 , 127,2]);
AddSWrd('s', 'style', [33,10 , 10,10 , 61,2 , 14,20 , 31,10]);
AddSWrd('s', 'sub-edges', [56,2]);
AddSWrd('s', 'sub-subfield', [15,25]);
AddSWrd('s', 'subdirectories', [104,10]);
AddSWrd('s', 'subfield', [20,10 , 21,10 , 22,5 , 23,5 , 24,10 , 94,2]);
AddSWrd('s', 'subframe', [21,5 , 22,5 , 23,5 , 24,70]);
AddSWrd('s', 'subframe_max_data', [24,15]);
AddSWrd('s', 'subframe_width', [131,2 , 21,20 , 22,30 , 23,30 , 24,75 , 136,2]);
AddSWrd('s', 'subframes', [24,70]);
AddSWrd('s', 'subsampling', [104,5]);
AddSWrd('s', 'subsequent', [32,2 , 33,10 , 105,2 , 42,5 , 44,5 , 76,5]);
AddSWrd('s', 'subsequently', [77,10]);
AddSWrd('s', 'subset', [33,10 , 34,10 , 21,5 , 23,5 , 104,10 , 57,2 , 12,5 , 28,2 , 109,2 , 110,35]);
AddSWrd('s', 'substitute', [93,2]);
AddSWrd('s', 'substituted', [77,10]);
AddSWrd('s', 'substrate', [4,4]);
AddSWrd('s', 'subwavelength', [5,2]);
AddSWrd('s', 'sufficiently', [104,10 , 13,5]);
AddSWrd('s', 'suffix', [33,25 , 104,20]);
AddSWrd('s', 'suggested', [82,2]);
AddSWrd('s', 'suggests', [119,5]);
AddSWrd('s', 'suitable', [104,10 , 26,5 , 13,5]);
AddSWrd('s', 'suite', [4,2 , 5,2]);
AddSWrd('s', 'sum', [16,5]);
AddSWrd('s', 'summarized', [112,10 , 75,5 , 15,5]);
AddSWrd('s', 'summarizes', [112,20]);
AddSWrd('s', 'summary', [33,5 , 70,2 , 39,2 , 71,2 , 104,25 , 41,2 , 73,2 , 42,15 , 43,15 , 76,10 , 13,40 , 45,20 , 49,5 , 52,2 , 54,36 , 55,2 , 89,2 , 126,2]);
AddSWrd('s', 'summary.jobdeck_density.map.txt', [104,10]);
AddSWrd('s', 'summaryrep', [104,10]);
AddSWrd('s', 'summaryrep_out', [33,5]);
AddSWrd('s', 'summation', [21,5 , 22,5 , 23,5 , 24,40]);
AddSWrd('s', 'sun4u', [70,2]);
AddSWrd('s', 'sunos', [70,2]);
AddSWrd('s', 'supercede', [25,10]);
AddSWrd('s', 'supplied', [33,20 , 35,5 , 104,10 , 42,5 , 43,15 , 12,10 , 13,10 , 77,20 , 125,5 , 110,20]);
AddSWrd('s', 'supplies', [35,5 , 77,10]);
AddSWrd('s', 'supply', [103,2 , 42,5 , 12,15]);
AddSWrd('s', 'supplying', [17,5 , 100,5 , 118,10 , 77,20]);
AddSWrd('s', 'support', [32,2 , 33,20 , 34,30 , 4,12 , 6,2 , 28,4 , 77,20 , 94,2 , 31,5]);
AddSWrd('s', 'supported', [130,2 , 4,8 , 5,2 , 6,2 , 11,2 , 75,5 , 12,10 , 13,15 , 77,20 , 14,10 , 17,5 , 20,5 , 21,5 , 22,15 , 23,15 , 24,25 , 25,15 , 27,10 , 28,12 , 95,36 , 32,4 , 96,10 , 33,40 , 34,45 , 98,2 , 35,5 , 36,2 , 100,10 , 104,60 , 119,5]);
AddSWrd('s', 'supports', [33,10 , 97,5 , 35,5 , 4,2 , 22,10 , 104,20 , 92,2 , 13,20 , 61,2 , 94,2 , 95,2]);
AddSWrd('s', 'supposed', [104,10]);
AddSWrd('s', 'suppressing', [77,10]);
AddSWrd('s', 'sure', [65,2 , 122,4 , 12,5 , 13,20]);
AddSWrd('s', 'surround', [96,10 , 112,10 , 33,10 , 100,5 , 104,10 , 106,10 , 108,10 , 77,10 , 110,10 , 31,10]);
AddSWrd('s', 'surrounded', [44,5]);
AddSWrd('s', 'surrounding', [103,2 , 104,5]);
AddSWrd('s', 'svrf', [4,16 , 132,2 , 5,4 , 6,2 , 8,8 , 9,6 , 10,10 , 11,2 , 12,35 , 13,155 , 15,10 , 16,20 , 17,10 , 18,5 , 19,2 , 22,15 , 24,10 , 25,15 , 26,15 , 27,20 , 28,10 , 29,24 , 30,6 , 31,315 , 32,26 , 33,340 , 34,130 , 35,115 , 36,50 , 37,38 , 38,2 , 40,24 , 41,2 , 42,20 , 43,25 , 44,30 , 45,30 , 46,15 , 48,20 , 49,25 , 50,5 , 51,12 , 53,2 , 57,4 , 59,4 , 64,2 , 65,6 , 66,6 , 70,2 , 71,2 , 72,2 , 73,2 , 77,355 , 79,4 , 81,4 , 82,4 , 86,2 , 96,20 , 98,2 , 100,15 , 101,8 , 102,4 , 103,18 , 104,165 , 105,30 , 106,20 , 107,12 , 108,20 , 109,12 , 110,40 , 111,12 , 112,15 , 114,10 , 116,20 , 117,5 , 118,5 , 121,4 , 122,8 , 123,4]);
AddSWrd('s', 'svrf_layer_name', [33,35 , 102,2 , 104,15 , 13,20 , 77,55 , 110,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('s', 'svrf_layer_name2', [33,25]);
AddSWrd('s', 'svrf_layer_name3', [33,15]);
AddSWrd('s', 'svrf_layer_name4', [33,15]);
AddSWrd('s', 'svrf_range', [32,2 , 33,15 , 35,25 , 13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,10]);
AddSWrd('s', 'svrf_statement1', [77,15]);
AddSWrd('s', 'svrf_statementn', [77,15]);
AddSWrd('s', 'svrf_statements', [33,15 , 104,15 , 13,5 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 31,20]);
AddSWrd('s', 'svrfend', [33,55 , 36,4 , 37,2 , 38,4 , 102,2 , 104,35 , 13,40 , 77,45 , 110,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,15 , 26,5 , 27,10 , 31,45]);
AddSWrd('s', 'svrfs', [32,10 , 35,15 , 124,5 , 77,10]);
AddSWrd('s', 'svrfstart', [33,55 , 36,4 , 37,2 , 38,4 , 102,2 , 104,35 , 13,40 , 77,45 , 110,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,15 , 26,5 , 27,10 , 31,45]);
AddSWrd('s', 'swap', [131,2 , 20,5 , 21,5 , 136,2]);
AddSWrd('s', 'swap_list', [7,5]);
AddSWrd('s', 'switch', [112,10 , 17,10 , 129,2 , 10,20]);
AddSWrd('s', 'switches', [112,20 , 17,5 , 9,2]);
AddSWrd('s', 'symbolic', [33,10 , 130,4 , 77,10]);
AddSWrd('s', 'symbols', [16,5 , 77,10]);
AddSWrd('s', 'symmetric', [61,4 , 62,2]);
AddSWrd('s', 'syntactically', [33,10]);
AddSWrd('s', 'syntax', [128,2 , 129,2 , 4,2 , 132,2 , 7,50 , 9,4 , 11,10 , 12,140 , 77,20 , 15,15 , 16,15 , 17,15 , 18,20 , 20,15 , 21,15 , 22,15 , 23,15 , 24,15 , 25,5 , 26,15 , 27,15 , 35,5 , 103,2 , 105,2 , 109,2 , 55,2]);
AddSWrd('s', 'system', [70,2 , 71,2 , 72,2 , 73,2 , 13,125 , 77,100 , 79,2 , 82,4 , 21,5 , 89,2 , 26,5 , 90,2 , 27,5 , 91,2 , 31,5 , 33,110 , 100,45 , 37,2 , 102,2 , 104,105 , 41,2 , 42,15 , 106,5 , 108,5 , 114,5 , 116,5 , 123,2]);
AddSWrd('s', 'systematic', [102,2]);
AddSWrd('s', 'systems', [4,2 , 8,2 , 11,2 , 13,10]);
AddSWrd('t', 'table', [34,10 , 35,5 , 4,2 , 5,2 , 42,5 , 43,5 , 75,10 , 44,5 , 45,5 , 46,5 , 15,10 , 48,2 , 112,20 , 49,5 , 50,5 , 115,2 , 125,5]);
AddSWrd('t', 'table-driven', [101,2 , 102,2]);
AddSWrd('t', 'taken', [33,10 , 130,2 , 104,30 , 41,2 , 27,5 , 13,5 , 77,10]);
AddSWrd('t', 'takes', [16,5 , 33,10]);
AddSWrd('t', 'taking', [103,2 , 104,5]);
AddSWrd('t', 'tandem', [104,10]);
AddSWrd('t', 'target', [116,15 , 117,10]);
AddSWrd('t', 'targeted', [4,2]);
AddSWrd('t', 'task', [66,2]);
AddSWrd('t', 'tasks', [64,4 , 55,2 , 40,2 , 13,5 , 30,4]);
AddSWrd('t', 'tcl', [5,2]);
AddSWrd('t', 'tcl-based', [4,2]);
AddSWrd('t', 'technique', [104,5 , 13,10]);
AddSWrd('t', 'techniques', [5,2]);
AddSWrd('t', 'tee', [55,4]);
AddSWrd('t', 'temp_directory', [75,5 , 77,15]);
AddSWrd('t', 'temporarily', [104,10 , 13,5 , 77,10]);
AddSWrd('t', 'temporary', [33,50 , 118,20 , 134,2 , 104,30 , 10,10 , 75,5 , 13,45 , 77,60]);
AddSWrd('t', 'ten', [104,5]);
AddSWrd('t', 'tend', [117,10]);
AddSWrd('t', 'term', [104,10]);
AddSWrd('t', 'terminal', [104,5]);
AddSWrd('t', 'terminate', [124,5]);
AddSWrd('t', 'terminates', [15,5]);
AddSWrd('t', 'terms', [43,10 , 108,10 , 109,2 , 110,5 , 47,2 , 16,5 , 17,5 , 85,2 , 22,10 , 23,5 , 87,2 , 24,5 , 26,5 , 27,5]);
AddSWrd('t', 'test.gds', [70,2]);
AddSWrd('t', 'test.oas', [118,5]);
AddSWrd('t', 'test1xxxx.om', [73,4]);
AddSWrd('t', 'test1xxxx.om.log', [73,2]);
AddSWrd('t', 'test1xxxx.pf', [68,2 , 89,4 , 90,2 , 91,2 , 13,10]);
AddSWrd('t', 'test2xxxx.pf', [90,4]);
AddSWrd('t', 'test3.jf', [91,4]);
AddSWrd('t', 'test3xxxx.pf', [69,2]);
AddSWrd('t', 'test_dummy.gds', [70,2]);
AddSWrd('t', 'test_input.oas', [114,5]);
AddSWrd('t', 'tested', [104,10]);
AddSWrd('t', 'testxxx10.s3', [17,5]);
AddSWrd('t', 'testxxxx.pf', [68,2]);
AddSWrd('t', 'testxxxxx_10s3.pf', [17,5]);
AddSWrd('t', 'text', [96,30 , 33,20 , 100,15 , 38,6 , 7,5 , 103,2 , 104,100 , 106,20 , 12,40 , 108,20 , 77,30 , 109,4 , 110,20 , 15,20 , 112,20 , 17,20 , 18,20 , 54,2 , 55,2 , 124,5 , 31,30]);
AddSWrd('t', 'texttag', [33,10]);
AddSWrd('t', 'thee', [23,5]);
AddSWrd('t', 'themselves', [46,5]);
AddSWrd('t', 'therefore', [33,10 , 82,4 , 118,5 , 103,4 , 104,15 , 13,5 , 77,20 , 31,10 , 63,2]);
AddSWrd('t', 'thick', [57,2]);
AddSWrd('t', 'thin', [57,2]);
AddSWrd('t', 'things', [47,2 , 63,2]);
AddSWrd('t', 'think', [47,2]);
AddSWrd('t', 'third', [33,30 , 38,2]);
AddSWrd('t', 'third-party', [139,2]);
AddSWrd('t', 'thomas', [4,2]);
AddSWrd('t', 'thoroughly', [104,10 , 13,5]);
AddSWrd('t', 'threaded', [25,10]);
AddSWrd('t', 'threads', [10,10 , 77,10]);
AddSWrd('t', 'three', [134,2 , 7,5 , 77,10 , 112,10 , 17,5 , 81,2 , 18,5 , 22,10 , 24,10 , 56,2 , 57,4 , 27,5 , 59,2]);
AddSWrd('t', 'three-step', [59,2]);
AddSWrd('t', 'threshold', [105,2 , 77,10]);
AddSWrd('t', 'throughout', [25,10]);
AddSWrd('t', 'throughput', [92,2]);
AddSWrd('t', 'thu', [39,2]);
AddSWrd('t', 'thumb', [138,2]);
AddSWrd('t', 'thus', [33,10 , 37,2 , 104,10 , 136,2 , 42,5 , 13,10 , 77,30 , 79,2 , 21,5 , 22,5 , 23,5 , 87,2 , 24,10]);
AddSWrd('t', 'tile', [26,10]);
AddSWrd('t', 'tilemicrons', [114,10 , 116,5 , 118,5]);
AddSWrd('t', 'time', [130,2 , 4,4 , 138,2 , 75,5 , 13,70 , 14,30 , 17,10 , 20,5 , 21,5 , 22,5 , 23,5 , 24,10 , 25,5 , 32,2 , 96,10 , 33,30 , 39,4 , 103,2 , 104,75 , 112,10 , 117,10 , 120,2 , 122,6 , 123,6 , 125,5]);
AddSWrd('t', 'times', [37,2 , 104,20 , 106,10 , 63,2]);
AddSWrd('t', 'tips', [126,2]);
AddSWrd('t', 'tmp', [33,10 , 134,12 , 119,5 , 13,5]);
AddSWrd('t', 'to_fracture', [66,6 , 110,10]);
AddSWrd('t', 'together', [17,5 , 65,2 , 100,10 , 23,5 , 25,20 , 26,5 , 27,5]);
AddSWrd('t', 'tolerate', [13,5]);
AddSWrd('t', 'tone', [80,2 , 112,10 , 66,6 , 82,2 , 13,20 , 77,40 , 14,50 , 79,4]);
AddSWrd('t', 'tone-reversal', [66,30]);
AddSWrd('t', 'tool', [97,5 , 4,26 , 5,2 , 103,2 , 104,90 , 10,30 , 15,5 , 112,110 , 20,10 , 116,5 , 21,5 , 22,5 , 23,5 , 63,2]);
AddSWrd('t', 'tools', [112,5 , 3,2 , 4,12 , 5,2 , 26,5 , 123,2 , 124,5 , 13,10 , 77,10 , 127,12]);
AddSWrd('t', 'top', [33,60 , 116,5 , 119,30 , 104,35 , 26,20 , 42,15 , 43,10 , 108,5 , 13,95 , 77,90 , 15,5]);
AddSWrd('t', 'top-level', [36,4]);
AddSWrd('t', 'topcell', [33,30 , 114,5 , 37,2 , 119,10 , 77,50 , 31,5]);
AddSWrd('t', 'topcell_name', [33,35 , 77,35]);
AddSWrd('t', 'topcellname', [13,10 , 77,10]);
AddSWrd('t', 'topological', [28,2]);
AddSWrd('t', 'torvalds', [13,5]);
AddSWrd('t', 'toshiba', [4,2]);
AddSWrd('t', 'total', [16,5 , 48,2 , 70,2 , 39,2 , 104,10 , 25,5 , 26,25 , 27,25 , 76,5 , 13,20]);
AddSWrd('t', 'touch', [65,2 , 34,40 , 122,2]);
AddSWrd('t', 'towards', [25,10]);
AddSWrd('t', 'trade', [20,5 , 21,5]);
AddSWrd('t', 'trade-offs', [104,20]);
AddSWrd('t', 'trademark', [4,4 , 13,5]);
AddSWrd('t', 'traditionally', [28,2]);
AddSWrd('t', 'trait', [104,10 , 13,5]);
AddSWrd('t', 'transcribed', [16,5 , 22,5 , 26,5 , 27,5 , 13,30]);
AddSWrd('t', 'transcript', [76,5 , 13,10 , 77,10 , 16,10 , 18,10 , 20,15 , 21,10 , 22,10 , 23,10 , 24,20 , 25,10 , 26,10 , 27,10 , 28,8 , 95,2 , 33,10 , 98,2 , 99,2 , 100,10 , 39,36 , 104,10 , 52,2 , 55,42 , 123,6 , 124,45]);
AddSWrd('t', 'transcripts', [28,2]);
AddSWrd('t', 'transform', [26,5 , 27,5 , 77,10 , 78,2 , 31,10 , 79,6]);
AddSWrd('t', 'transformation', [80,4 , 82,2 , 85,2 , 87,2 , 89,4 , 13,20 , 77,30 , 78,2 , 79,34]);
AddSWrd('t', 'transformations', [81,36 , 100,5 , 85,2 , 88,2 , 13,10 , 77,20 , 125,5 , 79,6]);
AddSWrd('t', 'transformed', [85,2 , 87,2 , 8,2 , 26,5 , 11,2 , 27,5]);
AddSWrd('t', 'transforming', [81,12]);
AddSWrd('t', 'transforms', [33,10 , 100,5 , 86,2 , 104,10 , 77,10]);
AddSWrd('t', 'transition', [105,2]);
AddSWrd('t', 'transmission', [17,15 , 23,20]);
AddSWrd('t', 'trapezoid', [98,2 , 100,65 , 22,15 , 24,15 , 26,30 , 27,45 , 125,5]);
AddSWrd('t', 'trapezoid1', [13,20]);
AddSWrd('t', 'trapezoid2', [13,20]);
AddSWrd('t', 'trapezoid3', [13,20]);
AddSWrd('t', 'trapezoid_group', [26,5]);
AddSWrd('t', 'trapezoid_groups', [13,30 , 15,5 , 16,25 , 17,5 , 18,5 , 20,5 , 21,5 , 22,25 , 23,5 , 24,5 , 25,5 , 26,20 , 27,20]);
AddSWrd('t', 'trapezoid_pass_through', [16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 25,5 , 26,5 , 27,5 , 13,10 , 15,5]);
AddSWrd('t', 'trapezoidal', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('t', 'trapezoided', [26,5]);
AddSWrd('t', 'trapezoider', [133,2]);
AddSWrd('t', 'trapezoiding', [132,2 , 26,5 , 13,30 , 14,25]);
AddSWrd('t', 'trapezoids', [98,4 , 100,70 , 132,2 , 8,6 , 104,10 , 11,6 , 13,60 , 14,40 , 16,25 , 20,10 , 21,5 , 22,35 , 23,15 , 26,25 , 27,15]);
AddSWrd('t', 'traversing', [30,2]);
AddSWrd('t', 'treated', [39,2 , 42,5]);
AddSWrd('t', 'treats', [49,5 , 18,5 , 45,5]);
AddSWrd('t', 'tree', [26,5]);
AddSWrd('t', 'trend', [4,4]);
AddSWrd('t', 'triggered', [124,5]);
AddSWrd('t', 'triggers', [18,5]);
AddSWrd('t', 'true', [17,5 , 57,2 , 13,10]);
AddSWrd('t', 'truncate', [49,5 , 103,8 , 104,70 , 63,4]);
AddSWrd('t', 'truncates', [33,10 , 104,10 , 13,5 , 77,10 , 31,10 , 63,2]);
AddSWrd('t', 'truncating', [104,10 , 63,12]);
AddSWrd('t', 'truncation', [63,2]);
AddSWrd('t', 'try', [131,6]);
AddSWrd('t', 'tsisram.om_mb.ejb', [104,10]);
AddSWrd('t', 'tsisram_1000.oas', [110,20]);
AddSWrd('t', 'tsisram_checkmap_flat_ultra.oas', [108,5]);
AddSWrd('t', 'tsisram_extent_vb.oas', [110,5]);
AddSWrd('t', 'tsisram_flat.oas', [108,5]);
AddSWrd('t', 'tsisram_vb.oas', [110,5]);
AddSWrd('t', 'turn', [77,10]);
AddSWrd('t', 'turnaround', [32,2 , 4,2]);
AddSWrd('t', 'twice', [100,10 , 21,5 , 22,5 , 23,5 , 24,10 , 104,10 , 136,2 , 25,10]);
AddSWrd('t', 'two', [130,6 , 9,2 , 10,20 , 138,2 , 12,10 , 77,70 , 16,15 , 17,10 , 81,60 , 18,5 , 82,38 , 84,2 , 21,5 , 85,6 , 86,12 , 23,5 , 26,10 , 92,2 , 32,2 , 96,20 , 33,20 , 34,10 , 36,2 , 100,30 , 103,4 , 104,35 , 41,2 , 105,2 , 42,5 , 43,5 , 110,10 , 47,2 , 48,4 , 112,10 , 56,2 , 121,2 , 59,6 , 60,2 , 124,5 , 61,2 , 62,2 , 63,2]);
AddSWrd('t', 'two-character', [17,5]);
AddSWrd('t', 'two-dimensional', [103,2 , 104,30]);
AddSWrd('t', 'two-level', [33,10 , 77,10]);
AddSWrd('t', 'typ', [99,4 , 104,15]);
AddSWrd('t', 'type', [33,30 , 38,2 , 104,10 , 74,2 , 12,25 , 13,30 , 77,60 , 14,5 , 78,2 , 15,35 , 47,2 , 16,5 , 112,75 , 57,2 , 31,5]);
AddSWrd('t', 'types', [33,10 , 102,2 , 104,10 , 108,5 , 13,5 , 77,10 , 46,5 , 110,10 , 47,2 , 20,15 , 52,4 , 21,15 , 53,2 , 22,5 , 24,5 , 56,4 , 27,5 , 59,2 , 31,10]);
AddSWrd('t', 'typical', [104,5 , 10,10 , 28,2 , 13,10]);
AddSWrd('t', 'typically', [32,2 , 33,20 , 35,5 , 102,4 , 103,2 , 104,40 , 138,2 , 13,5 , 77,40 , 21,5 , 86,2 , 55,2 , 30,2]);
AddSWrd('u', 'u.s', [13,5]);
AddSWrd('u', 'ultra', [33,5 , 114,5 , 116,5 , 108,5]);
AddSWrd('u', 'ultraviolet', [4,2]);
AddSWrd('u', 'un-done', [77,10]);
AddSWrd('u', 'unacceptably', [104,10]);
AddSWrd('u', 'unaffected', [96,5]);
AddSWrd('u', 'unary', [104,10]);
AddSWrd('u', 'unavailable', [10,10]);
AddSWrd('u', 'unbounded', [31,10]);
AddSWrd('u', 'underline', [7,5]);
AddSWrd('u', 'underlined', [7,5]);
AddSWrd('u', 'underlining', [7,5]);
AddSWrd('u', 'underover', [77,10]);
AddSWrd('u', 'underscore', [18,10 , 15,5]);
AddSWrd('u', 'underscores', [17,5 , 100,5 , 12,5 , 13,10]);
AddSWrd('u', 'undersizes', [63,2]);
AddSWrd('u', 'understanding', [35,5 , 121,30 , 59,10 , 63,30]);
AddSWrd('u', 'undo', [100,5 , 77,10]);
AddSWrd('u', 'unexpected', [13,10]);
AddSWrd('u', 'unexpectedly', [63,2]);
AddSWrd('u', 'uniformly', [30,2]);
AddSWrd('u', 'unique', [44,5 , 77,5 , 110,10]);
AddSWrd('u', 'uniquely', [33,10 , 77,10]);
AddSWrd('u', 'unit', [132,12 , 8,2 , 11,2 , 12,25 , 13,30 , 15,15 , 79,6 , 16,25 , 80,2 , 17,30 , 18,5 , 82,4 , 20,20 , 21,25 , 22,30 , 23,25 , 24,40 , 25,10 , 26,10 , 27,10 , 31,10 , 43,105 , 120,4 , 121,6 , 122,10]);
AddSWrd('u', 'unit_length', [97,5]);
AddSWrd('u', 'unit_size', [17,15]);
AddSWrd('u', 'units', [70,2 , 13,15 , 77,50 , 15,10 , 16,15 , 17,5 , 81,2 , 82,4 , 21,15 , 22,20 , 23,20 , 24,50 , 25,10 , 26,10 , 27,10 , 94,2 , 31,10 , 96,40 , 33,20 , 100,40 , 104,50 , 106,20 , 43,10 , 120,2 , 121,2 , 125,5 , 63,20]);
AddSWrd('u', 'unix', [17,10 , 33,10 , 130,2 , 104,10 , 10,5 , 13,10 , 77,10]);
AddSWrd('u', 'unless', [32,2 , 33,10 , 7,10 , 8,2 , 44,5]);
AddSWrd('u', 'unlike', [12,5]);
AddSWrd('u', 'unlimited', [32,2 , 35,30]);
AddSWrd('u', 'unmapped', [38,6]);
AddSWrd('u', 'unmerged', [57,2 , 77,10 , 46,5]);
AddSWrd('u', 'unnecessary', [105,2 , 77,10]);
AddSWrd('u', 'unspecified', [104,10]);
AddSWrd('u', 'unsupported', [28,4]);
AddSWrd('u', 'until', [96,10 , 33,10 , 100,5 , 104,20 , 106,10 , 12,10 , 108,10 , 13,5 , 77,10 , 110,10 , 112,10 , 123,2 , 31,10]);
AddSWrd('u', 'unusable', [75,5]);
AddSWrd('u', 'unused', [118,5]);
AddSWrd('u', 'upon', [18,5 , 104,10 , 44,5]);
AddSWrd('u', 'upper', [16,5 , 96,10 , 34,15 , 99,4 , 20,10 , 21,5 , 22,5 , 23,5 , 24,10 , 12,5 , 13,10 , 77,10]);
AddSWrd('u', 'upper-case', [18,5]);
AddSWrd('u', 'upper-right', [104,10]);
AddSWrd('u', 'upper_bound', [25,10]);
AddSWrd('u', 'uppercase', [96,5 , 7,10]);
AddSWrd('u', 'upsample_interpolation', [104,30 , 138,2]);
AddSWrd('u', 'upsampling', [104,20]);
AddSWrd('u', 'upto_12chars.la', [18,5]);
AddSWrd('u', 'url', [7,5]);
AddSWrd('u', 'usage', [33,10 , 67,2 , 4,4 , 25,15 , 13,5 , 77,20]);
AddSWrd('u', 'used', [128,2 , 3,2 , 4,10 , 132,2 , 133,2 , 134,2 , 137,2 , 10,10 , 12,5 , 13,120 , 15,10 , 16,35 , 17,25 , 20,15 , 21,15 , 22,30 , 23,20 , 24,20 , 25,40 , 26,15 , 27,15 , 28,4 , 30,2 , 31,30 , 33,190 , 35,65 , 36,2 , 37,6 , 38,4 , 39,2 , 43,5 , 44,5 , 45,5 , 46,5 , 48,14 , 49,20 , 53,2 , 59,2 , 61,12 , 63,4 , 77,295 , 79,2 , 80,2 , 82,4 , 87,2 , 88,2 , 96,10 , 100,50 , 101,4 , 102,2 , 103,2 , 104,100 , 105,2 , 106,5 , 107,2 , 108,10 , 110,30 , 111,2 , 112,5 , 114,5 , 115,2 , 116,5 , 118,20 , 119,15 , 122,2]);
AddSWrd('u', 'useful', [100,5 , 104,30 , 26,10 , 12,5 , 13,20 , 77,20 , 14,10 , 31,10]);
AddSWrd('u', 'user', [129,2 , 4,18 , 132,4 , 5,36 , 134,2 , 136,2 , 10,10 , 13,30 , 77,40 , 79,4 , 16,5 , 21,5 , 22,5 , 23,15 , 24,20 , 25,10 , 28,6 , 31,20 , 32,2 , 33,40 , 35,10 , 36,2 , 100,40 , 102,4 , 104,70 , 106,20 , 43,20 , 114,5 , 55,2 , 56,2 , 123,6 , 61,2 , 125,5]);
AddSWrd('u', 'user-defined', [23,10 , 104,10 , 12,5 , 44,5]);
AddSWrd('u', 'user-specified', [32,2 , 25,5 , 92,2]);
AddSWrd('u', 'user-supplied', [100,5 , 7,5 , 10,10 , 12,5 , 13,10]);
AddSWrd('u', 'users', [42,5 , 12,5 , 13,10 , 127,2]);
AddSWrd('u', 'uses', [32,2 , 33,10 , 130,2 , 104,45 , 10,30 , 12,20 , 13,5 , 77,50 , 112,10 , 17,10 , 21,5 , 23,10 , 122,2 , 61,4 , 93,4 , 31,15]);
AddSWrd('u', 'using', [128,2 , 129,2 , 4,2 , 132,6 , 133,2 , 6,2 , 134,6 , 9,4 , 10,5 , 138,4 , 12,65 , 13,95 , 14,10 , 16,10 , 17,5 , 22,15 , 24,25 , 25,25 , 26,10 , 27,5 , 28,2 , 31,10 , 32,8 , 33,170 , 35,15 , 37,4 , 38,4 , 40,2 , 44,5 , 53,2 , 54,2 , 55,2 , 56,4 , 59,2 , 62,2 , 63,4 , 64,2 , 66,6 , 68,30 , 77,195 , 78,2 , 79,8 , 80,4 , 82,2 , 83,10 , 85,2 , 86,8 , 87,2 , 96,10 , 100,10 , 102,2 , 103,2 , 104,195 , 105,2 , 106,10 , 108,20 , 110,55 , 112,10 , 114,10 , 116,15 , 118,25 , 119,10 , 121,4 , 127,2]);
AddSWrd('u', 'usual', [104,20]);
AddSWrd('u', 'usually', [104,10 , 13,10 , 77,20]);
AddSWrd('u', 'utilities', [130,2 , 4,10 , 6,4 , 27,5 , 77,5]);
AddSWrd('u', 'utility', [113,2 , 4,4 , 101,22 , 102,4 , 134,2 , 23,5 , 13,10 , 77,10]);
AddSWrd('u', 'utilize', [129,2 , 9,2]);
AddSWrd('u', 'utilized', [4,2]);
AddSWrd('u', 'utmost', [104,20]);
AddSWrd('v', 'v03-05', [25,5]);
AddSWrd('v', 'v1-specific', [21,10]);
AddSWrd('v', 'v2-specific', [23,5]);
AddSWrd('v', 'v9.3_4.4', [70,2]);
AddSWrd('v', 'val', [33,30 , 35,5]);
AddSWrd('v', 'valid', [33,10 , 6,2 , 8,2 , 104,10 , 108,20 , 13,25 , 77,30 , 15,5 , 18,5 , 20,10 , 116,10 , 21,10 , 117,20 , 22,5 , 23,5 , 24,10 , 27,30]);
AddSWrd('v', 'value', [131,4 , 133,2 , 7,5 , 136,12 , 138,10 , 12,5 , 13,130 , 14,50 , 15,40 , 16,125 , 17,35 , 18,25 , 20,55 , 21,175 , 22,230 , 23,215 , 24,335 , 25,30 , 26,55 , 27,50 , 31,20 , 32,2 , 33,80 , 35,90 , 42,10 , 43,15 , 45,15 , 48,2 , 61,2 , 63,8 , 65,2 , 77,280 , 79,6 , 81,2 , 82,2 , 86,4 , 87,2 , 95,18 , 96,150 , 99,2 , 100,150 , 103,8 , 104,355 , 105,6 , 106,20 , 108,10 , 110,10 , 112,40 , 117,45 , 118,10 , 122,2 , 123,2 , 125,5]);
AddSWrd('v', 'value1', [77,25]);
AddSWrd('v', 'value2', [77,25]);
AddSWrd('v', 'values', [10,10 , 138,2 , 12,5 , 13,20 , 77,130 , 78,2 , 15,5 , 16,40 , 83,10 , 20,5 , 84,2 , 21,5 , 85,16 , 22,40 , 23,10 , 87,2 , 24,20 , 25,30 , 26,35 , 27,35 , 31,10 , 95,32 , 96,15 , 33,30 , 35,15 , 99,2 , 100,15 , 103,12 , 104,165 , 41,4 , 105,10 , 106,5 , 45,5 , 117,35 , 123,4 , 125,55 , 63,2]);
AddSWrd('v', 'variability', [14,10]);
AddSWrd('v', 'variable', [17,20 , 33,10 , 36,4 , 100,5 , 134,2 , 104,10 , 105,2 , 12,5 , 13,35 , 77,10]);
AddSWrd('v', 'variable-shaped', [5,2]);
AddSWrd('v', 'variables', [20,5 , 36,2 , 21,5 , 22,5 , 23,5 , 24,10 , 104,30 , 77,10]);
AddSWrd('v', 'variably', [105,2 , 106,5]);
AddSWrd('v', 'variant', [34,15 , 104,10]);
AddSWrd('v', 'variants', [19,2]);
AddSWrd('v', 'variation', [105,2 , 13,10]);
AddSWrd('v', 'varies', [96,10 , 20,5]);
AddSWrd('v', 'variety', [127,2]);
AddSWrd('v', 'various', [16,5 , 83,2 , 22,5 , 102,2 , 40,2 , 26,5 , 11,2 , 27,5]);
AddSWrd('v', 'vary', [88,2 , 10,10]);
AddSWrd('v', 'vb:oasis', [118,20 , 104,100 , 25,5]);
AddSWrd('v', 'vbo_in1', [118,10]);
AddSWrd('v', 'vbo_in2', [118,15]);
AddSWrd('v', 'vboais_in1', [118,5]);
AddSWrd('v', 'vboasis', [114,10 , 119,30 , 104,10 , 13,5 , 77,30]);
AddSWrd('v', 'vboasis2', [77,10]);
AddSWrd('v', 'vboasis2db', [100,15 , 73,2 , 77,25 , 31,5]);
AddSWrd('v', 'vboasis2jeol', [77,15 , 31,5]);
AddSWrd('v', 'vboasis2mebes', [77,15 , 31,5]);
AddSWrd('v', 'vboasis2micronic', [77,15 , 31,5]);
AddSWrd('v', 'vboasis2vboasis', [77,35 , 31,5]);
AddSWrd('v', 'vboasis2vsb', [77,15 , 31,5]);
AddSWrd('v', 'vboasis_filename', [118,5 , 119,20]);
AddSWrd('v', 'vboasis_injection', [128,6 , 33,70 , 134,2 , 104,35 , 13,15 , 77,35 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 118,35 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('v', 'vboasis_injection2', [33,20]);
AddSWrd('v', 'vboasis_injection3', [33,15]);
AddSWrd('v', 'vboasis_injection4', [33,5]);
AddSWrd('v', 'vboasis_layout_magnify', [33,35 , 104,15 , 77,15]);
AddSWrd('v', 'vboasis_layout_magnify2', [33,15]);
AddSWrd('v', 'vboasis_layout_magnify3', [33,15]);
AddSWrd('v', 'vboasis_layout_magnify4', [33,15]);
AddSWrd('v', 'vboasis_output_primary', [119,15]);
AddSWrd('v', 'vboasis_path', [128,4 , 134,4 , 13,45 , 77,85 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 28,2 , 31,10 , 33,140 , 102,2 , 104,95 , 110,45 , 114,15 , 116,10 , 118,45 , 119,40]);
AddSWrd('v', 'vboasis_path2', [33,70]);
AddSWrd('v', 'vboasis_path3', [33,65]);
AddSWrd('v', 'vboasis_path4', [33,65]);
AddSWrd('v', 'vboasis_precision_multiplier', [33,40 , 104,15 , 13,5 , 77,15 , 110,15 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5]);
AddSWrd('v', 'vboasis_precision_multiplier2', [33,20]);
AddSWrd('v', 'vboasis_precision_multiplier3', [33,15]);
AddSWrd('v', 'vboasis_precision_multiplier4', [33,15]);
AddSWrd('v', 'vbs12', [22,5]);
AddSWrd('v', 'vector', [16,15 , 18,15 , 4,2 , 20,15 , 21,15 , 22,15 , 23,15 , 24,10 , 26,15 , 14,130 , 15,15]);
AddSWrd('v', 'vector-based', [13,5]);
AddSWrd('v', 'vector-beam', [22,5 , 24,5]);
AddSWrd('v', 'ver1', [73,8]);
AddSWrd('v', 'verification', [4,6 , 5,4 , 8,4 , 10,10 , 11,2 , 13,5 , 77,140 , 78,8 , 79,6 , 80,2 , 17,5 , 82,4 , 84,4 , 85,2 , 86,26 , 87,38 , 31,10 , 96,5 , 33,10 , 97,5 , 34,5 , 100,15 , 40,2 , 104,10 , 48,2 , 49,5 , 55,2 , 56,2 , 59,2 , 61,2 , 125,5]);
AddSWrd('v', 'verifications', [82,2]);
AddSWrd('v', 'verified', [82,2 , 100,5 , 87,2 , 77,70]);
AddSWrd('v', 'verifies', [25,5]);
AddSWrd('v', 'verify', [33,15 , 3,2 , 4,2 , 90,2 , 91,2 , 77,15]);
AddSWrd('v', 'verify_type', [82,4 , 100,15 , 72,2 , 73,2 , 89,2 , 90,2 , 91,2 , 77,85 , 31,5]);
AddSWrd('v', 'verify_types', [77,40]);
AddSWrd('v', 'verifying', [86,2]);
AddSWrd('v', 'version', [4,6 , 69,2 , 70,2 , 102,2 , 72,2 , 104,5 , 13,30 , 77,10 , 16,35 , 17,5 , 81,4 , 18,20 , 114,5 , 20,10 , 21,10 , 22,10 , 23,10 , 24,25 , 27,35]);
AddSWrd('v', 'version_number', [16,5]);
AddSWrd('v', 'versions', [17,5 , 84,2 , 21,5 , 23,5 , 27,5]);
AddSWrd('v', 'versus', [30,12]);
AddSWrd('v', 'vertex', [33,10 , 49,5 , 34,5 , 4,2 , 71,2 , 72,2 , 121,2 , 46,5]);
AddSWrd('v', 'vertical', [20,10 , 21,10 , 22,15 , 7,5 , 23,15 , 14,20 , 15,10]);
AddSWrd('v', 'vertices', [33,10 , 105,2 , 121,2 , 13,10 , 77,10 , 63,4]);
AddSWrd('v', 'vfc', [99,4]);
AddSWrd('v', 'vhc', [104,15]);
AddSWrd('v', 'via', [34,10 , 13,20]);
AddSWrd('v', 'view', [97,30]);
AddSWrd('v', 'viewed', [135,2 , 104,10]);
AddSWrd('v', 'viewer', [17,10 , 33,20 , 130,2 , 4,2 , 5,2 , 134,2 , 103,2 , 135,8 , 104,20 , 13,10]);
AddSWrd('v', 'viewers', [104,10]);
AddSWrd('v', 'viewing', [97,5 , 129,6 , 86,2 , 135,4]);
AddSWrd('v', 'violate', [17,5]);
AddSWrd('v', 'violated', [125,10]);
AddSWrd('v', 'violates', [18,5]);
AddSWrd('v', 'violating', [16,5]);
AddSWrd('v', 'violations', [25,5 , 95,2]);
AddSWrd('v', 'visible', [33,10 , 21,5 , 22,5 , 23,5 , 24,10 , 136,2 , 13,55]);
AddSWrd('v', 'visual', [97,5 , 4,2 , 13,10]);
AddSWrd('v', 'visually', [4,2]);
AddSWrd('v', 'volumes', [25,5]);
AddSWrd('v', 'vpc', [104,15]);
AddSWrd('v', 'vsb', [96,10 , 82,48 , 98,2 , 100,5 , 5,2 , 135,36 , 27,15 , 77,30 , 95,4]);
AddSWrd('v', 'vsb11', [96,30 , 97,5 , 4,6 , 100,5 , 70,34 , 75,5 , 13,20 , 82,2 , 19,2 , 20,215 , 22,20 , 92,2 , 125,10 , 95,2]);
AddSWrd('v', 'vsb11-specific', [20,5]);
AddSWrd('v', 'vsb11_fracture', [70,2]);
AddSWrd('v', 'vsb12', [33,10 , 131,2 , 4,2 , 100,5 , 104,10 , 75,5 , 12,10 , 13,20 , 77,10 , 81,4 , 82,2 , 19,4 , 21,240 , 22,20 , 23,230 , 24,10 , 28,2]);
AddSWrd('v', 'vsb12_frac', [114,5]);
AddSWrd('v', 'vsb12_metal1_data', [12,5]);
AddSWrd('v', 'vsb12_poly_data', [12,5]);
AddSWrd('v', 'vsb12_v2', [23,15]);
AddSWrd('v', 'vsb12i', [82,2 , 19,2 , 4,2 , 100,5 , 22,265 , 24,45 , 75,5 , 13,30]);
AddSWrd('v', 'vsb12i-specific', [22,10]);
AddSWrd('v', 'vsb2db', [100,15 , 77,15 , 31,5]);
AddSWrd('v', 'vsb2hitachi', [77,15 , 31,5]);
AddSWrd('v', 'vsb2vsb', [81,2 , 77,15 , 31,5]);
AddSWrd('v', 'vsbjob', [104,40 , 77,20]);
AddSWrd('v', 'vsbjob2vsbjob', [82,4 , 77,65]);
AddSWrd('v', 'vsbjobdeck_1', [82,2]);
AddSWrd('v', 'vsbjobdeck_2', [82,2]);
AddSWrd('v', 'vsbtrapstats', [23,5]);
AddSWrd('w', 'wafer', [4,4 , 104,10 , 13,25 , 77,10 , 15,5 , 16,5 , 17,5 , 18,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,15 , 26,5 , 27,5 , 31,30]);
AddSWrd('w', 'wafer-level', [138,2]);
AddSWrd('w', 'want', [33,20 , 130,2 , 36,2 , 100,5 , 86,2 , 104,10 , 13,20 , 77,40 , 110,10]);
AddSWrd('w', 'warned', [13,10]);
AddSWrd('w', 'warning', [33,20 , 13,30 , 77,10 , 46,25 , 16,10 , 112,10 , 17,10 , 18,10 , 20,25 , 21,10 , 22,10 , 23,10 , 55,4 , 24,30 , 26,5 , 123,2 , 124,25 , 125,10 , 95,6]);
AddSWrd('w', 'warnings', [54,2 , 123,2 , 124,20 , 45,5]);
AddSWrd('w', 'warns', [13,10]);
AddSWrd('w', 'ways', [16,5 , 131,2 , 22,5 , 26,5 , 27,5 , 12,5 , 13,10]);
AddSWrd('w', 'weighed', [104,10]);
AddSWrd('w', 'weighted', [103,2 , 104,5]);
AddSWrd('w', 'whatever', [16,5 , 22,5 , 26,5 , 27,5]);
AddSWrd('w', 'whereas', [12,5]);
AddSWrd('w', 'wherever', [25,5]);
AddSWrd('w', 'whether', [17,5 , 20,5 , 100,10 , 8,2 , 104,10 , 105,2 , 108,10 , 45,5 , 77,10 , 78,2 , 79,2]);
AddSWrd('w', 'whichever', [13,10]);
AddSWrd('w', 'white', [104,20]);
AddSWrd('w', 'whole', [57,2]);
AddSWrd('w', 'whose', [33,10 , 98,2 , 130,2 , 100,5 , 104,10 , 13,35 , 77,20 , 110,10 , 16,5 , 22,5 , 118,10 , 26,5 , 27,5]);
AddSWrd('w', 'wide', [14,10]);
AddSWrd('w', 'wider', [122,2 , 63,2]);
AddSWrd('w', 'width', [96,55 , 33,25 , 34,10 , 102,12 , 104,20 , 13,5 , 77,20 , 14,40 , 18,5 , 20,35 , 21,30 , 22,30 , 118,10 , 23,35 , 24,55 , 25,10 , 59,2]);
AddSWrd('w', 'width_jb1_1', [33,25]);
AddSWrd('w', 'width_jb2_1', [33,25]);
AddSWrd('w', 'window', [18,20 , 55,2 , 103,16 , 104,305 , 42,15 , 138,8 , 15,5]);
AddSWrd('w', 'windows', [102,2 , 103,6 , 104,40]);
AddSWrd('w', 'wish', [82,2 , 110,20]);
AddSWrd('w', 'within', [134,2 , 8,4 , 9,2 , 12,35 , 13,20 , 77,50 , 14,10 , 79,2 , 82,2 , 24,20 , 25,5 , 30,2 , 31,35 , 95,2 , 32,6 , 96,30 , 33,60 , 34,5 , 35,10 , 100,15 , 102,2 , 103,2 , 104,110 , 105,8 , 106,30 , 44,15 , 108,30 , 110,30 , 112,30 , 51,10 , 116,10 , 56,4 , 122,2 , 62,2]);
AddSWrd('w', 'without', [96,5 , 17,5 , 33,10 , 35,10 , 117,20 , 103,2 , 24,10 , 104,10 , 25,5 , 10,10 , 77,10 , 79,2]);
AddSWrd('w', 'word', [35,5 , 44,5]);
AddSWrd('w', 'words', [17,5 , 100,5 , 7,15 , 77,10 , 109,2]);
AddSWrd('w', 'work', [119,10 , 27,5 , 44,5 , 31,10]);
AddSWrd('w', 'work-arounds', [120,2]);
AddSWrd('w', 'workbench', [5,4]);
AddSWrd('w', 'workflow', [5,30 , 102,30 , 9,32]);
AddSWrd('w', 'working', [17,5 , 68,2 , 134,2]);
AddSWrd('w', 'works', [118,5 , 104,10 , 77,20 , 14,10]);
AddSWrd('w', 'world', [108,5]);
AddSWrd('w', 'worst', [131,2]);
AddSWrd('w', 'wrap', [36,2 , 103,2 , 104,50]);
AddSWrd('w', 'write', [17,5 , 4,2 , 100,5 , 53,2 , 103,4 , 104,25 , 9,2 , 76,5 , 92,2 , 13,10 , 77,10]);
AddSWrd('w', 'writer', [16,10 , 17,5 , 5,2 , 133,4 , 26,5 , 27,5 , 14,5]);
AddSWrd('w', 'writers', [4,2 , 21,10 , 22,5 , 23,15 , 24,20]);
AddSWrd('w', 'writes', [96,5 , 98,2 , 100,5 , 53,4 , 104,35 , 26,5 , 27,5]);
AddSWrd('w', 'writing', [16,5 , 33,30 , 130,2 , 4,2 , 104,10 , 120,2 , 92,2 , 13,20 , 77,20 , 14,5]);
AddSWrd('w', 'written', [96,10 , 33,50 , 130,2 , 100,5 , 38,2 , 104,30 , 76,10 , 13,20 , 77,20 , 109,2 , 110,5 , 79,2 , 16,10 , 17,20 , 18,5 , 116,10 , 117,10 , 22,10 , 118,10 , 119,10 , 25,20 , 125,5]);
AddSWrd('w', 'wxy', [104,45 , 138,8]);
AddSWrd('x', 'x-axis', [49,10]);
AddSWrd('x', 'x-dimension', [21,10 , 22,15 , 23,15 , 24,30]);
AddSWrd('x', 'x-direction', [104,10 , 27,5]);
AddSWrd('x', 'x-merged', [27,5]);
AddSWrd('x', 'x-monotone', [27,5]);
AddSWrd('x', 'x-y', [12,5]);
AddSWrd('x', 'x1-x2', [85,2]);
AddSWrd('x', 'x2y', [104,15]);
AddSWrd('x', 'x_extent', [16,25]);
AddSWrd('x', 'x_merged', [27,15]);
AddSWrd('x', 'xdraw', [97,5]);
AddSWrd('x', 'xor', [33,15 , 49,5 , 34,10 , 73,2 , 77,25 , 79,2]);
AddSWrd('x', 'xor_lay1_lay2', [33,25]);
AddSWrd('x', 'xor_lyr', [33,20]);
AddSWrd('x', 'xxx', [41,4]);
AddSWrd('x', 'xxxx', [122,2]);
AddSWrd('x', 'xxxxx', [41,2]);
AddSWrd('x', 'xy2', [104,15]);
AddSWrd('x', 'xyr203', [82,4]);
AddSWrd('y', 'y-axis', [49,10]);
AddSWrd('y', 'y-dimension', [20,5 , 21,10 , 22,10 , 23,10 , 24,20]);
AddSWrd('y', 'y-dimensions', [27,5]);
AddSWrd('y', 'y-direction', [104,10 , 27,5]);
AddSWrd('y', 'y-directions', [96,10]);
AddSWrd('y', 'y-merged', [27,5]);
AddSWrd('y', 'y-monotone', [27,10]);
AddSWrd('y', 'y1-y2', [85,2]);
AddSWrd('y', 'y_extent', [16,25]);
AddSWrd('y', 'y_merged', [27,15]);
AddSWrd('y', 'your_software_installation_location', [139,2]);
AddSWrd('z', 'zero', [104,70 , 26,10 , 27,5 , 94,2]);
AddSWrd('z', 'zlib', [22,5]);
AddSWrd('num', '~10%', [13,5]);
AddSWrd('d', '?data_search_path', [104,20]);
AddSWrd('d', '?drc', [28,4]);
AddSWrd('d', '?dump', [13,10]);
AddSWrd('e', '?ejobdeck_pattern_suffix', [104,20]);
AddSWrd('f', '?fastindex', [104,10]);
AddSWrd('h', '?hier', [28,2]);
AddSWrd('h', '?hyper', [28,2]);
AddSWrd('l', '?levels', [104,30]);
AddSWrd('n', '?nocheck', [104,20]);
AddSWrd('p', '?pto', [28,6]);
AddSWrd('r', '?remotedata', [28,2]);
AddSWrd('t', '?turbo_litho', [9,2]);
AddSWrd('w', '?withindex', [13,5]);
