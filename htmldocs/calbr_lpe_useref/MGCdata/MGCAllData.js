
// Copyright 2014 Mentor Graphics Corporation
//
//    All Rights Reserved.
//
// THIS WORK CONTAINS TRADE SECRET
// AND PROPRIETARY INFORMATION WHICH IS THE
// PROPERTY OF MENTOR GRAPHICS
// CORPORATION OR ITS LICENSORS AND IS
// SUBJECT TO LICENSE TERMS.
//
//
mLoadHandle = 'calbr_lpe_useref';
//
// Load document variables
MGCAddBookVar("TemplateVer", "mgc_mgchelp_v4.3.000");
MGCAddBookVar("FirstPage", "title1");
MGCAddBookVar("FirstTopic", "calbr_lpe_useref_title");
MGCAddBookVar("SWRelease", "v2021.2");
MGCAddBookVar("DocHandle", "calbr_lpe_useref");
MGCAddBookVar("DocTitle", "Calibre® Local Printability Enhancement User’s and Reference Manual");
MGCAddBookVar("IHUBHandle", ["calbr_ih"]);
MGCAddBookVar("ChecklinksDB", "");
MGCAddBookVar("ChecklinksRelease", "calibre");
MGCAddBookVar("FMSubTitle", "none");
MGCAddBookVar("LicenseType", "EULA");
MGCAddBookVar("Language", "en");
MGCAddBookVar("BETA", false);
MGCAddBookVar("ALPHA", false);
MGCAddBookVar("Draft", false);
MGCAddBookVar("Copyright", "2021");

//
// Load file list
MGCABF("PAGE", "TITLE");
MGCABF("topics/title1", "Calibre® Local Printability Enhancement User’s and Reference Manual");
MGCABF("figures", "List of Figures");
MGCABF("man_lot1", "List of Tables");
MGCABF("topics/MGCChap_IntroductionCalibreLpe_id442e258c", "Introduction to Calibre LPE");
MGCABF("topics/Concept_CalibreLpeOverview_id0f3c8668", "Calibre LPE Overview");
MGCABF("topics/Concept_CalibreLpeWorkflow_id85fb68be", "Calibre LPE Workflow");
MGCABF("topics/Concept_CalibreLpeTerminology_id2c874c9d", "Calibre LPE Terminology");
MGCABF("topics/Concept_CalibreLpeRequirements_id0f46806a", "Calibre LPE Requirements");
MGCABF("topics/General_SyntaxConventions_idc85180b2", "Syntax Conventions");
MGCABF("topics/General_CalibreLpeModesOperation_id558b0564", "Calibre LPE Modes of Operation");
MGCABF("topics/MGCChap_CalibreLpeCommandReference_id06ae6c47", "Calibre LPE Command Reference");
MGCABF("topics/Command_ScriptGenerator_id4df8c272", "calibre -lpe");
MGCABF("topics/Contain_SvrfCommands_idd84abda6", "SVRF Commands");
MGCABF("topics/Command_LithoFile_idb1216fa1", "LITHO FILE");
MGCABF("topics/Command_RetRefine_id44a869d9", "RET REFINE");
MGCABF("topics/FileRef_LithoSetupFileFormatRetRefine_idba3107d7", "Litho Setup File Format for RET REFINE");
MGCABF("topics/Contain_LithoSetupFileCommands_idf8488858", "Litho Setup File Commands");
MGCABF("topics/Command_DenseopcContextParameters_idbcb6eea1", "denseopc_context_parameters");
MGCABF("topics/Command_DenseopcCopyFragments_id551124f6", "denseopc_copy_fragments");
MGCABF("topics/Command_DenseopcFragmentCoincident_ideaec5792", "denseopc_fragment_coincident");
MGCABF("topics/Command_DenseopcFragmentNearlyCoincident_id101e587a", "denseopc_fragment_nearly_coincident");
MGCABF("topics/Command_DenseopcInitMode_idacca4c7b", "denseopc_init_mode");
MGCABF("topics/Command_DenseopcInsertCorrection_id4d575042", "denseopc_insert_correction");
MGCABF("topics/Command_DenseopcLimitExcess_id3eea671a", "denseopc_limit_excess");
MGCABF("topics/Command_DenseopcPreNotchfill_idacb0b62d", "denseopc_pre_notchfill");
MGCABF("topics/Command_DenseopcSmoothCorrections_id0a2a19f4", "denseopc_smooth_corrections");
MGCABF("topics/Command_Denseopcusecorrectionmap_id658e11a7", "denseopc_use_correction_map");
MGCABF("topics/Command_FragmentOptimize_id50725b58", "fragment_optimize… reset_displacement");
MGCABF("topics/Command_Job4Finetune_id7355d729", "job 4 finetune");
MGCABF("topics/Command_Layer_idcaf412ac", "layer");
MGCABF("topics/Command_MinFragLen_id8cfda793", "min_frag_len");
MGCABF("topics/Command_MinSpace_id245a5430", "min_space");
MGCABF("topics/Command_MinWidth_id4021272e", "min_width");
MGCABF("topics/Command_MrcMinLength_id6394470a", "mrc_min_length");
MGCABF("topics/Command_MrcMinRectLength_id3f11817b", "mrc_min_rect_length");
MGCABF("topics/Command_MrcMinRectWidth_idad0bc660", "mrc_min_rect_width");
MGCABF("topics/Command_MrcMinSquare_id5425c780", "mrc_min_square");
MGCABF("topics/Command_MrcSmallFeatureSize_id4849e6af", "mrc_small_feature_size");
MGCABF("topics/Command_PickRegion_id006b429a", "pick_region");
MGCABF("topics/Command_PxopcInitMode_idd5c87a8f", "pxopc_init_mode");
MGCABF("topics/Command_PxopcTransitionRegion_id2e98099f", "pxopc_transition_region");
MGCABF("topics/Command_PxopcWeightLayer_id463ac65b", "pxopc_weight_layer");
MGCABF("topics/Command_RearrangementDisable_idb2f6bfc1", "rearrangement_disable");
MGCABF("topics/Command_RefineDistance_idc8549c2a", "refine_distance");
MGCABF("topics/Command_RefineExec_id68475ca4", "refine_exec");
MGCABF("topics/Command_RefineMap_idb735509b", "refine_map");
MGCABF("topics/Command_RefineMarkers_id14e52224", "refine_markers");
MGCABF("topics/Command_RefineMarkersLimit_idc3d2682b", "refine_markers_limit");
MGCABF("topics/Command_RefineMarkersStyle_id9dc81b2b", "refine_markers_style");
MGCABF("topics/Command_RefinePatterns_id3e4001d5", "refine_patterns");
MGCABF("topics/Command_RefineProcess_idf0987578", "refine_process");
MGCABF("topics/Command_RefinePruneMarkers_idd025db01", "refine_prune_markers");
MGCABF("topics/Command_RefineRegions_ide30c32c7", "refine_regions");
MGCABF("topics/Command_RefineStopIterations_ida8240350", "refine_stop_iterations");
MGCABF("topics/Command_RefineStopLayer_id6bc517fc", "refine_stop_layer");
MGCABF("topics/Command_RefineUpdateLayer_id2e1c620e", "refine_update_layer");
MGCABF("topics/Command_RefineVisibleSim_id0114b712", "refine_visible_sim");
MGCABF("topics/Command_RejectDuplicateLayers_id6a53f933", "reject_duplicate_layers");
MGCABF("topics/Command_SmartCutDisable_id0153210a", "smart_cut_disable");
MGCABF("topics/MGCChap_CalibreLpeBestPractices_id7b760a78", "Calibre LPE Best Practices");
MGCABF("topics/General_LpeSetupBestPractices_id9c294561", "LPE Setup Best Practices");
MGCABF("topics/General_ToolInteractionBestPractices_id1074cb0e", "Tool Interaction Best Practices");
MGCABF("topics/General_MemoryManagementBestPractices_id04f9f594", "Memory Management Best Practices");
MGCABF("topics/Concept_PreExistingMrcErrors_id64e53628", "Pre-Existing MRC Errors");
MGCABF("topics/TaskTop_BrowsingLpeResults_id26c92b4c", "Browsing LPE Results");
MGCABF("topics/MGCThir_ThirdPartyInformation_id6cba59fd", "Third-Party Information");

//
// Load TOC data
MGCAddTOC(1, 2, "List of Figures", "");
MGCAddTOC(1, 3, "List of Tables", "");
MGCAddTOC(1, 4, "Introduction to Calibre LPE", "id442e258c-30c8-49bd-bd62-5b8d2120e8bf");
MGCAddTOC(2, 5, "Calibre LPE Overview", "id0f3c8668-a5c3-42cd-80c8-e083180a4097");
MGCAddTOC(2, 6, "Calibre LPE Workflow", "id85fb68be-3a7d-4b46-9bc1-c7108380e676");
MGCAddTOC(2, 7, "Calibre LPE Terminology", "id2c874c9d-c918-45d1-80a0-e595359873cd");
MGCAddTOC(2, 8, "Calibre LPE Requirements", "id0f46806a-34c6-49b5-a9c1-96677205ff9a");
MGCAddTOC(2, 9, "Syntax Conventions", "idc85180b2-e816-4599-a4db-40042967ac1e");
MGCAddTOC(2, 10, "Calibre LPE Modes of Operation", "id558b0564-a2a8-41d6-bd62-4b93e891c3ef");
MGCAddTOC(1, 11, "Calibre LPE Command Reference", "id06ae6c47-1120-481c-9593-5bd6e91ccd2a");
MGCAddTOC(2, 12, "calibre -lpe", "id4df8c272-bf4d-43fd-9249-5e9635df3028");
MGCAddTOC(2, 13, "SVRF Commands", "idd84abda6-4275-4b48-9657-914245cb6606");
MGCAddTOC(3, 14, "LITHO FILE", "idb1216fa1-4867-4f9e-b215-02334f9754f6");
MGCAddTOC(3, 15, "RET REFINE", "id44a869d9-c058-43da-ba3c-61732497e980");
MGCAddTOC(2, 16, "Litho Setup File Format for RET REFINE", "idba3107d7-10df-4e05-82c3-1bc4243e7734");
MGCAddTOC(2, 17, "Litho Setup File Commands", "idf8488858-d704-4170-bff8-4bdfecceaa4d");
MGCAddTOC(3, 18, "denseopc_context_parameters", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f");
MGCAddTOC(3, 19, "denseopc_copy_fragments", "id551124f6-a68f-40f7-8c20-3c14729fdb42");
MGCAddTOC(3, 20, "denseopc_fragment_coincident", "ideaec5792-c0da-4ecd-b96d-dc5f332a7d57");
MGCAddTOC(3, 21, "denseopc_fragment_nearly_coincident", "id101e587a-cfcb-49cc-93f3-68bf7ae99e83");
MGCAddTOC(3, 22, "denseopc_init_mode", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3");
MGCAddTOC(3, 23, "denseopc_insert_correction", "id4d575042-2584-410f-8a11-61ec45b49850");
MGCAddTOC(3, 24, "denseopc_limit_excess", "id3eea671a-fe39-4621-af68-e135210c862d");
MGCAddTOC(3, 25, "denseopc_pre_notchfill", "idacb0b62d-3209-45a7-b5b5-2130766ddf41");
MGCAddTOC(3, 26, "denseopc_smooth_corrections", "id0a2a19f4-7fbb-4abc-8c33-10995d960b5c");
MGCAddTOC(3, 27, "denseopc_use_correction_map", "id658e11a7-15e5-4c6c-92cd-199aa66b994c");
MGCAddTOC(3, 28, "fragment_optimize… reset_displacement", "id50725b58-5f63-4f51-9a5e-8730525c569d");
MGCAddTOC(3, 29, "job 4 finetune", "id7355d729-a8e7-4717-918e-7322a08522e5");
MGCAddTOC(3, 30, "layer", "idcaf412ac-2854-4120-972c-d1b2544d56ba");
MGCAddTOC(3, 31, "min_frag_len", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf");
MGCAddTOC(3, 32, "min_space", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c");
MGCAddTOC(3, 33, "min_width", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2");
MGCAddTOC(3, 34, "mrc_min_length", "id6394470a-d2ef-4793-b3d5-23640f20b1de");
MGCAddTOC(3, 35, "mrc_min_rect_length", "id3f11817b-65c4-4977-bf46-f0451a71bb74");
MGCAddTOC(3, 36, "mrc_min_rect_width", "idad0bc660-1cd3-461f-99ac-042451586cec");
MGCAddTOC(3, 37, "mrc_min_square", "id5425c780-0d3a-4aa6-8976-226b85fe6e84");
MGCAddTOC(3, 38, "mrc_small_feature_size", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362");
MGCAddTOC(3, 39, "pick_region", "id006b429a-f678-4c30-915e-97d5b6bc4ea7");
MGCAddTOC(3, 40, "pxopc_init_mode", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2");
MGCAddTOC(3, 41, "pxopc_transition_region", "id2e98099f-4701-4dbc-b3c0-5f14da732dcf");
MGCAddTOC(3, 42, "pxopc_weight_layer", "id463ac65b-1888-4894-86e6-38813b598c7c");
MGCAddTOC(3, 43, "rearrangement_disable", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc");
MGCAddTOC(3, 44, "refine_distance", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4");
MGCAddTOC(3, 45, "refine_exec", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5");
MGCAddTOC(3, 46, "refine_map", "idb735509b-12c0-4677-9cae-38820102e4d8");
MGCAddTOC(3, 47, "refine_markers", "id14e52224-69aa-4602-b2ef-7a92db8f8dca");
MGCAddTOC(3, 48, "refine_markers_limit", "idc3d2682b-e254-4927-bc60-eae8578d0881");
MGCAddTOC(3, 49, "refine_markers_style", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6");
MGCAddTOC(3, 50, "refine_patterns", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da");
MGCAddTOC(3, 51, "refine_process", "idf0987578-1e12-4255-be15-fdb6c9c82f47");
MGCAddTOC(3, 52, "refine_prune_markers", "idd025db01-1a50-49b9-acc9-b01716400dd8");
MGCAddTOC(3, 53, "refine_regions", "ide30c32c7-6089-4a97-b27f-820a69c07a67");
MGCAddTOC(3, 54, "refine_stop_iterations", "ida8240350-72de-40b4-bea8-65ddb1b4d61d");
MGCAddTOC(3, 55, "refine_stop_layer", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12");
MGCAddTOC(3, 56, "refine_update_layer", "id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267");
MGCAddTOC(3, 57, "refine_visible_sim", "id0114b712-07e2-48fb-b5fb-11c5613d018a");
MGCAddTOC(3, 58, "reject_duplicate_layers", "id6a53f933-aca4-49b8-bcf9-e450931b03e9");
MGCAddTOC(3, 59, "smart_cut_disable", "id0153210a-8d37-443f-833a-b8004e83d663");
MGCAddTOC(1, 60, "Calibre LPE Best Practices", "id7b760a78-ac09-454d-80d1-a079276fe5d9");
MGCAddTOC(2, 61, "LPE Setup Best Practices", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0");
MGCAddTOC(2, 62, "Tool Interaction Best Practices", "id1074cb0e-7141-4b24-8214-29adf9bccd65");
MGCAddTOC(2, 63, "Memory Management Best Practices", "id04f9f594-81de-485e-906d-7aeabaf0dbfb");
MGCAddTOC(2, 64, "Pre-Existing MRC Errors", "id64e53628-f97e-4c07-bacb-b3dc5bf6a6d2");
MGCAddTOC(2, 65, "Browsing LPE Results", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859");
MGCAddTOC(1, 66, "Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e");

//
// Load Topic map data
MGCAddTopic(["manual title", "", 1, "Title", 0]);
MGCAddTopic(["$figures.title", "", 2, "List of Figures", 0]);
MGCAddTopic(["$tables.title", "", 3, "List of Tables", 0]);
MGCAddTopic(["Introduction to Calibre LPE", "id442e258c-30c8-49bd-bd62-5b8d2120e8bf", 4, "mgcsec-H1", 0]);
MGCAddTopic(["id442e258c-30c8-49bd-bd62-5b8d2120e8bf", "id442e258c-30c8-49bd-bd62-5b8d2120e8bf", 4, "", 0]);
MGCAddTopic(["Calibre LPE Overview", "id0f3c8668-a5c3-42cd-80c8-e083180a4097", 5, "con-H2", 0]);
MGCAddTopic(["Calibre LPE as Part of the Post-Tapeout Flow", "id41cb19cd-8a45-4a68-93d0-84b8d5c7c6ac", 5, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id0f3c8668-a5c3-42cd-80c8-e083180a4097", "id0f3c8668-a5c3-42cd-80c8-e083180a4097", 5, "con-topic-H2", 0]);
MGCAddTopic(["id41cb19cd-8a45-4a68-93d0-84b8d5c7c6ac", "id0f3c8668-a5c3-42cd-80c8-e083180a4097__id41cb19cd-8a45-4a68-93d0-84b8d5c7c6ac", 5, "con-topic-H2", 0]);
MGCAddTopic(["Calibre LPE Workflow", "id85fb68be-3a7d-4b46-9bc1-c7108380e676", 6, "con-H2", 0]);
MGCAddTopic(["High-Level Calibre LPE Workflow", "id9624d3a7-0808-4365-8cfb-295400d72e66", 6, "con-topic-H2", 0]);
MGCAddTopic(["Recommended Calibre LPE Workflow", "id97c399d4-641e-447e-b09c-0ef65b74d913", 6, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id85fb68be-3a7d-4b46-9bc1-c7108380e676", "id85fb68be-3a7d-4b46-9bc1-c7108380e676", 6, "con-topic-H2", 0]);
MGCAddTopic(["id9624d3a7-0808-4365-8cfb-295400d72e66", "id85fb68be-3a7d-4b46-9bc1-c7108380e676__id9624d3a7-0808-4365-8cfb-295400d72e66", 6, "con-topic-H2", 0]);
MGCAddTopic(["id97c399d4-641e-447e-b09c-0ef65b74d913", "id85fb68be-3a7d-4b46-9bc1-c7108380e676__id97c399d4-641e-447e-b09c-0ef65b74d913", 6, "con-topic-H2", 0]);
MGCAddTopic(["Calibre LPE Terminology", "id2c874c9d-c918-45d1-80a0-e595359873cd", 7, "con-H2", 0]);
MGCAddTopic(["Calibre LPE Regions", "id51619d08-76e7-4ef2-bd8c-04b5f409b64b", 7, "con-L0-FigureTitle", 0]);
MGCAddTopic(["id2c874c9d-c918-45d1-80a0-e595359873cd", "id2c874c9d-c918-45d1-80a0-e595359873cd", 7, "con-topic-H2", 0]);
MGCAddTopic(["id51619d08-76e7-4ef2-bd8c-04b5f409b64b", "id2c874c9d-c918-45d1-80a0-e595359873cd__id51619d08-76e7-4ef2-bd8c-04b5f409b64b", 7, "con-topic-H2", 0]);
MGCAddTopic(["Calibre LPE Requirements", "id0f46806a-34c6-49b5-a9c1-96677205ff9a", 8, "con-H2", 0]);
MGCAddTopic(["id0f46806a-34c6-49b5-a9c1-96677205ff9a", "id0f46806a-34c6-49b5-a9c1-96677205ff9a", 8, "con-topic-H2", 0]);
MGCAddTopic(["id98bfc675-c647-4f5a-bd37-011a3838a924", "id0f46806a-34c6-49b5-a9c1-96677205ff9a__id98bfc675-c647-4f5a-bd37-011a3838a924", 8, "con-topic-H2", 0]);
MGCAddTopic(["idc0ae900a-6f7c-4e24-b368-f8e318cbf5a0", "id0f46806a-34c6-49b5-a9c1-96677205ff9a__idc0ae900a-6f7c-4e24-b368-f8e318cbf5a0", 8, "con-topic-H2", 0]);
MGCAddTopic(["id3f694606-d1df-4df4-b01a-a4b4cf863c80", "id0f46806a-34c6-49b5-a9c1-96677205ff9a__id3f694606-d1df-4df4-b01a-a4b4cf863c80", 8, "con-topic-H2", 0]);
MGCAddTopic(["id0114896c-bb0f-4b21-81ea-1c66391d0513", "id0f46806a-34c6-49b5-a9c1-96677205ff9a__id0114896c-bb0f-4b21-81ea-1c66391d0513", 8, "con-topic-H2", 0]);
MGCAddTopic(["Syntax Conventions", "idc85180b2-e816-4599-a4db-40042967ac1e", 9, "ref-H2NoSplit", 0]);
MGCAddTopic(["Syntax Conventions", "id57962573-6672-45c9-bd76-a0b9d5cc5240", 9, "TableTitle", 0]);
MGCAddTopic(["idc85180b2-e816-4599-a4db-40042967ac1e", "idc85180b2-e816-4599-a4db-40042967ac1e", 9, "ref-topic-H2", 0]);
MGCAddTopic(["id30e82381-5e83-40ca-b949-e7726e5f18c6", "idc85180b2-e816-4599-a4db-40042967ac1e__id30e82381-5e83-40ca-b949-e7726e5f18c6", 9, "ref-topic-H2", 0]);
MGCAddTopic(["id57962573-6672-45c9-bd76-a0b9d5cc5240", "idc85180b2-e816-4599-a4db-40042967ac1e__id57962573-6672-45c9-bd76-a0b9d5cc5240", 9, "ref-topic-H2", 0]);
MGCAddTopic(["Calibre LPE Modes of Operation", "id558b0564-a2a8-41d6-bd62-4b93e891c3ef", 10, "ref-H2", 0]);
MGCAddTopic(["id558b0564-a2a8-41d6-bd62-4b93e891c3ef", "id558b0564-a2a8-41d6-bd62-4b93e891c3ef", 10, "ref-topic-H2", 0]);
MGCAddTopic(["iddbefb469-7887-47e3-98d0-5046a3fd11fb", "id558b0564-a2a8-41d6-bd62-4b93e891c3ef__iddbefb469-7887-47e3-98d0-5046a3fd11fb", 10, "ref-topic-H2", 0]);
MGCAddTopic(["Calibre LPE Command Reference", "id06ae6c47-1120-481c-9593-5bd6e91ccd2a", 11, "mgcsec-H1", 0]);
MGCAddTopic(["id06ae6c47-1120-481c-9593-5bd6e91ccd2a", "id06ae6c47-1120-481c-9593-5bd6e91ccd2a", 11, "", 0]);
MGCAddTopic(["calibre -lpe", "id4df8c272-bf4d-43fd-9249-5e9635df3028", 12, "", 0]);
MGCAddTopic(["Input SVRF for LPE Script Generator", "idb8431e9f-361c-4d57-8ea1-2b8c63506a03", 12, "", 0]);
MGCAddTopic(["Output SVRF From LPE Script Generator", "idc2bf45f5-f5a0-498c-bd28-56d425f64de8", 12, "", 0]);
MGCAddTopic(["id4df8c272-bf4d-43fd-9249-5e9635df3028", "id4df8c272-bf4d-43fd-9249-5e9635df3028", 12, "", 0]);
MGCAddTopic(["idbe62d58a-69ce-43d3-a4c6-aee3283d88ca", "id4df8c272-bf4d-43fd-9249-5e9635df3028__idbe62d58a-69ce-43d3-a4c6-aee3283d88ca", 12, "", 0]);
MGCAddTopic(["id469fcecb-790b-4724-a4a4-a86ce7da08ff", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id469fcecb-790b-4724-a4a4-a86ce7da08ff", 12, "", 0]);
MGCAddTopic(["idbaf1960d-5f24-48e9-8820-516f82b38b33", "id4df8c272-bf4d-43fd-9249-5e9635df3028__idbaf1960d-5f24-48e9-8820-516f82b38b33", 12, "", 0]);
MGCAddTopic(["id839d32de-408a-4b1f-b5b2-99cbeeb22c4f", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id839d32de-408a-4b1f-b5b2-99cbeeb22c4f", 12, "", 0]);
MGCAddTopic(["id1719177b-3a37-41d5-8bce-c59b30e5695f", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id1719177b-3a37-41d5-8bce-c59b30e5695f", 12, "", 0]);
MGCAddTopic(["id0bd7d719-83a2-440b-8d8d-d217f53aa4da", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id0bd7d719-83a2-440b-8d8d-d217f53aa4da", 12, "", 0]);
MGCAddTopic(["idd3f3fde8-b60e-4d30-861c-b510a60f09c1", "id4df8c272-bf4d-43fd-9249-5e9635df3028__idd3f3fde8-b60e-4d30-861c-b510a60f09c1", 12, "", 0]);
MGCAddTopic(["id19e049c9-7a0b-46ea-9bab-077cbc6c3af3", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id19e049c9-7a0b-46ea-9bab-077cbc6c3af3", 12, "", 0]);
MGCAddTopic(["id9b949ad7-d543-4f6f-8bba-58946e874343", "id4df8c272-bf4d-43fd-9249-5e9635df3028__id9b949ad7-d543-4f6f-8bba-58946e874343", 12, "", 0]);
MGCAddTopic(["idb8431e9f-361c-4d57-8ea1-2b8c63506a03", "id4df8c272-bf4d-43fd-9249-5e9635df3028__idb8431e9f-361c-4d57-8ea1-2b8c63506a03", 12, "", 0]);
MGCAddTopic(["idc2bf45f5-f5a0-498c-bd28-56d425f64de8", "id4df8c272-bf4d-43fd-9249-5e9635df3028__idc2bf45f5-f5a0-498c-bd28-56d425f64de8", 12, "", 0]);
MGCAddTopic(["SVRF Commands", "idd84abda6-4275-4b48-9657-914245cb6606", 13, "mgcsec-H2", 0]);
MGCAddTopic(["Calibre LPE SVRF Commands", "id5fff19d5-c18a-46d9-9680-f8ef82793af4", 13, "ct-topic-H2", 0]);
MGCAddTopic(["idd84abda6-4275-4b48-9657-914245cb6606", "idd84abda6-4275-4b48-9657-914245cb6606", 13, "ct-topic-H2", 0]);
MGCAddTopic(["id5fff19d5-c18a-46d9-9680-f8ef82793af4", "idd84abda6-4275-4b48-9657-914245cb6606__id5fff19d5-c18a-46d9-9680-f8ef82793af4", 13, "ct-topic-H2", 0]);
MGCAddTopic(["LITHO FILE", "idb1216fa1-4867-4f9e-b215-02334f9754f6", 14, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idb1216fa1-4867-4f9e-b215-02334f9754f6", "idb1216fa1-4867-4f9e-b215-02334f9754f6", 14, "ct-topic-H3", 0]);
MGCAddTopic(["id2e86537f-5565-414d-a74f-f4a4d83a12da", "idb1216fa1-4867-4f9e-b215-02334f9754f6__id2e86537f-5565-414d-a74f-f4a4d83a12da", 14, "cmd-arg", 0]);
MGCAddTopic(["id719c7f87-a335-4166-9b19-dd9cee79f4f1", "idb1216fa1-4867-4f9e-b215-02334f9754f6__id719c7f87-a335-4166-9b19-dd9cee79f4f1", 14, "cmd-arg", 0]);
MGCAddTopic(["idad7741a5-8392-4c68-af58-e8de3b15774a", "idb1216fa1-4867-4f9e-b215-02334f9754f6__idad7741a5-8392-4c68-af58-e8de3b15774a", 14, "ct-topic-H3", 0]);
MGCAddTopic(["idbd741e3f-6200-4f6d-af32-7a426122503c", "idb1216fa1-4867-4f9e-b215-02334f9754f6__idbd741e3f-6200-4f6d-af32-7a426122503c", 14, "ct-topic-H3", 0]);
MGCAddTopic(["RET REFINE", "id44a869d9-c058-43da-ba3c-61732497e980", 15, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id44a869d9-c058-43da-ba3c-61732497e980", "id44a869d9-c058-43da-ba3c-61732497e980", 15, "ct-topic-H3", 0]);
MGCAddTopic(["id791356a7-e914-4bc2-979f-2e72ea54340f", "id44a869d9-c058-43da-ba3c-61732497e980__id791356a7-e914-4bc2-979f-2e72ea54340f", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["id869a82d3-b4f4-4faf-8538-34279444f2e1", "id44a869d9-c058-43da-ba3c-61732497e980__id869a82d3-b4f4-4faf-8538-34279444f2e1", 15, "cmd-arg", 0]);
MGCAddTopic(["id9df95f9f-ca03-42b2-adcc-eb35e8888076", "id44a869d9-c058-43da-ba3c-61732497e980__id9df95f9f-ca03-42b2-adcc-eb35e8888076", 15, "cmd-arg", 0]);
MGCAddTopic(["idf3a1dfe5-18de-42de-b815-8babe008912a", "id44a869d9-c058-43da-ba3c-61732497e980__idf3a1dfe5-18de-42de-b815-8babe008912a", 15, "cmd-argopt-B1", 0]);
MGCAddTopic(["id12544536-aa1d-4169-b207-1d231c337d20", "id44a869d9-c058-43da-ba3c-61732497e980__id12544536-aa1d-4169-b207-1d231c337d20", 15, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2085142b-9252-4b7d-8279-7c867971c1f5", "id44a869d9-c058-43da-ba3c-61732497e980__id2085142b-9252-4b7d-8279-7c867971c1f5", 15, "cmd-arg", 0]);
MGCAddTopic(["ide682a31a-25ca-4ecd-b843-058cd747cf0c", "id44a869d9-c058-43da-ba3c-61732497e980__ide682a31a-25ca-4ecd-b843-058cd747cf0c", 15, "ct-topic-H3", 0]);
MGCAddTopic(["ide5076245-d27b-41a1-8022-53d069855fcd", "id44a869d9-c058-43da-ba3c-61732497e980__ide5076245-d27b-41a1-8022-53d069855fcd", 15, "ct-topic-H3", 0]);
MGCAddTopic(["Litho Setup File Format for RET REFINE", "idba3107d7-10df-4e05-82c3-1bc4243e7734", 16, "file-z.Cmd/Func", 0]);
MGCAddTopic(["Required Commands for RET REFINE Setup Files", "idba3107d7-10df-4e05-82c3-1bc4243e7734", 16, "TableTitle", 0]);
MGCAddTopic(["idba3107d7-10df-4e05-82c3-1bc4243e7734", "idba3107d7-10df-4e05-82c3-1bc4243e7734", 16, "ct-topic-H3", 0]);
MGCAddTopic(["idad1af5c9-b0a7-4de4-b4e9-78e5ca681645", "idba3107d7-10df-4e05-82c3-1bc4243e7734__idad1af5c9-b0a7-4de4-b4e9-78e5ca681645", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id1cdad6dc-a381-4f4e-8330-69be814d58cf", "idba3107d7-10df-4e05-82c3-1bc4243e7734__id1cdad6dc-a381-4f4e-8330-69be814d58cf", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id39667412-affa-414e-824f-d0672244fa7d", "idba3107d7-10df-4e05-82c3-1bc4243e7734__id39667412-affa-414e-824f-d0672244fa7d", 16, "ct-topic-H3", 0]);
MGCAddTopic(["ideff13d4e-89b6-45f3-90ea-36079a021de6", "idba3107d7-10df-4e05-82c3-1bc4243e7734__ideff13d4e-89b6-45f3-90ea-36079a021de6", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id2333e333-ba5c-4196-87f5-4970c0ca4a4d", "idba3107d7-10df-4e05-82c3-1bc4243e7734__id2333e333-ba5c-4196-87f5-4970c0ca4a4d", 16, "ct-topic-H3", 0]);
MGCAddTopic(["ida8ac922f-497c-44ea-918e-cccbdb7b31aa", "idba3107d7-10df-4e05-82c3-1bc4243e7734__ida8ac922f-497c-44ea-918e-cccbdb7b31aa", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id7ae179bd-1df4-454a-843f-9a8acfcc23d0", "idba3107d7-10df-4e05-82c3-1bc4243e7734__id7ae179bd-1df4-454a-843f-9a8acfcc23d0", 16, "ct-topic-H3", 0]);
MGCAddTopic(["Litho Setup File Commands", "idf8488858-d704-4170-bff8-4bdfecceaa4d", 17, "mgcsec-H2", 0]);
MGCAddTopic(["Calibre LPE Litho Setup File Commands", "id9a98f735-0a16-4faa-9db7-c87138d2f887", 17, "ct-topic-H2", 0]);
MGCAddTopic(["idf8488858-d704-4170-bff8-4bdfecceaa4d", "idf8488858-d704-4170-bff8-4bdfecceaa4d", 17, "ct-topic-H2", 0]);
MGCAddTopic(["id9a98f735-0a16-4faa-9db7-c87138d2f887", "idf8488858-d704-4170-bff8-4bdfecceaa4d__id9a98f735-0a16-4faa-9db7-c87138d2f887", 17, "ct-topic-H2", 0]);
MGCAddTopic(["denseopc_context_parameters", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f", 18, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idbcb6eea1-88a2-44a2-a102-3d1f76a4534f", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f", 18, "ct-topic-H3", 0]);
MGCAddTopic(["id93358b32-8d42-4748-bdcd-4017c3bf47bd", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id93358b32-8d42-4748-bdcd-4017c3bf47bd", 18, "cmd-arg", 0]);
MGCAddTopic(["id2ddd185e-ef07-49df-9c73-a280dca168a4", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id2ddd185e-ef07-49df-9c73-a280dca168a4", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id05cfdfe2-c1aa-49c4-a855-35582aa4dd61", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id05cfdfe2-c1aa-49c4-a855-35582aa4dd61", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2fd8593b-3d67-4ff1-bdb0-5002e2494016", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id2fd8593b-3d67-4ff1-bdb0-5002e2494016", 18, "cmd-arg", 0]);
MGCAddTopic(["id8a3ff801-998f-420d-9a76-2869085d90d0", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id8a3ff801-998f-420d-9a76-2869085d90d0", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc5d409db-dc7d-4e09-ac67-cba8d1bcdef1", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__idc5d409db-dc7d-4e09-ac67-cba8d1bcdef1", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["idc28b782d-d885-4936-8448-7ff2bac20eb8", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__idc28b782d-d885-4936-8448-7ff2bac20eb8", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["id69c8d601-07fe-49ca-8121-dd4e14c6f3f4", "idbcb6eea1-88a2-44a2-a102-3d1f76a4534f__id69c8d601-07fe-49ca-8121-dd4e14c6f3f4", 18, "cmd-argopt-B1", 0]);
MGCAddTopic(["denseopc_copy_fragments", "id551124f6-a68f-40f7-8c20-3c14729fdb42", 19, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id551124f6-a68f-40f7-8c20-3c14729fdb42", "id551124f6-a68f-40f7-8c20-3c14729fdb42", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id093fd162-2751-43ad-8df5-bc687a1f15f0", "id551124f6-a68f-40f7-8c20-3c14729fdb42__id093fd162-2751-43ad-8df5-bc687a1f15f0", 19, "cmd-arg", 0]);
MGCAddTopic(["idbfe32c70-c74c-41a5-a042-a5b119cf4391", "id551124f6-a68f-40f7-8c20-3c14729fdb42__idbfe32c70-c74c-41a5-a042-a5b119cf4391", 19, "cmd-arg", 0]);
MGCAddTopic(["denseopc_fragment_coincident", "ideaec5792-c0da-4ecd-b96d-dc5f332a7d57", 20, "", 0]);
MGCAddTopic(["ideaec5792-c0da-4ecd-b96d-dc5f332a7d57", "ideaec5792-c0da-4ecd-b96d-dc5f332a7d57", 20, "", 0]);
MGCAddTopic(["idfca60b11-5cdb-4b1b-abd7-e4c4e2800e8c", "ideaec5792-c0da-4ecd-b96d-dc5f332a7d57__idfca60b11-5cdb-4b1b-abd7-e4c4e2800e8c", 20, "", 0]);
MGCAddTopic(["id74fa5b91-1d16-419f-a756-e114d4fffa4a", "ideaec5792-c0da-4ecd-b96d-dc5f332a7d57__id74fa5b91-1d16-419f-a756-e114d4fffa4a", 20, "", 0]);
MGCAddTopic(["denseopc_fragment_nearly_coincident", "id101e587a-cfcb-49cc-93f3-68bf7ae99e83", 21, "", 0]);
MGCAddTopic(["id101e587a-cfcb-49cc-93f3-68bf7ae99e83", "id101e587a-cfcb-49cc-93f3-68bf7ae99e83", 21, "", 0]);
MGCAddTopic(["idd2a9813a-e921-41aa-a9f5-36add177cb4b", "id101e587a-cfcb-49cc-93f3-68bf7ae99e83__idd2a9813a-e921-41aa-a9f5-36add177cb4b", 21, "", 0]);
MGCAddTopic(["id1e3ea01f-58ba-4690-8d25-1c1fa8fb97ed", "id101e587a-cfcb-49cc-93f3-68bf7ae99e83__id1e3ea01f-58ba-4690-8d25-1c1fa8fb97ed", 21, "", 0]);
MGCAddTopic(["denseopc_init_mode", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3", 22, "", 0]);
MGCAddTopic(["idacca4c7b-7a94-41dd-8a03-349ed52ef2d3", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3", 22, "", 0]);
MGCAddTopic(["idac3c557a-208a-45de-9ea9-14a4bdc35566", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3__idac3c557a-208a-45de-9ea9-14a4bdc35566", 22, "", 0]);
MGCAddTopic(["idd0ec870f-bb72-4a76-be28-9f31d7e86f0e", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3__idd0ec870f-bb72-4a76-be28-9f31d7e86f0e", 22, "", 0]);
MGCAddTopic(["idbcd51bd0-e19c-4b04-8d28-cb59ab9b382b", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3__idbcd51bd0-e19c-4b04-8d28-cb59ab9b382b", 22, "", 0]);
MGCAddTopic(["id0c6a493e-2912-4d3d-a32b-da27c60c5825", "idacca4c7b-7a94-41dd-8a03-349ed52ef2d3__id0c6a493e-2912-4d3d-a32b-da27c60c5825", 22, "", 0]);
MGCAddTopic(["denseopc_insert_correction", "id4d575042-2584-410f-8a11-61ec45b49850", 23, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id4d575042-2584-410f-8a11-61ec45b49850", "id4d575042-2584-410f-8a11-61ec45b49850", 23, "ct-topic-H3", 0]);
MGCAddTopic(["id5f817c6c-d7d1-4a4e-8280-b98f73774b3e", "id4d575042-2584-410f-8a11-61ec45b49850__id5f817c6c-d7d1-4a4e-8280-b98f73774b3e", 23, "cmd-arg", 0]);
MGCAddTopic(["ida912b2f7-91b0-4267-9031-bc14f0a50d90", "id4d575042-2584-410f-8a11-61ec45b49850__ida912b2f7-91b0-4267-9031-bc14f0a50d90", 23, "cmd-arg", 0]);
MGCAddTopic(["id1ae8620f-46d0-48ca-9a97-e2699a5efe0d", "id4d575042-2584-410f-8a11-61ec45b49850__id1ae8620f-46d0-48ca-9a97-e2699a5efe0d", 23, "ct-topic-H3", 0]);
MGCAddTopic(["ida103042c-0391-4c0b-b912-0824b53912b0", "id4d575042-2584-410f-8a11-61ec45b49850__ida103042c-0391-4c0b-b912-0824b53912b0", 23, "ct-topic-H3", 0]);
MGCAddTopic(["id0815a781-6b9a-407d-bebb-77c1aba3e3cc", "id4d575042-2584-410f-8a11-61ec45b49850__id0815a781-6b9a-407d-bebb-77c1aba3e3cc", 23, "ct-topic-H3", 0]);
MGCAddTopic(["idb11825e7-defe-4690-8ce8-c1e43ae47f01", "id4d575042-2584-410f-8a11-61ec45b49850__idb11825e7-defe-4690-8ce8-c1e43ae47f01", 23, "ct-topic-H3", 0]);
MGCAddTopic(["id95d95568-3c3d-4a70-aa53-e29c506deef1", "id4d575042-2584-410f-8a11-61ec45b49850__id95d95568-3c3d-4a70-aa53-e29c506deef1", 23, "ct-topic-H3", 0]);
MGCAddTopic(["denseopc_limit_excess", "id3eea671a-fe39-4621-af68-e135210c862d", 24, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id3eea671a-fe39-4621-af68-e135210c862d", "id3eea671a-fe39-4621-af68-e135210c862d", 24, "ct-topic-H3", 0]);
MGCAddTopic(["id84ae6a27-a94a-4627-82ab-c9a4223611b4", "id3eea671a-fe39-4621-af68-e135210c862d__id84ae6a27-a94a-4627-82ab-c9a4223611b4", 24, "cmd-arg", 0]);
MGCAddTopic(["id52d98741-ace6-4a91-a7f6-bda5a3967539", "id3eea671a-fe39-4621-af68-e135210c862d__id52d98741-ace6-4a91-a7f6-bda5a3967539", 24, "cmd-arg", 0]);
MGCAddTopic(["ida902169b-780c-44de-9c1d-9694a4232e38", "id3eea671a-fe39-4621-af68-e135210c862d__ida902169b-780c-44de-9c1d-9694a4232e38", 24, "ct-topic-H3", 0]);
MGCAddTopic(["ida1f0c9c4-3b42-41a2-bce2-4087eb5dd303", "id3eea671a-fe39-4621-af68-e135210c862d__ida1f0c9c4-3b42-41a2-bce2-4087eb5dd303", 24, "ct-topic-H3", 0]);
MGCAddTopic(["id281e4c43-211e-4d0e-bb79-c4a1d793c4a7", "id3eea671a-fe39-4621-af68-e135210c862d__id281e4c43-211e-4d0e-bb79-c4a1d793c4a7", 24, "ct-topic-H3", 0]);
MGCAddTopic(["id6b48efdd-13df-4220-bcfb-fb6713b2557b", "id3eea671a-fe39-4621-af68-e135210c862d__id6b48efdd-13df-4220-bcfb-fb6713b2557b", 24, "ct-topic-H3", 0]);
MGCAddTopic(["denseopc_pre_notchfill", "idacb0b62d-3209-45a7-b5b5-2130766ddf41", 25, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idacb0b62d-3209-45a7-b5b5-2130766ddf41", "idacb0b62d-3209-45a7-b5b5-2130766ddf41", 25, "ct-topic-H3", 0]);
MGCAddTopic(["id641ed845-9149-40a4-b654-0ae0602241ed", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__id641ed845-9149-40a4-b654-0ae0602241ed", 25, "cmd-arg", 0]);
MGCAddTopic(["idd843d144-0147-45f6-8f76-698a0c66bf4c", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__idd843d144-0147-45f6-8f76-698a0c66bf4c", 25, "cmd-arg", 0]);
MGCAddTopic(["id0f4066e1-0f74-4dcd-9f1c-411f54af517e", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__id0f4066e1-0f74-4dcd-9f1c-411f54af517e", 25, "ct-topic-H3", 0]);
MGCAddTopic(["id488a3b06-26c7-4d81-80b3-2d659d18b3ee", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__id488a3b06-26c7-4d81-80b3-2d659d18b3ee", 25, "ct-topic-H3", 0]);
MGCAddTopic(["idbea7a928-33d7-414b-97cc-43f4ea5d428a", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__idbea7a928-33d7-414b-97cc-43f4ea5d428a", 25, "ct-topic-H3", 0]);
MGCAddTopic(["id5e9ae538-e9eb-43b9-8d9f-ff267273bd34", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__id5e9ae538-e9eb-43b9-8d9f-ff267273bd34", 25, "ct-topic-H3", 0]);
MGCAddTopic(["idabf46cc6-c5bd-48a0-8c41-68ebedaff23a", "idacb0b62d-3209-45a7-b5b5-2130766ddf41__idabf46cc6-c5bd-48a0-8c41-68ebedaff23a", 25, "ct-topic-H3", 0]);
MGCAddTopic(["denseopc_smooth_corrections", "id0a2a19f4-7fbb-4abc-8c33-10995d960b5c", 26, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id0a2a19f4-7fbb-4abc-8c33-10995d960b5c", "id0a2a19f4-7fbb-4abc-8c33-10995d960b5c", 26, "ct-topic-H3", 0]);
MGCAddTopic(["idd87e3cd6-0aa7-4377-8178-a28512e1974d", "id0a2a19f4-7fbb-4abc-8c33-10995d960b5c__idd87e3cd6-0aa7-4377-8178-a28512e1974d", 26, "cmd-arg", 0]);
MGCAddTopic(["id858d3742-7278-47b0-a245-48c08b88e109", "id0a2a19f4-7fbb-4abc-8c33-10995d960b5c__id858d3742-7278-47b0-a245-48c08b88e109", 26, "cmd-arg", 0]);
MGCAddTopic(["denseopc_use_correction_map", "id658e11a7-15e5-4c6c-92cd-199aa66b994c", 27, "", 0]);
MGCAddTopic(["id658e11a7-15e5-4c6c-92cd-199aa66b994c", "id658e11a7-15e5-4c6c-92cd-199aa66b994c", 27, "", 0]);
MGCAddTopic(["id06ae6c2a-27fe-4d33-8e36-54ba37043c55", "id658e11a7-15e5-4c6c-92cd-199aa66b994c__id06ae6c2a-27fe-4d33-8e36-54ba37043c55", 27, "cmd-arg", 0]);
MGCAddTopic(["id6fb22c60-bfb4-4420-8af4-096074305ca8", "id658e11a7-15e5-4c6c-92cd-199aa66b994c__id6fb22c60-bfb4-4420-8af4-096074305ca8", 27, "cmd-arg", 0]);
MGCAddTopic(["fragment_optimize reset_displacement", "id50725b58-5f63-4f51-9a5e-8730525c569d", 28, "", 0]);
MGCAddTopic(["id50725b58-5f63-4f51-9a5e-8730525c569d", "id50725b58-5f63-4f51-9a5e-8730525c569d", 28, "", 0]);
MGCAddTopic(["ide99ab90d-4709-4464-b0aa-822f8d87d3ff", "id50725b58-5f63-4f51-9a5e-8730525c569d__ide99ab90d-4709-4464-b0aa-822f8d87d3ff", 28, "", 0]);
MGCAddTopic(["id94a6a0aa-1f3d-4d04-938a-4102a9f0b85c", "id50725b58-5f63-4f51-9a5e-8730525c569d__id94a6a0aa-1f3d-4d04-938a-4102a9f0b85c", 28, "", 0]);
MGCAddTopic(["job 4 finetune", "id7355d729-a8e7-4717-918e-7322a08522e5", 29, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id7355d729-a8e7-4717-918e-7322a08522e5", "id7355d729-a8e7-4717-918e-7322a08522e5", 29, "ct-topic-H3", 0]);
MGCAddTopic(["id018add78-3bb6-4ac6-8fe3-cc304983e7c5", "id7355d729-a8e7-4717-918e-7322a08522e5__id018add78-3bb6-4ac6-8fe3-cc304983e7c5", 29, "ct-topic-H3", 0]);
MGCAddTopic(["id5c638f9a-f07a-41f1-9a92-a1539259bc20", "id7355d729-a8e7-4717-918e-7322a08522e5__id5c638f9a-f07a-41f1-9a92-a1539259bc20", 29, "ct-topic-H3", 0]);
MGCAddTopic(["layer", "idcaf412ac-2854-4120-972c-d1b2544d56ba", 30, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idcaf412ac-2854-4120-972c-d1b2544d56ba", "idcaf412ac-2854-4120-972c-d1b2544d56ba", 30, "ct-topic-H3", 0]);
MGCAddTopic(["id3355d1a7-bc74-43b9-870e-57e5e7a18b5a", "idcaf412ac-2854-4120-972c-d1b2544d56ba__id3355d1a7-bc74-43b9-870e-57e5e7a18b5a", 30, "cmd-arg", 0]);
MGCAddTopic(["idd62dfde6-1110-419c-a935-7237a848bb45", "idcaf412ac-2854-4120-972c-d1b2544d56ba__idd62dfde6-1110-419c-a935-7237a848bb45", 30, "cmd-arg", 0]);
MGCAddTopic(["idd47f9d53-a7c3-4db9-beb9-6d4152723b25", "idcaf412ac-2854-4120-972c-d1b2544d56ba__idd47f9d53-a7c3-4db9-beb9-6d4152723b25", 30, "cmd-argopt-B1", 0]);
MGCAddTopic(["ide0fdd083-0522-422d-b5fe-64b7b340dff0", "idcaf412ac-2854-4120-972c-d1b2544d56ba__ide0fdd083-0522-422d-b5fe-64b7b340dff0", 30, "cmd-argopt-B1", 0]);
MGCAddTopic(["idca390a81-764a-427a-b442-aa9ab5c12d95", "idcaf412ac-2854-4120-972c-d1b2544d56ba__idca390a81-764a-427a-b442-aa9ab5c12d95", 30, "cmd-argopt-B1", 0]);
MGCAddTopic(["idd74b32e4-84e7-49af-a885-d6765c44bccb", "idcaf412ac-2854-4120-972c-d1b2544d56ba__idd74b32e4-84e7-49af-a885-d6765c44bccb", 30, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7fb89399-e06d-4ea8-8e02-5c795ac50b54", "idcaf412ac-2854-4120-972c-d1b2544d56ba__id7fb89399-e06d-4ea8-8e02-5c795ac50b54", 30, "cmd-argoptions-L1", 0]);
MGCAddTopic(["id0f1d8894-ff12-4fcf-8c44-6ee51753b85f", "idcaf412ac-2854-4120-972c-d1b2544d56ba__id0f1d8894-ff12-4fcf-8c44-6ee51753b85f", 30, "cmd-argoptions-L1", 0]);
MGCAddTopic(["id33f9fa0a-cef9-49e0-8c2f-8acb8442c18e", "idcaf412ac-2854-4120-972c-d1b2544d56ba__id33f9fa0a-cef9-49e0-8c2f-8acb8442c18e", 30, "ct-topic-H3", 0]);
MGCAddTopic(["ide1cd767a-0575-4603-9468-9714b2f803d3", "idcaf412ac-2854-4120-972c-d1b2544d56ba__ide1cd767a-0575-4603-9468-9714b2f803d3", 30, "ct-topic-H3", 0]);
MGCAddTopic(["min_frag_len", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf", 31, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id8cfda793-017b-42c2-8a6f-cecd06b63ccf", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf", 31, "ct-topic-H3", 0]);
MGCAddTopic(["idce9d96a7-03b5-404c-813b-cd241e3a9648", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf__idce9d96a7-03b5-404c-813b-cd241e3a9648", 31, "cmd-arg", 0]);
MGCAddTopic(["idd5371889-91b1-4ad1-b2a4-3bfe2aff97fc", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf__idd5371889-91b1-4ad1-b2a4-3bfe2aff97fc", 31, "ct-topic-H3", 0]);
MGCAddTopic(["ide3b6b754-ee2f-40eb-98f9-8fdc68464581", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf__ide3b6b754-ee2f-40eb-98f9-8fdc68464581", 31, "ct-topic-H3", 0]);
MGCAddTopic(["idb059b7a3-cf91-401b-a32d-b004646a3f27", "id8cfda793-017b-42c2-8a6f-cecd06b63ccf__idb059b7a3-cf91-401b-a32d-b004646a3f27", 31, "ct-topic-H3", 0]);
MGCAddTopic(["min_space", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c", 32, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c", 32, "ct-topic-H3", 0]);
MGCAddTopic(["id07938139-6d25-46a0-b7bc-12e548113c0e", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c__id07938139-6d25-46a0-b7bc-12e548113c0e", 32, "cmd-arg", 0]);
MGCAddTopic(["id99712d4c-2eb5-4cf6-bda9-7acd6240cf74", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c__id99712d4c-2eb5-4cf6-bda9-7acd6240cf74", 32, "ct-topic-H3", 0]);
MGCAddTopic(["id9848c31a-a3be-4038-9dd6-5aca2bd4f046", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c__id9848c31a-a3be-4038-9dd6-5aca2bd4f046", 32, "ct-topic-H3", 0]);
MGCAddTopic(["idfd30fe65-bfb0-4207-8c48-a0e549111aee", "id245a5430-0ad4-4a75-bd1c-cfaadbc4a42c__idfd30fe65-bfb0-4207-8c48-a0e549111aee", 32, "ct-topic-H3", 0]);
MGCAddTopic(["min_width", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2", 33, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id4021272e-cfd5-4bd9-9867-641d8c9ef6b2", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2", 33, "ct-topic-H3", 0]);
MGCAddTopic(["id4dde3f18-9b84-4736-8c21-24b59c76b1fc", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2__id4dde3f18-9b84-4736-8c21-24b59c76b1fc", 33, "cmd-arg", 0]);
MGCAddTopic(["id00952f3d-663a-4234-841b-253c49995410", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2__id00952f3d-663a-4234-841b-253c49995410", 33, "ct-topic-H3", 0]);
MGCAddTopic(["idf6d04be9-954c-4534-9ea8-7a5c94c042b5", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2__idf6d04be9-954c-4534-9ea8-7a5c94c042b5", 33, "ct-topic-H3", 0]);
MGCAddTopic(["idb85d66a1-3c24-4ebb-8a62-c0037292bab8", "id4021272e-cfd5-4bd9-9867-641d8c9ef6b2__idb85d66a1-3c24-4ebb-8a62-c0037292bab8", 33, "ct-topic-H3", 0]);
MGCAddTopic(["mrc_min_length", "id6394470a-d2ef-4793-b3d5-23640f20b1de", 34, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Valid Small Features for MRC - mrc_min_length", "id39de6cea-f4fd-48a8-a834-5b75b3e7652d", 34, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id6394470a-d2ef-4793-b3d5-23640f20b1de", "id6394470a-d2ef-4793-b3d5-23640f20b1de", 34, "ct-topic-H3", 0]);
MGCAddTopic(["id47322736-8c84-4cdc-8f72-d1aacf596b36", "id6394470a-d2ef-4793-b3d5-23640f20b1de__id47322736-8c84-4cdc-8f72-d1aacf596b36", 34, "cmd-arg", 0]);
MGCAddTopic(["id39de6cea-f4fd-48a8-a834-5b75b3e7652d", "id6394470a-d2ef-4793-b3d5-23640f20b1de__id39de6cea-f4fd-48a8-a834-5b75b3e7652d", 34, "ct-topic-H3", 0]);
MGCAddTopic(["mrc_min_rect_length", "id3f11817b-65c4-4977-bf46-f0451a71bb74", 35, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Valid Small Features for MRC - mrc_min_rect_length", "id7a9614a1-cd91-4260-b1fb-d20a3528dc49", 35, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id3f11817b-65c4-4977-bf46-f0451a71bb74", "id3f11817b-65c4-4977-bf46-f0451a71bb74", 35, "ct-topic-H3", 0]);
MGCAddTopic(["id8681db55-7d75-4aa1-a338-c31a702b35f8", "id3f11817b-65c4-4977-bf46-f0451a71bb74__id8681db55-7d75-4aa1-a338-c31a702b35f8", 35, "cmd-arg", 0]);
MGCAddTopic(["id7a9614a1-cd91-4260-b1fb-d20a3528dc49", "id3f11817b-65c4-4977-bf46-f0451a71bb74__id7a9614a1-cd91-4260-b1fb-d20a3528dc49", 35, "ct-topic-H3", 0]);
MGCAddTopic(["mrc_min_rect_width", "idad0bc660-1cd3-461f-99ac-042451586cec", 36, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Valid Small Features for MRC - mrc_min_rect_width", "id62c32dd3-a79d-4f41-8311-5b72053efa28", 36, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["idad0bc660-1cd3-461f-99ac-042451586cec", "idad0bc660-1cd3-461f-99ac-042451586cec", 36, "ct-topic-H3", 0]);
MGCAddTopic(["id84b485b8-d96b-4a78-bdc7-8d427b193770", "idad0bc660-1cd3-461f-99ac-042451586cec__id84b485b8-d96b-4a78-bdc7-8d427b193770", 36, "cmd-arg", 0]);
MGCAddTopic(["id62c32dd3-a79d-4f41-8311-5b72053efa28", "idad0bc660-1cd3-461f-99ac-042451586cec__id62c32dd3-a79d-4f41-8311-5b72053efa28", 36, "ct-topic-H3", 0]);
MGCAddTopic(["mrc_min_square", "id5425c780-0d3a-4aa6-8976-226b85fe6e84", 37, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Valid Small Features for MRC - mrc_min_square", "ided535d0c-ed9b-43d6-8aa6-3c4f5fe4d6ef", 37, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id5425c780-0d3a-4aa6-8976-226b85fe6e84", "id5425c780-0d3a-4aa6-8976-226b85fe6e84", 37, "ct-topic-H3", 0]);
MGCAddTopic(["id21778392-4150-470c-98c3-2a4f0633bf57", "id5425c780-0d3a-4aa6-8976-226b85fe6e84__id21778392-4150-470c-98c3-2a4f0633bf57", 37, "cmd-arg", 0]);
MGCAddTopic(["ided535d0c-ed9b-43d6-8aa6-3c4f5fe4d6ef", "id5425c780-0d3a-4aa6-8976-226b85fe6e84__ided535d0c-ed9b-43d6-8aa6-3c4f5fe4d6ef", 37, "ct-topic-H3", 0]);
MGCAddTopic(["mrc_small_feature_size", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362", 38, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id4849e6af-fe92-4c1a-bb55-39beb3cb9362", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362", 38, "ct-topic-H3", 0]);
MGCAddTopic(["id19991447-aba9-4589-937e-c3307584736c", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__id19991447-aba9-4589-937e-c3307584736c", 38, "cmd-arg", 0]);
MGCAddTopic(["id967dc6c6-bf6b-4b04-891c-1bffee7a5ea8", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__id967dc6c6-bf6b-4b04-891c-1bffee7a5ea8", 38, "ct-topic-H3", 0]);
MGCAddTopic(["id03dbdffd-5937-4ac1-b294-25911a2d0a74", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__id03dbdffd-5937-4ac1-b294-25911a2d0a74", 38, "ct-topic-H3", 0]);
MGCAddTopic(["id1f380209-1327-4c2c-ae73-159e51184afe", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__id1f380209-1327-4c2c-ae73-159e51184afe", 38, "ct-topic-H3", 0]);
MGCAddTopic(["id0653d717-0762-46e7-91e1-ebac100cb5ba", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__id0653d717-0762-46e7-91e1-ebac100cb5ba", 38, "ct-topic-H3", 0]);
MGCAddTopic(["ida2d45f3a-e8ab-4777-bb18-eba67981b990", "id4849e6af-fe92-4c1a-bb55-39beb3cb9362__ida2d45f3a-e8ab-4777-bb18-eba67981b990", 38, "ct-topic-H3", 0]);
MGCAddTopic(["pick_region", "id006b429a-f678-4c30-915e-97d5b6bc4ea7", 39, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Selecting Markers", "ide46377ec-f121-4176-9949-e76589a2df91", 39, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id006b429a-f678-4c30-915e-97d5b6bc4ea7", "id006b429a-f678-4c30-915e-97d5b6bc4ea7", 39, "ct-topic-H3", 0]);
MGCAddTopic(["idb81550d9-f687-4303-b4a8-99468e0f3851", "id006b429a-f678-4c30-915e-97d5b6bc4ea7__idb81550d9-f687-4303-b4a8-99468e0f3851", 39, "cmd-arg", 0]);
MGCAddTopic(["ide46377ec-f121-4176-9949-e76589a2df91", "id006b429a-f678-4c30-915e-97d5b6bc4ea7__ide46377ec-f121-4176-9949-e76589a2df91", 39, "ct-topic-H3", 0]);
MGCAddTopic(["pxopc_init_mode", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2", 40, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idd5c87a8f-d7ed-45c3-9516-61ad157d41b2", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2", 40, "ct-topic-H3", 0]);
MGCAddTopic(["idc9c062e4-1350-48ec-b1ed-a6f3d49380dc", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2__idc9c062e4-1350-48ec-b1ed-a6f3d49380dc", 40, "cmd-arg", 0]);
MGCAddTopic(["id66883e0e-0ee9-4f64-8660-9334f57012f0", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2__id66883e0e-0ee9-4f64-8660-9334f57012f0", 40, "cmd-argopt-B1", 0]);
MGCAddTopic(["ideebbeb0a-39dd-4013-86c0-748c121c42e2", "idd5c87a8f-d7ed-45c3-9516-61ad157d41b2__ideebbeb0a-39dd-4013-86c0-748c121c42e2", 40, "cmd-argopt-B1", 0]);
MGCAddTopic(["pxopc_transition_region", "id2e98099f-4701-4dbc-b3c0-5f14da732dcf", 41, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id2e98099f-4701-4dbc-b3c0-5f14da732dcf", "id2e98099f-4701-4dbc-b3c0-5f14da732dcf", 41, "ct-topic-H3", 0]);
MGCAddTopic(["id4db7a521-744d-43e8-a94a-6fab02e566da", "id2e98099f-4701-4dbc-b3c0-5f14da732dcf__id4db7a521-744d-43e8-a94a-6fab02e566da", 41, "cmd-arg", 0]);
MGCAddTopic(["pxopc_weight_layer", "id463ac65b-1888-4894-86e6-38813b598c7c", 42, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id463ac65b-1888-4894-86e6-38813b598c7c", "id463ac65b-1888-4894-86e6-38813b598c7c", 42, "ct-topic-H3", 0]);
MGCAddTopic(["id777f0bc0-18ee-4d87-a900-387073a4764d", "id463ac65b-1888-4894-86e6-38813b598c7c__id777f0bc0-18ee-4d87-a900-387073a4764d", 42, "cmd-arg", 0]);
MGCAddTopic(["id1828d5d1-5854-41b6-a84c-969ea7234535", "id463ac65b-1888-4894-86e6-38813b598c7c__id1828d5d1-5854-41b6-a84c-969ea7234535", 42, "cmd-arg", 0]);
MGCAddTopic(["rearrangement_disable", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc", 43, "", 0]);
MGCAddTopic(["idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc", 43, "", 0]);
MGCAddTopic(["ida041fba5-437f-47a9-867f-eea542bfb9eb", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__ida041fba5-437f-47a9-867f-eea542bfb9eb", 43, "", 0]);
MGCAddTopic(["id19dbccd9-21ba-406a-adb0-7b62272cec1a", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__id19dbccd9-21ba-406a-adb0-7b62272cec1a", 43, "", 0]);
MGCAddTopic(["id937fa2dc-320f-4028-81ef-6d7f9b0866d3", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__id937fa2dc-320f-4028-81ef-6d7f9b0866d3", 43, "", 0]);
MGCAddTopic(["id2639ef3c-c084-4eb4-9f0a-3d4f96fca057", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__id2639ef3c-c084-4eb4-9f0a-3d4f96fca057", 43, "", 0]);
MGCAddTopic(["idc896e2cd-284c-4fb1-af1a-275c0ea8365e", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__idc896e2cd-284c-4fb1-af1a-275c0ea8365e", 43, "", 0]);
MGCAddTopic(["idee3347ae-6d46-4d28-9817-115d40eab5b1", "idb2f6bfc1-d43b-4ed5-aa95-db6f99d704bc__idee3347ae-6d46-4d28-9817-115d40eab5b1", 43, "", 0]);
MGCAddTopic(["refine_distance", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4", 44, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Region Size Measurements", "idfaf862aa-f5fb-4538-b31b-bbaf78d8861e", 44, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4", 44, "ct-topic-H3", 0]);
MGCAddTopic(["idda3e47a3-2be7-49ba-b8f5-8d1e952cb0de", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4__idda3e47a3-2be7-49ba-b8f5-8d1e952cb0de", 44, "cmd-arg", 0]);
MGCAddTopic(["id085311eb-ad52-4108-8dee-9ca440f960dc", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4__id085311eb-ad52-4108-8dee-9ca440f960dc", 44, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2f44e1bd-cd23-4550-af41-7cc38b952858", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4__id2f44e1bd-cd23-4550-af41-7cc38b952858", 44, "cmd-argopt-B1", 0]);
MGCAddTopic(["id3a29c89e-503c-4b32-9e77-e387763c51f4", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4__id3a29c89e-503c-4b32-9e77-e387763c51f4", 44, "cmd-argopt-B1", 0]);
MGCAddTopic(["idfaf862aa-f5fb-4538-b31b-bbaf78d8861e", "idc8549c2a-4f4e-40ad-88e2-74b0cc843fa4__idfaf862aa-f5fb-4538-b31b-bbaf78d8861e", 44, "ct-topic-H3", 0]);
MGCAddTopic(["refine_exec", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5", 45, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Supported SVRF Operations", "id148538b4-206e-4b8f-a87b-2368a745eb7f", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Predefined LPE Layers for Regions", "id46359fdd-305d-457e-98eb-506bec3a31b4", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id68475ca4-20eb-4995-90bb-f6b387f3d9d5", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id61a1d717-7397-4da3-8b78-767c62e3e21a", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id61a1d717-7397-4da3-8b78-767c62e3e21a", 45, "cmd-arg", 0]);
MGCAddTopic(["id33dfd32e-cb5b-4042-a452-a6f1ce713a20", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id33dfd32e-cb5b-4042-a452-a6f1ce713a20", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["idf670b16a-fc52-41a6-a441-ef22655d9879", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idf670b16a-fc52-41a6-a441-ef22655d9879", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["id26d0fc8c-73ef-482e-956f-8fdf56fc4f45", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id26d0fc8c-73ef-482e-956f-8fdf56fc4f45", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["idb4e1032b-04c8-4699-ab65-dc3625965c5b", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idb4e1032b-04c8-4699-ab65-dc3625965c5b", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["id762b0802-697e-4f2e-b3af-47d8d7c77ad2", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id762b0802-697e-4f2e-b3af-47d8d7c77ad2", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["id8623868f-2754-4bb4-8061-0228012d7b39", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id8623868f-2754-4bb4-8061-0228012d7b39", 45, "cmd-argumentlist", 0]);
MGCAddTopic(["id01da520d-892c-42e2-ba63-756d13ca406b", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id01da520d-892c-42e2-ba63-756d13ca406b", 45, "cmd-arg", 0]);
MGCAddTopic(["id8cfcde9c-6bee-4ef3-822e-c4aa0bd79ddf", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id8cfcde9c-6bee-4ef3-822e-c4aa0bd79ddf", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["id15c8a113-a703-4d9a-832d-ac9ae09ca97b", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id15c8a113-a703-4d9a-832d-ac9ae09ca97b", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["idfc2bd490-76df-4eba-b914-38c66b255760", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idfc2bd490-76df-4eba-b914-38c66b255760", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["id7bcae207-8509-4ea0-aa27-3fa718fc350e", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id7bcae207-8509-4ea0-aa27-3fa718fc350e", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["idf1c32b05-8ed9-486b-b73f-a60f330b8af0", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idf1c32b05-8ed9-486b-b73f-a60f330b8af0", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["id29d990de-32ca-4f80-9912-749943275e32", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id29d990de-32ca-4f80-9912-749943275e32", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["id5744c910-0ed7-46a5-b71e-735278f06340", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id5744c910-0ed7-46a5-b71e-735278f06340", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["idca99ac37-e64a-413c-b848-2dc77e013be6", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idca99ac37-e64a-413c-b848-2dc77e013be6", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["id37c32b54-5e57-4c8a-9327-9689c76e2b15", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id37c32b54-5e57-4c8a-9327-9689c76e2b15", 45, "cmd-argopt-B1", 0]);
MGCAddTopic(["idbda35349-1784-45ea-861e-4ceb9e535c37", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idbda35349-1784-45ea-861e-4ceb9e535c37", 45, "cmd-arg", 0]);
MGCAddTopic(["id2ccc10e5-7662-4c37-a505-5364720bb01b", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id2ccc10e5-7662-4c37-a505-5364720bb01b", 45, "cmd-arg", 0]);
MGCAddTopic(["idb6a57f72-3c82-4cd4-9bdc-c77e83a6c0c6", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idb6a57f72-3c82-4cd4-9bdc-c77e83a6c0c6", 45, "cmd-arg", 0]);
MGCAddTopic(["idfee9600f-791f-4510-a9f7-452f68524483", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idfee9600f-791f-4510-a9f7-452f68524483", 45, "ct-topic-H3", 0]);
MGCAddTopic(["iddb3c07c3-01cb-46db-bd37-c520962c0486", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__iddb3c07c3-01cb-46db-bd37-c520962c0486", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id7d6fe438-bbaf-43a8-b21b-a5d5da3c1e4f", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id7d6fe438-bbaf-43a8-b21b-a5d5da3c1e4f", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id7a24f3ce-cfa7-4ed5-a3f7-af358c30418b", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id7a24f3ce-cfa7-4ed5-a3f7-af358c30418b", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id045b0f6f-100d-49ee-9d75-1bfebd2f7652", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id045b0f6f-100d-49ee-9d75-1bfebd2f7652", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id148538b4-206e-4b8f-a87b-2368a745eb7f", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id148538b4-206e-4b8f-a87b-2368a745eb7f", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id46359fdd-305d-457e-98eb-506bec3a31b4", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id46359fdd-305d-457e-98eb-506bec3a31b4", 45, "ct-topic-H3", 0]);
MGCAddTopic(["ide3153d7f-82ad-4893-9182-409bbd6cb760", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__ide3153d7f-82ad-4893-9182-409bbd6cb760", 45, "ct-topic-H3", 0]);
MGCAddTopic(["ida7915f7e-1dd6-4ee0-9405-aba578c4673a", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__ida7915f7e-1dd6-4ee0-9405-aba578c4673a", 45, "ct-topic-H3", 0]);
MGCAddTopic(["idee4a5ab5-6537-4cb7-8601-ebbdf3630f3d", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__idee4a5ab5-6537-4cb7-8601-ebbdf3630f3d", 45, "ct-topic-H3", 0]);
MGCAddTopic(["id1fbf4d42-7beb-4906-873d-4b70a3450955", "id68475ca4-20eb-4995-90bb-f6b387f3d9d5__id1fbf4d42-7beb-4906-873d-4b70a3450955", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Additional Information on denseopc Setups", "Additional Information on denseopc Setups", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Additional Information on nmbias Setups", "Additional Information on nmbias Setups", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Additional Information on opcverify Setups", "Additional Information on opcverify Setups", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Additional Information on pxopc Setups", "Additional Information on pxopc Setups", 45, "ct-topic-H3", 0]);
MGCAddTopic(["Additional Information on svrf Setups", "Additional Information on svrf Setups", 45, "ct-topic-H3", 0]);
MGCAddTopic(["refine_map", "idb735509b-12c0-4677-9cae-38820102e4d8", 46, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Outputs by Iteration", "idce364682-a1a1-4bc9-8ee8-292b2f91ee5e", 46, "TableTitle", 0]);
MGCAddTopic(["refine_map iteration 0", "id54b34b9b-27f0-455e-a956-d601de7b9b9a", 46, "ct-topic-H3", 0]);
MGCAddTopic(["refine_map iteration 1", "idcb38d238-ecd6-4f0c-a3fa-2e6a8ef7c1ab", 46, "ct-topic-H3", 0]);
MGCAddTopic(["refine_map iteration all", "idacd24bbe-3b78-4357-898e-9f658adc50a3", 46, "ct-topic-H3", 0]);
MGCAddTopic(["idb735509b-12c0-4677-9cae-38820102e4d8", "idb735509b-12c0-4677-9cae-38820102e4d8", 46, "ct-topic-H3", 0]);
MGCAddTopic(["id46a13008-2691-449c-b136-51657e08c98e", "idb735509b-12c0-4677-9cae-38820102e4d8__id46a13008-2691-449c-b136-51657e08c98e", 46, "cmd-arg", 0]);
MGCAddTopic(["id22f6668a-2b31-476a-accd-e5e99420d65e", "idb735509b-12c0-4677-9cae-38820102e4d8__id22f6668a-2b31-476a-accd-e5e99420d65e", 46, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id6c44fcd3-1234-443b-af7b-9e971a333278", "idb735509b-12c0-4677-9cae-38820102e4d8__id6c44fcd3-1234-443b-af7b-9e971a333278", 46, "cmd-arg-ul-2", 0]);
MGCAddTopic(["id5fc5f9fa-4b2d-4642-96b1-25b1a610e2f7", "idb735509b-12c0-4677-9cae-38820102e4d8__id5fc5f9fa-4b2d-4642-96b1-25b1a610e2f7", 46, "cmd-arg", 0]);
MGCAddTopic(["idb36a0db4-6fde-4ddd-8d88-c4f1d3d0f234", "idb735509b-12c0-4677-9cae-38820102e4d8__idb36a0db4-6fde-4ddd-8d88-c4f1d3d0f234", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id23560d98-b990-4ea7-ae30-aec297261f5e", "idb735509b-12c0-4677-9cae-38820102e4d8__id23560d98-b990-4ea7-ae30-aec297261f5e", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id2a8f567a-38bd-4d59-adef-afa872fbe647", "idb735509b-12c0-4677-9cae-38820102e4d8__id2a8f567a-38bd-4d59-adef-afa872fbe647", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id0de41dbf-689b-4071-86d5-41ac75714fad", "idb735509b-12c0-4677-9cae-38820102e4d8__id0de41dbf-689b-4071-86d5-41ac75714fad", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id45e5257f-cb4f-4631-afa7-18640148768d", "idb735509b-12c0-4677-9cae-38820102e4d8__id45e5257f-cb4f-4631-afa7-18640148768d", 46, "cmd-arg", 0]);
MGCAddTopic(["id0954078d-1313-4957-983e-d1b18e677582", "idb735509b-12c0-4677-9cae-38820102e4d8__id0954078d-1313-4957-983e-d1b18e677582", 46, "cmd-arg", 0]);
MGCAddTopic(["id5e6e4547-38dd-4801-afcb-a5221a7864ba", "idb735509b-12c0-4677-9cae-38820102e4d8__id5e6e4547-38dd-4801-afcb-a5221a7864ba", 46, "cmd-arg", 0]);
MGCAddTopic(["idd47239d9-581e-4158-865a-ef538f75648f", "idb735509b-12c0-4677-9cae-38820102e4d8__idd47239d9-581e-4158-865a-ef538f75648f", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id16e592c6-5d15-4088-a03d-f3246cb52840", "idb735509b-12c0-4677-9cae-38820102e4d8__id16e592c6-5d15-4088-a03d-f3246cb52840", 46, "cmd-argopt-B1", 0]);
MGCAddTopic(["id9dc6b5f1-0d3e-40ba-a50c-9d33638f5710", "idb735509b-12c0-4677-9cae-38820102e4d8__id9dc6b5f1-0d3e-40ba-a50c-9d33638f5710", 46, "ct-topic-H3", 0]);
MGCAddTopic(["idd3790d0a-b75c-4656-b47e-553a29df2969", "idb735509b-12c0-4677-9cae-38820102e4d8__idd3790d0a-b75c-4656-b47e-553a29df2969", 46, "ct-topic-H3", 0]);
MGCAddTopic(["id35c737b6-ca4e-4052-a503-cc357b9fa543", "idb735509b-12c0-4677-9cae-38820102e4d8__id35c737b6-ca4e-4052-a503-cc357b9fa543", 46, "cmd-examples-L0-CodeListIndent", 0]);
MGCAddTopic(["id3b8f3cb1-cfb0-4bb4-9cd4-1dcdb99c1bb7", "idb735509b-12c0-4677-9cae-38820102e4d8__id3b8f3cb1-cfb0-4bb4-9cd4-1dcdb99c1bb7", 46, "cmd-examples-L0-CodeListIndent", 0]);
MGCAddTopic(["idce364682-a1a1-4bc9-8ee8-292b2f91ee5e", "idb735509b-12c0-4677-9cae-38820102e4d8__idce364682-a1a1-4bc9-8ee8-292b2f91ee5e", 46, "ct-topic-H3", 0]);
MGCAddTopic(["id54b34b9b-27f0-455e-a956-d601de7b9b9a", "idb735509b-12c0-4677-9cae-38820102e4d8__id54b34b9b-27f0-455e-a956-d601de7b9b9a", 46, "ct-topic-H3", 0]);
MGCAddTopic(["idcb38d238-ecd6-4f0c-a3fa-2e6a8ef7c1ab", "idb735509b-12c0-4677-9cae-38820102e4d8__idcb38d238-ecd6-4f0c-a3fa-2e6a8ef7c1ab", 46, "ct-topic-H3", 0]);
MGCAddTopic(["idacd24bbe-3b78-4357-898e-9f658adc50a3", "idb735509b-12c0-4677-9cae-38820102e4d8__idacd24bbe-3b78-4357-898e-9f658adc50a3", 46, "ct-topic-H3", 0]);
MGCAddTopic(["refine_markers", "id14e52224-69aa-4602-b2ef-7a92db8f8dca", 47, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id14e52224-69aa-4602-b2ef-7a92db8f8dca", "id14e52224-69aa-4602-b2ef-7a92db8f8dca", 47, "ct-topic-H3", 0]);
MGCAddTopic(["id190630ca-9c71-4521-beca-fbb2fb2ad211", "id14e52224-69aa-4602-b2ef-7a92db8f8dca__id190630ca-9c71-4521-beca-fbb2fb2ad211", 47, "cmd-arg", 0]);
MGCAddTopic(["refine_markers_limit", "idc3d2682b-e254-4927-bc60-eae8578d0881", 48, "", 0]);
MGCAddTopic(["idc3d2682b-e254-4927-bc60-eae8578d0881", "idc3d2682b-e254-4927-bc60-eae8578d0881", 48, "", 0]);
MGCAddTopic(["id65959c26-cf34-4be4-859f-57c9f4420890", "idc3d2682b-e254-4927-bc60-eae8578d0881__id65959c26-cf34-4be4-859f-57c9f4420890", 48, "", 0]);
MGCAddTopic(["id59e2118c-e90c-48e4-95f8-824aa31bd7d4", "idc3d2682b-e254-4927-bc60-eae8578d0881__id59e2118c-e90c-48e4-95f8-824aa31bd7d4", 48, "", 0]);
MGCAddTopic(["ide61a0e9f-da55-4d09-9edd-9adcf7ce0a51", "idc3d2682b-e254-4927-bc60-eae8578d0881__ide61a0e9f-da55-4d09-9edd-9adcf7ce0a51", 48, "", 0]);
MGCAddTopic(["refine_markers_style", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6", 49, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id9dc81b2b-6be3-485d-af56-5b945fe51ba6", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6", 49, "ct-topic-H3", 0]);
MGCAddTopic(["id8c890c04-be81-4e31-bc2b-f9e829e50d15", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6__id8c890c04-be81-4e31-bc2b-f9e829e50d15", 49, "cmd-arg", 0]);
MGCAddTopic(["id8cca070b-ad50-42c8-9187-5ebfada6305a", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6__id8cca070b-ad50-42c8-9187-5ebfada6305a", 49, "cmd-argumentlist", 0]);
MGCAddTopic(["id0f9cef57-4f59-4e88-8c69-421a811016b3", "id9dc81b2b-6be3-485d-af56-5b945fe51ba6__id0f9cef57-4f59-4e88-8c69-421a811016b3", 49, "cmd-arg", 0]);
MGCAddTopic(["refine_patterns", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da", 50, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["Transformations for Pattern Matching", "idd3cc41ad-a843-489d-a8ba-af63fa51af73", 50, "cmd-arguments-L1-FigureTitle", 0]);
MGCAddTopic(["Matching Repair Regions", "id0ba7852f-ce0c-4763-b660-d33cf25b939d", 50, "cmd-description-L0-FigureTitle", 0]);
MGCAddTopic(["id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da", 50, "ct-topic-H3", 0]);
MGCAddTopic(["ided18cb43-3c35-4e94-8c5a-9b256baea9b4", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__ided18cb43-3c35-4e94-8c5a-9b256baea9b4", 50, "cmd-arg", 0]);
MGCAddTopic(["id495fa7ed-2799-4405-a805-3a3cc0e44ec1", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__id495fa7ed-2799-4405-a805-3a3cc0e44ec1", 50, "cmd-arg", 0]);
MGCAddTopic(["idcb0b9414-ddf7-47b4-a913-1e4f66eec5fa", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__idcb0b9414-ddf7-47b4-a913-1e4f66eec5fa", 50, "cmd-argdesc", 0]);
MGCAddTopic(["idd3cc41ad-a843-489d-a8ba-af63fa51af73", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__idd3cc41ad-a843-489d-a8ba-af63fa51af73", 50, "cmd-argdesc", 0]);
MGCAddTopic(["id0ba7852f-ce0c-4763-b660-d33cf25b939d", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__id0ba7852f-ce0c-4763-b660-d33cf25b939d", 50, "ct-topic-H3", 0]);
MGCAddTopic(["id3c201ffe-3197-4ff1-bac7-8192982154b4", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__id3c201ffe-3197-4ff1-bac7-8192982154b4", 50, "ct-topic-H3", 0]);
MGCAddTopic(["id88915717-a824-4baf-ab10-4b48d3a4a997", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__id88915717-a824-4baf-ab10-4b48d3a4a997", 50, "ct-topic-H3", 0]);
MGCAddTopic(["iddb44bced-ea63-4392-aceb-20b5cf9edd19", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__iddb44bced-ea63-4392-aceb-20b5cf9edd19", 50, "ct-topic-H3", 0]);
MGCAddTopic(["ide294850b-dc87-4c21-8df3-2775e211c3c9", "id3e4001d5-2dfc-4f0d-af36-4ab2cb5985da__ide294850b-dc87-4c21-8df3-2775e211c3c9", 50, "ct-topic-H3", 0]);
MGCAddTopic(["Double Pattern Classification", "Double Pattern Classification", 50, "cmd-description-z.HCmdRefDescCustom", 0]);
MGCAddTopic(["Transcript Additions", "Transcript Additions", 50, "cmd-description-z.HCmdRefDescCustom", 0]);
MGCAddTopic(["refine_process", "idf0987578-1e12-4255-be15-fdb6c9c82f47", 51, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idf0987578-1e12-4255-be15-fdb6c9c82f47", "idf0987578-1e12-4255-be15-fdb6c9c82f47", 51, "ct-topic-H3", 0]);
MGCAddTopic(["idc20bad50-b5d9-404c-b866-a2eb616bf26d", "idf0987578-1e12-4255-be15-fdb6c9c82f47__idc20bad50-b5d9-404c-b866-a2eb616bf26d", 51, "cmd-arg", 0]);
MGCAddTopic(["idc1f22559-0657-4ab1-8709-97ed6eacb5f1", "idf0987578-1e12-4255-be15-fdb6c9c82f47__idc1f22559-0657-4ab1-8709-97ed6eacb5f1", 51, "cmd-arg", 0]);
MGCAddTopic(["refine_prune_markers", "idd025db01-1a50-49b9-acc9-b01716400dd8", 52, "", 0]);
MGCAddTopic(["idd025db01-1a50-49b9-acc9-b01716400dd8", "idd025db01-1a50-49b9-acc9-b01716400dd8", 52, "", 0]);
MGCAddTopic(["id5ba02ae9-d564-4dc0-bb16-93162a2a5c19", "idd025db01-1a50-49b9-acc9-b01716400dd8__id5ba02ae9-d564-4dc0-bb16-93162a2a5c19", 52, "", 0]);
MGCAddTopic(["id440770b4-9dde-495b-9af2-50f8fd8268c2", "idd025db01-1a50-49b9-acc9-b01716400dd8__id440770b4-9dde-495b-9af2-50f8fd8268c2", 52, "", 0]);
MGCAddTopic(["id7217d7d3-f5f5-4cf2-8c62-aa679812c4c9", "idd025db01-1a50-49b9-acc9-b01716400dd8__id7217d7d3-f5f5-4cf2-8c62-aa679812c4c9", 52, "", 0]);
MGCAddTopic(["refine_regions", "ide30c32c7-6089-4a97-b27f-820a69c07a67", 53, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ide30c32c7-6089-4a97-b27f-820a69c07a67", "ide30c32c7-6089-4a97-b27f-820a69c07a67", 53, "ct-topic-H3", 0]);
MGCAddTopic(["id6e33b2dc-7594-48c7-9e47-cd500dfc2598", "ide30c32c7-6089-4a97-b27f-820a69c07a67__id6e33b2dc-7594-48c7-9e47-cd500dfc2598", 53, "cmd-arg", 0]);
MGCAddTopic(["refine_stop_iterations", "ida8240350-72de-40b4-bea8-65ddb1b4d61d", 54, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ida8240350-72de-40b4-bea8-65ddb1b4d61d", "ida8240350-72de-40b4-bea8-65ddb1b4d61d", 54, "ct-topic-H3", 0]);
MGCAddTopic(["id1707e8b4-050d-450a-8d38-d1b171ddb60e", "ida8240350-72de-40b4-bea8-65ddb1b4d61d__id1707e8b4-050d-450a-8d38-d1b171ddb60e", 54, "cmd-arg", 0]);
MGCAddTopic(["refine_stop_layer", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12", 55, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12", 55, "ct-topic-H3", 0]);
MGCAddTopic(["id16863d8c-e559-4755-b8e7-5b53abac0004", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12__id16863d8c-e559-4755-b8e7-5b53abac0004", 55, "cmd-arg", 0]);
MGCAddTopic(["id7cbb9608-6bc7-4641-8b67-1e93dacce22e", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12__id7cbb9608-6bc7-4641-8b67-1e93dacce22e", 55, "ct-topic-H3", 0]);
MGCAddTopic(["id0dda8126-98c5-48e1-8674-1f663304a97a", "id6bc517fc-5fa6-4fa5-8aad-557e0fda3d12__id0dda8126-98c5-48e1-8674-1f663304a97a", 55, "ct-topic-H3", 0]);
MGCAddTopic(["refine_update_layer", "id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267", 56, "", 0]);
MGCAddTopic(["id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267", "id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267", 56, "", 0]);
MGCAddTopic(["id9ff9415e-86ab-447a-9a01-238cae640c01", "id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267__id9ff9415e-86ab-447a-9a01-238cae640c01", 56, "", 0]);
MGCAddTopic(["id188233e1-41f6-4d52-93b4-93524b25ec52", "id2e1c620e-c72a-4e0e-be2d-b6e1a86ce267__id188233e1-41f6-4d52-93b4-93524b25ec52", 56, "", 0]);
MGCAddTopic(["refine_visible_sim", "id0114b712-07e2-48fb-b5fb-11c5613d018a", 57, "", 0]);
MGCAddTopic(["Visible Simulation Region", "id0f68fe3c-ba55-460b-a308-8a9edf592d37", 57, "", 0]);
MGCAddTopic(["id0114b712-07e2-48fb-b5fb-11c5613d018a", "id0114b712-07e2-48fb-b5fb-11c5613d018a", 57, "", 0]);
MGCAddTopic(["id5ee8d9e0-ffa3-40fd-bbe3-62ab9a63368e", "id0114b712-07e2-48fb-b5fb-11c5613d018a__id5ee8d9e0-ffa3-40fd-bbe3-62ab9a63368e", 57, "", 0]);
MGCAddTopic(["idb74ed276-266f-43ec-bada-9b6695711cb4", "id0114b712-07e2-48fb-b5fb-11c5613d018a__idb74ed276-266f-43ec-bada-9b6695711cb4", 57, "", 0]);
MGCAddTopic(["idf41ee3a9-8526-4536-b646-24082d799239", "id0114b712-07e2-48fb-b5fb-11c5613d018a__idf41ee3a9-8526-4536-b646-24082d799239", 57, "", 0]);
MGCAddTopic(["id250fbf38-0d56-475d-93d3-46d71bbe28c5", "id0114b712-07e2-48fb-b5fb-11c5613d018a__id250fbf38-0d56-475d-93d3-46d71bbe28c5", 57, "", 0]);
MGCAddTopic(["idcd12433f-846f-441e-8893-a9279cb70635", "id0114b712-07e2-48fb-b5fb-11c5613d018a__idcd12433f-846f-441e-8893-a9279cb70635", 57, "", 0]);
MGCAddTopic(["id0f68fe3c-ba55-460b-a308-8a9edf592d37", "id0114b712-07e2-48fb-b5fb-11c5613d018a__id0f68fe3c-ba55-460b-a308-8a9edf592d37", 57, "", 0]);
MGCAddTopic(["reject_duplicate_layers", "id6a53f933-aca4-49b8-bcf9-e450931b03e9", 58, "", 0]);
MGCAddTopic(["id6a53f933-aca4-49b8-bcf9-e450931b03e9", "id6a53f933-aca4-49b8-bcf9-e450931b03e9", 58, "", 0]);
MGCAddTopic(["idfadb4d02-7d14-4a6e-8796-8867cfa40efb", "id6a53f933-aca4-49b8-bcf9-e450931b03e9__idfadb4d02-7d14-4a6e-8796-8867cfa40efb", 58, "", 0]);
MGCAddTopic(["ide1b349f2-bc18-4a80-bf30-2988ea4c2da7", "id6a53f933-aca4-49b8-bcf9-e450931b03e9__ide1b349f2-bc18-4a80-bf30-2988ea4c2da7", 58, "", 0]);
MGCAddTopic(["ide07e709c-930d-49af-b0b2-d687cbbdd435", "id6a53f933-aca4-49b8-bcf9-e450931b03e9__ide07e709c-930d-49af-b0b2-d687cbbdd435", 58, "", 0]);
MGCAddTopic(["smart_cut_disable", "id0153210a-8d37-443f-833a-b8004e83d663", 59, "", 0]);
MGCAddTopic(["id0153210a-8d37-443f-833a-b8004e83d663", "id0153210a-8d37-443f-833a-b8004e83d663", 59, "", 0]);
MGCAddTopic(["id56dec036-ab3c-44c3-9dea-11c26c0e5ca2", "id0153210a-8d37-443f-833a-b8004e83d663__id56dec036-ab3c-44c3-9dea-11c26c0e5ca2", 59, "", 0]);
MGCAddTopic(["id19dbccd9-21ba-406a-adb0-7b62272cec1a", "id0153210a-8d37-443f-833a-b8004e83d663__id19dbccd9-21ba-406a-adb0-7b62272cec1a", 59, "", 0]);
MGCAddTopic(["id937fa2dc-320f-4028-81ef-6d7f9b0866d3", "id0153210a-8d37-443f-833a-b8004e83d663__id937fa2dc-320f-4028-81ef-6d7f9b0866d3", 59, "", 0]);
MGCAddTopic(["Calibre LPE Best Practices", "id7b760a78-ac09-454d-80d1-a079276fe5d9", 60, "mgcsec-H1", 0]);
MGCAddTopic(["id7b760a78-ac09-454d-80d1-a079276fe5d9", "id7b760a78-ac09-454d-80d1-a079276fe5d9", 60, "", 0]);
MGCAddTopic(["LPE Setup Best Practices", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0", 61, "ref-H2", 0]);
MGCAddTopic(["Calibre LPE Best Practices", "id2c6b148a-c9b6-4281-bdda-0eaadc75ad31", 61, "TableTitle", 0]);
MGCAddTopic(["Calibre LPE Dense OPC Best Practices", "id5b5a652e-69d2-4e7b-b614-79ce74baf10f", 61, "TableTitle", 0]);
MGCAddTopic(["id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0", 61, "ref-topic-H2", 0]);
MGCAddTopic(["id797785e5-660d-495f-a8f1-f57e5fea608c", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0__id797785e5-660d-495f-a8f1-f57e5fea608c", 61, "ref-topic-H2", 0]);
MGCAddTopic(["id2c6b148a-c9b6-4281-bdda-0eaadc75ad31", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0__id2c6b148a-c9b6-4281-bdda-0eaadc75ad31", 61, "ref-topic-H2", 0]);
MGCAddTopic(["id5b5a652e-69d2-4e7b-b614-79ce74baf10f", "id9c294561-9c9f-4f4a-b0ab-9e4d6836a0e0__id5b5a652e-69d2-4e7b-b614-79ce74baf10f", 61, "ref-topic-H2", 0]);
MGCAddTopic(["Tool Interaction Best Practices", "id1074cb0e-7141-4b24-8214-29adf9bccd65", 62, "ref-H2", 0]);
MGCAddTopic(["Consistency Best Practices", "id056f74cb-2b02-4056-baf0-af63209de021", 62, "TableTitle", 0]);
MGCAddTopic(["id1074cb0e-7141-4b24-8214-29adf9bccd65", "id1074cb0e-7141-4b24-8214-29adf9bccd65", 62, "ref-topic-H2", 0]);
MGCAddTopic(["id8e2dbf8c-ae4b-4729-8e69-f53e3d0544c3", "id1074cb0e-7141-4b24-8214-29adf9bccd65__id8e2dbf8c-ae4b-4729-8e69-f53e3d0544c3", 62, "ref-topic-H2", 0]);
MGCAddTopic(["id056f74cb-2b02-4056-baf0-af63209de021", "id1074cb0e-7141-4b24-8214-29adf9bccd65__id056f74cb-2b02-4056-baf0-af63209de021", 62, "ref-topic-H2", 0]);
MGCAddTopic(["id4e2378f0-8d40-4959-818d-de61df63762e", "id1074cb0e-7141-4b24-8214-29adf9bccd65__id4e2378f0-8d40-4959-818d-de61df63762e", 62, "ref-topic-H2", 0]);
MGCAddTopic(["ida34744b8-3811-4d55-97c7-9004319a10e6", "id1074cb0e-7141-4b24-8214-29adf9bccd65__ida34744b8-3811-4d55-97c7-9004319a10e6", 62, "ref-topic-H2", 0]);
MGCAddTopic(["Memory Management Best Practices", "id04f9f594-81de-485e-906d-7aeabaf0dbfb", 63, "", 0]);
MGCAddTopic(["id04f9f594-81de-485e-906d-7aeabaf0dbfb", "id04f9f594-81de-485e-906d-7aeabaf0dbfb", 63, "", 0]);
MGCAddTopic(["id38d0b09d-8f9f-4480-95e3-7d5dc2bcbf2c", "id04f9f594-81de-485e-906d-7aeabaf0dbfb__id38d0b09d-8f9f-4480-95e3-7d5dc2bcbf2c", 63, "", 0]);
MGCAddTopic(["idd884524a-2eae-4086-8d07-f4811111865d", "id04f9f594-81de-485e-906d-7aeabaf0dbfb__idd884524a-2eae-4086-8d07-f4811111865d", 63, "", 0]);
MGCAddTopic(["Pre-Existing MRC Errors", "id64e53628-f97e-4c07-bacb-b3dc5bf6a6d2", 64, "", 0]);
MGCAddTopic(["id64e53628-f97e-4c07-bacb-b3dc5bf6a6d2", "id64e53628-f97e-4c07-bacb-b3dc5bf6a6d2", 64, "", 0]);
MGCAddTopic(["Browsing LPE Results", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859", 65, "", 0]);
MGCAddTopic(["LPE Browser Panels", "id9c174cee-e343-4363-ba3d-5da064eed76f", 65, "", 0]);
MGCAddTopic(["LPE Browser Region Decisions", "id66e9fe17-fe60-49b5-9d86-addda205fe5a", 65, "", 0]);
MGCAddTopic(["id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859", 65, "", 0]);
MGCAddTopic(["id2f60d9b0-0ec1-4449-8e45-76ea17e86c6e", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id2f60d9b0-0ec1-4449-8e45-76ea17e86c6e", 65, "", 0]);
MGCAddTopic(["idc44fb7b9-208e-4ded-8165-f2a4845d941d", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idc44fb7b9-208e-4ded-8165-f2a4845d941d", 65, "", 0]);
MGCAddTopic(["id4d60c064-54c4-4971-96ac-2d59ce601d5b", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id4d60c064-54c4-4971-96ac-2d59ce601d5b", 65, "", 0]);
MGCAddTopic(["id69a492d0-2edc-49d3-b7ca-2a9400e69e62", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id69a492d0-2edc-49d3-b7ca-2a9400e69e62", 65, "", 0]);
MGCAddTopic(["id26078749-8612-4e21-87b4-1f2c47d28960", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id26078749-8612-4e21-87b4-1f2c47d28960", 65, "", 0]);
MGCAddTopic(["id9c174cee-e343-4363-ba3d-5da064eed76f", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id9c174cee-e343-4363-ba3d-5da064eed76f", 65, "", 0]);
MGCAddTopic(["idb13192df-ee2c-42a8-84ab-e5f20a394580", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idb13192df-ee2c-42a8-84ab-e5f20a394580", 65, "", 0]);
MGCAddTopic(["id37903b03-2332-4ef9-8360-9a73212481f9", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id37903b03-2332-4ef9-8360-9a73212481f9", 65, "", 0]);
MGCAddTopic(["id4dd1850c-6b15-4e92-8a9d-6f8f6ab4d384", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id4dd1850c-6b15-4e92-8a9d-6f8f6ab4d384", 65, "", 0]);
MGCAddTopic(["id66e9fe17-fe60-49b5-9d86-addda205fe5a", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id66e9fe17-fe60-49b5-9d86-addda205fe5a", 65, "", 0]);
MGCAddTopic(["id7e56950c-c3c7-4c5d-9eb5-b85fdee75873", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id7e56950c-c3c7-4c5d-9eb5-b85fdee75873", 65, "", 0]);
MGCAddTopic(["id2abd404d-6304-4380-b319-24d115a9f8fd", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id2abd404d-6304-4380-b319-24d115a9f8fd", 65, "", 0]);
MGCAddTopic(["id12b7266f-520c-41d9-9cdb-9a1e9cc5dd1b", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id12b7266f-520c-41d9-9cdb-9a1e9cc5dd1b", 65, "", 0]);
MGCAddTopic(["id0090384b-3a1a-4621-8c0d-b7c1f8bbcac6", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id0090384b-3a1a-4621-8c0d-b7c1f8bbcac6", 65, "", 0]);
MGCAddTopic(["id9690e46e-0013-4ac2-a3f8-3859d00506a4", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id9690e46e-0013-4ac2-a3f8-3859d00506a4", 65, "", 0]);
MGCAddTopic(["id1fbf92af-7c64-474b-9a49-a4d12bad3fda", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id1fbf92af-7c64-474b-9a49-a4d12bad3fda", 65, "", 0]);
MGCAddTopic(["idb76d6ab0-2449-42b3-8590-5d3b19162967", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idb76d6ab0-2449-42b3-8590-5d3b19162967", 65, "", 0]);
MGCAddTopic(["idb0787542-d066-4d09-84ad-2d04e1be3560", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idb0787542-d066-4d09-84ad-2d04e1be3560", 65, "", 0]);
MGCAddTopic(["idf5302578-5cf2-4cdc-aa96-2c185e74f028", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idf5302578-5cf2-4cdc-aa96-2c185e74f028", 65, "", 0]);
MGCAddTopic(["id5240f3ee-96ee-44ea-9cb3-06bba57bb8e7", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__id5240f3ee-96ee-44ea-9cb3-06bba57bb8e7", 65, "", 0]);
MGCAddTopic(["idaff44897-eebd-4d9b-b72e-d075b7b81037", "id26c92b4c-9ae8-4dd8-b4d6-e6c6c8e64859__idaff44897-eebd-4d9b-b72e-d075b7b81037", 65, "", 0]);
MGCAddTopic(["Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 66, "", 0]);
MGCAddTopic(["id6cba59fd-c0f7-4513-b3e9-78d1422af93e", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 66, "", 0]);

//
// Load index data

//
// Load snippet data
MGCAddSnippet(1, "Title Page");
MGCAddSnippet(2, "List of Figures");
MGCAddSnippet(3, "List of Tables");
MGCAddSnippet(4, "This chapter introduces Calibre Local Printability Enhancement (Calibre LPE), and contains the following sections related to using the product:");
MGCAddSnippet(5, "Calibre LPE corrects identified OPC hotspots using advanced pixel-based optimization. Pixel-based optimization offers the best process window results but is too computationally intensive for full-chip layouts. Calibre LPE allows you to quickly run OPC on the initial layout and then refine the results only where needed. It then smoothly integrates the refined regions with the main mask results.");
MGCAddSnippet(6, "Calibre LPE is run after other tools have identified and marked the particular areas in a layout that do not meet requirements.");
MGCAddSnippet(7, "To more easily understand how to set up a Calibre LPE rule file, you need to be familiar with regions. Calibre LPE creates three regions in a layout: core, context, and visible. These three regions are referred to collectively as the repair region.");
MGCAddSnippet(8, "Before using Calibre LPE, you need the correct environment, required files, and input.");
MGCAddSnippet(9, "The command descriptions use font properties and several metacharacters to document the command syntax.");
MGCAddSnippet(10, "Calibre LPE runs in batch mode, which requires an SVRF file to be processed by the Calibre database constructor (calibre -drc). The processing is invoked from a shell command line. It requires CalibreMTflex mode in order to support ULTRAflex processing. It does not run on the CalibreFullScale platform.");
MGCAddSnippet(11, "Calibre LPE is launched from a standard Calibre SVRF file. A litho setup file contains the tool-specific settings.");
MGCAddSnippet(12, "A utility that creates a starting setup suitable for LPE-driven dense opc from a Calibre nmOPC rule file.");
MGCAddSnippet(13, "There are two SVRF commands used by Calibre LPE.");
MGCAddSnippet(14, "Specifies a Litho setup file in the SVRF rule file for use by Calibre Litho/RET tools.");
MGCAddSnippet(15, "Invokes Calibre LPE.");
MGCAddSnippet(16, "The Litho setup file for Calibre LPE has some differences from a standard OPC Litho setup file, as described here. Litho setup files are used by most Calibre post-tapeout tools to specify local settings and encapsulate product-specific commands.");
MGCAddSnippet(17, "This section lists commands that can appear in a Calibre LPE setup file.");
MGCAddSnippet(18, "Recommended for nmOPC runs. Controls the gradient of correction in the transition region by creating zones with DISPLACEMENT ‑limit and FEEDBACK constraints on fragment movement.");
MGCAddSnippet(19, "Recommended for nmOPC runs. Specifies that fragment information should be copied from the opc layers to the correction layers for runs using Calibre nmOPC.");
MGCAddSnippet(20, "Ensures fragmentation of long edges at region boundaries by adding fragment_coincident to the Calibre nmOPC setup file.");
MGCAddSnippet(21, "Improves fragmentation on long lines.");
MGCAddSnippet(22, "Sets up the Calibre nmOPC run to use shapes from either the correction layers, the target layers, or intermediate result layers in the core region.");
MGCAddSnippet(23, "Recommended for nmOPC runs. Converts a Calibre nmOPC setup file that operates on OPC layers to one that operates on correction layers.");
MGCAddSnippet(24, "Recommended for nmOPC runs. Restricts notch fragments on the correction layer to a smaller displacement for Calibre nmOPC runs.");
MGCAddSnippet(25, "Processes setlayer notchfill statements in a Calibre nmOPC setup file. Used with denseopc_copy_fragments.");
MGCAddSnippet(26, "Recommended for nmOPC runs. Removes notches and nubs in the initial correction layer for Calibre nmOPC.");
MGCAddSnippet(27, "Specifies which Calibre nmOPC NEWTAG command to use when copying information from the opc layer to the correction layer.");
MGCAddSnippet(28, "Recommended for nmOPC runs that use fragment_optimize. Sets fragment_optimize to only compute fragment information, and not move fragments.");
MGCAddSnippet(29, "A Calibre pxOPC job option that must be used instead of refine when invoking Calibre pxOPC from an RET REFINE run.");
MGCAddSnippet(30, "Required. Specifies input layers that correspond to the layers in the RET REFINE command.");
MGCAddSnippet(31, "Specifies the minimum fragment length for MRC.");
MGCAddSnippet(32, "Specifies the minimum spacing for MRC.");
MGCAddSnippet(33, "Specifies the minimum width for MRC.");
MGCAddSnippet(34, "Sets the minimum distance between two internal edges.");
MGCAddSnippet(35, "Sets the minimum distance between two internal edges.");
MGCAddSnippet(36, "Sets the minimum distance between two internal edges.");
MGCAddSnippet(37, "Sets the minimum distance between two internal edges.");
MGCAddSnippet(38, "Removes features smaller than a specified size from Calibre pxOPC output. This should be set smaller than the mrc_min_square value.");
MGCAddSnippet(39, "Restricts the LPE run to only the picked regions. Can be specified multiple times.");
MGCAddSnippet(40, "Sets up the Calibre pxOPC run to use shapes from either the correction layers or the opc layers in the core region.");
MGCAddSnippet(41, "Specifies an override for the size of the context region. ");
MGCAddSnippet(42, "Adjusts the weight to give a previous pxOPC output in the next iteration.");
MGCAddSnippet(43, "Controls whether repair regions that overlap in the visible region are adjusted to separate them.");
MGCAddSnippet(44, "Specifies an override for the size of all regions.");
MGCAddSnippet(45, "Required. Calls the various operations to enhance printability in the marked regions. This command must be used instead of  setlayer pxopc  or  setlayer denseopc . ");
MGCAddSnippet(46, "Required. Identifies the output to return from an RET REFINE command.");
MGCAddSnippet(47, "Required. Specifies the layer with hotspot markers. Must appear only once.");
MGCAddSnippet(48, "Specifies the maximum number of markers to process. Suggested use is to prevent excessive runtime due to bad input.");
MGCAddSnippet(49, "Enables core regions to encompass large markers.");
MGCAddSnippet(50, "Identifies repair regions with identical input and processes them as one instance. Requires refine_process hier.");
MGCAddSnippet(51, "Preserves the layout hierarchy in repair regions.");
MGCAddSnippet(52, "Controls what is included in the active region of iterative repairs.");
MGCAddSnippet(53, "Alters the repair region definition for multiple iterations.");
MGCAddSnippet(54, "Specifies how many iterations at most to perform. The default is 1.");
MGCAddSnippet(55, "Identifies the refine_exec output layer that contains any hot spots after each iteration.");
MGCAddSnippet(56, "Copies the output from a refine_exec iteration to a specified layer for use in the next iteration when  refine_regions update  is set.");
MGCAddSnippet(57, "Checks the inner part of the visible region for new hotspots.");
MGCAddSnippet(58, "Permits duplicate layer names in refine_exec operations.");
MGCAddSnippet(59, "Controls whether additional compensation is done to avoid MRC violations.");
MGCAddSnippet(60, "Best practices are proven settings that Siemens EDA generally recommends, but does not require.");
MGCAddSnippet(61, "The Calibre LPE work flow is different from other OPC tools and places different constraints on the input and settings.");
MGCAddSnippet(62, "Because Calibre LPE can call multiple setup files, it is best to check that all tools are using consistent settings. The tool does not enforce these.");
MGCAddSnippet(63, "A common cause of a hung or failed run is not enough memory on the remote hosts. The settings summarized here make the best use of memory on remote hosts, allowing even triple-patterning LPE-pxOPC runs to complete.");
MGCAddSnippet(64, "Most rule files run MRC and verification after Calibre LPE, and sometimes report errors in the repair region that are not a result of Calibre LPE. The example SVRF shows how to ignore errors that do not interact with the corrected region.");
MGCAddSnippet(65, "The LPE Browser provides a simple way to compare the original OPC results and the LPE output, and then decide which to keep in the design. It can run LPE to fix merged regions or generate an SVRF file you can run in batch mode.");
MGCAddSnippet(66, "Details on open source and third-party software that may be included with this product are available in the <your_software_installation_location>/legal directory.");

//
//
MGCFrame.BookData[handle]['DataLoaded'] = true;
//
//

// Load search data
//
AddSWrd('symbol', '-----------------------------------------------------------', [11,40]);
AddSWrd('num', '-0.001', [17,25 , 11,5]);
AddSWrd('num', '-0.003', [17,15 , 11,5]);
AddSWrd('num', '-0.007', [17,15 , 11,5]);
AddSWrd('num', '-0.01', [17,15 , 11,5]);
AddSWrd('num', '-0.012', [17,15 , 11,5]);
AddSWrd('num', '-0.020', [17,5]);
AddSWrd('num', '-0.03', [17,15 , 11,5]);
AddSWrd('num', '-0.07', [17,15 , 11,5]);
AddSWrd('num', '-0.1', [17,30]);
AddSWrd('num', '-0.15', [17,15 , 11,5]);
AddSWrd('num', '-0.2', [17,30]);
AddSWrd('num', '-0.20', [17,5]);
AddSWrd('num', '-0.3', [17,30]);
AddSWrd('num', '-0.4', [17,20]);
AddSWrd('num', '-0.5', [17,20]);
AddSWrd('num', '-0.8', [17,30]);
AddSWrd('num', '-1.5', [63,2]);
AddSWrd('num', '-45', [49,10]);
AddSWrd('num', '-90', [49,10]);
AddSWrd('d', '-drc', [9,10]);
AddSWrd('f', '-fixedoffset', [11,10]);
AddSWrd('f', '-from', [11,5 , 29,10 , 45,5 , 14,5 , 15,5]);
AddSWrd('h', '-hier', [9,5]);
AddSWrd('i', '-interdistance', [11,10]);
AddSWrd('i', '-iter', [45,20]);
AddSWrd('k', '-keep', [17,55 , 11,20]);
AddSWrd('l', '-limit', [17,25]);
AddSWrd('l', '-lpe', [11,135 , 60,5]);
AddSWrd('n', '-num', [11,10]);
AddSWrd('o', '-out', [17,25 , 11,10]);
AddSWrd('o', '-overlay', [19,5]);
AddSWrd('r', '-region', [11,20 , 43,20 , 45,60 , 15,20]);
AddSWrd('r', '-ripplelen', [11,10]);
AddSWrd('s', '-shield', [11,10]);
AddSWrd('t', '-turbo', [9,5]);
AddSWrd('symbol', '...', [28,5]);
AddSWrd('s', '.svrf', [11,10]);
AddSWrd('num', '0.001', [17,15 , 11,5 , 60,5]);
AddSWrd('num', '0.003', [17,15 , 11,5 , 60,5]);
AddSWrd('num', '0.005', [44,20]);
AddSWrd('num', '0.007', [17,15 , 11,5 , 60,5]);
AddSWrd('num', '0.01', [11,20 , 44,15 , 63,4]);
AddSWrd('num', '0.012', [17,15 , 11,5 , 60,5]);
AddSWrd('num', '0.013', [11,10]);
AddSWrd('num', '0.015', [33,10 , 34,10 , 35,10 , 36,10 , 37,20 , 11,35]);
AddSWrd('num', '0.02', [11,20 , 44,5]);
AddSWrd('num', '0.020', [17,5]);
AddSWrd('num', '0.025', [11,10]);
AddSWrd('num', '0.028', [11,20]);
AddSWrd('num', '0.04', [11,10]);
AddSWrd('num', '0.05', [23,10 , 43,10]);
AddSWrd('num', '0.065', [11,20]);
AddSWrd('num', '0.1', [23,5 , 25,5]);
AddSWrd('num', '0.2', [6,2 , 43,10]);
AddSWrd('num', '0.3', [11,10]);
AddSWrd('num', '0.5', [61,5]);
AddSWrd('num', '0.64', [56,5]);
AddSWrd('num', '1.0', [56,5 , 29,10 , 61,5]);
AddSWrd('num', '1.5', [43,15]);
AddSWrd('num', '1.64', [56,5]);
AddSWrd('num', '10%', [61,5]);
AddSWrd('num', '100', [29,5]);
AddSWrd('num', '1125', [45,5]);
AddSWrd('num', '1137', [45,5]);
AddSWrd('num', '1230', [45,5]);
AddSWrd('num', '1231', [45,5]);
AddSWrd('num', '180', [49,10]);
AddSWrd('num', '199', [11,10]);
AddSWrd('num', '1markers_frag_1', [17,15]);
AddSWrd('num', '1markers_frag_2', [17,15]);
AddSWrd('num', '1markers_frag_3', [17,15]);
AddSWrd('num', '1markers_frag_4', [17,15]);
AddSWrd('num', '1markers_frag_5', [17,15]);
AddSWrd('num', '2.0', [43,10]);
AddSWrd('num', '200', [29,5]);
AddSWrd('num', '2013.2', [7,2]);
AddSWrd('num', '2016.4', [62,5]);
AddSWrd('num', '237', [11,5]);
AddSWrd('num', '240', [11,10]);
AddSWrd('num', '243', [11,10]);
AddSWrd('num', '245', [11,5]);
AddSWrd('num', '246', [11,5]);
AddSWrd('num', '247', [11,5]);
AddSWrd('num', '248', [11,5]);
AddSWrd('num', '249', [11,5]);
AddSWrd('num', '332', [45,5]);
AddSWrd('num', '400', [43,5]);
AddSWrd('num', '4000', [11,10]);
AddSWrd('num', '5.0', [11,10]);
AddSWrd('num', '600', [47,5]);
AddSWrd('a', 'abbreviate', [8,5]);
AddSWrd('a', 'able', [4,2]);
AddSWrd('a', 'above', [64,2 , 52,5 , 11,10 , 44,5 , 45,5]);
AddSWrd('a', 'abut', [44,20]);
AddSWrd('a', 'accept', [40,5 , 44,20]);
AddSWrd('a', 'acceptable', [5,2 , 60,5]);
AddSWrd('a', 'access', [44,5 , 14,5]);
AddSWrd('a', 'accidentally', [64,2]);
AddSWrd('a', 'accordance', [11,5]);
AddSWrd('a', 'accurate', [50,5 , 60,5]);
AddSWrd('a', 'achieved', [43,5]);
AddSWrd('a', 'across', [48,5 , 21,10 , 56,10]);
AddSWrd('a', 'acted', [14,5]);
AddSWrd('a', 'activated', [49,10]);
AddSWrd('a', 'activates', [49,5]);
AddSWrd('a', 'active', [51,5]);
AddSWrd('a', 'actual', [29,10 , 46,15]);
AddSWrd('a', 'add', [19,10 , 20,10 , 37,5 , 23,10 , 41,5 , 11,5 , 43,5 , 47,5]);
AddSWrd('a', 'added', [17,5 , 49,5 , 19,15 , 20,10 , 41,5]);
AddSWrd('a', 'adding', [19,5]);
AddSWrd('a', 'additional', [49,5 , 7,2 , 23,5 , 58,5 , 11,5 , 44,75 , 29,5 , 45,5]);
AddSWrd('a', 'additionally', [56,5 , 44,5 , 61,5 , 62,5]);
AddSWrd('a', 'additions', [49,5]);
AddSWrd('a', 'additive', [38,5]);
AddSWrd('a', 'adds', [22,10 , 56,5 , 11,15 , 27,5]);
AddSWrd('a', 'adj_x', [44,10]);
AddSWrd('a', 'adjacent', [25,5]);
AddSWrd('a', 'adjust', [64,2 , 11,10]);
AddSWrd('a', 'adjusted', [25,5 , 42,5 , 45,10]);
AddSWrd('a', 'adjusting', [5,2]);
AddSWrd('a', 'adjustments', [17,5 , 7,2]);
AddSWrd('a', 'adjusts', [5,2 , 40,5 , 25,10 , 41,5 , 60,5]);
AddSWrd('a', 'administrator', [62,5]);
AddSWrd('a', 'advanced', [4,2 , 62,5]);
AddSWrd('a', 'affect', [24,5 , 44,10 , 60,5]);
AddSWrd('a', 'affected', [17,10 , 50,20]);
AddSWrd('a', 'algorithm', [49,5 , 4,2 , 11,10]);
AddSWrd('a', 'alleviate', [42,5 , 58,5]);
AddSWrd('a', 'allow', [11,10]);
AddSWrd('a', 'allowed', [57,10 , 44,15 , 60,5]);
AddSWrd('a', 'allowing', [13,10 , 62,5]);
AddSWrd('a', 'allows', [4,2 , 24,5 , 44,20]);
AddSWrd('a', 'already', [5,2 , 11,10]);
AddSWrd('a', 'alt_value', [17,20]);
AddSWrd('a', 'alternate', [14,5]);
AddSWrd('a', 'alternatively', [14,5]);
AddSWrd('a', 'alters', [52,5]);
AddSWrd('a', 'although', [39,5 , 41,5 , 11,5 , 28,5 , 44,5 , 60,5 , 46,5]);
AddSWrd('a', 'always', [48,10 , 17,5 , 50,5 , 52,10 , 39,10 , 44,5]);
AddSWrd('a', 'among', [55,10]);
AddSWrd('a', 'amount', [20,5 , 45,10 , 61,5]);
AddSWrd('a', 'analog', [11,5]);
AddSWrd('a', 'angle', [44,5]);
AddSWrd('a', 'angle1', [44,5]);
AddSWrd('a', 'angle2', [44,5]);
AddSWrd('a', 'appear', [32,10 , 8,5 , 40,5 , 44,5 , 46,15 , 15,5 , 16,2 , 52,5 , 53,5 , 54,5 , 61,5 , 30,10 , 31,10]);
AddSWrd('a', 'appears', [44,15]);
AddSWrd('a', 'append', [64,2]);
AddSWrd('a', 'applicable', [49,10 , 60,5]);
AddSWrd('a', 'applied', [49,5 , 52,5 , 43,5 , 44,5]);
AddSWrd('a', 'applies', [34,5]);
AddSWrd('a', 'apply', [32,5 , 30,5 , 15,10 , 31,5]);
AddSWrd('a', 'appropriate', [13,10 , 14,10]);
AddSWrd('a', 'arbitrarily', [33,10]);
AddSWrd('a', 'arbitrary', [11,10]);
AddSWrd('a', 'area', [48,10 , 39,20 , 40,5 , 42,5 , 58,5 , 44,15 , 45,45 , 46,10]);
AddSWrd('a', 'areas', [64,2 , 5,8 , 45,5]);
AddSWrd('a', 'argument', [8,20 , 11,20 , 16,2 , 17,20 , 18,20 , 19,20 , 20,20 , 22,20 , 23,20 , 24,20 , 25,20 , 26,20 , 27,10 , 29,20 , 30,10 , 31,10 , 32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 37,10 , 38,10 , 39,10 , 40,10 , 41,20 , 42,10 , 44,110 , 45,65 , 46,10 , 47,30 , 48,30 , 49,20 , 50,20 , 51,10 , 52,20 , 54,10 , 55,20 , 58,10]);
AddSWrd('a', 'arguments', [17,15 , 21,5 , 8,15 , 27,10 , 43,5 , 28,5 , 45,5]);
AddSWrd('a', 'around', [6,2 , 38,15 , 40,10 , 44,5 , 45,10 , 46,5]);
AddSWrd('a', 'arrow', [64,2]);
AddSWrd('a', 'asraf', [21,5 , 29,10 , 45,5]);
AddSWrd('a', 'assign', [64,2 , 44,10 , 14,10]);
AddSWrd('a', 'assigned', [44,20]);
AddSWrd('a', 'assigns', [14,5]);
AddSWrd('a', 'associated', [7,2]);
AddSWrd('a', 'assuming', [45,5]);
AddSWrd('a', 'attempts', [50,10]);
AddSWrd('a', 'atten', [11,20]);
AddSWrd('a', 'auto', [17,10 , 49,40 , 11,5]);
AddSWrd('a', 'automatic', [49,10]);
AddSWrd('a', 'automatically', [49,15 , 7,2 , 27,5 , 44,10 , 29,5]);
AddSWrd('a', 'auxiliary', [29,10]);
AddSWrd('a', 'auxiliary_layer', [8,5]);
AddSWrd('a', 'available', [65,2 , 44,5 , 14,10 , 62,5]);
AddSWrd('a', 'avoid', [64,2 , 58,5]);
AddSWrd('a', 'aware', [61,5]);
AddSWrd('b', 'back', [5,2 , 14,10]);
AddSWrd('b', 'background', [11,20 , 28,5]);
AddSWrd('b', 'bad', [60,5 , 47,5]);
AddSWrd('b', 'band', [61,5]);
AddSWrd('b', 'bars', [8,10]);
AddSWrd('b', 'based', [49,15 , 5,2 , 37,5 , 6,4 , 22,15 , 44,5 , 45,10]);
AddSWrd('b', 'basic', [13,5]);
AddSWrd('b', 'basing', [11,5]);
AddSWrd('b', 'batch', [64,4 , 9,5]);
AddSWrd('b', 'begin', [15,5]);
AddSWrd('b', 'beginning', [49,5]);
AddSWrd('b', 'behave', [62,5]);
AddSWrd('b', 'behaves', [48,10]);
AddSWrd('b', 'behavior', [39,10 , 45,10 , 15,5 , 47,10 , 49,10 , 18,10 , 50,10 , 19,10 , 20,10 , 52,15 , 21,10 , 22,10 , 23,10 , 24,10 , 56,10 , 25,10 , 57,10 , 26,10]);
AddSWrd('b', 'below', [40,5 , 15,5]);
AddSWrd('b', 'best', [48,5 , 49,10 , 4,2 , 59,22 , 28,5 , 60,75 , 61,50 , 62,35]);
AddSWrd('b', 'better', [39,5]);
AddSWrd('b', 'beyond', [17,10 , 49,5]);
AddSWrd('b', 'bias', [44,5]);
AddSWrd('b', 'biased', [44,10]);
AddSWrd('b', 'biasrule', [44,15]);
AddSWrd('b', 'black', [38,5]);
AddSWrd('b', 'block', [19,15 , 11,5 , 28,5 , 44,20]);
AddSWrd('b', 'blocks', [44,5 , 61,5]);
AddSWrd('b', 'body', [44,5]);
AddSWrd('b', 'bold', [8,20 , 9,5 , 45,10]);
AddSWrd('b', 'boolean', [44,30 , 15,5]);
AddSWrd('b', 'border', [56,5 , 58,5]);
AddSWrd('b', 'bottom', [48,5 , 49,5 , 43,5]);
AddSWrd('b', 'bound', [47,10]);
AddSWrd('b', 'boundaries', [19,10 , 61,5]);
AddSWrd('b', 'boundary', [56,5 , 61,5]);
AddSWrd('b', 'bourne', [62,10]);
AddSWrd('b', 'braces', [8,15]);
AddSWrd('b', 'brackets', [8,15 , 13,30]);
AddSWrd('b', 'bridge', [49,15 , 54,5]);
AddSWrd('b', 'bridging', [48,5 , 54,15 , 15,30]);
AddSWrd('b', 'browse', [64,4]);
AddSWrd('b', 'browser', [64,40 , 5,2 , 9,5]);
AddSWrd('b', 'browsing', [64,30 , 9,5]);
AddSWrd('b', 'button', [64,8]);
AddSWrd('b', 'buttons', [64,2]);
AddSWrd('c', 'calculate', [52,5]);
AddSWrd('c', 'calculated', [52,5 , 29,10 , 46,5]);
AddSWrd('c', 'calculating', [56,5]);
AddSWrd('c', 'calculations', [62,5]);
AddSWrd('c', 'calibre', [3,24 , 4,60 , 5,76 , 6,52 , 7,66 , 9,70 , 10,24 , 11,165 , 12,12 , 13,65 , 14,55 , 15,60 , 16,16 , 17,90 , 18,10 , 19,35 , 20,25 , 21,5 , 22,40 , 23,20 , 24,15 , 25,40 , 26,15 , 27,20 , 28,20 , 29,80 , 30,25 , 31,25 , 32,25 , 37,15 , 39,5 , 40,20 , 41,20 , 42,10 , 43,5 , 44,130 , 45,40 , 46,5 , 47,20 , 48,5 , 50,40 , 51,5 , 52,10 , 53,5 , 54,20 , 56,10 , 57,5 , 58,15 , 59,20 , 60,65 , 61,95 , 62,15 , 63,8 , 64,10]);
AddSWrd('c', 'calibre_home', [7,4]);
AddSWrd('c', 'calibre_mt_smt_factor', [62,20]);
AddSWrd('c', 'call', [18,5 , 54,5 , 11,5 , 44,5 , 13,5 , 61,5 , 14,10]);
AddSWrd('c', 'called', [32,10 , 50,5 , 4,2 , 7,2 , 43,10 , 45,10 , 61,5 , 30,10 , 31,10]);
AddSWrd('c', 'calling', [11,5 , 13,10]);
AddSWrd('c', 'calls', [5,2 , 11,15 , 44,25 , 60,5 , 13,15 , 14,5 , 15,5]);
AddSWrd('c', 'cannot', [49,10 , 55,5 , 28,5 , 61,5 , 14,5 , 47,20]);
AddSWrd('c', 'capabilities', [64,2]);
AddSWrd('c', 'carriage', [15,5]);
AddSWrd('c', 'case', [49,10 , 42,5 , 45,5 , 14,10 , 15,5]);
AddSWrd('c', 'case-insensitive', [8,5]);
AddSWrd('c', 'cases', [38,5 , 8,5 , 61,5]);
AddSWrd('c', 'catch', [49,5 , 61,5]);
AddSWrd('c', 'cause', [48,5 , 49,5 , 44,5 , 60,5 , 62,5]);
AddSWrd('c', 'causes', [17,20 , 50,5 , 22,10 , 60,5 , 62,5 , 47,20]);
AddSWrd('c', 'cautions', [62,5]);
AddSWrd('c', 'cell', [48,5 , 50,10 , 11,5 , 43,5]);
AddSWrd('c', 'cellname', [48,5 , 43,5]);
AddSWrd('c', 'cells', [11,15]);
AddSWrd('c', 'center', [48,10 , 64,2 , 6,2 , 46,5]);
AddSWrd('c', 'centerpoint', [48,5 , 46,10]);
AddSWrd('c', 'central', [25,5]);
AddSWrd('c', 'certain', [21,5 , 23,5 , 8,5 , 61,5]);
AddSWrd('c', 'chance', [46,5]);
AddSWrd('c', 'change', [23,10 , 42,5 , 28,5]);
AddSWrd('c', 'changed', [6,2 , 29,20]);
AddSWrd('c', 'changes', [64,4 , 22,5 , 24,5 , 56,10]);
AddSWrd('c', 'chapter', [3,2 , 10,2]);
AddSWrd('c', 'character', [44,5 , 15,5]);
AddSWrd('c', 'characters', [8,5 , 13,20]);
AddSWrd('c', 'check', [56,25 , 57,5 , 11,80 , 43,5 , 44,25 , 61,5 , 14,20 , 15,5]);
AddSWrd('c', 'checked', [54,5 , 56,25]);
AddSWrd('c', 'checking', [43,5 , 61,5]);
AddSWrd('c', 'checkmap', [11,5]);
AddSWrd('c', 'checks', [5,2 , 54,5 , 56,5 , 44,30 , 61,5]);
AddSWrd('c', 'choice', [8,5]);
AddSWrd('c', 'choose', [64,4]);
AddSWrd('c', 'chosen', [33,10]);
AddSWrd('c', 'circle', [56,5]);
AddSWrd('c', 'class_2', [55,5]);
AddSWrd('c', 'classification', [49,30 , 61,5]);
AddSWrd('c', 'classify', [44,15]);
AddSWrd('c', 'clean', [5,2]);
AddSWrd('c', 'clear', [11,40 , 44,20 , 29,20]);
AddSWrd('c', 'click', [64,6]);
AddSWrd('c', 'clipped', [45,10]);
AddSWrd('c', 'clips', [44,5]);
AddSWrd('c', 'close', [58,5]);
AddSWrd('c', 'closest', [37,5]);
AddSWrd('c', 'clustered', [56,5]);
AddSWrd('c', 'cm1_4.mod', [11,10]);
AddSWrd('c', 'code', [49,5 , 8,5 , 11,5 , 13,10 , 29,5 , 14,5]);
AddSWrd('c', 'coincident', [24,5 , 44,25]);
AddSWrd('c', 'collectively', [6,2]);
AddSWrd('c', 'collinear', [25,5]);
AddSWrd('c', 'color', [55,5]);
AddSWrd('c', 'combination', [49,20 , 44,5]);
AddSWrd('c', 'combined', [5,2 , 44,5 , 45,10]);
AddSWrd('c', 'command', [5,2 , 7,2 , 8,40 , 9,10 , 10,22 , 11,15 , 13,10 , 14,35 , 15,5 , 16,2 , 17,20 , 19,15 , 20,10 , 21,20 , 22,10 , 23,5 , 24,15 , 25,5 , 26,10 , 28,5 , 29,20 , 30,5 , 31,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,5 , 37,10 , 38,10 , 39,5 , 40,5 , 41,15 , 42,5 , 43,15 , 44,55 , 45,10 , 46,5 , 47,5 , 48,5 , 49,20 , 50,5 , 51,10 , 52,5 , 53,5 , 54,5 , 55,30 , 57,5 , 58,5 , 60,15 , 61,5]);
AddSWrd('c', 'command.the', [61,5]);
AddSWrd('c', 'commands', [5,2 , 8,5 , 10,2 , 11,10 , 12,22 , 13,30 , 14,30 , 15,50 , 16,26 , 17,5 , 18,5 , 19,10 , 20,10 , 21,10 , 22,10 , 23,5 , 24,10 , 25,5 , 26,5 , 27,10 , 28,5 , 29,5 , 30,5 , 31,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,5 , 37,5 , 38,5 , 39,5 , 40,5 , 41,5 , 42,5 , 43,10 , 44,55 , 45,5 , 46,5 , 47,5 , 48,5 , 49,20 , 50,5 , 51,10 , 52,5 , 53,5 , 54,5 , 55,10 , 56,10 , 57,5 , 58,5 , 60,5]);
AddSWrd('c', 'comment', [17,20 , 13,10]);
AddSWrd('c', 'comments', [13,10 , 15,15]);
AddSWrd('c', 'common', [62,5]);
AddSWrd('c', 'compact', [50,5]);
AddSWrd('c', 'compare', [64,4]);
AddSWrd('c', 'compared', [49,5 , 42,5 , 58,5]);
AddSWrd('c', 'compensation', [58,5]);
AddSWrd('c', 'compiler', [13,10]);
AddSWrd('c', 'complement', [44,10]);
AddSWrd('c', 'complete', [11,5 , 27,10 , 13,10 , 62,5]);
AddSWrd('c', 'completed', [11,5 , 45,5]);
AddSWrd('c', 'components', [4,2]);
AddSWrd('c', 'computationally', [4,2]);
AddSWrd('c', 'compute', [27,5]);
AddSWrd('c', 'concave', [11,10]);
AddSWrd('c', 'concurrent', [44,20]);
AddSWrd('c', 'concurrently', [44,10 , 14,5]);
AddSWrd('c', 'cond1', [28,10]);
AddSWrd('c', 'cond2', [28,10]);
AddSWrd('c', 'conditions', [48,5 , 28,5 , 45,5]);
AddSWrd('c', 'configuration', [49,5 , 62,10]);
AddSWrd('c', 'conjunction', [34,5 , 35,5]);
AddSWrd('c', 'connect', [61,5]);
AddSWrd('c', 'consider', [11,5 , 45,5 , 61,5]);
AddSWrd('c', 'considered', [49,15 , 40,5 , 44,10 , 45,10]);
AddSWrd('c', 'considers', [51,10]);
AddSWrd('c', 'consistency', [61,20]);
AddSWrd('c', 'consistent', [61,5]);
AddSWrd('c', 'constrains', [17,10]);
AddSWrd('c', 'constraints', [17,5 , 11,5 , 60,5]);
AddSWrd('c', 'constructed', [49,5 , 38,5 , 56,5 , 44,5 , 61,5 , 46,5]);
AddSWrd('c', 'constructor', [9,5]);
AddSWrd('c', 'constructs', [38,5 , 44,20 , 45,5]);
AddSWrd('c', 'consumption', [49,5 , 50,5]);
AddSWrd('c', 'contact', [61,5]);
AddSWrd('c', 'contact_opc', [29,25]);
AddSWrd('c', 'contact_retarget', [29,15]);
AddSWrd('c', 'contact_tgt', [29,25]);
AddSWrd('c', 'contacts', [36,5]);
AddSWrd('c', 'contain', [48,10 , 19,5 , 7,2 , 24,5 , 11,20 , 43,5 , 44,25 , 60,5 , 29,10 , 14,10 , 15,5]);
AddSWrd('c', 'contained', [16,2 , 44,5]);
AddSWrd('c', 'containing', [11,5 , 29,20 , 15,5]);
AddSWrd('c', 'contains', [48,10 , 3,2 , 54,5 , 24,5 , 10,4 , 11,15 , 46,5 , 62,10]);
AddSWrd('c', 'content', [55,10]);
AddSWrd('c', 'contents', [13,10 , 14,5]);
AddSWrd('c', 'context', [6,14 , 40,15 , 11,5 , 43,20 , 44,20 , 45,30 , 15,5 , 48,40 , 17,20 , 49,5 , 23,5 , 56,10 , 25,5 , 58,5 , 60,5 , 61,5 , 63,4]);
AddSWrd('c', 'context_region', [11,30 , 43,10 , 15,5]);
AddSWrd('c', 'contextual', [50,5]);
AddSWrd('c', 'continuation', [44,5 , 15,5]);
AddSWrd('c', 'continues', [52,10]);
AddSWrd('c', 'contour', [28,5 , 29,5 , 15,5]);
AddSWrd('c', 'contour_nominal', [15,20]);
AddSWrd('c', 'contour_pvband', [15,20]);
AddSWrd('c', 'contrast', [44,5]);
AddSWrd('c', 'contribution', [37,5]);
AddSWrd('c', 'control', [48,10 , 17,5 , 33,5 , 35,5 , 36,5 , 47,10]);
AddSWrd('c', 'controlling', [34,5]);
AddSWrd('c', 'controls', [64,2 , 17,5 , 51,10 , 23,5 , 57,5 , 26,5 , 42,10 , 58,10]);
AddSWrd('c', 'convention', [8,5]);
AddSWrd('c', 'conventions', [8,45]);
AddSWrd('c', 'converge', [53,5 , 61,5]);
AddSWrd('c', 'converged', [51,10 , 52,5 , 45,25]);
AddSWrd('c', 'convergence', [17,5 , 20,5 , 53,5]);
AddSWrd('c', 'convert', [22,30]);
AddSWrd('c', 'converted', [11,5]);
AddSWrd('c', 'converts', [22,5 , 11,10]);
AddSWrd('c', 'convex', [11,10 , 44,10]);
AddSWrd('c', 'coordinate', [48,15 , 38,15 , 43,15]);
AddSWrd('c', 'coordinates', [50,5 , 38,15]);
AddSWrd('c', 'copied', [49,5 , 18,25]);
AddSWrd('c', 'copies', [17,10 , 55,5 , 44,10]);
AddSWrd('c', 'copy', [55,5 , 11,60 , 43,10 , 44,55 , 14,5 , 63,6]);
AddSWrd('c', 'copying', [20,5 , 26,35]);
AddSWrd('c', 'core', [6,18 , 39,45 , 40,20 , 11,5 , 43,20 , 44,20 , 45,50 , 15,5 , 48,55 , 17,15 , 49,5 , 21,45 , 23,5 , 24,10 , 56,5 , 25,10 , 61,10 , 62,10 , 63,4]);
AddSWrd('c', 'core_context_region', [63,8]);
AddSWrd('c', 'core_region', [11,30 , 43,30 , 15,5]);
AddSWrd('c', 'cores', [62,10]);
AddSWrd('c', 'corner', [44,20 , 46,5]);
AddSWrd('c', 'correct', [7,2 , 11,5 , 28,5]);
AddSWrd('c', 'correct-and-check', [15,5]);
AddSWrd('c', 'corrected', [44,10 , 29,20 , 45,35 , 61,5 , 63,2]);
AddSWrd('c', 'correction', [7,4 , 39,45 , 41,5 , 11,15 , 44,35 , 45,70 , 14,5 , 15,20 , 17,10 , 49,60 , 18,15 , 20,10 , 21,105 , 22,25 , 23,10 , 24,20 , 25,20 , 26,15 , 29,55 , 61,5]);
AddSWrd('c', 'correction_layer', [19,5 , 22,5]);
AddSWrd('c', 'correction_map', [26,15]);
AddSWrd('c', 'corrections', [17,5 , 49,5 , 58,5 , 44,5 , 29,10 , 63,2]);
AddSWrd('c', 'correctly', [64,2]);
AddSWrd('c', 'corrects', [4,2 , 63,2]);
AddSWrd('c', 'correspond', [29,5]);
AddSWrd('c', 'corresponding', [22,5 , 44,25]);
AddSWrd('c', 'corresponds', [44,10]);
AddSWrd('c', 'count', [42,10 , 45,25]);
AddSWrd('c', 'counted', [42,5]);
AddSWrd('c', 'counterparts', [22,5]);
AddSWrd('c', 'courier', [8,5]);
AddSWrd('c', 'cover', [46,5]);
AddSWrd('c', 'covered', [42,5 , 58,5]);
AddSWrd('c', 'cpu', [49,5 , 45,5 , 62,10 , 47,5]);
AddSWrd('c', 'cpus', [62,5]);
AddSWrd('c', 'create', [64,2 , 11,10 , 60,5]);
AddSWrd('c', 'created', [51,5 , 55,10 , 44,20 , 46,5 , 15,5 , 63,2]);
AddSWrd('c', 'creates', [64,2 , 17,5 , 6,2 , 11,5]);
AddSWrd('c', 'creating', [17,5 , 44,25]);
AddSWrd('c', 'criteria', [5,2 , 23,10]);
AddSWrd('c', 'current', [41,5]);
AddSWrd('c', 'curve_target', [24,10]);
AddSWrd('c', 'cut', [58,20]);
AddSWrd('c', 'cuts', [58,25]);
AddSWrd('d', 'data', [55,15 , 47,5]);
AddSWrd('d', 'database', [5,6 , 9,5 , 11,20 , 14,10]);
AddSWrd('d', 'dbu', [38,10 , 61,5]);
AddSWrd('d', 'ddl', [29,10]);
AddSWrd('d', 'debugging', [38,5]);
AddSWrd('d', 'decide', [64,4]);
AddSWrd('d', 'decisions', [64,12]);
AddSWrd('d', 'decorate', [28,5]);
AddSWrd('d', 'default', [64,2 , 5,2 , 8,10 , 18,10 , 19,10 , 20,10 , 21,10 , 22,10 , 23,10 , 24,10 , 25,10 , 26,10 , 30,5 , 31,5 , 32,5 , 33,10 , 34,10 , 35,10 , 36,10 , 37,15 , 39,15 , 40,15 , 42,15 , 43,10 , 44,5 , 45,10 , 46,5 , 47,10 , 48,25 , 49,10 , 50,15 , 51,10 , 52,10 , 53,5 , 56,15 , 57,10 , 58,10 , 60,5]);
AddSWrd('d', 'defaults', [5,2 , 28,10]);
AddSWrd('d', 'define', [5,2 , 11,5]);
AddSWrd('d', 'defined', [49,10 , 28,5 , 44,5 , 60,5]);
AddSWrd('d', 'defines', [61,5 , 46,5]);
AddSWrd('d', 'definition', [52,5 , 11,5]);
AddSWrd('d', 'definitions', [22,5]);
AddSWrd('d', 'degrading', [17,5]);
AddSWrd('d', 'dense', [4,2 , 22,5 , 24,10 , 11,5 , 60,15]);
AddSWrd('d', 'denseopc', [51,5 , 21,10 , 22,5 , 24,5 , 11,70 , 44,55 , 13,10 , 29,10]);
AddSWrd('d', 'denseopc-based', [11,5]);
AddSWrd('d', 'denseopc_context_parameters', [17,155 , 58,5 , 11,5 , 60,10]);
AddSWrd('d', 'denseopc_copy_fragments', [18,135 , 20,10 , 24,20 , 11,5 , 60,5]);
AddSWrd('d', 'denseopc_fragment_coincident', [19,145 , 20,10]);
AddSWrd('d', 'denseopc_fragment_nearly_coincident', [20,140]);
AddSWrd('d', 'denseopc_init_mode', [51,25 , 21,135 , 25,5]);
AddSWrd('d', 'denseopc_insert_correction', [22,135 , 26,10 , 11,5 , 60,5]);
AddSWrd('d', 'denseopc_limit_excess', [23,140 , 42,5 , 60,5]);
AddSWrd('d', 'denseopc_options', [11,15 , 27,5 , 29,5]);
AddSWrd('d', 'denseopc_pre_notchfill', [24,130]);
AddSWrd('d', 'denseopc_retarget', [11,5]);
AddSWrd('d', 'denseopc_smooth_corrections', [25,135 , 42,5 , 60,5]);
AddSWrd('d', 'denseopc_use_correction_map', [26,135]);
AddSWrd('d', 'depend', [5,2]);
AddSWrd('d', 'dependent', [42,5]);
AddSWrd('d', 'depending', [49,5]);
AddSWrd('d', 'depends', [49,5 , 45,10]);
AddSWrd('d', 'depth', [23,5 , 25,5]);
AddSWrd('d', 'derivation', [54,5]);
AddSWrd('d', 'derivations', [64,2]);
AddSWrd('d', 'derived', [54,10 , 41,10 , 14,10]);
AddSWrd('d', 'derives', [48,10 , 15,5]);
AddSWrd('d', 'described', [7,2 , 39,5 , 27,10 , 44,20 , 15,5]);
AddSWrd('d', 'description', [16,2 , 8,5 , 15,5]);
AddSWrd('d', 'descriptions', [8,5]);
AddSWrd('d', 'design', [64,2 , 50,10 , 5,2 , 40,5 , 42,5 , 58,5 , 11,10 , 44,5 , 29,20]);
AddSWrd('d', 'designed', [19,5]);
AddSWrd('d', 'designrev', [7,2]);
AddSWrd('d', 'designs', [49,5 , 50,10]);
AddSWrd('d', 'details', [65,2 , 28,5 , 62,5]);
AddSWrd('d', 'detected', [48,5 , 43,5 , 45,5]);
AddSWrd('d', 'detection', [61,5]);
AddSWrd('d', 'detects', [56,5]);
AddSWrd('d', 'determine', [17,10 , 49,5 , 5,2 , 37,10]);
AddSWrd('d', 'determined', [48,10]);
AddSWrd('d', 'determines', [49,10]);
AddSWrd('d', 'determining', [32,5 , 30,5 , 31,5]);
AddSWrd('d', 'device', [8,5]);
AddSWrd('d', 'device_layer', [8,5]);
AddSWrd('d', 'diameter', [56,15]);
AddSWrd('d', 'differ', [14,5]);
AddSWrd('d', 'differences', [50,5 , 15,5]);
AddSWrd('d', 'different', [11,20 , 43,5 , 60,10 , 45,15 , 61,10 , 14,5]);
AddSWrd('d', 'differs', [61,5]);
AddSWrd('d', 'difficult', [48,5]);
AddSWrd('d', 'digital', [11,15]);
AddSWrd('d', 'dipole', [29,10]);
AddSWrd('d', 'direct', [11,5]);
AddSWrd('d', 'directly', [14,5]);
AddSWrd('d', 'directory', [64,4 , 65,2 , 62,5]);
AddSWrd('d', 'directs', [19,15 , 20,15 , 22,5 , 38,5 , 23,10 , 24,10 , 25,10 , 41,5]);
AddSWrd('d', 'disable', [42,5 , 62,10]);
AddSWrd('d', 'disabled', [57,5]);
AddSWrd('d', 'disappear', [37,5]);
AddSWrd('d', 'discontinuities', [45,10]);
AddSWrd('d', 'discovered', [49,5]);
AddSWrd('d', 'discussions', [44,10]);
AddSWrd('d', 'displacement', [17,120 , 22,5 , 23,25 , 58,5 , 11,35 , 27,10]);
AddSWrd('d', 'displacement_limit', [17,25 , 60,25]);
AddSWrd('d', 'distance', [33,20 , 34,20 , 35,20 , 36,20 , 37,15]);
AddSWrd('d', 'distance0', [48,20 , 43,15]);
AddSWrd('d', 'distance1', [48,20 , 43,30]);
AddSWrd('d', 'distance2', [48,20 , 43,15]);
AddSWrd('d', 'distances', [43,10]);
AddSWrd('d', 'disturbing', [64,2]);
AddSWrd('d', 'divide', [17,5]);
AddSWrd('d', 'divides', [17,5]);
AddSWrd('d', 'document', [8,5]);
AddSWrd('d', 'doing', [39,5 , 56,5]);
AddSWrd('d', 'done', [49,5 , 58,5]);
AddSWrd('d', 'dose', [11,10]);
AddSWrd('d', 'dots', [8,5]);
AddSWrd('d', 'double', [49,20 , 8,5 , 44,5 , 29,10]);
AddSWrd('d', 'down', [61,5]);
AddSWrd('d', 'drawn', [49,5 , 44,25]);
AddSWrd('d', 'drawn0', [44,15]);
AddSWrd('d', 'drawn1', [44,15]);
AddSWrd('d', 'drc', [11,140 , 43,5 , 44,25 , 14,10]);
AddSWrd('d', 'drc-like', [15,5]);
AddSWrd('d', 'driver', [44,5]);
AddSWrd('d', 'dropped', [47,5]);
AddSWrd('d', 'due', [47,5]);
AddSWrd('d', 'dumping', [17,5]);
AddSWrd('d', 'duplicate', [17,30 , 49,10 , 57,45 , 11,20]);
AddSWrd('d', 'duplicates', [44,10 , 61,5]);
AddSWrd('d', 'during', [33,10 , 34,10 , 35,10 , 36,10 , 5,2 , 37,10 , 24,5 , 61,10 , 14,5]);
AddSWrd('e', 'earlier', [49,5 , 5,2]);
AddSWrd('e', 'easily', [6,2]);
AddSWrd('e', 'eda', [59,2]);
AddSWrd('e', 'edge', [48,10 , 17,10 , 34,5 , 56,5 , 44,100 , 61,5 , 14,10 , 46,5]);
AddSWrd('e', 'edges', [33,20 , 34,20 , 19,10 , 35,20 , 20,5 , 36,20 , 37,15]);
AddSWrd('e', 'edited', [60,5]);
AddSWrd('e', 'effect', [55,10 , 25,5 , 43,5]);
AddSWrd('e', 'eight', [49,10]);
AddSWrd('e', 'either', [32,5 , 64,2 , 37,10 , 7,2 , 39,5 , 8,5 , 43,5 , 44,20 , 45,10 , 21,5 , 56,15 , 57,10 , 30,5 , 31,5]);
AddSWrd('e', 'element_name', [8,5]);
AddSWrd('e', 'elements', [15,5]);
AddSWrd('e', 'ellipsis', [8,10]);
AddSWrd('e', 'empty', [54,5 , 41,5 , 11,10 , 44,30]);
AddSWrd('e', 'enable', [49,5 , 57,5 , 62,5]);
AddSWrd('e', 'enabled', [49,5]);
AddSWrd('e', 'enables', [48,5 , 19,5]);
AddSWrd('e', 'encapsulate', [15,5]);
AddSWrd('e', 'enclose', [8,15 , 26,15]);
AddSWrd('e', 'enclosed', [14,5 , 15,5]);
AddSWrd('e', 'enclosure', [44,5]);
AddSWrd('e', 'encompass', [48,5 , 6,2]);
AddSWrd('e', 'encountered', [11,5]);
AddSWrd('e', 'encounters', [49,5 , 27,5]);
AddSWrd('e', 'end', [19,5 , 28,10 , 45,15 , 15,5]);
AddSWrd('e', 'enforce', [61,5]);
AddSWrd('e', 'enforced', [23,5]);
AddSWrd('e', 'engine', [4,2 , 61,10]);
AddSWrd('e', 'enhance', [44,5]);
AddSWrd('e', 'enhancement', [3,2]);
AddSWrd('e', 'enough', [56,5 , 62,5]);
AddSWrd('e', 'ensure', [61,5 , 62,5]);
AddSWrd('e', 'ensures', [19,5 , 6,2 , 24,5 , 44,5]);
AddSWrd('e', 'enter', [64,2 , 8,5 , 11,5]);
AddSWrd('e', 'entered', [8,5]);
AddSWrd('e', 'entering', [8,25]);
AddSWrd('e', 'entire', [48,10 , 56,10 , 44,5 , 60,5 , 61,5 , 46,5 , 47,10]);
AddSWrd('e', 'entirety', [6,2]);
AddSWrd('e', 'environment', [7,4 , 11,5 , 13,10 , 14,30 , 62,10 , 15,5]);
AddSWrd('e', 'epe', [28,5]);
AddSWrd('e', 'epes', [29,10]);
AddSWrd('e', 'equal', [32,5 , 34,5 , 37,5 , 43,10 , 30,5 , 31,5]);
AddSWrd('e', 'equipment', [7,2]);
AddSWrd('e', 'equivalent', [17,10]);
AddSWrd('e', 'error', [32,25 , 49,10 , 54,15 , 55,10 , 57,20 , 11,20 , 43,10 , 28,30 , 44,5 , 30,25 , 31,25]);
AddSWrd('e', 'errors', [57,5 , 28,5 , 44,5 , 13,5 , 61,10 , 63,34]);
AddSWrd('e', 'especially', [39,5]);
AddSWrd('e', 'et1', [29,5]);
AddSWrd('e', 'euclidean', [11,20]);
AddSWrd('e', 'euv', [42,10 , 43,10 , 14,45]);
AddSWrd('e', 'even', [49,15 , 14,10 , 46,5 , 62,5]);
AddSWrd('e', 'ex1', [29,5 , 15,5]);
AddSWrd('e', 'exact', [5,2]);
AddSWrd('e', 'exactly', [41,10 , 44,10]);
AddSWrd('e', 'examine', [37,5]);
AddSWrd('e', 'example', [8,5 , 11,15 , 44,35 , 13,10 , 45,25 , 14,30 , 46,5 , 15,20 , 17,10 , 49,15 , 52,10 , 54,10 , 55,5 , 29,15 , 61,5 , 63,4]);
AddSWrd('e', 'examples', [43,5 , 14,10]);
AddSWrd('e', 'exceed', [52,10 , 37,5]);
AddSWrd('e', 'exceeds', [47,20]);
AddSWrd('e', 'except', [51,5 , 44,20 , 15,5]);
AddSWrd('e', 'exception', [11,20]);
AddSWrd('e', 'excerpt', [54,5]);
AddSWrd('e', 'excessive', [47,5]);
AddSWrd('e', 'execute', [24,5 , 44,30]);
AddSWrd('e', 'executed', [64,2 , 24,5 , 44,10]);
AddSWrd('e', 'executes', [44,55]);
AddSWrd('e', 'executing', [17,5 , 25,5 , 60,5]);
AddSWrd('e', 'execution', [49,15 , 44,5 , 13,10]);
AddSWrd('e', 'existing', [11,10]);
AddSWrd('e', 'exists', [11,10]);
AddSWrd('e', 'exit', [57,5 , 47,10]);
AddSWrd('e', 'exits', [32,5 , 49,5 , 19,5 , 54,5 , 55,10 , 11,10 , 43,5 , 30,5 , 31,5]);
AddSWrd('e', 'expand', [44,30]);
AddSWrd('e', 'expanded', [6,2]);
AddSWrd('e', 'expands', [17,5]);
AddSWrd('e', 'expect', [45,10]);
AddSWrd('e', 'expected', [60,10]);
AddSWrd('e', 'explained', [40,5]);
AddSWrd('e', 'explicit', [42,5]);
AddSWrd('e', 'explicitly', [6,6 , 7,2 , 41,5 , 43,5 , 44,5 , 14,10]);
AddSWrd('e', 'export', [62,10]);
AddSWrd('e', 'exposure', [44,10]);
AddSWrd('e', 'ext', [44,20 , 63,2]);
AddSWrd('e', 'extends', [6,2 , 56,5]);
AddSWrd('e', 'extent', [48,10 , 44,5]);
AddSWrd('e', 'extents', [48,10 , 44,25 , 63,4]);
AddSWrd('e', 'external', [11,10 , 44,5 , 14,10]);
AddSWrd('e', 'extra', [28,5]);
AddSWrd('f', 'facing', [33,10 , 34,10 , 35,10 , 36,10 , 37,10]);
AddSWrd('f', 'factor', [17,20]);
AddSWrd('f', 'failed', [62,5]);
AddSWrd('f', 'failures', [47,5]);
AddSWrd('f', 'fairly', [47,5]);
AddSWrd('f', 'familiar', [6,2]);
AddSWrd('f', 'faster', [43,5]);
AddSWrd('f', 'feature', [37,5 , 23,5 , 60,5 , 46,5]);
AddSWrd('f', 'features', [33,20 , 34,20 , 35,20 , 4,2 , 36,25 , 37,10 , 25,5 , 60,5]);
AddSWrd('f', 'feedback', [17,215 , 58,5 , 11,25 , 60,25]);
AddSWrd('f', 'few', [5,2]);
AddSWrd('f', 'figure', [49,10 , 5,2 , 38,5 , 56,5 , 43,5 , 45,5]);
AddSWrd('f', 'file', [4,2 , 5,10 , 6,2 , 7,10 , 9,5 , 10,4 , 11,165 , 13,285 , 14,140 , 15,255 , 16,34 , 17,50 , 18,5 , 19,35 , 20,25 , 21,5 , 22,40 , 23,20 , 24,30 , 25,5 , 26,5 , 27,5 , 28,30 , 29,65 , 30,50 , 31,50 , 32,50 , 33,5 , 34,5 , 35,5 , 36,5 , 37,40 , 38,10 , 39,5 , 40,10 , 41,30 , 42,10 , 43,30 , 44,235 , 45,65 , 46,5 , 47,5 , 48,10 , 49,35 , 50,10 , 51,5 , 52,10 , 53,10 , 54,55 , 55,10 , 56,10 , 57,10 , 58,10 , 60,20 , 62,10 , 63,12 , 64,22]);
AddSWrd('f', 'filename', [11,10 , 44,35 , 14,45]);
AddSWrd('f', 'filenames', [9,5]);
AddSWrd('f', 'files', [32,5 , 5,2 , 37,5 , 7,6 , 11,10 , 43,5 , 44,40 , 13,30 , 15,60 , 54,5 , 60,20 , 61,20 , 30,5 , 31,5 , 63,2]);
AddSWrd('f', 'fill', [44,20]);
AddSWrd('f', 'fills', [28,5]);
AddSWrd('f', 'filter', [63,8]);
AddSWrd('f', 'filter_pre', [63,4]);
AddSWrd('f', 'filtering', [45,10]);
AddSWrd('f', 'final', [52,5 , 11,5 , 44,20 , 45,15 , 61,10]);
AddSWrd('f', 'fine-grained', [28,5]);
AddSWrd('f', 'finetune', [37,5 , 28,160]);
AddSWrd('f', 'finetune.out', [37,10]);
AddSWrd('f', 'finished', [49,5]);
AddSWrd('f', 'first', [49,35 , 51,5 , 52,20 , 21,20 , 55,15 , 41,5 , 11,5 , 44,35 , 45,10 , 14,5 , 47,10]);
AddSWrd('f', 'fit', [61,5]);
AddSWrd('f', 'five', [17,5 , 60,5]);
AddSWrd('f', 'fix', [64,4]);
AddSWrd('f', 'fixed', [45,5 , 15,5]);
AddSWrd('f', 'fixes', [5,2]);
AddSWrd('f', 'flare', [42,5]);
AddSWrd('f', 'flat', [50,30 , 38,5 , 14,10]);
AddSWrd('f', 'flattens', [50,10]);
AddSWrd('f', 'flex', [7,2 , 11,5]);
AddSWrd('f', 'flow', [4,12 , 5,6 , 11,5 , 44,5 , 45,5 , 15,10 , 47,10 , 17,5 , 49,15 , 18,5 , 54,5 , 55,5 , 56,5 , 60,5 , 62,5]);
AddSWrd('f', 'flows', [54,5 , 41,5]);
AddSWrd('f', 'followed', [14,20 , 15,5]);
AddSWrd('f', 'following', [64,2 , 3,2 , 7,2 , 9,5 , 10,2 , 11,15 , 13,10 , 14,15 , 15,10 , 17,10 , 19,10 , 21,5 , 22,5 , 23,5 , 24,5 , 28,5 , 29,15 , 30,10 , 31,10 , 32,10 , 37,5 , 41,5 , 42,5 , 43,15 , 44,30 , 45,25 , 48,10 , 49,35 , 51,5 , 54,10 , 55,10 , 56,10 , 61,5 , 62,5 , 63,2]);
AddSWrd('f', 'follows', [19,5 , 8,5 , 43,10 , 60,5]);
AddSWrd('f', 'font', [8,25 , 45,10]);
AddSWrd('f', 'fonts', [8,15]);
AddSWrd('f', 'forced', [6,2]);
AddSWrd('f', 'forces', [14,10]);
AddSWrd('f', 'form', [29,5 , 14,5]);
AddSWrd('f', 'format', [16,2 , 13,20 , 14,20 , 15,125]);
AddSWrd('f', 'formatting', [15,5]);
AddSWrd('f', 'formed', [51,15 , 56,5]);
AddSWrd('f', 'forms', [17,10 , 7,4 , 14,5]);
AddSWrd('f', 'forward', [62,5]);
AddSWrd('f', 'found', [5,2 , 55,10 , 56,5]);
AddSWrd('f', 'foundry', [60,5]);
AddSWrd('f', 'four', [17,10 , 40,5]);
AddSWrd('f', 'fourth', [52,5]);
AddSWrd('f', 'fragment', [17,5 , 18,25 , 22,5 , 23,10 , 25,15 , 27,5 , 61,5 , 30,15]);
AddSWrd('f', 'fragment_coincident', [19,40 , 22,5]);
AddSWrd('f', 'fragment_corner', [11,20]);
AddSWrd('f', 'fragment_inter', [22,5 , 11,10]);
AddSWrd('f', 'fragment_layer', [19,25 , 22,5]);
AddSWrd('f', 'fragment_layers', [19,5]);
AddSWrd('f', 'fragment_max', [11,10]);
AddSWrd('f', 'fragment_min', [11,10]);
AddSWrd('f', 'fragment_move', [22,5]);
AddSWrd('f', 'fragment_nearly_coincident', [20,20]);
AddSWrd('f', 'fragment_optimize', [27,170]);
AddSWrd('f', 'fragmentation', [19,10 , 20,20 , 27,5]);
AddSWrd('f', 'fragments', [20,5 , 23,25 , 25,5 , 58,5 , 27,20 , 60,5]);
AddSWrd('f', 'framework', [61,5]);
AddSWrd('f', 'frequently', [39,5]);
AddSWrd('f', 'frozen', [17,5 , 6,2 , 58,5]);
AddSWrd('f', 'full', [48,10 , 64,2 , 6,2 , 24,5 , 46,5]);
AddSWrd('f', 'full-chip', [4,2]);
AddSWrd('f', 'fullscale', [9,5]);
AddSWrd('f', 'fully', [47,5]);
AddSWrd('f', 'function', [28,5 , 14,15 , 15,5]);
AddSWrd('f', 'further', [17,5 , 52,5 , 5,2 , 45,10 , 14,5]);
AddSWrd('g', 'gds', [7,2 , 14,5]);
AddSWrd('g', 'general', [11,10 , 28,5 , 60,5 , 13,20]);
AddSWrd('g', 'generally', [48,5 , 49,5 , 37,5 , 54,10 , 40,5 , 59,2 , 13,10]);
AddSWrd('g', 'generate', [64,2 , 52,10 , 11,5]);
AddSWrd('g', 'generated', [64,2 , 11,15 , 44,10]);
AddSWrd('g', 'generates', [60,5]);
AddSWrd('g', 'generating', [44,5]);
AddSWrd('g', 'generation', [11,10]);
AddSWrd('g', 'generator', [11,55 , 27,5 , 60,5]);
AddSWrd('g', 'geometrical', [49,5]);
AddSWrd('g', 'geometries', [20,5 , 6,4 , 44,5 , 45,65]);
AddSWrd('g', 'geometry', [17,10 , 58,5 , 29,10]);
AddSWrd('g', 'give', [41,5]);
AddSWrd('g', 'given', [14,5]);
AddSWrd('g', 'global', [28,5]);
AddSWrd('g', 'good', [37,5]);
AddSWrd('g', 'governing', [16,2]);
AddSWrd('g', 'gradient', [17,5]);
AddSWrd('g', 'greater', [48,10 , 56,5 , 43,10 , 44,10]);
AddSWrd('g', 'grebinski', [7,2]);
AddSWrd('g', 'green', [64,2]);
AddSWrd('g', 'group', [8,5]);
AddSWrd('g', 'grouping', [8,5]);
AddSWrd('g', 'guide', [62,5]);
AddSWrd('g', 'guidelines', [37,5]);
AddSWrd('h', 'h_pre', [63,4]);
AddSWrd('h', 'half', [56,5 , 43,10]);
AddSWrd('h', 'halo', [40,10]);
AddSWrd('h', 'halves', [62,5]);
AddSWrd('h', 'handle', [51,10 , 24,10]);
AddSWrd('h', 'handled', [7,2 , 44,5]);
AddSWrd('h', 'handling', [24,5]);
AddSWrd('h', 'happens', [26,5]);
AddSWrd('h', 'hard-coded', [11,5]);
AddSWrd('h', 'heavy', [8,5 , 56,5]);
AddSWrd('h', 'height', [25,5]);
AddSWrd('h', 'hidden', [49,15 , 55,35 , 41,5 , 11,40 , 44,20 , 29,40 , 45,15 , 14,5 , 46,10 , 15,10]);
AddSWrd('h', 'hier', [49,30 , 50,20]);
AddSWrd('h', 'hierarchical', [49,15 , 50,25]);
AddSWrd('h', 'hierarchy', [50,25]);
AddSWrd('h', 'high-level', [5,12]);
AddSWrd('h', 'higher', [7,2]);
AddSWrd('h', 'highlighted', [55,5]);
AddSWrd('h', 'highly', [50,10]);
AddSWrd('h', 'hole', [48,20 , 44,10 , 15,5]);
AddSWrd('h', 'holes', [48,10 , 44,25 , 63,2]);
AddSWrd('h', 'hoodpix', [43,10]);
AddSWrd('h', 'host', [62,5]);
AddSWrd('h', 'hosts', [62,10]);
AddSWrd('h', 'hot', [54,5 , 45,5]);
AddSWrd('h', 'hot_spots', [54,25 , 45,5 , 15,20]);
AddSWrd('h', 'hotspot', [48,5 , 49,5 , 6,2 , 56,5 , 14,5 , 46,25]);
AddSWrd('h', 'hotspots', [64,2 , 4,2 , 5,4 , 7,2 , 41,15 , 11,20 , 45,5 , 14,5 , 15,10 , 49,10 , 51,20 , 52,20 , 54,5 , 56,55]);
AddSWrd('h', 'hours', [47,5]);
AddSWrd('h', 'however', [48,5 , 5,2 , 55,5 , 42,5 , 58,5 , 44,5]);
AddSWrd('h', 'hundreds', [47,5]);
AddSWrd('h', 'hung', [62,5]);
AddSWrd('h', 'hyper', [62,5]);
AddSWrd('h', 'hyperscaling', [62,5]);
AddSWrd('i', 'identical', [49,15 , 44,10 , 14,10]);
AddSWrd('i', 'identically', [49,5 , 60,5]);
AddSWrd('i', 'identified', [4,2 , 5,2 , 21,10]);
AddSWrd('i', 'identifies', [17,10 , 49,5 , 54,5 , 8,5 , 25,10 , 45,5 , 15,10]);
AddSWrd('i', 'identify', [64,2 , 5,2 , 44,20 , 14,5]);
AddSWrd('i', 'identifying', [29,5 , 46,10 , 15,5]);
AddSWrd('i', 'identity', [49,15]);
AddSWrd('i', 'ignore', [63,4]);
AddSWrd('i', 'ignored', [18,5 , 51,5 , 25,5 , 11,5 , 44,15 , 13,10 , 45,5 , 15,5 , 47,10]);
AddSWrd('i', 'image', [22,5 , 11,10]);
AddSWrd('i', 'images', [56,5]);
AddSWrd('i', 'immediately', [28,5]);
AddSWrd('i', 'important', [44,5]);
AddSWrd('i', 'improve', [17,5 , 50,5 , 20,5 , 5,2 , 56,5 , 61,5]);
AddSWrd('i', 'improved', [14,5]);
AddSWrd('i', 'improves', [20,5]);
AddSWrd('i', 'in_layer', [37,5]);
AddSWrd('i', 'include', [38,5 , 8,25 , 41,5 , 42,5 , 44,5 , 45,15 , 15,5 , 49,5 , 51,10 , 56,10 , 58,5 , 60,15 , 61,10 , 62,5]);
AddSWrd('i', 'included', [49,5 , 65,2 , 50,5 , 51,15 , 44,5]);
AddSWrd('i', 'includes', [48,10 , 50,5 , 5,4 , 55,5 , 28,5 , 44,20 , 45,10 , 15,10]);
AddSWrd('i', 'including', [7,2 , 60,5 , 29,10 , 14,10]);
AddSWrd('i', 'inconsistency', [61,5]);
AddSWrd('i', 'incorrect', [27,5 , 47,5]);
AddSWrd('i', 'increase', [20,5 , 56,5]);
AddSWrd('i', 'independent', [15,5]);
AddSWrd('i', 'independently', [49,5 , 50,5]);
AddSWrd('i', 'indicate', [8,20 , 11,5 , 44,10 , 45,10 , 47,5]);
AddSWrd('i', 'indicated', [7,2]);
AddSWrd('i', 'indicates', [20,10 , 8,10 , 45,10]);
AddSWrd('i', 'indicating', [48,30 , 49,10 , 18,20 , 51,10 , 52,10 , 53,10 , 40,10 , 56,10 , 57,10 , 26,20 , 14,10]);
AddSWrd('i', 'indicators', [49,5]);
AddSWrd('i', 'individual', [49,5]);
AddSWrd('i', 'individually', [42,5 , 43,5]);
AddSWrd('i', 'info', [49,5]);
AddSWrd('i', 'inform', [63,2]);
AddSWrd('i', 'information', [49,5 , 65,0 , 18,25 , 26,5 , 27,5 , 44,85 , 29,5 , 45,5 , 14,10]);
AddSWrd('i', 'init', [11,5]);
AddSWrd('i', 'init1', [17,25 , 49,5 , 41,5 , 29,10 , 15,15]);
AddSWrd('i', 'init_opc', [14,10 , 15,5]);
AddSWrd('i', 'init_opc1', [45,10]);
AddSWrd('i', 'init_shapes', [29,15 , 45,30]);
AddSWrd('i', 'initial', [4,2 , 5,2 , 39,20 , 40,5 , 9,5 , 11,5 , 45,10 , 14,10 , 49,5 , 20,5 , 21,50 , 24,15 , 25,15 , 60,5 , 29,45]);
AddSWrd('i', 'inline', [13,10]);
AddSWrd('i', 'inline_file', [13,25]);
AddSWrd('i', 'inner', [17,35 , 56,20 , 44,20 , 45,30]);
AddSWrd('i', 'input', [64,4 , 5,4 , 7,4 , 40,5 , 11,70 , 44,15 , 45,35 , 14,5 , 15,10 , 47,5 , 49,35 , 50,5 , 52,5 , 55,15 , 27,5 , 60,15 , 29,5]);
AddSWrd('i', 'input.svrf', [11,15]);
AddSWrd('i', 'input1', [49,5 , 43,5]);
AddSWrd('i', 'input2..', [43,5]);
AddSWrd('i', 'insensitive', [15,5]);
AddSWrd('i', 'insert', [17,10 , 19,5]);
AddSWrd('i', 'inserts', [17,20 , 22,10]);
AddSWrd('i', 'inside', [48,10 , 64,2 , 21,20 , 6,2 , 39,10 , 24,5 , 11,5 , 44,40 , 45,10 , 61,10 , 14,5]);
AddSWrd('i', 'installation', [7,2]);
AddSWrd('i', 'instance', [49,5 , 15,5]);
AddSWrd('i', 'instances', [14,5]);
AddSWrd('i', 'instead', [49,10 , 28,15 , 44,15]);
AddSWrd('i', 'int', [44,20 , 63,2]);
AddSWrd('i', 'integer', [53,10 , 45,10]);
AddSWrd('i', 'integrated', [47,5]);
AddSWrd('i', 'integrates', [4,2]);
AddSWrd('i', 'intend', [29,10]);
AddSWrd('i', 'intended', [46,5]);
AddSWrd('i', 'intensive', [4,2]);
AddSWrd('i', 'interact', [56,5 , 44,55 , 63,14]);
AddSWrd('i', 'interacting', [38,5]);
AddSWrd('i', 'interaction', [56,5 , 61,30]);
AddSWrd('i', 'interfeature', [20,5]);
AddSWrd('i', 'intermediate', [21,5 , 44,5]);
AddSWrd('i', 'internal', [33,10 , 34,10 , 35,10 , 36,10 , 37,5 , 42,20 , 11,10 , 44,5 , 63,2]);
AddSWrd('i', 'internally', [42,5]);
AddSWrd('i', 'international', [7,2]);
AddSWrd('i', 'interpolate', [44,10]);
AddSWrd('i', 'interpreted', [50,5 , 38,5]);
AddSWrd('i', 'interpreting', [45,10]);
AddSWrd('i', 'intersect', [38,5]);
AddSWrd('i', 'intersecting', [44,20]);
AddSWrd('i', 'intersects', [61,5]);
AddSWrd('i', 'introduces', [3,2]);
AddSWrd('i', 'introduction', [3,20]);
AddSWrd('i', 'invocation', [9,10]);
AddSWrd('i', 'invoke', [44,5]);
AddSWrd('i', 'invoked', [9,5]);
AddSWrd('i', 'invokes', [14,5]);
AddSWrd('i', 'invoking', [28,5]);
AddSWrd('i', 'involve', [15,5]);
AddSWrd('i', 'involved', [64,2]);
AddSWrd('i', 'inward', [23,5]);
AddSWrd('i', 'issues', [49,5 , 43,5 , 63,2]);
AddSWrd('i', 'italic', [8,15]);
AddSWrd('i', 'italics', [9,5]);
AddSWrd('i', 'item', [8,5]);
AddSWrd('i', 'items', [8,5 , 9,5]);
AddSWrd('i', 'iter1', [49,20]);
AddSWrd('i', 'iteration', [5,2 , 41,25 , 11,5 , 44,15 , 45,180 , 17,10 , 51,35 , 52,55 , 21,40 , 53,5 , 54,5 , 55,25 , 28,5]);
AddSWrd('i', 'iterations', [5,2 , 39,5 , 11,10 , 44,25 , 45,15 , 17,10 , 51,10 , 52,25 , 21,30 , 53,25 , 54,10 , 56,10 , 28,5]);
AddSWrd('i', 'iterative', [49,15 , 18,5 , 51,5 , 5,4 , 54,10 , 55,5 , 56,5 , 41,5 , 45,5 , 15,10]);
AddSWrd('i', 'itself', [16,2 , 29,10 , 46,5]);
AddSWrd('j', 'job', [37,10 , 28,210]);
AddSWrd('j', 'joining', [64,2]);
AddSWrd('j', 'jose', [7,2]);
AddSWrd('j', 'just', [54,5 , 55,5]);
AddSWrd('k', 'keep', [64,4 , 51,10 , 52,65 , 37,5 , 55,5 , 11,10 , 43,5 , 29,5 , 46,5]);
AddSWrd('k', 'keep_no_context', [44,5 , 61,5]);
AddSWrd('k', 'kept', [51,5 , 37,5 , 46,5]);
AddSWrd('k', 'kernels', [62,5]);
AddSWrd('k', 'keys', [64,2]);
AddSWrd('k', 'keyword', [17,20 , 49,10 , 52,5 , 8,15 , 56,15 , 57,5 , 26,5 , 27,5 , 44,5 , 14,75 , 15,5 , 63,2]);
AddSWrd('k', 'keywords', [49,40 , 9,5 , 28,5 , 44,20 , 15,5]);
AddSWrd('k', 'known', [15,5]);
AddSWrd('k', 'korn', [62,10]);
AddSWrd('l', 'large', [48,30 , 56,5 , 43,10 , 60,10 , 47,5]);
AddSWrd('l', 'larger', [48,5 , 40,15 , 43,5 , 15,5]);
AddSWrd('l', 'largest', [37,5 , 43,10]);
AddSWrd('l', 'last', [32,5 , 17,20 , 49,5 , 51,15 , 52,10 , 21,15 , 37,5 , 58,5 , 30,5 , 31,5]);
AddSWrd('l', 'lastjob', [37,10]);
AddSWrd('l', 'later', [64,2]);
AddSWrd('l', 'launch', [10,2]);
AddSWrd('l', 'launched', [10,2]);
AddSWrd('l', 'layer', [64,16 , 11,130 , 13,10 , 14,150 , 15,70 , 18,20 , 19,10 , 20,20 , 21,130 , 22,30 , 23,10 , 25,20 , 26,25 , 27,10 , 28,5 , 29,370 , 37,10 , 39,65 , 41,90 , 43,5 , 44,235 , 45,100 , 46,40 , 47,30 , 49,150 , 50,10 , 52,10 , 54,40 , 55,90 , 57,40 , 63,10]);
AddSWrd('l', 'layer1', [57,10 , 44,5 , 13,10 , 14,15]);
AddSWrd('l', 'layer2', [57,5 , 44,5 , 13,10 , 14,15]);
AddSWrd('l', 'layer3', [57,5 , 44,5 , 13,10 , 14,15]);
AddSWrd('l', 'layer_in', [49,35 , 55,60 , 44,160]);
AddSWrd('l', 'layer_out', [55,40 , 41,10 , 44,70 , 45,75]);
AddSWrd('l', 'layername', [45,45 , 14,5]);
AddSWrd('l', 'layers', [64,8 , 5,4 , 7,6 , 39,15 , 11,25 , 43,5 , 44,210 , 13,10 , 45,25 , 14,65 , 15,5 , 49,20 , 18,10 , 50,5 , 19,10 , 21,30 , 22,25 , 54,5 , 55,15 , 24,45 , 57,5 , 58,5 , 29,110 , 61,20]);
AddSWrd('l', 'layout', [64,8 , 4,2 , 5,10 , 6,2 , 38,10 , 7,4 , 40,5 , 11,95 , 43,5 , 44,10 , 45,5 , 14,15 , 47,5 , 49,5 , 50,15 , 29,10]);
AddSWrd('l', 'layouts', [4,2 , 44,5]);
AddSWrd('l', 'layouts.you', [56,5]);
AddSWrd('l', 'le_bias_all', [29,20]);
AddSWrd('l', 'lead', [27,5]);
AddSWrd('l', 'least', [32,5 , 7,2 , 11,10 , 44,30 , 45,15 , 14,10 , 48,20 , 49,10 , 23,10 , 25,10 , 29,5 , 30,5 , 31,5]);
AddSWrd('l', 'leaves', [56,5]);
AddSWrd('l', 'left', [48,5 , 49,5 , 43,5]);
AddSWrd('l', 'legal', [65,2]);
AddSWrd('l', 'length', [48,10 , 17,10 , 34,10 , 23,5 , 25,10 , 11,20 , 44,20 , 61,5 , 30,15]);
AddSWrd('l', 'length1', [44,5]);
AddSWrd('l', 'length2', [44,5]);
AddSWrd('l', 'less', [56,5 , 43,5 , 45,10 , 61,5]);
AddSWrd('l', 'lets', [17,5]);
AddSWrd('l', 'letters', [8,5]);
AddSWrd('l', 'level', [50,15]);
AddSWrd('l', 'license', [7,2]);
AddSWrd('l', 'licensed', [7,2]);
AddSWrd('l', 'licenses', [7,4 , 14,10]);
AddSWrd('l', 'lie', [64,2]);
AddSWrd('l', 'lighter', [45,5]);
AddSWrd('l', 'likely', [11,5 , 27,5]);
AddSWrd('l', 'limit', [17,50 , 5,4 , 23,10 , 58,5 , 11,25 , 47,65]);
AddSWrd('l', 'limited', [23,5]);
AddSWrd('l', 'limits', [23,5]);
AddSWrd('l', 'line', [32,5 , 5,2 , 37,5 , 8,5 , 9,10 , 44,10 , 13,10 , 45,25 , 15,10 , 17,20 , 49,5 , 19,5 , 54,5 , 58,10 , 28,10 , 30,5 , 62,5 , 31,5]);
AddSWrd('l', 'lines', [17,5 , 20,5 , 52,5 , 54,5 , 55,5 , 56,5 , 43,15 , 44,10 , 45,5 , 15,5 , 63,2]);
AddSWrd('l', 'list', [17,20 , 10,2 , 44,15 , 13,10]);
AddSWrd('l', 'listed', [49,5 , 44,20 , 14,10]);
AddSWrd('l', 'lists', [16,4 , 44,5 , 60,10]);
AddSWrd('l', 'literal', [17,30]);
AddSWrd('l', 'literally', [8,5 , 44,5]);
AddSWrd('l', 'litho', [10,2 , 11,50 , 13,220 , 14,25 , 15,200 , 16,26 , 17,5 , 18,5 , 19,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 28,15 , 29,15 , 30,5 , 31,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,5 , 37,15 , 38,5 , 39,5 , 40,5 , 41,5 , 42,5 , 43,5 , 44,35 , 45,15 , 46,5 , 47,5 , 48,5 , 49,10 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 58,5 , 60,10 , 63,2 , 64,2]);
AddSWrd('l', 'litho_socs_kernels_shared', [62,25]);
AddSWrd('l', 'lithography', [29,15]);
AddSWrd('l', 'lmrc', [28,5]);
AddSWrd('l', 'local', [3,2 , 45,10 , 15,5]);
AddSWrd('l', 'localized', [5,2]);
AddSWrd('l', 'location', [48,5 , 42,5]);
AddSWrd('l', 'logical', [62,5]);
AddSWrd('l', 'long', [19,10 , 20,15 , 6,2]);
AddSWrd('l', 'long-line', [19,5]);
AddSWrd('l', 'longer', [34,5 , 35,10]);
AddSWrd('l', 'loop', [44,20]);
AddSWrd('l', 'low', [47,5]);
AddSWrd('l', 'lower', [45,5]);
AddSWrd('l', 'lowercase', [8,5]);
AddSWrd('l', 'lowest', [64,2 , 50,10]);
AddSWrd('l', 'lpe', [3,22 , 4,52 , 5,74 , 6,48 , 7,44 , 9,50 , 10,24 , 11,100 , 12,12 , 13,45 , 14,25 , 15,40 , 16,20 , 17,30 , 19,15 , 20,15 , 22,20 , 23,10 , 24,10 , 25,25 , 26,5 , 27,15 , 29,20 , 30,25 , 31,25 , 32,25 , 37,20 , 38,15 , 40,15 , 41,15 , 42,10 , 43,10 , 44,100 , 45,30 , 46,5 , 47,20 , 48,5 , 49,5 , 50,35 , 52,10 , 53,5 , 54,5 , 56,10 , 58,15 , 59,20 , 60,90 , 61,45 , 63,10 , 64,94]);
AddSWrd('l', 'lpe-driven', [11,5]);
AddSWrd('l', 'lpe-invoked', [28,10]);
AddSWrd('l', 'lpe-pxopc', [62,5]);
AddSWrd('l', 'lpe.in', [44,10 , 13,30]);
AddSWrd('l', 'lpe.log', [9,5]);
AddSWrd('l', 'lpe.setup', [49,5]);
AddSWrd('l', 'lpe.svrf', [11,5]);
AddSWrd('l', 'lpe_select_setup', [11,10]);
AddSWrd('l', 'lpe_setup.in', [11,40]);
AddSWrd('l', 'lth12', [32,5 , 54,5 , 28,5 , 30,5 , 31,5]);
AddSWrd('l', 'lvheap', [45,5]);
AddSWrd('m', 'm0_opc', [63,14]);
AddSWrd('m', 'm1_best', [14,40]);
AddSWrd('m', 'm1_drawn', [14,25]);
AddSWrd('m', 'm1_err', [14,25]);
AddSWrd('m', 'm1_nmopc.repair.oas', [11,10]);
AddSWrd('m', 'm1_nmopc.repair.oas.lpe', [11,5]);
AddSWrd('m', 'm1_nmopc_repair.sum', [11,5]);
AddSWrd('m', 'm1_nmopc_repair.sum.lpe', [11,5]);
AddSWrd('m', 'm1_opc', [11,55 , 14,20]);
AddSWrd('m', 'm1_opc_1', [11,30]);
AddSWrd('m', 'm1_opc__corr', [11,20]);
AddSWrd('m', 'm1_opc__init', [11,75]);
AddSWrd('m', 'm1_opc_org_1', [11,160]);
AddSWrd('m', 'm1_tdopc_rule_1', [11,20]);
AddSWrd('m', 'm1a', [55,5]);
AddSWrd('m', 'm1b', [55,5]);
AddSWrd('m', 'made', [49,5]);
AddSWrd('m', 'magnify', [11,5]);
AddSWrd('m', 'main', [4,4 , 5,2 , 37,5 , 60,10 , 45,10]);
AddSWrd('m', 'maintained', [48,10]);
AddSWrd('m', 'majority', [42,5 , 58,5]);
AddSWrd('m', 'makes', [4,2 , 7,4 , 61,5 , 14,5]);
AddSWrd('m', 'management', [62,30]);
AddSWrd('m', 'manual', [17,20 , 27,10 , 28,5 , 13,10 , 14,20 , 62,5]);
AddSWrd('m', 'manuals', [7,2]);
AddSWrd('m', 'manufactured', [60,5]);
AddSWrd('m', 'manufacturing', [62,5]);
AddSWrd('m', 'map', [37,5 , 41,15 , 11,150 , 43,30 , 44,145 , 13,15 , 45,125 , 14,95 , 15,135 , 49,20 , 54,20 , 55,5 , 57,5 , 29,45 , 63,6]);
AddSWrd('m', 'mapname', [44,35 , 45,30]);
AddSWrd('m', 'mapped', [11,5 , 44,5 , 14,25]);
AddSWrd('m', 'mapping', [64,4 , 43,5 , 44,5 , 13,10 , 45,5]);
AddSWrd('m', 'maps', [49,5 , 42,5 , 11,10 , 45,10]);
AddSWrd('m', 'mark', [64,2]);
AddSWrd('m', 'marked', [5,2 , 44,5 , 45,10]);
AddSWrd('m', 'marker', [48,90 , 49,10 , 52,10 , 6,4 , 55,10 , 11,5 , 44,10 , 29,40 , 45,10 , 46,40 , 47,30]);
AddSWrd('m', 'markers', [6,2 , 38,45 , 7,2 , 41,5 , 42,10 , 11,70 , 44,30 , 45,30 , 14,25 , 46,15 , 15,30 , 47,35 , 48,55 , 49,5 , 51,45 , 52,15 , 56,5 , 58,10 , 60,15 , 29,15 , 61,5]);
AddSWrd('m', 'marking', [63,2]);
AddSWrd('m', 'marks', [8,5]);
AddSWrd('m', 'mask', [4,2 , 6,2 , 28,5 , 60,5]);
AddSWrd('m', 'match', [49,10 , 54,5 , 41,10 , 43,5 , 44,20 , 45,15 , 14,5]);
AddSWrd('m', 'matched', [44,10 , 29,10 , 45,10]);
AddSWrd('m', 'matches', [54,5]);
AddSWrd('m', 'matching', [49,105 , 54,5 , 55,5]);
AddSWrd('m', 'materials', [7,2]);
AddSWrd('m', 'matter', [44,5 , 46,5]);
AddSWrd('m', 'maximum', [53,5 , 11,20 , 47,15]);
AddSWrd('m', 'may', [64,2 , 65,2 , 7,2 , 8,10 , 13,10 , 15,5 , 17,20 , 21,5 , 28,5 , 29,10 , 30,5 , 31,5 , 32,5 , 40,5 , 43,5 , 44,45 , 46,5 , 49,10 , 52,5 , 53,5 , 54,5 , 55,5 , 56,10 , 60,5 , 61,10 , 63,2]);
AddSWrd('m', 'mdp..', [32,5 , 54,5 , 28,5 , 30,5 , 31,5]);
AddSWrd('m', 'measurements', [43,15]);
AddSWrd('m', 'meet', [5,2 , 23,10]);
AddSWrd('m', 'meets', [5,2]);
AddSWrd('m', 'memory', [49,10 , 50,15 , 62,55]);
AddSWrd('m', 'merged', [64,14 , 5,2 , 44,10 , 45,10 , 14,5 , 46,10]);
AddSWrd('m', 'merges', [14,5]);
AddSWrd('m', 'merging', [5,2]);
AddSWrd('m', 'message', [32,5 , 48,5 , 19,5 , 55,10 , 30,5 , 31,5]);
AddSWrd('m', 'messages', [32,5 , 48,5 , 49,5 , 55,10 , 57,5 , 43,10 , 28,5 , 30,5 , 31,5]);
AddSWrd('m', 'met', [45,5]);
AddSWrd('m', 'metacharacters', [8,10]);
AddSWrd('m', 'metal', [61,10]);
AddSWrd('m', 'method', [49,5]);
AddSWrd('m', 'methods', [64,2]);
AddSWrd('m', 'micron', [25,5]);
AddSWrd('m', 'microns', [32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 37,15 , 6,2 , 23,10 , 40,10 , 43,10 , 30,10 , 31,10]);
AddSWrd('m', 'min_frag_len', [40,15 , 11,10 , 44,40 , 30,145]);
AddSWrd('m', 'min_length_val', [33,15]);
AddSWrd('m', 'min_space', [23,10 , 25,10 , 11,10 , 44,10 , 31,145]);
AddSWrd('m', 'min_square_val', [36,15]);
AddSWrd('m', 'min_val', [34,15 , 35,15 , 37,30]);
AddSWrd('m', 'min_width', [32,145 , 36,5 , 40,10 , 25,10 , 11,10 , 44,10]);
AddSWrd('m', 'minimize', [45,10]);
AddSWrd('m', 'minimum', [32,15 , 33,15 , 34,15 , 35,15 , 36,15 , 37,20 , 8,10 , 11,5 , 46,5 , 15,5 , 49,10 , 60,5 , 61,10 , 30,15 , 31,15]);
AddSWrd('m', 'mismatch', [47,5]);
AddSWrd('m', 'missing_reference', [11,5]);
AddSWrd('m', 'mode', [64,4 , 50,10 , 4,2 , 9,10 , 43,5 , 28,5]);
AddSWrd('m', 'model', [49,35 , 42,5 , 43,10]);
AddSWrd('m', 'model-based', [27,5]);
AddSWrd('m', 'model_name', [8,5]);
AddSWrd('m', 'modelpath', [11,10]);
AddSWrd('m', 'models', [64,2 , 7,2 , 42,5 , 11,10 , 43,10 , 62,5]);
AddSWrd('m', 'modes', [9,30 , 45,5]);
AddSWrd('m', 'modification', [7,2 , 44,5]);
AddSWrd('m', 'modifications', [60,5]);
AddSWrd('m', 'modified', [37,5 , 7,2 , 44,15 , 60,5 , 29,5]);
AddSWrd('m', 'modifies', [44,5]);
AddSWrd('m', 'modify', [64,2]);
AddSWrd('m', 'monitoring', [62,5]);
AddSWrd('m', 'monospace', [8,15]);
AddSWrd('m', 'mostly', [5,4]);
AddSWrd('m', 'move', [64,4 , 27,10 , 47,10]);
AddSWrd('m', 'movement', [17,15 , 23,20]);
AddSWrd('m', 'mrc', [32,15 , 33,25 , 34,25 , 35,25 , 36,25 , 5,2 , 37,10 , 11,5 , 44,60 , 15,10 , 49,25 , 58,10 , 60,5 , 61,10 , 30,15 , 31,15 , 63,34]);
AddSWrd('m', 'mrc-clean', [14,5]);
AddSWrd('m', 'mrc_hotspot_h', [63,6]);
AddSWrd('m', 'mrc_hotspot_s', [63,6]);
AddSWrd('m', 'mrc_hotspot_w', [63,6]);
AddSWrd('m', 'mrc_min_edge', [40,5 , 61,5 , 30,10]);
AddSWrd('m', 'mrc_min_external', [31,10]);
AddSWrd('m', 'mrc_min_internal', [32,10 , 61,5]);
AddSWrd('m', 'mrc_min_length', [33,145 , 36,5]);
AddSWrd('m', 'mrc_min_rect_length', [34,145 , 35,5]);
AddSWrd('m', 'mrc_min_rect_width', [34,5 , 35,145]);
AddSWrd('m', 'mrc_min_square', [34,5 , 36,145 , 37,10 , 60,5]);
AddSWrd('m', 'mrc_rule', [22,5 , 11,20]);
AddSWrd('m', 'mrc_small_feature_size', [37,140 , 60,5]);
AddSWrd('m', 'mrccheck.in', [63,8]);
AddSWrd('m', 'mtflex', [9,5]);
AddSWrd('m', 'multi-patterning', [57,5 , 62,5]);
AddSWrd('m', 'multiple', [32,5 , 37,5 , 38,15 , 39,5 , 11,10 , 44,65 , 45,5 , 15,10 , 17,5 , 52,5 , 54,5 , 55,10 , 56,5 , 61,5 , 30,5 , 31,5]);
AddSWrd('m', 'multithreading', [50,5 , 62,10]);
AddSWrd('m', 'mx.pxopc.e1', [15,10]);
AddSWrd('n', 'name', [64,2 , 41,10 , 11,15 , 44,30 , 13,35 , 45,10 , 14,70 , 46,35 , 15,5 , 16,2 , 54,40 , 55,10 , 29,25]);
AddSWrd('n', 'named', [55,10 , 11,10 , 44,10 , 29,5]);
AddSWrd('n', 'names', [22,10 , 54,5 , 55,5 , 57,40 , 43,5 , 44,25 , 29,5 , 45,15 , 14,30 , 15,5]);
AddSWrd('n', 'navigate', [64,2]);
AddSWrd('n', 'navigation', [64,2]);
AddSWrd('n', 'nearby', [45,5]);
AddSWrd('n', 'necessary', [7,2 , 11,5 , 44,5]);
AddSWrd('n', 'need', [6,2 , 7,4 , 55,5 , 41,5 , 11,20 , 44,10 , 60,5 , 13,5 , 29,5 , 14,5]);
AddSWrd('n', 'needed', [4,2 , 54,5 , 11,5]);
AddSWrd('n', 'needs', [56,5 , 44,5]);
AddSWrd('n', 'negative', [29,10]);
AddSWrd('n', 'negligible', [42,5 , 58,5]);
AddSWrd('n', 'neighbor', [25,5]);
AddSWrd('n', 'neither', [32,5 , 29,10 , 30,5 , 31,5 , 47,10]);
AddSWrd('n', 'net', [8,5]);
AddSWrd('n', 'new', [64,2 , 52,15 , 5,4 , 6,2 , 54,10 , 56,20 , 11,5 , 44,10 , 60,5 , 15,5]);
AddSWrd('n', 'newly', [51,15]);
AddSWrd('n', 'newtag', [17,25 , 26,35 , 11,10]);
AddSWrd('n', 'next', [17,5 , 49,5 , 51,35 , 55,10 , 41,15 , 47,10]);
AddSWrd('n', 'nmbias', [4,2 , 44,80 , 29,45 , 14,5]);
AddSWrd('n', 'nmbias.in', [44,10 , 29,10]);
AddSWrd('n', 'nmdrc', [7,2]);
AddSWrd('n', 'nmdrc-h', [14,5]);
AddSWrd('n', 'nmopc', [4,2 , 6,2 , 7,4 , 11,20 , 44,25 , 14,5 , 17,65 , 18,15 , 19,25 , 51,5 , 20,15 , 21,5 , 22,25 , 23,15 , 24,5 , 25,15 , 26,10 , 58,5 , 27,15 , 60,15 , 29,40 , 61,5]);
AddSWrd('n', 'nmopc.in', [44,5 , 29,10]);
AddSWrd('n', 'nominal', [29,5]);
AddSWrd('n', 'non-lpe', [7,4]);
AddSWrd('n', 'non-svrf', [13,10]);
AddSWrd('n', 'none', [28,5]);
AddSWrd('n', 'normal', [38,5]);
AddSWrd('n', 'not_outside_edge', [17,25]);
AddSWrd('n', 'not_projecting', [11,20]);
AddSWrd('n', 'notch', [23,15]);
AddSWrd('n', 'notches', [23,5 , 25,15]);
AddSWrd('n', 'notchfill', [24,45]);
AddSWrd('n', 'note', [42,5 , 11,10 , 44,10 , 29,5]);
AddSWrd('n', 'notice', [11,5 , 44,5 , 29,10]);
AddSWrd('n', 'nubs', [25,15]);
AddSWrd('n', 'num', [17,20 , 53,20]);
AddSWrd('n', 'number', [64,4 , 52,10 , 37,5 , 53,5 , 56,5 , 42,5 , 58,5 , 14,5 , 47,55]);
AddSWrd('n', 'numbers', [64,2 , 11,10 , 43,5 , 44,5]);
AddSWrd('o', 'oasis', [7,4 , 11,20 , 14,10]);
AddSWrd('o', 'occur', [5,2 , 38,5 , 24,5 , 13,10 , 45,5 , 61,5]);
AddSWrd('o', 'occurs', [6,2]);
AddSWrd('o', 'offers', [4,2]);
AddSWrd('o', 'offset', [49,5]);
AddSWrd('o', 'often', [56,5]);
AddSWrd('o', 'omit', [8,5]);
AddSWrd('o', 'once', [32,10 , 49,5 , 52,5 , 53,5 , 54,5 , 8,5 , 40,5 , 44,10 , 30,10 , 46,5 , 15,5 , 31,10]);
AddSWrd('o', 'ones', [52,10]);
AddSWrd('o', 'onto', [29,10]);
AddSWrd('o', 'opc', [64,2 , 4,12 , 5,2 , 6,4 , 11,20 , 14,15 , 15,15 , 17,15 , 18,15 , 19,10 , 20,10 , 21,5 , 22,25 , 23,5 , 24,15 , 26,10 , 27,10 , 29,80 , 39,25 , 41,5 , 43,5 , 44,55 , 45,15 , 47,5 , 48,5 , 49,50 , 60,25]);
AddSWrd('o', 'opc_layer', [19,5]);
AddSWrd('o', 'opc_opt', [29,10]);
AddSWrd('o', 'opc_out', [54,5]);
AddSWrd('o', 'opcout', [28,5]);
AddSWrd('o', 'opcv.in', [49,10 , 54,15 , 41,10 , 15,30]);
AddSWrd('o', 'opcverify', [4,2 , 5,2 , 7,4 , 41,20 , 11,10 , 44,55 , 15,45 , 49,20 , 52,5 , 53,5 , 54,30 , 55,5 , 57,5 , 61,30]);
AddSWrd('o', 'open', [64,10 , 65,2 , 28,5]);
AddSWrd('o', 'operates', [22,10]);
AddSWrd('o', 'operating', [50,10 , 62,5]);
AddSWrd('o', 'operation', [32,15 , 64,2 , 37,5 , 9,30 , 41,5 , 11,20 , 44,170 , 45,30 , 14,5 , 15,5 , 47,20 , 50,5 , 54,5 , 24,5 , 28,5 , 29,10 , 30,15 , 31,15]);
AddSWrd('o', 'operation_option', [44,15]);
AddSWrd('o', 'operations', [32,15 , 64,2 , 5,2 , 11,25 , 43,10 , 44,105 , 45,10 , 14,10 , 15,20 , 49,25 , 50,5 , 52,5 , 24,10 , 57,5 , 58,5 , 30,15 , 31,15]);
AddSWrd('o', 'opposite', [11,30]);
AddSWrd('o', 'opt', [11,20 , 29,10]);
AddSWrd('o', 'opt_4', [11,10]);
AddSWrd('o', 'optical', [49,35 , 6,6 , 40,5 , 56,25 , 42,5 , 11,10 , 43,70 , 62,5]);
AddSWrd('o', 'optical_model_load', [11,10]);
AddSWrd('o', 'optimization', [49,5 , 50,5 , 4,4 , 40,5 , 27,10 , 28,5 , 46,10]);
AddSWrd('o', 'optimize', [14,5]);
AddSWrd('o', 'optimized', [51,5 , 14,5]);
AddSWrd('o', 'optimizes', [27,5]);
AddSWrd('o', 'option', [17,5 , 25,5 , 28,5 , 44,10 , 45,10]);
AddSWrd('o', 'optional', [5,2 , 8,5 , 14,20 , 17,15 , 18,5 , 19,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 25,5 , 26,5 , 27,10 , 30,5 , 31,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,5 , 37,5 , 38,5 , 40,5 , 42,5 , 43,5 , 44,10 , 45,10 , 47,20 , 49,15 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,5 , 58,5]);
AddSWrd('o', 'options', [64,8 , 37,5 , 11,10 , 28,10 , 44,15 , 29,15]);
AddSWrd('o', 'order', [49,5 , 9,5 , 44,35 , 29,10 , 14,15 , 46,5]);
AddSWrd('o', 'ordered', [17,5]);
AddSWrd('o', 'org', [21,25 , 39,30 , 25,5]);
AddSWrd('o', 'original', [64,6 , 6,4 , 7,2 , 39,10 , 40,5 , 11,10 , 44,10 , 45,10 , 14,10 , 17,20 , 49,5 , 52,10 , 21,40 , 24,10]);
AddSWrd('o', 'original.svrf', [11,10]);
AddSWrd('o', 'others', [17,10]);
AddSWrd('o', 'otherwise', [49,5]);
AddSWrd('o', 'out1', [13,5]);
AddSWrd('o', 'outer', [48,10 , 17,40 , 23,5 , 56,10 , 25,5 , 45,20 , 46,5]);
AddSWrd('o', 'outlayer', [44,15 , 13,10]);
AddSWrd('o', 'output', [64,6 , 37,10 , 6,2 , 7,4 , 39,5 , 40,5 , 41,25 , 11,30 , 44,30 , 45,125 , 14,45 , 15,10 , 50,5 , 54,10 , 55,10 , 60,5 , 61,5]);
AddSWrd('o', 'output.svrf', [11,30]);
AddSWrd('o', 'output_opc', [22,5]);
AddSWrd('o', 'outputs', [54,5 , 45,35 , 61,5]);
AddSWrd('o', 'outputting', [43,5 , 14,5]);
AddSWrd('o', 'outside', [50,10 , 21,20 , 6,4 , 23,5 , 39,20 , 44,30 , 60,5 , 45,30 , 61,5 , 46,5]);
AddSWrd('o', 'outward', [23,5 , 40,5]);
AddSWrd('o', 'outwards', [46,5]);
AddSWrd('o', 'overlap', [42,20 , 44,10 , 46,10]);
AddSWrd('o', 'overlapping', [49,5 , 42,5]);
AddSWrd('o', 'override', [40,5 , 43,5]);
AddSWrd('o', 'overriding', [42,5]);
AddSWrd('o', 'overview', [4,30]);
AddSWrd('o', 'overwriting', [64,2]);
AddSWrd('p', 'pair', [17,15 , 33,10]);
AddSWrd('p', 'paired', [55,5]);
AddSWrd('p', 'pane', [64,6]);
AddSWrd('p', 'panel', [64,2]);
AddSWrd('p', 'panels', [64,12]);
AddSWrd('p', 'parameter', [17,10 , 43,10 , 14,30]);
AddSWrd('p', 'parameters', [13,10 , 14,10]);
AddSWrd('p', 'parentheses', [8,10 , 44,5]);
AddSWrd('p', 'parses', [5,2]);
AddSWrd('p', 'parsing', [28,10]);
AddSWrd('p', 'part', [48,10 , 64,6 , 17,10 , 49,5 , 4,12 , 56,15 , 13,15 , 15,5 , 47,5]);
AddSWrd('p', 'particular', [32,5 , 49,10 , 50,5 , 5,4 , 37,5 , 11,5 , 30,5 , 15,5 , 31,5]);
AddSWrd('p', 'particularly', [38,5 , 45,10]);
AddSWrd('p', 'partitions', [40,5]);
AddSWrd('p', 'parts', [49,5 , 11,5 , 14,5]);
AddSWrd('p', 'pass', [5,2 , 44,5 , 14,10]);
AddSWrd('p', 'passed', [5,2 , 41,5 , 44,20 , 29,10 , 45,10 , 14,5 , 15,10 , 63,2]);
AddSWrd('p', 'passes', [44,10 , 45,5 , 14,5 , 15,5]);
AddSWrd('p', 'passing', [29,5 , 14,10]);
AddSWrd('p', 'pasted', [49,5]);
AddSWrd('p', 'path', [11,15 , 14,10]);
AddSWrd('p', 'pathname', [14,10]);
AddSWrd('p', 'paths', [64,4]);
AddSWrd('p', 'pattern', [49,125 , 44,20]);
AddSWrd('p', 'patterning', [57,5 , 44,5]);
AddSWrd('p', 'patterns', [49,10]);
AddSWrd('p', 'per', [44,10 , 45,5 , 62,5]);
AddSWrd('p', 'perform', [51,5 , 53,20 , 25,10 , 42,10 , 58,20 , 11,5 , 44,5 , 60,5 , 15,10]);
AddSWrd('p', 'performed', [53,5 , 54,5 , 25,5]);
AddSWrd('p', 'performs', [24,5 , 42,5 , 44,40]);
AddSWrd('p', 'perimeter', [48,10]);
AddSWrd('p', 'permits', [57,5]);
AddSWrd('p', 'phase', [41,5]);
AddSWrd('p', 'physical', [62,15]);
AddSWrd('p', 'pick_region', [50,10 , 38,140]);
AddSWrd('p', 'picked', [38,5]);
AddSWrd('p', 'pin_layer', [8,5]);
AddSWrd('p', 'pin_name', [8,5]);
AddSWrd('p', 'pinch', [49,15 , 54,5 , 11,10]);
AddSWrd('p', 'pinch_marker_1', [11,95]);
AddSWrd('p', 'pinch_marker_1_size', [11,10]);
AddSWrd('p', 'pinching', [48,5 , 54,10 , 15,30]);
AddSWrd('p', 'pipes', [8,10]);
AddSWrd('p', 'pixel-based', [4,4]);
AddSWrd('p', 'place', [48,5 , 29,10]);
AddSWrd('p', 'placed', [49,5 , 60,5 , 13,10]);
AddSWrd('p', 'placement', [25,10]);
AddSWrd('p', 'places', [50,10 , 60,5]);
AddSWrd('p', 'platform', [9,5]);
AddSWrd('p', 'plus', [6,2 , 43,20 , 45,15]);
AddSWrd('p', 'point', [11,5 , 46,5]);
AddSWrd('p', 'point-like', [60,5]);
AddSWrd('p', 'pointing', [7,2]);
AddSWrd('p', 'points', [48,35 , 60,5]);
AddSWrd('p', 'poly', [44,25]);
AddSWrd('p', 'poly.target', [44,5]);
AddSWrd('p', 'polygon', [33,20 , 34,10 , 35,10 , 37,10 , 6,2 , 44,15 , 14,10 , 46,10 , 63,2]);
AddSWrd('p', 'polygon_degenerate', [11,5]);
AddSWrd('p', 'polygons', [44,60 , 60,5 , 45,20 , 46,5 , 47,40]);
AddSWrd('p', 'poor', [5,2]);
AddSWrd('p', 'portion', [17,5 , 45,10]);
AddSWrd('p', 'position', [49,5]);
AddSWrd('p', 'positive', [53,10 , 40,10 , 45,10]);
AddSWrd('p', 'possible', [64,2 , 50,10 , 61,10 , 46,10]);
AddSWrd('p', 'possibly', [50,5]);
AddSWrd('p', 'post-biasing', [29,5]);
AddSWrd('p', 'post-lpe', [45,10]);
AddSWrd('p', 'post-opc', [5,2 , 44,5 , 14,5]);
AddSWrd('p', 'post-tapeout', [4,12 , 60,5 , 62,5 , 15,5]);
AddSWrd('p', 'potentially', [42,5]);
AddSWrd('p', 'pound', [15,5]);
AddSWrd('p', 'practice', [60,5 , 13,5 , 61,5]);
AddSWrd('p', 'practices', [59,22 , 60,65 , 61,45 , 62,30]);
AddSWrd('p', 'pre-biased', [29,10]);
AddSWrd('p', 'pre-biasing', [29,5]);
AddSWrd('p', 'pre-defined', [44,10]);
AddSWrd('p', 'pre-existing', [63,32]);
AddSWrd('p', 'pre-opc', [44,5 , 29,5]);
AddSWrd('p', 'prebiased', [44,35]);
AddSWrd('p', 'prebiased0', [44,5]);
AddSWrd('p', 'prebiased1', [44,5]);
AddSWrd('p', 'precedence', [32,5 , 37,5 , 30,5 , 31,5]);
AddSWrd('p', 'precision', [11,10]);
AddSWrd('p', 'precision_rule_file', [11,5]);
AddSWrd('p', 'preclean', [29,10]);
AddSWrd('p', 'predefined', [44,20]);
AddSWrd('p', 'prefer', [64,2]);
AddSWrd('p', 'prepare', [50,5]);
AddSWrd('p', 'preparing', [25,10]);
AddSWrd('p', 'present', [19,5 , 54,5 , 11,10]);
AddSWrd('p', 'preserve', [50,10]);
AddSWrd('p', 'preserved', [44,5]);
AddSWrd('p', 'preserves', [50,5]);
AddSWrd('p', 'prevent', [17,5 , 13,10 , 47,10]);
AddSWrd('p', 'prevents', [58,5 , 44,5]);
AddSWrd('p', 'previous', [21,20 , 41,10]);
AddSWrd('p', 'previously', [44,5]);
AddSWrd('p', 'primarily', [17,5]);
AddSWrd('p', 'primary', [36,5 , 11,10 , 44,20]);
AddSWrd('p', 'primary_operation', [44,25]);
AddSWrd('p', 'print', [39,5]);
AddSWrd('p', 'printability', [3,2 , 44,5]);
AddSWrd('p', 'printed', [32,5 , 37,5 , 30,5 , 31,5]);
AddSWrd('p', 'printing', [28,5]);
AddSWrd('p', 'prior', [39,5 , 61,5]);
AddSWrd('p', 'problem', [47,5]);
AddSWrd('p', 'problems', [5,2 , 54,5 , 61,5]);
AddSWrd('p', 'procedure', [24,5]);
AddSWrd('p', 'proceeds', [38,5]);
AddSWrd('p', 'process', [48,5 , 17,5 , 49,5 , 4,2 , 24,10 , 25,10 , 42,5 , 11,10 , 28,5 , 45,5 , 47,15 , 63,2]);
AddSWrd('p', 'processed', [49,10 , 37,5 , 9,5 , 47,10]);
AddSWrd('p', 'processes', [49,5 , 24,5 , 29,5 , 62,10]);
AddSWrd('p', 'processing', [50,5 , 4,2 , 9,10 , 43,5 , 45,5 , 14,5]);
AddSWrd('p', 'processing_mode', [50,5]);
AddSWrd('p', 'processor', [62,5]);
AddSWrd('p', 'produce', [24,5]);
AddSWrd('p', 'produces', [48,5 , 50,5 , 39,5]);
AddSWrd('p', 'product', [65,2 , 3,2 , 44,10]);
AddSWrd('p', 'product-specific', [15,5]);
AddSWrd('p', 'production', [47,10]);
AddSWrd('p', 'progress', [45,10]);
AddSWrd('p', 'progress_meter', [11,10]);
AddSWrd('p', 'prohibitive', [42,5 , 58,5]);
AddSWrd('p', 'project', [49,5]);
AddSWrd('p', 'projecting', [11,20]);
AddSWrd('p', 'prompted', [64,2]);
AddSWrd('p', 'proper', [44,5]);
AddSWrd('p', 'properly', [11,5]);
AddSWrd('p', 'properties', [8,5]);
AddSWrd('p', 'property', [45,5]);
AddSWrd('p', 'proven', [59,2]);
AddSWrd('p', 'provide', [9,5 , 14,5]);
AddSWrd('p', 'provided', [17,5 , 25,10 , 13,10]);
AddSWrd('p', 'provides', [64,2 , 50,5]);
AddSWrd('p', 'prune', [51,10]);
AddSWrd('p', 'pseudo', [11,10]);
AddSWrd('p', 'purpose', [44,5]);
AddSWrd('p', 'pvbandwidth', [15,40]);
AddSWrd('p', 'pw_condition', [22,5 , 28,10]);
AddSWrd('p', 'pw_select', [28,10]);
AddSWrd('p', 'pxopc', [4,2 , 37,35 , 6,2 , 7,4 , 39,5 , 40,5 , 41,45 , 44,80 , 13,30 , 45,20 , 14,20 , 15,20 , 49,25 , 54,10 , 25,5 , 57,5 , 28,45 , 29,10 , 61,25]);
AddSWrd('p', 'pxopc-only', [43,5]);
AddSWrd('p', 'pxopc.1', [44,10]);
AddSWrd('p', 'pxopc.2', [44,10]);
AddSWrd('p', 'pxopc.in', [54,5 , 28,5 , 13,15 , 15,10]);
AddSWrd('p', 'pxopc.options', [37,5]);
AddSWrd('p', 'pxopc.setup', [28,5]);
AddSWrd('p', 'pxopc1.in', [49,5 , 54,5 , 41,5]);
AddSWrd('p', 'pxopc2.in', [49,5 , 54,5 , 41,5 , 15,5]);
AddSWrd('p', 'pxopc3.in', [15,5]);
AddSWrd('p', 'pxopc_init_mode', [39,130]);
AddSWrd('p', 'pxopc_options', [28,25 , 61,5]);
AddSWrd('p', 'pxopc_transition_region', [6,2 , 40,130 , 43,30]);
AddSWrd('p', 'pxopc_weight_layer', [41,135]);
AddSWrd('q', 'quality', [5,2 , 37,10]);
AddSWrd('q', 'quickly', [4,2]);
AddSWrd('q', 'quotation', [8,5]);
AddSWrd('q', 'quoted', [8,10]);
AddSWrd('q', 'quotes', [8,10]);
AddSWrd('r', 'radio', [64,2]);
AddSWrd('r', 'radius', [6,6 , 40,5 , 56,10 , 43,60]);
AddSWrd('r', 're-opc', [51,5 , 25,5 , 42,5 , 60,5 , 29,30]);
AddSWrd('r', 're-optimization', [6,2 , 40,5]);
AddSWrd('r', 're-run', [64,4]);
AddSWrd('r', 're-verification', [5,2]);
AddSWrd('r', 'read', [44,5]);
AddSWrd('r', 'reads', [49,5 , 5,2]);
AddSWrd('r', 'real', [56,5 , 11,5 , 45,5]);
AddSWrd('r', 'rearrange', [42,20]);
AddSWrd('r', 'rearranged', [42,5]);
AddSWrd('r', 'rearrangement', [42,30]);
AddSWrd('r', 'rearrangement_disable', [42,145 , 14,10]);
AddSWrd('r', 'reason', [49,5 , 60,5 , 61,5 , 46,5]);
AddSWrd('r', 'reassemble', [49,5]);
AddSWrd('r', 'reassign', [11,5]);
AddSWrd('r', 'receive', [55,5 , 14,5]);
AddSWrd('r', 'received', [45,10]);
AddSWrd('r', 'receives', [44,20 , 29,10 , 45,10]);
AddSWrd('r', 'recipe', [49,5 , 56,5 , 47,5]);
AddSWrd('r', 'recipes', [47,5]);
AddSWrd('r', 'recognize', [49,5 , 11,10]);
AddSWrd('r', 'recommendation', [60,10]);
AddSWrd('r', 'recommendations', [60,5]);
AddSWrd('r', 'recommended', [64,2 , 5,14 , 7,2 , 40,5 , 11,10 , 43,5 , 13,5 , 46,5 , 17,15 , 49,30 , 18,10 , 22,10 , 23,10 , 25,10 , 58,5 , 27,5 , 60,5]);
AddSWrd('r', 'recommends', [59,2]);
AddSWrd('r', 'rectangle', [44,5]);
AddSWrd('r', 'rectangles', [44,5]);
AddSWrd('r', 'rectangular', [34,5]);
AddSWrd('r', 'red', [38,5 , 56,5]);
AddSWrd('r', 'reduce', [46,5]);
AddSWrd('r', 'reduces', [49,5 , 50,5 , 13,5 , 61,5 , 46,5]);
AddSWrd('r', 'reducing', [38,5]);
AddSWrd('r', 'refer', [14,10]);
AddSWrd('r', 'reference', [17,20 , 10,20 , 27,10 , 28,5 , 45,5]);
AddSWrd('r', 'referenced', [16,2 , 43,5 , 13,10]);
AddSWrd('r', 'referred', [6,2]);
AddSWrd('r', 'referring', [29,10]);
AddSWrd('r', 'refers', [63,2]);
AddSWrd('r', 'refine', [32,10 , 64,4 , 4,4 , 37,5 , 7,2 , 11,45 , 43,25 , 44,20 , 13,30 , 45,60 , 14,185 , 15,155 , 47,10 , 16,4 , 48,5 , 49,15 , 50,5 , 19,5 , 21,5 , 54,15 , 28,45 , 29,15 , 30,10 , 31,10]);
AddSWrd('r', 'refine_distance', [48,10 , 43,150]);
AddSWrd('r', 'refine_distance0', [6,2 , 43,20]);
AddSWrd('r', 'refine_distance1', [6,2 , 43,25]);
AddSWrd('r', 'refine_distance2', [6,2 , 56,15 , 43,20]);
AddSWrd('r', 'refine_exec', [5,2 , 11,15 , 13,15 , 14,20 , 15,70 , 18,5 , 21,10 , 24,5 , 29,25 , 30,5 , 31,5 , 32,5 , 37,5 , 41,45 , 42,5 , 43,10 , 44,255 , 45,60 , 49,45 , 50,5 , 51,5 , 52,5 , 54,55 , 55,25 , 57,15 , 58,10 , 63,8]);
AddSWrd('r', 'refine_map', [40,5 , 11,30 , 43,25 , 44,30 , 13,10 , 29,20 , 45,285 , 14,45 , 15,95]);
AddSWrd('r', 'refine_markers', [52,5 , 11,5 , 44,5 , 13,10 , 14,10 , 46,130 , 15,20]);
AddSWrd('r', 'refine_markers_limit', [47,150]);
AddSWrd('r', 'refine_markers_style', [48,135 , 6,2 , 46,5]);
AddSWrd('r', 'refine_patterns', [49,185]);
AddSWrd('r', 'refine_process', [49,30 , 50,145 , 38,5 , 14,10]);
AddSWrd('r', 'refine_prune_markers', [51,135 , 21,5]);
AddSWrd('r', 'refine_regions', [51,15 , 52,155 , 54,5 , 55,20 , 56,15 , 11,5 , 44,5 , 15,5]);
AddSWrd('r', 'refine_stop_iteration', [44,5]);
AddSWrd('r', 'refine_stop_iterations', [49,5 , 51,5 , 52,25 , 5,2 , 53,130 , 54,5 , 41,5 , 11,5 , 44,25 , 45,25 , 15,5]);
AddSWrd('r', 'refine_stop_layer', [49,5 , 52,5 , 5,2 , 53,5 , 54,155 , 41,5 , 11,5 , 15,5]);
AddSWrd('r', 'refine_update_layer', [55,180]);
AddSWrd('r', 'refine_visible_sim', [56,145 , 42,5]);
AddSWrd('r', 'refined', [4,2]);
AddSWrd('r', 'refining', [54,5]);
AddSWrd('r', 'reflect', [49,40 , 60,10]);
AddSWrd('r', 'regarding', [14,10]);
AddSWrd('r', 'regardless', [44,5]);
AddSWrd('r', 'region', [64,20 , 6,22 , 17,45 , 19,5 , 21,5 , 23,10 , 24,10 , 25,15 , 38,15 , 39,45 , 40,50 , 42,45 , 43,55 , 44,50 , 45,100 , 46,15 , 48,120 , 49,35 , 50,10 , 51,5 , 52,5 , 56,115 , 60,25 , 61,30 , 63,18]);
AddSWrd('r', 'region::context', [44,5]);
AddSWrd('r', 'region::core', [44,5]);
AddSWrd('r', 'region::core_context', [44,5 , 63,8]);
AddSWrd('r', 'region::repair', [44,5]);
AddSWrd('r', 'region::visible', [44,5]);
AddSWrd('r', 'regions', [64,14 , 4,2 , 5,2 , 6,24 , 7,2 , 14,5 , 15,5 , 17,10 , 21,50 , 38,10 , 40,5 , 42,55 , 43,40 , 44,40 , 45,60 , 46,15 , 48,20 , 49,60 , 50,55 , 51,55 , 52,35 , 53,5 , 54,5 , 55,5 , 56,20 , 58,10 , 60,5 , 61,25 , 63,2]);
AddSWrd('r', 'registered', [7,4]);
AddSWrd('r', 'regular', [49,10]);
AddSWrd('r', 'reject_duplicate_layers', [57,145]);
AddSWrd('r', 'rejected', [57,10]);
AddSWrd('r', 'relate', [54,5]);
AddSWrd('r', 'related', [50,5 , 3,2]);
AddSWrd('r', 'relationship', [14,5]);
AddSWrd('r', 'relative', [64,2 , 49,10]);
AddSWrd('r', 'relatively', [48,5 , 42,5 , 58,5]);
AddSWrd('r', 'relevant', [14,5]);
AddSWrd('r', 'relocates', [42,5]);
AddSWrd('r', 'remaining', [52,10 , 5,2 , 53,5 , 44,10 , 47,10]);
AddSWrd('r', 'remains', [48,10 , 52,5]);
AddSWrd('r', 'remote', [62,20]);
AddSWrd('r', 'remove', [28,5]);
AddSWrd('r', 'removed', [60,5]);
AddSWrd('r', 'removes', [52,5 , 37,5 , 25,10]);
AddSWrd('r', 'reopc', [28,5]);
AddSWrd('r', 'repair', [64,2 , 5,2 , 6,2 , 11,5 , 15,5 , 17,10 , 18,5 , 21,10 , 38,20 , 40,5 , 41,5 , 42,40 , 43,20 , 44,10 , 45,80 , 46,15 , 48,20 , 49,70 , 50,65 , 51,45 , 52,20 , 54,5 , 55,5 , 56,25 , 58,15 , 60,5 , 61,5 , 63,2]);
AddSWrd('r', 'repair_region', [11,30 , 15,5]);
AddSWrd('r', 'repaired', [45,10]);
AddSWrd('r', 'repairing', [44,5]);
AddSWrd('r', 'repairregion', [43,5]);
AddSWrd('r', 'repairs', [51,5 , 40,5 , 29,5]);
AddSWrd('r', 'repeat', [44,5]);
AddSWrd('r', 'repeated', [44,5]);
AddSWrd('r', 'repetitive', [49,5 , 50,5]);
AddSWrd('r', 'replaced', [6,2]);
AddSWrd('r', 'replaces', [55,5]);
AddSWrd('r', 'report', [49,5 , 11,10 , 45,10 , 63,2]);
AddSWrd('r', 'reported', [49,5]);
AddSWrd('r', 'represent', [9,5 , 29,10]);
AddSWrd('r', 'representation', [42,20]);
AddSWrd('r', 'representing', [14,10]);
AddSWrd('r', 'represents', [48,5 , 28,5]);
AddSWrd('r', 'require', [49,5 , 21,5 , 59,2 , 29,15 , 14,10 , 62,5 , 15,5]);
AddSWrd('r', 'required', [64,4 , 7,2 , 8,5 , 9,5 , 11,20 , 13,20 , 14,40 , 15,25 , 17,80 , 18,20 , 19,20 , 20,20 , 22,20 , 23,20 , 24,20 , 25,20 , 26,20 , 29,30 , 30,10 , 31,10 , 32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 37,10 , 38,10 , 39,10 , 40,10 , 41,20 , 42,10 , 43,10 , 44,80 , 45,50 , 46,20 , 47,10 , 48,30 , 49,15 , 50,20 , 51,10 , 52,10 , 53,10 , 54,10 , 55,20 , 56,10 , 57,10 , 58,10]);
AddSWrd('r', 'requirement', [48,10]);
AddSWrd('r', 'requirements', [5,4 , 7,30 , 60,5]);
AddSWrd('r', 'requires', [49,10 , 51,10 , 9,10 , 29,5 , 61,5]);
AddSWrd('r', 'reset_displacement', [27,160]);
AddSWrd('r', 'resets', [27,10]);
AddSWrd('r', 'resist', [11,30]);
AddSWrd('r', 'resist_model_load', [11,10]);
AddSWrd('r', 'resized', [48,10]);
AddSWrd('r', 'resolution', [11,10]);
AddSWrd('r', 'resolve', [48,5 , 64,2]);
AddSWrd('r', 'respect', [29,10]);
AddSWrd('r', 'respective', [7,2]);
AddSWrd('r', 'rest', [49,5 , 40,5 , 44,5 , 14,15]);
AddSWrd('r', 'restrict', [17,5]);
AddSWrd('r', 'restricted', [23,5 , 44,10]);
AddSWrd('r', 'restrictions', [23,10]);
AddSWrd('r', 'restricts', [38,5 , 23,5]);
AddSWrd('r', 'result', [48,5 , 21,25 , 45,10 , 63,2]);
AddSWrd('r', 'resulting', [11,5 , 43,5]);
AddSWrd('r', 'results', [64,46 , 4,6 , 5,6 , 38,5 , 39,5 , 9,10 , 11,25 , 43,5 , 44,35 , 45,65 , 14,10 , 17,5 , 49,10 , 50,10 , 53,10 , 54,10 , 56,5 , 27,5 , 29,5 , 61,5]);
AddSWrd('r', 'ret', [32,15 , 64,4 , 37,5 , 7,2 , 11,45 , 43,25 , 44,20 , 13,45 , 45,60 , 14,185 , 15,155 , 47,10 , 16,4 , 48,5 , 49,10 , 50,5 , 19,5 , 21,5 , 54,20 , 28,20 , 29,15 , 30,15 , 31,15]);
AddSWrd('r', 'retains', [25,10]);
AddSWrd('r', 'retarget', [44,5 , 29,40]);
AddSWrd('r', 'retargeting', [44,20 , 29,5]);
AddSWrd('r', 'return', [44,20 , 45,5]);
AddSWrd('r', 'returned', [37,5]);
AddSWrd('r', 'returns', [44,10 , 45,40 , 14,5 , 15,5]);
AddSWrd('r', 'review', [9,5]);
AddSWrd('r', 'reviewing', [64,2]);
AddSWrd('r', 'right', [48,5 , 64,2 , 43,5 , 45,5]);
AddSWrd('r', 'rms', [28,5]);
AddSWrd('r', 'rotate', [49,30]);
AddSWrd('r', 'rotation', [50,5]);
AddSWrd('r', 'rule', [4,2 , 5,6 , 6,2 , 11,30 , 43,5 , 44,20 , 60,15 , 13,10 , 14,35 , 15,15 , 63,2]);
AddSWrd('r', 'rule-based', [4,2]);
AddSWrd('r', 'rules', [16,2 , 32,10 , 64,2 , 53,5 , 11,15 , 44,10 , 30,10 , 15,5 , 31,10 , 47,5]);
AddSWrd('r', 'run', [64,14 , 4,2 , 5,14 , 9,10 , 14,15 , 15,10 , 19,5 , 21,5 , 28,10 , 29,5 , 30,5 , 31,5 , 32,5 , 38,15 , 39,5 , 41,15 , 42,5 , 43,10 , 44,5 , 45,5 , 47,30 , 49,15 , 50,5 , 54,5 , 55,10 , 58,5 , 60,10 , 61,20 , 62,5 , 63,2]);
AddSWrd('r', 'running', [49,5 , 44,5 , 62,5 , 15,5]);
AddSWrd('r', 'runs', [5,4 , 9,5 , 41,5 , 11,5 , 44,10 , 13,10 , 14,5 , 15,5 , 48,5 , 17,5 , 18,10 , 50,5 , 22,5 , 23,10 , 24,5 , 25,5 , 27,15 , 60,5 , 62,5]);
AddSWrd('r', 'runtime', [47,5]);
AddSWrd('s', 's_pre', [63,4]);
AddSWrd('s', 'san', [7,2]);
AddSWrd('s', 'save', [64,10 , 41,5]);
AddSWrd('s', 'saved', [64,2 , 5,2]);
AddSWrd('s', 'scatter_offset', [61,10]);
AddSWrd('s', 'script', [11,70 , 27,5 , 60,5]);
AddSWrd('s', 'searches', [44,10]);
AddSWrd('s', 'second', [49,15 , 52,5 , 41,5 , 44,30 , 45,15]);
AddSWrd('s', 'secondary', [33,5 , 34,5 , 35,5 , 36,5 , 44,5]);
AddSWrd('s', 'secondary_operation', [44,15]);
AddSWrd('s', 'section', [16,2 , 32,5 , 49,5 , 37,5 , 43,5 , 29,5 , 30,5 , 31,5]);
AddSWrd('s', 'sections', [49,5 , 3,2 , 10,2 , 28,5]);
AddSWrd('s', 'segments', [44,10]);
AddSWrd('s', 'select', [64,6 , 38,5]);
AddSWrd('s', 'selected', [38,20]);
AddSWrd('s', 'selecting', [64,4 , 38,15 , 46,5]);
AddSWrd('s', 'selects', [44,10]);
AddSWrd('s', 'semi', [7,4]);
AddSWrd('s', 'semiconductor', [7,2]);
AddSWrd('s', 'separate', [42,10 , 44,15 , 60,5 , 29,5]);
AddSWrd('s', 'separated', [56,5 , 42,5]);
AddSWrd('s', 'sequence', [11,5]);
AddSWrd('s', 'serve', [11,5]);
AddSWrd('s', 'setenv', [11,5 , 62,10]);
AddSWrd('s', 'setlayer', [37,5 , 22,5 , 24,45 , 11,10 , 28,5 , 44,50 , 29,10 , 61,5]);
AddSWrd('s', 'sets', [33,5 , 34,5 , 35,5 , 36,5 , 21,5 , 39,5 , 40,5 , 42,5 , 27,5]);
AddSWrd('s', 'setting', [32,10 , 37,10 , 39,5 , 42,15 , 43,5 , 48,25 , 17,5 , 49,20 , 18,5 , 50,5 , 52,10 , 22,5 , 23,5 , 24,10 , 56,10 , 25,5 , 58,5 , 60,5 , 30,10 , 31,10]);
AddSWrd('s', 'settings', [5,2 , 10,2 , 42,5 , 43,15 , 13,5 , 14,5 , 15,5 , 50,5 , 54,5 , 58,5 , 59,2 , 28,5 , 60,10 , 61,20 , 62,5]);
AddSWrd('s', 'setup', [5,8 , 7,8 , 10,2 , 11,70 , 13,100 , 14,75 , 15,235 , 16,30 , 17,40 , 18,5 , 19,35 , 20,25 , 21,10 , 22,40 , 23,20 , 24,30 , 25,5 , 26,5 , 27,5 , 28,15 , 29,55 , 30,50 , 31,50 , 32,50 , 33,5 , 34,5 , 35,5 , 36,5 , 37,45 , 38,10 , 39,5 , 40,10 , 41,20 , 42,20 , 43,25 , 44,155 , 45,55 , 46,5 , 47,15 , 48,10 , 49,10 , 50,10 , 51,10 , 52,10 , 53,10 , 54,25 , 55,5 , 56,10 , 57,5 , 58,20 , 60,55 , 61,20 , 63,4 , 64,8]);
AddSWrd('s', 'setup.in', [55,5 , 57,5 , 14,15]);
AddSWrd('s', 'setup1.in', [44,10]);
AddSWrd('s', 'setup2.in', [44,10]);
AddSWrd('s', 'setup3.in', [44,10]);
AddSWrd('s', 'setup_name', [13,10]);
AddSWrd('s', 'setups', [11,5 , 44,75 , 29,5]);
AddSWrd('s', 'several', [8,5 , 28,5 , 61,5 , 14,5]);
AddSWrd('s', 'severity', [11,20]);
AddSWrd('s', 'shape', [48,10 , 33,5 , 34,5 , 35,5 , 36,5 , 37,5 , 8,5 , 45,10 , 46,10]);
AddSWrd('s', 'shapes', [49,15 , 21,5 , 6,8 , 39,20 , 40,5 , 44,20 , 60,10 , 29,40 , 45,30 , 46,25 , 63,6]);
AddSWrd('s', 'share', [44,10 , 62,5]);
AddSWrd('s', 'shared', [62,10]);
AddSWrd('s', 'shell', [8,5 , 9,5 , 11,10 , 62,20]);
AddSWrd('s', 'shift', [56,5]);
AddSWrd('s', 'shifts', [40,5]);
AddSWrd('s', 'short_frag', [44,30]);
AddSWrd('s', 'shorter', [48,10 , 33,10 , 34,10]);
AddSWrd('s', 'show', [64,2 , 54,15 , 8,5 , 45,20 , 14,5]);
AddSWrd('s', 'shown', [49,5 , 38,5 , 54,5 , 56,5 , 43,5 , 61,5 , 14,5]);
AddSWrd('s', 'shows', [49,10 , 5,2 , 11,5 , 43,10 , 13,5 , 29,5 , 45,5 , 14,5 , 15,5 , 63,2]);
AddSWrd('s', 'shrinking', [56,5]);
AddSWrd('s', 'siemens', [59,2]);
AddSWrd('s', 'sign', [15,5]);
AddSWrd('s', 'significant', [60,5]);
AddSWrd('s', 'significantly', [49,5 , 56,5 , 45,10]);
AddSWrd('s', 'similar', [9,5 , 43,5 , 44,5 , 60,5 , 45,10]);
AddSWrd('s', 'simple', [64,2 , 29,5]);
AddSWrd('s', 'simulated', [29,20]);
AddSWrd('s', 'simulation', [50,5 , 53,5 , 6,4 , 56,35 , 60,5 , 29,10 , 45,10 , 63,2]);
AddSWrd('s', 'simultaneous', [62,10]);
AddSWrd('s', 'single', [33,10 , 34,10 , 35,10 , 5,2 , 37,10 , 8,5 , 42,5 , 11,5 , 43,5 , 44,20 , 61,5]);
AddSWrd('s', 'situations', [48,5]);
AddSWrd('s', 'size', [48,30 , 37,10 , 6,6 , 40,25 , 43,60 , 44,5 , 60,15 , 46,10 , 63,4]);
AddSWrd('s', 'sized', [48,10 , 61,5]);
AddSWrd('s', 'sizes', [48,10 , 37,5 , 43,5]);
AddSWrd('s', 'sizing', [48,10]);
AddSWrd('s', 'skip', [64,2 , 47,35]);
AddSWrd('s', 'skipped', [19,5]);
AddSWrd('s', 'slanted', [8,5]);
AddSWrd('s', 'slightly', [40,5 , 45,5]);
AddSWrd('s', 'slow', [42,5 , 58,5]);
AddSWrd('s', 'slower', [48,5]);
AddSWrd('s', 'small', [48,5 , 33,15 , 34,15 , 35,20 , 36,20 , 42,5 , 58,5 , 61,5 , 46,15]);
AddSWrd('s', 'smaller', [48,10 , 36,5 , 37,15 , 23,5 , 60,5 , 61,5]);
AddSWrd('s', 'smart', [58,45]);
AddSWrd('s', 'smart_cut_disable', [58,140]);
AddSWrd('s', 'smooth', [6,2 , 58,5]);
AddSWrd('s', 'smoothing', [25,10]);
AddSWrd('s', 'smoothly', [4,2 , 44,5 , 14,5]);
AddSWrd('s', 'smooths', [63,2]);
AddSWrd('s', 'smt', [62,20]);
AddSWrd('s', 'smtfactor', [62,5]);
AddSWrd('s', 'socs', [62,15]);
AddSWrd('s', 'software', [65,2 , 4,2]);
AddSWrd('s', 'solutions', [61,5]);
AddSWrd('s', 'sometimes', [63,2]);
AddSWrd('s', 'source', [49,5 , 65,2]);
AddSWrd('s', 'space', [49,10]);
AddSWrd('s', 'spacing', [49,5 , 44,10 , 61,5 , 15,5 , 31,15]);
AddSWrd('s', 'span', [15,5]);
AddSWrd('s', 'spec', [17,25]);
AddSWrd('s', 'special', [24,5]);
AddSWrd('s', 'specially', [24,10]);
AddSWrd('s', 'specific', [44,5 , 60,5 , 13,10]);
AddSWrd('s', 'specification', [14,10]);
AddSWrd('s', 'specifications', [17,10 , 5,2 , 44,5]);
AddSWrd('s', 'specified', [32,5 , 37,10 , 38,5 , 41,5 , 43,5 , 44,75 , 45,25 , 14,35 , 15,5 , 47,40 , 17,20 , 49,35 , 19,5 , 52,15 , 53,5 , 54,5 , 55,20 , 24,5 , 28,5 , 29,5 , 30,5 , 31,5]);
AddSWrd('s', 'specifies', [7,2 , 11,20 , 13,10 , 14,15 , 15,10 , 17,20 , 18,5 , 19,10 , 21,5 , 26,5 , 29,5 , 30,10 , 31,10 , 32,10 , 33,5 , 34,5 , 35,5 , 36,5 , 37,5 , 40,5 , 43,10 , 44,5 , 46,10 , 47,5 , 49,15 , 50,20 , 53,10]);
AddSWrd('s', 'specify', [17,15 , 49,5 , 56,20 , 57,10 , 27,10 , 61,5 , 14,15 , 15,5]);
AddSWrd('s', 'specifying', [32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 37,10 , 38,10 , 39,10 , 41,20 , 42,10 , 11,5 , 43,10 , 44,40 , 45,10 , 46,10 , 47,10 , 17,10 , 49,10 , 54,10 , 55,20 , 58,10 , 29,20 , 30,10 , 31,10]);
AddSWrd('s', 'speed', [48,5 , 50,5]);
AddSWrd('s', 'spent', [42,10 , 58,10 , 47,5]);
AddSWrd('s', 'spot', [45,5]);
AddSWrd('s', 'spots', [54,10]);
AddSWrd('s', 'square', [33,10 , 36,15 , 8,5 , 60,5]);
AddSWrd('s', 'squares', [60,5]);
AddSWrd('s', 'sraf', [48,5 , 34,5 , 19,10 , 21,5 , 37,10 , 29,30 , 45,5 , 61,5]);
AddSWrd('s', 'srafs', [33,5 , 34,5 , 35,5 , 4,2 , 36,5 , 37,5 , 60,20 , 29,15 , 45,10]);
AddSWrd('s', 'stages', [5,6]);
AddSWrd('s', 'standard', [10,2 , 44,5 , 14,10 , 15,5]);
AddSWrd('s', 'standard_options', [27,15]);
AddSWrd('s', 'start', [64,6 , 45,5]);
AddSWrd('s', 'started', [28,5]);
AddSWrd('s', 'starting', [11,10]);
AddSWrd('s', 'starts', [11,5 , 45,5]);
AddSWrd('s', 'statement', [7,4 , 44,15 , 13,10 , 45,60 , 14,20 , 46,10 , 15,5 , 16,2 , 17,40 , 49,10 , 18,10 , 19,10 , 21,10 , 60,5]);
AddSWrd('s', 'statements', [22,5 , 38,5 , 24,30 , 57,5 , 11,30 , 44,40 , 13,25 , 15,5]);
AddSWrd('s', 'step', [64,2 , 42,10 , 58,10]);
AddSWrd('s', 'stop', [47,40]);
AddSWrd('s', 'strength', [17,5]);
AddSWrd('s', 'strongly', [17,5]);
AddSWrd('s', 'sub', [17,30]);
AddSWrd('s', 'subsequent', [49,10 , 21,20 , 11,5]);
AddSWrd('s', 'subset', [44,5]);
AddSWrd('s', 'substitutes', [22,5]);
AddSWrd('s', 'subtracting', [48,10]);
AddSWrd('s', 'succeeds', [24,10]);
AddSWrd('s', 'successfully', [24,5]);
AddSWrd('s', 'suffix', [11,10]);
AddSWrd('s', 'suggested', [47,5]);
AddSWrd('s', 'suitable', [11,5]);
AddSWrd('s', 'sum', [43,5]);
AddSWrd('s', 'summarized', [62,5]);
AddSWrd('s', 'summary', [32,5 , 37,5 , 11,10 , 43,5 , 30,5 , 31,5]);
AddSWrd('s', 'supplied', [52,10 , 11,10 , 44,10]);
AddSWrd('s', 'supplying', [44,5]);
AddSWrd('s', 'support', [9,5 , 13,10 , 61,5 , 15,5]);
AddSWrd('s', 'supported', [27,20 , 44,50 , 15,5]);
AddSWrd('s', 'suppress', [44,5]);
AddSWrd('s', 'sure', [11,5 , 44,5]);
AddSWrd('s', 'susceptible', [61,5]);
AddSWrd('s', 'svrf', [64,10 , 4,2 , 5,4 , 7,4 , 9,10 , 10,2 , 11,40 , 43,5 , 12,22 , 44,145 , 13,35 , 45,5 , 14,25 , 15,15 , 28,5 , 60,10 , 29,10 , 63,12]);
AddSWrd('s', 'svrf.in', [44,10]);
AddSWrd('s', 'swap_list', [8,5]);
AddSWrd('s', 'switch', [11,5]);
AddSWrd('s', 'symmetry', [49,5]);
AddSWrd('s', 'syntax', [17,10 , 49,5 , 52,10 , 8,50 , 40,5 , 57,15 , 43,20 , 44,80 , 13,10 , 45,50 , 15,10]);
AddSWrd('s', 'system', [11,10 , 62,5]);
AddSWrd('t', 'table', [16,2 , 44,15 , 60,10]);
AddSWrd('t', 'tag', [17,30]);
AddSWrd('t', 'tags', [22,5 , 26,10]);
AddSWrd('t', 'takes', [32,5 , 37,5 , 42,5 , 58,5 , 11,5 , 14,5 , 30,5 , 31,5]);
AddSWrd('t', 'target', [49,50 , 21,55 , 54,5 , 7,2 , 39,30 , 24,25 , 41,15 , 44,65 , 29,45 , 45,40 , 14,30 , 15,30]);
AddSWrd('t', 'target_last', [51,10 , 21,15]);
AddSWrd('t', 'target_layer', [13,5]);
AddSWrd('t', 'targets', [24,5]);
AddSWrd('t', 'tcl', [11,10 , 44,25]);
AddSWrd('t', 'tcl-supporting', [44,5]);
AddSWrd('t', 'td_option', [11,20 , 44,5]);
AddSWrd('t', 'tee', [9,5]);
AddSWrd('t', 'temporary', [38,5]);
AddSWrd('t', 'terminal', [11,5]);
AddSWrd('t', 'terminology', [6,30 , 40,5]);
AddSWrd('t', 'test', [38,5]);
AddSWrd('t', 'test.oas', [11,5]);
AddSWrd('t', 'tested', [47,5]);
AddSWrd('t', 'text', [8,5]);
AddSWrd('t', 'tgall', [11,20]);
AddSWrd('t', 'things', [61,5]);
AddSWrd('t', 'third', [52,5 , 44,5 , 45,10]);
AddSWrd('t', 'third-generation', [4,2]);
AddSWrd('t', 'third-party', [65,2]);
AddSWrd('t', 'thomas', [7,2]);
AddSWrd('t', 'three', [51,5 , 6,4 , 8,5 , 43,5 , 44,10 , 14,20 , 15,5]);
AddSWrd('t', 'throughout', [37,5]);
AddSWrd('t', 'tighter', [61,10]);
AddSWrd('t', 'tile', [48,10 , 43,5 , 61,10]);
AddSWrd('t', 'tile-level', [44,5]);
AddSWrd('t', 'tilegen', [61,5]);
AddSWrd('t', 'tilemicrons', [11,10 , 43,5]);
AddSWrd('t', 'tiles', [61,25]);
AddSWrd('t', 'time', [49,15 , 50,5 , 41,5 , 42,20 , 58,20 , 28,5 , 60,5 , 45,10 , 47,10]);
AddSWrd('t', 'times', [17,5 , 52,10 , 38,5 , 55,5 , 40,10 , 44,20 , 45,5 , 14,5]);
AddSWrd('t', 'tips', [61,5]);
AddSWrd('t', 'together', [17,5 , 54,5]);
AddSWrd('t', 'tool', [4,4 , 5,2 , 6,2 , 61,35]);
AddSWrd('t', 'tool-specific', [10,2]);
AddSWrd('t', 'tool-to-tool', [61,5]);
AddSWrd('t', 'tools', [4,2 , 5,4 , 7,2 , 60,5 , 13,15 , 29,5 , 61,15 , 15,5]);
AddSWrd('t', 'top', [50,5]);
AddSWrd('t', 'top-level', [38,5]);
AddSWrd('t', 'topological', [17,25]);
AddSWrd('t', 'touch', [44,30]);
AddSWrd('t', 'trademark', [7,4]);
AddSWrd('t', 'transcript', [32,5 , 49,30 , 37,5 , 42,5 , 43,10 , 28,5 , 45,10 , 30,5 , 31,5]);
AddSWrd('t', 'transfer', [29,10]);
AddSWrd('t', 'transferred', [55,10]);
AddSWrd('t', 'transfers', [55,5]);
AddSWrd('t', 'transform', [49,30]);
AddSWrd('t', 'transformation', [49,5]);
AddSWrd('t', 'transformations', [49,55]);
AddSWrd('t', 'transforms', [49,5]);
AddSWrd('t', 'transition', [17,5 , 40,5 , 58,5 , 43,5 , 61,30 , 63,2]);
AddSWrd('t', 'transitional', [45,10]);
AddSWrd('t', 'transitions', [6,2]);
AddSWrd('t', 'translates', [17,10]);
AddSWrd('t', 'translation', [49,5 , 11,5]);
AddSWrd('t', 'transmission', [29,5]);
AddSWrd('t', 'treated', [48,10 , 50,5 , 57,10 , 60,10]);
AddSWrd('t', 'treats', [62,5]);
AddSWrd('t', 'tries', [17,5]);
AddSWrd('t', 'triple', [57,5]);
AddSWrd('t', 'triple-patterning', [62,5]);
AddSWrd('t', 'turn', [42,5 , 58,5 , 13,5 , 62,5]);
AddSWrd('t', 'tvf', [44,20]);
AddSWrd('t', 'twice', [62,5]);
AddSWrd('t', 'two', [33,10 , 34,10 , 35,10 , 36,10 , 37,5 , 12,2 , 44,50 , 13,15 , 29,5 , 45,10 , 61,10 , 62,5]);
AddSWrd('t', 'type', [13,5 , 14,5 , 17,5 , 18,25 , 19,5 , 20,5 , 21,5 , 22,15 , 23,5 , 24,5 , 25,5 , 26,5 , 27,5 , 28,5 , 29,65 , 30,5 , 31,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,5 , 37,5 , 38,5 , 39,35 , 40,5 , 41,5 , 42,5 , 43,5 , 44,20 , 45,15 , 46,5 , 47,5 , 48,5 , 49,30 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,15 , 56,5 , 57,5 , 58,5]);
AddSWrd('t', 'types', [49,5 , 44,10 , 29,10]);
AddSWrd('t', 'typical', [42,5 , 58,5 , 15,10]);
AddSWrd('t', 'typically', [16,2 , 32,10 , 17,10 , 7,4 , 40,10 , 60,5 , 45,5 , 30,10 , 62,5 , 31,10 , 47,5]);
AddSWrd('u', 'ultra', [7,2 , 11,5]);
AddSWrd('u', 'ultraflex', [4,2 , 7,2 , 9,5]);
AddSWrd('u', 'unchanged', [63,2]);
AddSWrd('u', 'unclassified', [61,5]);
AddSWrd('u', 'unconverged', [51,35 , 45,30]);
AddSWrd('u', 'undecided', [64,2]);
AddSWrd('u', 'underline', [8,5]);
AddSWrd('u', 'underlined', [8,5]);
AddSWrd('u', 'underlining', [8,5]);
AddSWrd('u', 'understand', [6,2]);
AddSWrd('u', 'undo', [64,18]);
AddSWrd('u', 'undoing', [64,2]);
AddSWrd('u', 'unexpected', [47,5]);
AddSWrd('u', 'unique', [49,5]);
AddSWrd('u', 'units', [32,10 , 40,10 , 30,10 , 31,10]);
AddSWrd('u', 'unless', [8,10]);
AddSWrd('u', 'unlike', [44,5 , 29,5]);
AddSWrd('u', 'unnecessary', [44,5]);
AddSWrd('u', 'until', [15,5]);
AddSWrd('u', 'unwanted', [25,5]);
AddSWrd('u', 'update', [51,15 , 52,55 , 54,10 , 55,15 , 56,15 , 11,5 , 44,5 , 15,5]);
AddSWrd('u', 'updates', [64,2 , 52,5]);
AddSWrd('u', 'upon', [5,2 , 14,5]);
AddSWrd('u', 'upper', [48,5 , 5,2 , 43,5 , 47,10]);
AddSWrd('u', 'uppercase', [8,10]);
AddSWrd('u', 'url', [8,5]);
AddSWrd('u', 'used', [64,2 , 6,2 , 12,2 , 13,10 , 14,10 , 15,10 , 16,2 , 17,25 , 20,5 , 24,10 , 27,5 , 28,15 , 29,15 , 30,10 , 31,10 , 32,10 , 37,15 , 38,10 , 39,10 , 40,5 , 43,15 , 44,25 , 45,40 , 47,5 , 49,25 , 50,5 , 52,20 , 54,5 , 55,5 , 56,5 , 58,10 , 61,10]);
AddSWrd('u', 'useful', [48,5 , 17,5 , 18,5 , 38,5 , 41,5]);
AddSWrd('u', 'user', [32,10 , 17,20 , 40,10 , 27,10 , 28,5 , 30,10 , 62,5 , 31,10]);
AddSWrd('u', 'user-supplied', [8,5]);
AddSWrd('u', 'uses', [64,4 , 49,5 , 50,5 , 52,10 , 39,20 , 26,5 , 58,5 , 11,25 , 43,5 , 44,10 , 63,2]);
AddSWrd('u', 'using', [64,2 , 3,2 , 4,2 , 5,2 , 7,2 , 40,5 , 9,5 , 43,5 , 44,25 , 48,10 , 49,5 , 18,5 , 52,5 , 53,5 , 54,5 , 56,5 , 58,5 , 29,40 , 61,5 , 62,5]);
AddSWrd('u', 'usual', [48,10]);
AddSWrd('u', 'utility', [11,10]);
AddSWrd('v', 'valid', [33,15 , 49,35 , 34,15 , 35,15 , 36,15 , 11,10 , 29,30]);
AddSWrd('v', 'value', [32,40 , 36,5 , 37,40 , 8,5 , 40,30 , 43,55 , 44,25 , 45,60 , 15,5 , 17,50 , 23,5 , 56,10 , 57,10 , 60,5 , 61,10 , 30,40 , 31,40]);
AddSWrd('v', 'value1', [43,5]);
AddSWrd('v', 'value2', [43,10]);
AddSWrd('v', 'values', [17,20 , 52,10 , 11,10 , 43,10 , 44,30 , 45,10 , 61,5]);
AddSWrd('v', 'variable', [7,4 , 40,5 , 11,5 , 62,10]);
AddSWrd('v', 'variables', [13,20 , 14,30 , 15,10]);
AddSWrd('v', 'various', [44,5 , 13,5]);
AddSWrd('v', 'verification', [49,10 , 4,2 , 44,5 , 61,15 , 14,10 , 63,2]);
AddSWrd('v', 'verify', [48,5 , 11,5 , 43,5]);
AddSWrd('v', 'verifying', [5,2]);
AddSWrd('v', 'version', [22,5 , 7,2 , 11,10 , 44,5 , 62,5]);
AddSWrd('v', 'vertex', [11,10]);
AddSWrd('v', 'vertical', [8,5]);
AddSWrd('v', 'vertices', [49,10]);
AddSWrd('v', 'via', [61,10]);
AddSWrd('v', 'view', [64,2 , 5,2 , 43,5]);
AddSWrd('v', 'viewing', [7,2]);
AddSWrd('v', 'violated', [60,5 , 61,5]);
AddSWrd('v', 'violation', [44,5 , 61,5]);
AddSWrd('v', 'violation_h', [15,20]);
AddSWrd('v', 'violation_s', [15,20]);
AddSWrd('v', 'violations', [49,5 , 58,5 , 44,50 , 63,2]);
AddSWrd('v', 'virtual', [62,10]);
AddSWrd('v', 'visible', [6,8 , 7,2 , 40,15 , 42,20 , 11,5 , 43,30 , 44,25 , 45,60 , 15,5 , 48,20 , 17,20 , 49,5 , 56,95 , 58,5 , 60,10 , 29,5 , 61,10 , 63,6]);
AddSWrd('v', 'visible_region', [11,30 , 43,10 , 15,5]);
AddSWrd('w', 'w_pre', [63,4]);
AddSWrd('w', 'wafer', [29,10]);
AddSWrd('w', 'want', [64,4 , 39,5 , 56,5]);
AddSWrd('w', 'warning', [48,10 , 43,15 , 13,10]);
AddSWrd('w', 'weight', [41,55]);
AddSWrd('w', 'whenever', [45,10]);
AddSWrd('w', 'whereas', [7,2 , 61,5]);
AddSWrd('w', 'whether', [48,10 , 64,2 , 49,5 , 51,5 , 52,10 , 23,5 , 56,10 , 57,15 , 26,5 , 42,20 , 58,20]);
AddSWrd('w', 'wide', [48,20 , 46,5]);
AddSWrd('w', 'width', [32,15 , 48,10 , 34,5 , 56,5 , 44,5]);
AddSWrd('w', 'window', [48,5 , 64,2 , 4,2 , 43,5 , 44,5]);
AddSWrd('w', 'within', [16,2 , 49,10 , 4,2 , 21,5 , 39,10 , 55,5 , 28,5 , 44,5 , 13,20 , 29,10 , 45,10 , 15,5]);
AddSWrd('w', 'without', [64,4 , 49,5 , 54,5 , 27,5 , 45,10]);
AddSWrd('w', 'words', [19,5 , 8,15 , 44,5]);
AddSWrd('w', 'work', [19,5 , 24,5 , 60,5 , 45,5]);
AddSWrd('w', 'workbench', [64,4 , 5,2 , 7,2 , 9,5]);
AddSWrd('w', 'workflow', [5,56]);
AddSWrd('w', 'working', [14,5]);
AddSWrd('w', 'works', [56,5]);
AddSWrd('w', 'worse', [61,5]);
AddSWrd('w', 'worst', [49,5]);
AddSWrd('w', 'written', [49,5 , 5,2 , 14,5]);
AddSWrd('w', 'wrong', [11,5]);
AddSWrd('x', 'x1_nmbias', [29,25]);
AddSWrd('x', 'x1_reopc', [29,15]);
AddSWrd('x', 'xall', [45,20]);
AddSWrd('x', 'xor', [44,5]);
AddSWrd('y', 'your_software_installation_location', [65,2]);
AddSWrd('z', 'zero', [45,15]);
AddSWrd('z', 'zone', [17,25 , 6,2 , 56,5 , 45,20]);
AddSWrd('z', 'zone_1', [17,5]);
AddSWrd('z', 'zone_2', [17,5]);
AddSWrd('z', 'zone_3', [17,5]);
AddSWrd('z', 'zone_4', [17,5]);
AddSWrd('z', 'zone_5', [17,5]);
AddSWrd('z', 'zones', [17,20 , 40,5 , 60,5]);
AddSWrd('z', 'zoom', [64,2]);
AddSWrd('num', '?.001', [60,5]);
AddSWrd('num', '?.003', [60,5]);
AddSWrd('num', '?.007', [60,5]);
AddSWrd('num', '?.012', [60,5]);
AddSWrd('num', '?0.01', [60,5]);
AddSWrd('num', '?0.015', [60,5]);
AddSWrd('num', '?0.03', [60,5]);
AddSWrd('num', '?0.07', [60,5]);
AddSWrd('f', '?from', [45,55]);
AddSWrd('i', '?iter', [45,20]);
AddSWrd('k', '?keep', [17,20 , 60,20]);
AddSWrd('l', '?limit', [17,15]);
AddSWrd('l', '?lpe', [11,10]);
AddSWrd('r', '?region', [45,15 , 15,5]);
