
// Copyright 2014 Mentor Graphics Corporation
//
//    All Rights Reserved.
//
// THIS WORK CONTAINS TRADE SECRET
// AND PROPRIETARY INFORMATION WHICH IS THE
// PROPERTY OF MENTOR GRAPHICS
// CORPORATION OR ITS LICENSORS AND IS
// SUBJECT TO LICENSE TERMS.
//
//
mLoadHandle = 'calbr_pmatch_ref';
//
// Load document variables
MGCAddBookVar("TemplateVer", "mgc_mgchelp_v4.3.000");
MGCAddBookVar("FirstPage", "title1");
MGCAddBookVar("FirstTopic", "calbr_pmatch_ref_title");
MGCAddBookVar("SWRelease", "v2021.2");
MGCAddBookVar("DocHandle", "calbr_pmatch_ref");
MGCAddBookVar("DocTitle", "Calibre® Pattern Matching Reference Manual");
MGCAddBookVar("IHUBHandle", ["calbr_ih"]);
MGCAddBookVar("ChecklinksDB", "");
MGCAddBookVar("ChecklinksRelease", "calibre");
MGCAddBookVar("FMSubTitle", "API Batch Command Support");
MGCAddBookVar("LicenseType", "EULA");
MGCAddBookVar("Language", "en");
MGCAddBookVar("BETA", false);
MGCAddBookVar("ALPHA", false);
MGCAddBookVar("Draft", false);
MGCAddBookVar("Copyright", "2021");

//
// Load file list
MGCABF("PAGE", "TITLE");
MGCABF("topics/title1", "Calibre® Pattern Matching Reference Manual");
MGCABF("figures", "List of Figures");
MGCABF("man_lot1", "List of Tables");
MGCABF("topics/Classic_RevisionHistoryIso26262_ideaeb3b63", "Revision History");
MGCABF("topics/MGCChap_Introduction_idbbc8832b", "Introduction to the Calibre Pattern Matching Batch Commands");
MGCABF("topics/Concept_CalibrePatternMatchingOverview_id39c846bc", "Overview of Calibre Pattern Matching Batch Commands");
MGCABF("topics/Concept_RequirementsForCalibrePatternMatchingApi_id4c6c47c3", "Requirements for the Calibre Pattern Matching API");
MGCABF("topics/General_SyntaxConventions_ideca67985", "Syntax Conventions");
MGCABF("topics/MGCChap_GettingStarted_idd41352df", "Getting Started with the Calibre Pattern Matching API");
MGCABF("topics/TaskTop_StartingAnInteractiveSessionForThePatternMatchingTclAPI_id44c83b45", "Starting an Interactive Session for the Pattern Matching Tcl API");
MGCABF("topics/TaskTop_RunningAPatternMatchingAPIScript_idc543a091", "Running a Pattern Matching API Script");
MGCABF("topics/Concept_TclBasicsForPatternMatcingBatchCommands_id460aa452", "Tcl Basics for Pattern Matching Batch Commands");
MGCABF("topics/MGCChap_BatchCommandsPatternMatching_idcefee60e", "Batch Commands for Pattern Matching");
MGCABF("topics/Contain_LibraryCommands_id647a961d", "Library Commands");
MGCABF("topics/Command_PmatchcreatePatternLib_id912c4c1c", "pmatch::create_pattern_lib");
MGCABF("topics/Command_PmatchgetLayerNames_idecec7b7f", "pmatch::get_layer_names");
MGCABF("topics/Command_PmatchgetPatternNames_ide86e4f37", "pmatch::get_pattern_names");
MGCABF("topics/Command_Pmatchgetsrclayernum_id5aac0fe3", "pmatch::get_src_layer_num");
MGCABF("topics/Command_PmatchloadPatternLib_idda877fb5", "pmatch::load_pattern_lib");
MGCABF("topics/Command_PmatchremovePattern_id1bfe23b7", "pmatch::remove_pattern");
MGCABF("topics/Command_PmatchrenameLayers_id5ce39a67", "pmatch::rename_layers");
MGCABF("topics/Command_PmatchrenamePattern_id88e4ab55", "pmatch::rename_pattern");
MGCABF("topics/Command_PmatchsetActiveLibrary_idbe9ef999", "pmatch::set_active_library");
MGCABF("topics/Command_Pmatchsetsrclayernum_iddde08ef1", "pmatch::set_src_layer_num");
MGCABF("topics/Command_PmatchupdatePattern_id7f8fc122", "pmatch::update_pattern");
MGCABF("topics/Contain_PatternDataRetrieval_iddfca65e8", "Pattern Data Retrieval");
MGCABF("topics/Command_PmatchcheckPattern_id5186d44d", "pmatch::check_pattern");
MGCABF("topics/Command_PmatchgetClass_idfa16c2fb", "pmatch::get_class");
MGCABF("topics/Command_PmatchgetPattern_id34f8bdef", "pmatch::get_pattern");
MGCABF("topics/Command_PmatchgetPatternName_id75f997fd", "pmatch::get_pattern_name");
MGCABF("topics/Command_PmatchgetPrecision_id2eb96ac5", "pmatch::get_precision");
MGCABF("topics/Contain_PatternMarkers_idbcaff0ca", "Pattern Markers");
MGCABF("topics/Command_PmatchaddCustomBboxMarker_idcab22ec6", "pmatch::add_custom_bbox_marker ");
MGCABF("topics/Command_PmatchaddCustomMarkerRect_idf7b78fc4", "pmatch::add_custom_marker_rect");
MGCABF("topics/Command_PmatchaddMarker_idf551a7fe", "pmatch::add_marker ");
MGCABF("topics/Command_PmatchdeleteMarker_ida21d0fb6", "pmatch::delete_marker ");
MGCABF("topics/Command_PmatchgetMarkers_id22e94e01", "pmatch::get_markers");
MGCABF("topics/Command_PmatchrenameMarker_iddccc5b10", "pmatch::rename_marker");
MGCABF("topics/Contain_PatternGeometries_id265319fd", "Pattern Geometries");
MGCABF("topics/Command_PmatchgetEdges_id2547a9e1", "pmatch::get_edges");
MGCABF("topics/Command_PmatchgetVertices_ide53b35cd", "pmatch::get_vertices");
MGCABF("topics/Contain_PatternExtents_id8a60bb5e", "Pattern Extents");
MGCABF("topics/Command_PmatchgetExtentType_id0764bda0", "pmatch::get_extent_type");
MGCABF("topics/Command_PmatchgetExtentBbox_idb324df3d", "pmatch::get_extent_bbox");
MGCABF("topics/Command_PmatchsizeUpExtent_id87b12e62", "pmatch::size_up_extent");
MGCABF("topics/Command_PmatchsnapExtent_id5dfd5898", "pmatch::snap_extent");
MGCABF("topics/Contain_PatternPropertiesKeysConstraints_id0fa4cb4e", "Pattern Properties, Keys, and Constraints");
MGCABF("topics/Command_PmatchaddIntAttr_ide534b708", "pmatch::add_int_attr");
MGCABF("topics/Command_PmatchaddKeys_id8218c65a", "pmatch::add_keys");
MGCABF("topics/Command_PmatchAddPatternOrient_id479271f1", "pmatch::add_pattern_orient");
MGCABF("topics/Command_PmatchaddProperties_id4ff986b8", "pmatch::add_properties");
MGCABF("topics/Command_PatchaddTextAttribute_id5a9afafb", "pmatch::add_text_attribute");
MGCABF("topics/Command_Pmatchdeleteconstraintlabel_idfdb43944", "pmatch::delete_constraint_label");
MGCABF("topics/Command_PmatchdeleteKeys_id7603967a", "pmatch::delete_keys");
MGCABF("topics/Command_PmatchdeleteProperties_id7102b191", "pmatch::delete_properties");
MGCABF("topics/Command_PmatchgetCglobal_id336fff74", "pmatch::get_cglobal");
MGCABF("topics/Command_PmatchgetConstraints_idc6f9b0bf", "pmatch::get_constraints");
MGCABF("topics/Command_Pmatchgetconstraintlabel_idd5d4d83b", "pmatch::get_constraint_label");
MGCABF("topics/Command_PmatchgetIntAttr_idf03dcae7", "pmatch::get_int_attr");
MGCABF("topics/Command_PmatchgetKeys_id2ee1033e", "pmatch::get_keys");
MGCABF("topics/Command_PmatchgetLibraryAttribute_id72204289", "pmatch::get_library_attribute");
MGCABF("topics/Command_PmatchGetPatternOrient_id3a3cbec9", "pmatch::get_pattern_orient");
MGCABF("topics/Command_PmatchgetProperties_id002ee4c0", "pmatch::get_properties");
MGCABF("topics/Command_PmatchgetPropertyValue_id984bd978", "pmatch::get_property_value");
MGCABF("topics/Command_PmatchgetTextAttribute_id3b9aed5c", "pmatch::get_text_attribute");
MGCABF("topics/Command_PmatchsetCglobal_id97f63ea8", "pmatch::set_cglobal");
MGCABF("topics/Command_Pmatchsetconstraintlabel_id40dbc144", "pmatch::set_constraint_label");
MGCABF("topics/Command_PmatchsetLibraryAttribute_ide354257f", "pmatch::set_library_attribute");
MGCABF("topics/Command_PmatchSetPatternOrient_ida68f1c39", "pmatch::set_pattern_orient");
MGCABF("topics/Contain_Groups_idaa7df14a", "Groups and Filters");
MGCABF("topics/Command_PmatchfilterAdd_id4e7af80a", "pmatch::filter_add");
MGCABF("topics/Command_PmatchfilterCreate_id8a103021", "pmatch::filter_create");
MGCABF("topics/Command_PmatchfilterDelete_id668c5238", "pmatch::filter_delete");
MGCABF("topics/Command_PmatchfilterReset_id92c7ab8e", "pmatch::filter_reset");
MGCABF("topics/Command_PmatchgroupAddFiltered_id6e042ea4", "pmatch::group_add_filtered");
MGCABF("topics/Command_PmatchgroupAddPattern_id9c960710", "pmatch::group_add_pattern");
MGCABF("topics/Command_PmatchgroupCreate_idcaf6bb64", "pmatch::group_create");
MGCABF("topics/Command_PmatchgroupDelete_id0ddcbb39", "pmatch::group_delete");
MGCABF("topics/Command_PmatchgroupReset_idd7b9afde", "pmatch::group_reset");
MGCABF("topics/Command_PmatchgroupSave_id66237f2e", "pmatch::group_save");
MGCABF("topics/Command_PmatchlistGroupPatterns_idab620a18", "pmatch::list_group_patterns");
MGCABF("topics/Contain_HelpCommand_id7c42babd", "Help Command");
MGCABF("topics/Command_Pmatchhelp_id50679ded", "pmatch::help");
MGCABF("topics/MGCThir_ThirdPartyInformation_id6cba59fd", "Third-Party Information");

//
// Load TOC data
MGCAddTOC(1, 2, "List of Figures", "");
MGCAddTOC(1, 3, "List of Tables", "");
MGCAddTOC(1, 4, "Revision History", "id61e7d9c1-ecea-4417-b14d-83046776139a");
MGCAddTOC(1, 5, "Introduction to the Calibre Pattern Matching Batch Commands", "idbbc8832b-a116-4039-b5e3-3f6c2d8f045e");
MGCAddTOC(2, 6, "Overview of Calibre Pattern Matching Batch Commands", "id39c846bc-8a6f-421e-9add-97bb5b863523");
MGCAddTOC(2, 7, "Requirements for the Calibre Pattern Matching API", "id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9");
MGCAddTOC(2, 8, "Syntax Conventions", "ideca67985-1467-40ed-be61-de7eb8f2e839");
MGCAddTOC(1, 9, "Getting Started with the Calibre Pattern Matching API", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970");
MGCAddTOC(2, 10, "Starting an Interactive Session for the Pattern Matching Tcl API", "id44c83b45-b069-4ae1-bb9d-e807c528b62c");
MGCAddTOC(2, 11, "Running a Pattern Matching API Script", "idc543a091-8abf-44fd-bc46-d0a5e3322780");
MGCAddTOC(2, 12, "Tcl Basics for Pattern Matching Batch Commands", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1");
MGCAddTOC(1, 13, "Batch Commands for Pattern Matching", "idcefee60e-2150-4cd1-a0ad-7cbf00165d75");
MGCAddTOC(2, 14, "Library Commands", "id647a961d-0c67-4df5-a51f-94ad2608145b");
MGCAddTOC(3, 15, "pmatch::create_pattern_lib", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d");
MGCAddTOC(3, 16, "pmatch::get_layer_names", "idecec7b7f-6e03-40f8-866f-939a8bde26f7");
MGCAddTOC(3, 17, "pmatch::get_pattern_names", "ide86e4f37-4b1e-4eb0-8b13-8deaf6a7dced");
MGCAddTOC(3, 18, "pmatch::get_src_layer_num", "id5aac0fe3-8e94-4907-be71-f55b373b55f2");
MGCAddTOC(3, 19, "pmatch::load_pattern_lib", "idda877fb5-ce42-4c17-9087-bfbc30af89b3");
MGCAddTOC(3, 20, "pmatch::remove_pattern", "id1bfe23b7-b6f1-4273-83fa-02e13f24b51e");
MGCAddTOC(3, 21, "pmatch::rename_layers", "id5ce39a67-fbc4-480a-97c5-09b37e2e6875");
MGCAddTOC(3, 22, "pmatch::rename_pattern", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1");
MGCAddTOC(3, 23, "pmatch::set_active_library", "idbe9ef999-065b-431b-86d7-fdf5e493e7b5");
MGCAddTOC(3, 24, "pmatch::set_src_layer_num", "iddde08ef1-736d-4b07-99e4-755f15e0b207");
MGCAddTOC(3, 25, "pmatch::update_pattern", "id7f8fc122-c993-40e5-b707-5508b320f3c5");
MGCAddTOC(2, 26, "Pattern Data Retrieval", "iddfca65e8-a0a8-4b7f-b977-4c2fa997fd33");
MGCAddTOC(3, 27, "pmatch::check_pattern", "id5186d44d-657b-4018-888f-b956626d1c2e");
MGCAddTOC(3, 28, "pmatch::get_class", "idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5");
MGCAddTOC(3, 29, "pmatch::get_pattern", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477");
MGCAddTOC(3, 30, "pmatch::get_pattern_name", "id75f997fd-b4bb-4ff7-96ad-c53b9f891c97");
MGCAddTOC(3, 31, "pmatch::get_precision", "id2eb96ac5-a485-4346-904e-101d4e5e49a6");
MGCAddTOC(2, 32, "Pattern Markers", "idbcaff0ca-61f0-4a52-a57a-b89131d95d34");
MGCAddTOC(3, 33, "pmatch::add_custom_bbox_marker ", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe");
MGCAddTOC(3, 34, "pmatch::add_custom_marker_rect", "idf7b78fc4-ea19-44c4-912c-75075085cd26");
MGCAddTOC(3, 35, "pmatch::add_marker ", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180");
MGCAddTOC(3, 36, "pmatch::delete_marker ", "ida21d0fb6-c847-4de7-8e5c-520775be3357");
MGCAddTOC(3, 37, "pmatch::get_markers", "id22e94e01-21cc-4e59-a849-e06941e63e86");
MGCAddTOC(3, 38, "pmatch::rename_marker", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c");
MGCAddTOC(2, 39, "Pattern Geometries", "id265319fd-8d81-4aeb-b243-77e2037fd37e");
MGCAddTOC(3, 40, "pmatch::get_edges", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85");
MGCAddTOC(3, 41, "pmatch::get_vertices", "ide53b35cd-2b3b-45e0-a467-baf779c7a3f0");
MGCAddTOC(2, 42, "Pattern Extents", "id8a60bb5e-50e9-4142-8ccb-3173aa1ed79f");
MGCAddTOC(3, 43, "pmatch::get_extent_type", "id0764bda0-81ec-4cec-bf33-604c241fc459");
MGCAddTOC(3, 44, "pmatch::get_extent_bbox", "idb324df3d-d35a-4bb5-9145-7441d8a2c8e0");
MGCAddTOC(3, 45, "pmatch::size_up_extent", "id87b12e62-833c-4a6b-b4c3-2af3542f3147");
MGCAddTOC(3, 46, "pmatch::snap_extent", "id5dfd5898-5b9b-4fb4-a343-30e28aac035e");
MGCAddTOC(2, 47, "Pattern Properties, Keys, and Constraints", "id0fa4cb4e-7d7e-4549-a511-cb0ca24386f2");
MGCAddTOC(3, 48, "pmatch::add_int_attr", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c");
MGCAddTOC(3, 49, "pmatch::add_keys", "id8218c65a-3b73-4835-93d6-be3965cefbf1");
MGCAddTOC(3, 50, "pmatch::add_pattern_orient", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b");
MGCAddTOC(3, 51, "pmatch::add_properties", "id4ff986b8-ed29-4342-93b3-a5b2d82dfa99");
MGCAddTOC(3, 52, "pmatch::add_text_attribute", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d");
MGCAddTOC(3, 53, "pmatch::delete_constraint_label", "idfdb43944-ba19-46cf-ad78-dd32203e2639");
MGCAddTOC(3, 54, "pmatch::delete_keys", "id7603967a-b752-4483-910b-b42fbc702aee");
MGCAddTOC(3, 55, "pmatch::delete_properties", "id7102b191-b9cd-43de-b650-d604b73ccfda");
MGCAddTOC(3, 56, "pmatch::get_cglobal", "id336fff74-f6f8-4183-87ac-5cc05676931f");
MGCAddTOC(3, 57, "pmatch::get_constraints", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4");
MGCAddTOC(3, 58, "pmatch::get_constraint_label", "idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8");
MGCAddTOC(3, 59, "pmatch::get_int_attr", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d");
MGCAddTOC(3, 60, "pmatch::get_keys", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09");
MGCAddTOC(3, 61, "pmatch::get_library_attribute", "id72204289-9c3c-4595-9e88-266b443aefe3");
MGCAddTOC(3, 62, "pmatch::get_pattern_orient", "id3a3cbec9-496e-42df-b8f4-e63e59fb0aea");
MGCAddTOC(3, 63, "pmatch::get_properties", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e");
MGCAddTOC(3, 64, "pmatch::get_property_value", "id984bd978-4140-4148-8af0-dd605969624c");
MGCAddTOC(3, 65, "pmatch::get_text_attribute", "id3b9aed5c-c979-4384-a50e-24d23d7acb80");
MGCAddTOC(3, 66, "pmatch::set_cglobal", "id97f63ea8-9a72-468d-a07a-9a0d573d800e");
MGCAddTOC(3, 67, "pmatch::set_constraint_label", "id40dbc144-0847-49be-9225-dcbb655cd6c4");
MGCAddTOC(3, 68, "pmatch::set_library_attribute", "ide354257f-cef4-4d90-9b72-c44f07f7c6db");
MGCAddTOC(3, 69, "pmatch::set_pattern_orient", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6");
MGCAddTOC(2, 70, "Groups and Filters", "idaa7df14a-419d-4aca-a5f6-d2db1350c965");
MGCAddTOC(3, 71, "pmatch::filter_add", "id4e7af80a-951b-4553-949f-aedefe915702");
MGCAddTOC(3, 72, "pmatch::filter_create", "id8a103021-9002-4d64-979b-0334add053dd");
MGCAddTOC(3, 73, "pmatch::filter_delete", "id668c5238-3af0-4ceb-93ae-86f00306315e");
MGCAddTOC(3, 74, "pmatch::filter_reset", "id92c7ab8e-76ff-4bc1-97f2-520a378df3c3");
MGCAddTOC(3, 75, "pmatch::group_add_filtered", "id6e042ea4-967b-4551-afb5-36bcd11f31d7");
MGCAddTOC(3, 76, "pmatch::group_add_pattern", "id9c960710-43c3-4a9c-90e8-7361aa87e321");
MGCAddTOC(3, 77, "pmatch::group_create", "idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f");
MGCAddTOC(3, 78, "pmatch::group_delete", "id0ddcbb39-b7e6-4b18-8b51-114a2ce28111");
MGCAddTOC(3, 79, "pmatch::group_reset", "idd7b9afde-1422-4cc7-b832-161fdefd96f2");
MGCAddTOC(3, 80, "pmatch::group_save", "id66237f2e-438e-4c61-af71-0314e8dbe866");
MGCAddTOC(3, 81, "pmatch::list_group_patterns", "idab620a18-3fa1-40f9-bee7-0940a7e3b363");
MGCAddTOC(2, 82, "Help Command", "id7c42babd-9d62-4f4d-bf62-664a98469eaf");
MGCAddTOC(3, 83, "pmatch::help", "id50679ded-decc-4a0f-a906-f5700b166c51");
MGCAddTOC(1, 84, "Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e");

//
// Load Topic map data
MGCAddTopic(["manual title", "", 1, "Title", 0]);
MGCAddTopic(["$figures.title", "", 2, "List of Figures", 0]);
MGCAddTopic(["$tables.title", "", 3, "List of Tables", 0]);
MGCAddTopic(["Revision History", "id61e7d9c1-ecea-4417-b14d-83046776139a", 4, "", 0]);
MGCAddTopic(["id61e7d9c1-ecea-4417-b14d-83046776139a", "id61e7d9c1-ecea-4417-b14d-83046776139a", 4, "", 0]);
MGCAddTopic(["id83730c5d-9769-4c7f-aad1-dcb31cdf7733", "id61e7d9c1-ecea-4417-b14d-83046776139a__id83730c5d-9769-4c7f-aad1-dcb31cdf7733", 4, "", 0]);
MGCAddTopic(["Introduction to the Calibre Pattern Matching Batch Commands", "idbbc8832b-a116-4039-b5e3-3f6c2d8f045e", 5, "mgcsec-H1", 0]);
MGCAddTopic(["idbbc8832b-a116-4039-b5e3-3f6c2d8f045e", "idbbc8832b-a116-4039-b5e3-3f6c2d8f045e", 5, "", 0]);
MGCAddTopic(["Overview of Calibre Pattern Matching Batch Commands", "id39c846bc-8a6f-421e-9add-97bb5b863523", 6, "con-H2", 0]);
MGCAddTopic(["id39c846bc-8a6f-421e-9add-97bb5b863523", "id39c846bc-8a6f-421e-9add-97bb5b863523", 6, "con-topic-H2", 0]);
MGCAddTopic(["Requirements for the Calibre Pattern Matching API", "id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9", 7, "", 0]);
MGCAddTopic(["id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9", "id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9", 7, "", 0]);
MGCAddTopic(["idd4b52039-f45e-4e45-b75c-a63a7fdab435", "id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9__idd4b52039-f45e-4e45-b75c-a63a7fdab435", 7, "", 0]);
MGCAddTopic(["idf8975ca3-537b-424b-bed3-546ffd34d583", "id4c6c47c3-c34c-496d-85ab-2a0ea3dcade9__idf8975ca3-537b-424b-bed3-546ffd34d583", 7, "", 0]);
MGCAddTopic(["Syntax Conventions", "ideca67985-1467-40ed-be61-de7eb8f2e839", 8, "ref-H2", 0]);
MGCAddTopic(["Syntax Conventions", "ideabf26b1-d4bb-4a5e-b847-2a9d942cc342", 8, "TableTitle", 0]);
MGCAddTopic(["ideca67985-1467-40ed-be61-de7eb8f2e839", "ideca67985-1467-40ed-be61-de7eb8f2e839", 8, "ref-topic-H2", 0]);
MGCAddTopic(["id5cd58938-6dd5-44e0-b139-8c2d73b8ba6a", "ideca67985-1467-40ed-be61-de7eb8f2e839__id5cd58938-6dd5-44e0-b139-8c2d73b8ba6a", 8, "ref-topic-H2", 0]);
MGCAddTopic(["ideabf26b1-d4bb-4a5e-b847-2a9d942cc342", "ideca67985-1467-40ed-be61-de7eb8f2e839__ideabf26b1-d4bb-4a5e-b847-2a9d942cc342", 8, "ref-topic-H2", 0]);
MGCAddTopic(["Getting Started with the Calibre Pattern Matching API", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970", 9, "mgcsec-H1", 0]);
MGCAddTopic(["idd41352df-2b3a-4c7d-9e8e-aea20f15f970", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970", 9, "", 0]);
MGCAddTopic(["idf676d2f7-f5bf-498b-b968-5d8b14464e24", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970__idf676d2f7-f5bf-498b-b968-5d8b14464e24", 9, "", 0]);
MGCAddTopic(["idf947c4d4-e8e2-4d44-9593-3025202016bb", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970__idf947c4d4-e8e2-4d44-9593-3025202016bb", 9, "", 0]);
MGCAddTopic(["idcaa388eb-d51d-42b7-b976-1ff41e4d8e4b", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970__idcaa388eb-d51d-42b7-b976-1ff41e4d8e4b", 9, "", 0]);
MGCAddTopic(["idb3bbf7e4-4c40-4027-943f-1f973c8b0372", "idd41352df-2b3a-4c7d-9e8e-aea20f15f970__idb3bbf7e4-4c40-4027-943f-1f973c8b0372", 9, "", 0]);
MGCAddTopic(["Starting an Interactive Session for the Pattern Matching Tcl API", "id44c83b45-b069-4ae1-bb9d-e807c528b62c", 10, "task-H2", 0]);
MGCAddTopic(["id44c83b45-b069-4ae1-bb9d-e807c528b62c", "id44c83b45-b069-4ae1-bb9d-e807c528b62c", 10, "task-topic-H2", 0]);
MGCAddTopic(["iddc8517de-1afd-485b-87ec-f17cbefd7846", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__iddc8517de-1afd-485b-87ec-f17cbefd7846", 10, "task-prereq-B1", 0]);
MGCAddTopic(["idc8226685-b66a-4642-ac97-db87d05d9dd6", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__idc8226685-b66a-4642-ac97-db87d05d9dd6", 10, "task-prereq-B1", 0]);
MGCAddTopic(["id3c9007e2-9587-4e93-95f7-257c22092002", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__id3c9007e2-9587-4e93-95f7-257c22092002", 10, "task-prereq-B1", 0]);
MGCAddTopic(["idcd80b4f8-c885-454f-9444-786b0bfbb33b", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__idcd80b4f8-c885-454f-9444-786b0bfbb33b", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id809aac64-36a5-45f4-b124-98cbffe451e3", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__id809aac64-36a5-45f4-b124-98cbffe451e3", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["idc61c58ca-72e7-4432-b60d-f80402262fde", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__idc61c58ca-72e7-4432-b60d-f80402262fde", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["iddedecdf7-560b-4f16-b4f1-973e57330598", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__iddedecdf7-560b-4f16-b4f1-973e57330598", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id7e7cb4b9-2e34-4422-bc7f-d1c3264933ac", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__id7e7cb4b9-2e34-4422-bc7f-d1c3264933ac", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["id3b05de5e-1105-4f43-9b1d-1d06cf464473", "id44c83b45-b069-4ae1-bb9d-e807c528b62c__id3b05de5e-1105-4f43-9b1d-1d06cf464473", 10, "task-procedure-ol-L1", 0]);
MGCAddTopic(["Running a Pattern Matching API Script", "idc543a091-8abf-44fd-bc46-d0a5e3322780", 11, "task-H2", 0]);
MGCAddTopic(["idc543a091-8abf-44fd-bc46-d0a5e3322780", "idc543a091-8abf-44fd-bc46-d0a5e3322780", 11, "task-topic-H2", 0]);
MGCAddTopic(["id6594238c-4eb0-4656-8c1e-0be75a5bbcb6", "idc543a091-8abf-44fd-bc46-d0a5e3322780__id6594238c-4eb0-4656-8c1e-0be75a5bbcb6", 11, "task-prereq-B1", 0]);
MGCAddTopic(["idedb29c04-a965-4c15-9a5a-1096536d1db0", "idc543a091-8abf-44fd-bc46-d0a5e3322780__idedb29c04-a965-4c15-9a5a-1096536d1db0", 11, "task-prereq-B1", 0]);
MGCAddTopic(["idf07b95f4-9847-44a5-b113-80273cc50ad4", "idc543a091-8abf-44fd-bc46-d0a5e3322780__idf07b95f4-9847-44a5-b113-80273cc50ad4", 11, "task-prereq-B1", 0]);
MGCAddTopic(["idcfda06d9-7fff-4318-9eb5-41a2f2a6988d", "idc543a091-8abf-44fd-bc46-d0a5e3322780__idcfda06d9-7fff-4318-9eb5-41a2f2a6988d", 11, "task-procedure", 0]);
MGCAddTopic(["id554871c8-219d-4759-a194-c53388329512", "idc543a091-8abf-44fd-bc46-d0a5e3322780__id554871c8-219d-4759-a194-c53388329512", 11, "task-procedure-ol-L1", 0]);
MGCAddTopic(["Tcl Basics for Pattern Matching Batch Commands", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1", 12, "con-H3", 0]);
MGCAddTopic(["Tcl Special Characters", "idaa620e73-c209-48a1-840f-3f9c014cd570", 12, "TableTitle", 0]);
MGCAddTopic(["id460aa452-ff30-4e1c-acdb-6bbaf585c9e1", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1", 12, "con-topic-H3", 0]);
MGCAddTopic(["ide5e30f3c-1802-491f-8532-7386fc5516b1", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__ide5e30f3c-1802-491f-8532-7386fc5516b1", 12, "con-topic-H3", 0]);
MGCAddTopic(["id2f00641c-6d43-488a-80e2-0aafd823e4f7", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__id2f00641c-6d43-488a-80e2-0aafd823e4f7", 12, "con-topic-H3", 0]);
MGCAddTopic(["idf7534f2b-39af-4986-8ded-ef6245daa1c7", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__idf7534f2b-39af-4986-8ded-ef6245daa1c7", 12, "con-topic-H3", 0]);
MGCAddTopic(["id91d50e34-7ea5-462e-a3bd-53d7d4bd8761", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__id91d50e34-7ea5-462e-a3bd-53d7d4bd8761", 12, "con-topic-H3", 0]);
MGCAddTopic(["id15e33d81-9415-4fbf-9cb0-4ce569843c67", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__id15e33d81-9415-4fbf-9cb0-4ce569843c67", 12, "con-topic-H3", 0]);
MGCAddTopic(["idaa620e73-c209-48a1-840f-3f9c014cd570", "id460aa452-ff30-4e1c-acdb-6bbaf585c9e1__idaa620e73-c209-48a1-840f-3f9c014cd570", 12, "con-topic-H3", 0]);
MGCAddTopic(["Batch Commands for Pattern Matching", "idcefee60e-2150-4cd1-a0ad-7cbf00165d75", 13, "mgcsec-H1", 0]);
MGCAddTopic(["idcefee60e-2150-4cd1-a0ad-7cbf00165d75", "idcefee60e-2150-4cd1-a0ad-7cbf00165d75", 13, "", 0]);
MGCAddTopic(["Library Commands", "id647a961d-0c67-4df5-a51f-94ad2608145b", 14, "mgcsec-H2", 0]);
MGCAddTopic(["id647a961d-0c67-4df5-a51f-94ad2608145b", "id647a961d-0c67-4df5-a51f-94ad2608145b", 14, "ct-topic-H2", 0]);
MGCAddTopic(["id747afc5f-9a21-4a6d-b484-83c453a927f2", "id647a961d-0c67-4df5-a51f-94ad2608145b__id747afc5f-9a21-4a6d-b484-83c453a927f2", 14, "ct-topic-H2", 0]);
MGCAddTopic(["idc76a9b3e-79b8-42bb-b035-05452e75c50c", "id647a961d-0c67-4df5-a51f-94ad2608145b__idc76a9b3e-79b8-42bb-b035-05452e75c50c", 14, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchcreate_pattern_lib", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d", 15, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id912c4c1c-1f52-43a6-b425-e6b314e2a05d", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d", 15, "ct-topic-H3", 0]);
MGCAddTopic(["id3f797d49-0064-4b9e-894c-ae38c1ad22c9", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d__id3f797d49-0064-4b9e-894c-ae38c1ad22c9", 15, "cmd-arg", 0]);
MGCAddTopic(["ided36a94d-748d-40a2-8747-8cc69198d1a5", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d__ided36a94d-748d-40a2-8747-8cc69198d1a5", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["idd3b2d6e2-7b1b-4ebc-a124-7e5b06cd21ce", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d__idd3b2d6e2-7b1b-4ebc-a124-7e5b06cd21ce", 15, "cmd-argumentlist", 0]);
MGCAddTopic(["idf69b9bbc-d1c6-473c-a491-ce713507e0b0", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d__idf69b9bbc-d1c6-473c-a491-ce713507e0b0", 15, "ct-topic-H3", 0]);
MGCAddTopic(["id19eb85e4-f5d4-4884-9083-264af7f86ec6", "id912c4c1c-1f52-43a6-b425-e6b314e2a05d__id19eb85e4-f5d4-4884-9083-264af7f86ec6", 15, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchget_layer_names", "idecec7b7f-6e03-40f8-866f-939a8bde26f7", 16, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idecec7b7f-6e03-40f8-866f-939a8bde26f7", "idecec7b7f-6e03-40f8-866f-939a8bde26f7", 16, "ct-topic-H3", 0]);
MGCAddTopic(["id6bee9d2d-7c51-499d-9d0e-7efa4f98baf6", "idecec7b7f-6e03-40f8-866f-939a8bde26f7__id6bee9d2d-7c51-499d-9d0e-7efa4f98baf6", 16, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_pattern_names", "ide86e4f37-4b1e-4eb0-8b13-8deaf6a7dced", 17, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ide86e4f37-4b1e-4eb0-8b13-8deaf6a7dced", "ide86e4f37-4b1e-4eb0-8b13-8deaf6a7dced", 17, "ct-topic-H3", 0]);
MGCAddTopic(["id49003801-d164-4eeb-aab4-06daf254ce37", "ide86e4f37-4b1e-4eb0-8b13-8deaf6a7dced__id49003801-d164-4eeb-aab4-06daf254ce37", 17, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_src_layer_num", "id5aac0fe3-8e94-4907-be71-f55b373b55f2", 18, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id5aac0fe3-8e94-4907-be71-f55b373b55f2", "id5aac0fe3-8e94-4907-be71-f55b373b55f2", 18, "ct-topic-H3", 0]);
MGCAddTopic(["idd191d99c-de01-4922-96df-5ab123c3954d", "id5aac0fe3-8e94-4907-be71-f55b373b55f2__idd191d99c-de01-4922-96df-5ab123c3954d", 18, "cmd-arg", 0]);
MGCAddTopic(["id896a593c-5b97-47bd-9ed2-a0bc6b44fdf4", "id5aac0fe3-8e94-4907-be71-f55b373b55f2__id896a593c-5b97-47bd-9ed2-a0bc6b44fdf4", 18, "cmd-argumentlist", 0]);
MGCAddTopic(["idb7f130a5-c127-477d-9ac2-8fa8b6c45454", "id5aac0fe3-8e94-4907-be71-f55b373b55f2__idb7f130a5-c127-477d-9ac2-8fa8b6c45454", 18, "ct-topic-H3", 0]);
MGCAddTopic(["idb04ad2cc-e82f-4e8e-9532-283ab860b06d", "id5aac0fe3-8e94-4907-be71-f55b373b55f2__idb04ad2cc-e82f-4e8e-9532-283ab860b06d", 18, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchload_pattern_lib", "idda877fb5-ce42-4c17-9087-bfbc30af89b3", 19, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idda877fb5-ce42-4c17-9087-bfbc30af89b3", "idda877fb5-ce42-4c17-9087-bfbc30af89b3", 19, "ct-topic-H3", 0]);
MGCAddTopic(["id7bccb004-edd5-461e-9163-67e52df07d25", "idda877fb5-ce42-4c17-9087-bfbc30af89b3__id7bccb004-edd5-461e-9163-67e52df07d25", 19, "cmd-arg", 0]);
MGCAddTopic(["idfafc4100-1d1a-453f-93ec-5e5f32acf130", "idda877fb5-ce42-4c17-9087-bfbc30af89b3__idfafc4100-1d1a-453f-93ec-5e5f32acf130", 19, "cmd-arg", 0]);
MGCAddTopic(["pmatchremove_pattern", "id1bfe23b7-b6f1-4273-83fa-02e13f24b51e", 20, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id1bfe23b7-b6f1-4273-83fa-02e13f24b51e", "id1bfe23b7-b6f1-4273-83fa-02e13f24b51e", 20, "ct-topic-H3", 0]);
MGCAddTopic(["id84a77bf4-a52a-4e3e-bf2b-0a5b086a7b2f", "id1bfe23b7-b6f1-4273-83fa-02e13f24b51e__id84a77bf4-a52a-4e3e-bf2b-0a5b086a7b2f", 20, "cmd-arg", 0]);
MGCAddTopic(["idac1b1191-d908-4fed-bb78-e0ae7b9a0110", "id1bfe23b7-b6f1-4273-83fa-02e13f24b51e__idac1b1191-d908-4fed-bb78-e0ae7b9a0110", 20, "cmd-arg", 0]);
MGCAddTopic(["pmatchrename_layers", "id5ce39a67-fbc4-480a-97c5-09b37e2e6875", 21, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id5ce39a67-fbc4-480a-97c5-09b37e2e6875", "id5ce39a67-fbc4-480a-97c5-09b37e2e6875", 21, "ct-topic-H3", 0]);
MGCAddTopic(["idc2ed3012-5091-41be-a22d-ea3e5a00a939", "id5ce39a67-fbc4-480a-97c5-09b37e2e6875__idc2ed3012-5091-41be-a22d-ea3e5a00a939", 21, "cmd-arg", 0]);
MGCAddTopic(["idefb2bc17-852a-4d5f-9b58-14d69510ea80", "id5ce39a67-fbc4-480a-97c5-09b37e2e6875__idefb2bc17-852a-4d5f-9b58-14d69510ea80", 21, "cmd-arg", 0]);
MGCAddTopic(["pmatchrename_pattern", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1", 22, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id88e4ab55-0a3b-44ec-9e95-a249fefae1c1", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1", 22, "ct-topic-H3", 0]);
MGCAddTopic(["id3c2d36b7-2d33-4199-b87a-14da0f157b57", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1__id3c2d36b7-2d33-4199-b87a-14da0f157b57", 22, "cmd-arg", 0]);
MGCAddTopic(["id84f6841e-89e6-4fef-a1ae-e42d7b05bbd2", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1__id84f6841e-89e6-4fef-a1ae-e42d7b05bbd2", 22, "cmd-arg", 0]);
MGCAddTopic(["ide872744d-e47a-48b1-ba32-9fef52e8a8ce", "id88e4ab55-0a3b-44ec-9e95-a249fefae1c1__ide872744d-e47a-48b1-ba32-9fef52e8a8ce", 22, "cmd-arg", 0]);
MGCAddTopic(["pmatchset_active_library", "idbe9ef999-065b-431b-86d7-fdf5e493e7b5", 23, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idbe9ef999-065b-431b-86d7-fdf5e493e7b5", "idbe9ef999-065b-431b-86d7-fdf5e493e7b5", 23, "ct-topic-H3", 0]);
MGCAddTopic(["id8e92b354-d7e2-4a4c-97a0-241b15598e01", "idbe9ef999-065b-431b-86d7-fdf5e493e7b5__id8e92b354-d7e2-4a4c-97a0-241b15598e01", 23, "cmd-arg", 0]);
MGCAddTopic(["pmatchset_src_layer_num", "iddde08ef1-736d-4b07-99e4-755f15e0b207", 24, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["iddde08ef1-736d-4b07-99e4-755f15e0b207", "iddde08ef1-736d-4b07-99e4-755f15e0b207", 24, "ct-topic-H3", 0]);
MGCAddTopic(["idb9a01e95-43d5-4b5f-96bc-da4df0960a83", "iddde08ef1-736d-4b07-99e4-755f15e0b207__idb9a01e95-43d5-4b5f-96bc-da4df0960a83", 24, "cmd-arg", 0]);
MGCAddTopic(["id1630caea-d07e-4658-84c6-8a91b1ace40c", "iddde08ef1-736d-4b07-99e4-755f15e0b207__id1630caea-d07e-4658-84c6-8a91b1ace40c", 24, "cmd-argumentlist", 0]);
MGCAddTopic(["id37806579-85a0-4c94-9f61-acc1c89fd549", "iddde08ef1-736d-4b07-99e4-755f15e0b207__id37806579-85a0-4c94-9f61-acc1c89fd549", 24, "cmd-arg", 0]);
MGCAddTopic(["pmatchupdate_pattern", "id7f8fc122-c993-40e5-b707-5508b320f3c5", 25, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id7f8fc122-c993-40e5-b707-5508b320f3c5", "id7f8fc122-c993-40e5-b707-5508b320f3c5", 25, "ct-topic-H3", 0]);
MGCAddTopic(["id2b96b7ca-834a-419c-8e86-556bc4f7f5d3", "id7f8fc122-c993-40e5-b707-5508b320f3c5__id2b96b7ca-834a-419c-8e86-556bc4f7f5d3", 25, "cmd-arg", 0]);
MGCAddTopic(["id3405ade2-10a3-4782-9027-af3004deb325", "id7f8fc122-c993-40e5-b707-5508b320f3c5__id3405ade2-10a3-4782-9027-af3004deb325", 25, "cmd-arg", 0]);
MGCAddTopic(["Pattern Data Retrieval", "iddfca65e8-a0a8-4b7f-b977-4c2fa997fd33", 26, "mgcsec-H2", 0]);
MGCAddTopic(["iddfca65e8-a0a8-4b7f-b977-4c2fa997fd33", "iddfca65e8-a0a8-4b7f-b977-4c2fa997fd33", 26, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchcheck_pattern", "id5186d44d-657b-4018-888f-b956626d1c2e", 27, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id5186d44d-657b-4018-888f-b956626d1c2e", "id5186d44d-657b-4018-888f-b956626d1c2e", 27, "ct-topic-H3", 0]);
MGCAddTopic(["id40ebe364-8713-46b5-855a-e6cfda79e4b8", "id5186d44d-657b-4018-888f-b956626d1c2e__id40ebe364-8713-46b5-855a-e6cfda79e4b8", 27, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_class", "idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5", 28, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5", "idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5", 28, "ct-topic-H3", 0]);
MGCAddTopic(["ida1042300-477c-42b6-8d2e-a03be2619a11", "idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5__ida1042300-477c-42b6-8d2e-a03be2619a11", 28, "cmd-arg", 0]);
MGCAddTopic(["id3405ade2-10a3-4782-9027-af3004deb325", "idfa16c2fb-b619-45a4-b1fd-1980dc28e8c5__id3405ade2-10a3-4782-9027-af3004deb325", 28, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_pattern", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477", 29, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id34f8bdef-8742-4d76-87d6-fff1ffe0e477", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477", 29, "ct-topic-H3", 0]);
MGCAddTopic(["id3245a31c-ef6e-42b7-b4a4-a41ca11cd740", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477__id3245a31c-ef6e-42b7-b4a4-a41ca11cd740", 29, "cmd-arg", 0]);
MGCAddTopic(["id1a4b46e4-fe86-464f-adb3-5d81f6d26287", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477__id1a4b46e4-fe86-464f-adb3-5d81f6d26287", 29, "cmd-arg", 0]);
MGCAddTopic(["id41a511a9-76e7-48e5-8954-ea03e85db22c", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477__id41a511a9-76e7-48e5-8954-ea03e85db22c", 29, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id881c6b02-c9ff-49f2-96cc-f510d5c022f3", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477__id881c6b02-c9ff-49f2-96cc-f510d5c022f3", 29, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["idb04386c3-1e2e-4786-9903-4c3ce8d37517", "id34f8bdef-8742-4d76-87d6-fff1ffe0e477__idb04386c3-1e2e-4786-9903-4c3ce8d37517", 29, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchget_pattern_name", "id75f997fd-b4bb-4ff7-96ad-c53b9f891c97", 30, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id75f997fd-b4bb-4ff7-96ad-c53b9f891c97", "id75f997fd-b4bb-4ff7-96ad-c53b9f891c97", 30, "ct-topic-H3", 0]);
MGCAddTopic(["idc97a69e8-ba29-4952-86f1-3ff05b4b2859", "id75f997fd-b4bb-4ff7-96ad-c53b9f891c97__idc97a69e8-ba29-4952-86f1-3ff05b4b2859", 30, "cmd-arg", 0]);
MGCAddTopic(["idc566199b-a4d6-4a73-94f3-99bef9ce47d0", "id75f997fd-b4bb-4ff7-96ad-c53b9f891c97__idc566199b-a4d6-4a73-94f3-99bef9ce47d0", 30, "cmd-arguments", 0]);
MGCAddTopic(["pmatchget_precision", "id2eb96ac5-a485-4346-904e-101d4e5e49a6", 31, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id2eb96ac5-a485-4346-904e-101d4e5e49a6", "id2eb96ac5-a485-4346-904e-101d4e5e49a6", 31, "ct-topic-H3", 0]);
MGCAddTopic(["idfdfc1366-3ab2-4d14-9a3c-1f9d2daa2d75", "id2eb96ac5-a485-4346-904e-101d4e5e49a6__idfdfc1366-3ab2-4d14-9a3c-1f9d2daa2d75", 31, "cmd-arg", 0]);
MGCAddTopic(["Pattern Markers", "idbcaff0ca-61f0-4a52-a57a-b89131d95d34", 32, "mgcsec-H2", 0]);
MGCAddTopic(["idbcaff0ca-61f0-4a52-a57a-b89131d95d34", "idbcaff0ca-61f0-4a52-a57a-b89131d95d34", 32, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchadd_custom_bbox_marker", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe", 33, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idcab22ec6-60af-4699-9168-f3bfe25e8cbe", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe", 33, "ct-topic-H3", 0]);
MGCAddTopic(["id6f5dcdf3-a7a4-4c80-b445-50d9aa74e66b", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe__id6f5dcdf3-a7a4-4c80-b445-50d9aa74e66b", 33, "cmd-arg", 0]);
MGCAddTopic(["id6fe499e8-c0d0-4b9a-9c97-255b306c2e3d", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe__id6fe499e8-c0d0-4b9a-9c97-255b306c2e3d", 33, "cmd-arg", 0]);
MGCAddTopic(["id634277a1-03a8-4614-b042-da124a6df013", "idcab22ec6-60af-4699-9168-f3bfe25e8cbe__id634277a1-03a8-4614-b042-da124a6df013", 33, "cmd-arg", 0]);
MGCAddTopic(["pmatchadd_custom_marker_rect", "idf7b78fc4-ea19-44c4-912c-75075085cd26", 34, "", 0]);
MGCAddTopic(["idf7b78fc4-ea19-44c4-912c-75075085cd26", "idf7b78fc4-ea19-44c4-912c-75075085cd26", 34, "", 0]);
MGCAddTopic(["id2898a631-7dee-4242-9b8b-7b498002011d", "idf7b78fc4-ea19-44c4-912c-75075085cd26__id2898a631-7dee-4242-9b8b-7b498002011d", 34, "", 0]);
MGCAddTopic(["idee3e899f-7288-48a1-ba62-ea61f4388fa3", "idf7b78fc4-ea19-44c4-912c-75075085cd26__idee3e899f-7288-48a1-ba62-ea61f4388fa3", 34, "", 0]);
MGCAddTopic(["id4140a125-30cf-4979-8a48-ac0500d69b62", "idf7b78fc4-ea19-44c4-912c-75075085cd26__id4140a125-30cf-4979-8a48-ac0500d69b62", 34, "", 0]);
MGCAddTopic(["id39a70900-7cd2-42de-b8c9-6000845775a7", "idf7b78fc4-ea19-44c4-912c-75075085cd26__id39a70900-7cd2-42de-b8c9-6000845775a7", 34, "", 0]);
MGCAddTopic(["pmatchadd_marker", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180", 35, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180", 35, "ct-topic-H3", 0]);
MGCAddTopic(["id307d3ec0-2509-427e-ab09-2b6540ca9f90", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180__id307d3ec0-2509-427e-ab09-2b6540ca9f90", 35, "cmd-arg", 0]);
MGCAddTopic(["id04b9ff78-8bf9-40a1-9dd2-1eba57be766c", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180__id04b9ff78-8bf9-40a1-9dd2-1eba57be766c", 35, "cmd-arg", 0]);
MGCAddTopic(["id3cdded06-6a6a-462c-884f-b239c0bfe5e3", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180__id3cdded06-6a6a-462c-884f-b239c0bfe5e3", 35, "cmd-arg", 0]);
MGCAddTopic(["id6e5d7e9f-0bff-4ca5-be55-c0955c00025c", "idf551a7fe-0a3e-4df4-9f07-ebfd7dcd8180__id6e5d7e9f-0bff-4ca5-be55-c0955c00025c", 35, "cmd-arg", 0]);
MGCAddTopic(["pmatchdelete_marker", "ida21d0fb6-c847-4de7-8e5c-520775be3357", 36, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ida21d0fb6-c847-4de7-8e5c-520775be3357", "ida21d0fb6-c847-4de7-8e5c-520775be3357", 36, "ct-topic-H3", 0]);
MGCAddTopic(["id289df380-b3e2-4ad3-9ff6-b0c782e45aaf", "ida21d0fb6-c847-4de7-8e5c-520775be3357__id289df380-b3e2-4ad3-9ff6-b0c782e45aaf", 36, "cmd-arg", 0]);
MGCAddTopic(["id70d9cb7a-41ea-4a98-a462-c0091f8cca43", "ida21d0fb6-c847-4de7-8e5c-520775be3357__id70d9cb7a-41ea-4a98-a462-c0091f8cca43", 36, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_markers", "id22e94e01-21cc-4e59-a849-e06941e63e86", 37, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id22e94e01-21cc-4e59-a849-e06941e63e86", "id22e94e01-21cc-4e59-a849-e06941e63e86", 37, "ct-topic-H3", 0]);
MGCAddTopic(["id018219f4-3877-43b6-b6e2-2b50c3815db6", "id22e94e01-21cc-4e59-a849-e06941e63e86__id018219f4-3877-43b6-b6e2-2b50c3815db6", 37, "cmd-arg", 0]);
MGCAddTopic(["id3a2ac8b3-4e94-406e-a122-0a50b38a7247", "id22e94e01-21cc-4e59-a849-e06941e63e86__id3a2ac8b3-4e94-406e-a122-0a50b38a7247", 37, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id274c3696-b829-44a4-b4f9-ad2f4c48732a", "id22e94e01-21cc-4e59-a849-e06941e63e86__id274c3696-b829-44a4-b4f9-ad2f4c48732a", 37, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["idd22e36cb-2f97-4bbf-962c-39d84738112b", "id22e94e01-21cc-4e59-a849-e06941e63e86__idd22e36cb-2f97-4bbf-962c-39d84738112b", 37, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["pmatchrename_marker", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c", 38, "", 0]);
MGCAddTopic(["iddccc5b10-e299-42d2-8fec-0dfa302e8f7c", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c", 38, "", 0]);
MGCAddTopic(["id7e8387f3-4df6-4154-a1c8-330c02279dc3", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c__id7e8387f3-4df6-4154-a1c8-330c02279dc3", 38, "", 0]);
MGCAddTopic(["idb00aa8c2-e641-405f-ab89-dc906a3dcf10", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c__idb00aa8c2-e641-405f-ab89-dc906a3dcf10", 38, "", 0]);
MGCAddTopic(["ida4639204-a0f7-481e-a37a-120e3eac5ac8", "iddccc5b10-e299-42d2-8fec-0dfa302e8f7c__ida4639204-a0f7-481e-a37a-120e3eac5ac8", 38, "", 0]);
MGCAddTopic(["Pattern Geometries", "id265319fd-8d81-4aeb-b243-77e2037fd37e", 39, "mgcsec-H2", 0]);
MGCAddTopic(["id265319fd-8d81-4aeb-b243-77e2037fd37e", "id265319fd-8d81-4aeb-b243-77e2037fd37e", 39, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchget_edges", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85", 40, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id2547a9e1-a05e-4e1e-abc2-b07f390e6c85", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85", 40, "ct-topic-H3", 0]);
MGCAddTopic(["idbc5e5dd6-2b2c-4383-bcc5-ab13bcd97391", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__idbc5e5dd6-2b2c-4383-bcc5-ab13bcd97391", 40, "cmd-arg", 0]);
MGCAddTopic(["id69567245-46ae-4a4d-b7b0-430fb131014f", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__id69567245-46ae-4a4d-b7b0-430fb131014f", 40, "cmd-arg", 0]);
MGCAddTopic(["id5e74b215-f8d3-44af-89c7-91737b8d8311", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__id5e74b215-f8d3-44af-89c7-91737b8d8311", 40, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id86ebd994-4ae8-4f98-9d3a-00dcf016868d", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__id86ebd994-4ae8-4f98-9d3a-00dcf016868d", 40, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id460a8ded-a535-45a1-a91b-74b767ecc694", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__id460a8ded-a535-45a1-a91b-74b767ecc694", 40, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["idee6fffea-ca72-4494-99f4-56a7b6ac0b49", "id2547a9e1-a05e-4e1e-abc2-b07f390e6c85__idee6fffea-ca72-4494-99f4-56a7b6ac0b49", 40, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["pmatchget_vertices", "ide53b35cd-2b3b-45e0-a467-baf779c7a3f0", 41, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["ide53b35cd-2b3b-45e0-a467-baf779c7a3f0", "ide53b35cd-2b3b-45e0-a467-baf779c7a3f0", 41, "ct-topic-H3", 0]);
MGCAddTopic(["ida3a4c6f3-2285-4c9e-9a79-34b9c202d308", "ide53b35cd-2b3b-45e0-a467-baf779c7a3f0__ida3a4c6f3-2285-4c9e-9a79-34b9c202d308", 41, "cmd-arg", 0]);
MGCAddTopic(["idd111e0ec-0666-4068-bfa1-dbfff9ec31ec", "ide53b35cd-2b3b-45e0-a467-baf779c7a3f0__idd111e0ec-0666-4068-bfa1-dbfff9ec31ec", 41, "cmd-arg", 0]);
MGCAddTopic(["Pattern Extents", "id8a60bb5e-50e9-4142-8ccb-3173aa1ed79f", 42, "mgcsec-H2", 0]);
MGCAddTopic(["id8a60bb5e-50e9-4142-8ccb-3173aa1ed79f", "id8a60bb5e-50e9-4142-8ccb-3173aa1ed79f", 42, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchget_extent_type", "id0764bda0-81ec-4cec-bf33-604c241fc459", 43, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id0764bda0-81ec-4cec-bf33-604c241fc459", "id0764bda0-81ec-4cec-bf33-604c241fc459", 43, "ct-topic-H3", 0]);
MGCAddTopic(["id7d3581aa-533b-47c3-a86a-4502f6f8fa96", "id0764bda0-81ec-4cec-bf33-604c241fc459__id7d3581aa-533b-47c3-a86a-4502f6f8fa96", 43, "cmd-arg", 0]);
MGCAddTopic(["ida566f657-2806-4236-bdb3-0a7cd547bbbb", "id0764bda0-81ec-4cec-bf33-604c241fc459__ida566f657-2806-4236-bdb3-0a7cd547bbbb", 43, "cmd-arg", 0]);
MGCAddTopic(["id8e8c3b15-0bd9-4e06-a2b8-1063551037e6", "id0764bda0-81ec-4cec-bf33-604c241fc459__id8e8c3b15-0bd9-4e06-a2b8-1063551037e6", 43, "ct-topic-H3", 0]);
MGCAddTopic(["id03cd916a-1935-4716-a48d-5416b90eef4d", "id0764bda0-81ec-4cec-bf33-604c241fc459__id03cd916a-1935-4716-a48d-5416b90eef4d", 43, "ct-topic-H3", 0]);
MGCAddTopic(["idf168abfc-3ccf-4742-b8d0-4cd26e783005", "id0764bda0-81ec-4cec-bf33-604c241fc459__idf168abfc-3ccf-4742-b8d0-4cd26e783005", 43, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchget_extent_bbox", "idb324df3d-d35a-4bb5-9145-7441d8a2c8e0", 44, "", 0]);
MGCAddTopic(["idb324df3d-d35a-4bb5-9145-7441d8a2c8e0", "idb324df3d-d35a-4bb5-9145-7441d8a2c8e0", 44, "", 0]);
MGCAddTopic(["id34a2ae2b-6bf0-4b3f-8e27-9dd21498412c", "idb324df3d-d35a-4bb5-9145-7441d8a2c8e0__id34a2ae2b-6bf0-4b3f-8e27-9dd21498412c", 44, "", 0]);
MGCAddTopic(["id0e2a4e87-3307-442b-a5bb-f96987002196", "idb324df3d-d35a-4bb5-9145-7441d8a2c8e0__id0e2a4e87-3307-442b-a5bb-f96987002196", 44, "", 0]);
MGCAddTopic(["pmatchsize_up_extent", "id87b12e62-833c-4a6b-b4c3-2af3542f3147", 45, "", 0]);
MGCAddTopic(["id87b12e62-833c-4a6b-b4c3-2af3542f3147", "id87b12e62-833c-4a6b-b4c3-2af3542f3147", 45, "", 0]);
MGCAddTopic(["id05625548-a826-4b30-a221-4f1cceeb86d9", "id87b12e62-833c-4a6b-b4c3-2af3542f3147__id05625548-a826-4b30-a221-4f1cceeb86d9", 45, "", 0]);
MGCAddTopic(["id15c11d04-3150-446b-8249-b2499ac6ca17", "id87b12e62-833c-4a6b-b4c3-2af3542f3147__id15c11d04-3150-446b-8249-b2499ac6ca17", 45, "", 0]);
MGCAddTopic(["idf7f1818c-2b35-49d6-a690-0aead6947d2d", "id87b12e62-833c-4a6b-b4c3-2af3542f3147__idf7f1818c-2b35-49d6-a690-0aead6947d2d", 45, "", 0]);
MGCAddTopic(["pmatchsnap_extent", "id5dfd5898-5b9b-4fb4-a343-30e28aac035e", 46, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id5dfd5898-5b9b-4fb4-a343-30e28aac035e", "id5dfd5898-5b9b-4fb4-a343-30e28aac035e", 46, "ct-topic-H3", 0]);
MGCAddTopic(["idd33d31e7-094e-43e6-a0dd-11d94db33c66", "id5dfd5898-5b9b-4fb4-a343-30e28aac035e__idd33d31e7-094e-43e6-a0dd-11d94db33c66", 46, "cmd-arg", 0]);
MGCAddTopic(["idf9ffcc1a-e87c-4832-83b2-a93c9fe86f17", "id5dfd5898-5b9b-4fb4-a343-30e28aac035e__idf9ffcc1a-e87c-4832-83b2-a93c9fe86f17", 46, "cmd-arg", 0]);
MGCAddTopic(["Pattern Properties, Keys, and Constraints", "id0fa4cb4e-7d7e-4549-a511-cb0ca24386f2", 47, "mgcsec-H2", 0]);
MGCAddTopic(["id0fa4cb4e-7d7e-4549-a511-cb0ca24386f2", "id0fa4cb4e-7d7e-4549-a511-cb0ca24386f2", 47, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchadd_int_attr", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c", 48, "", 0]);
MGCAddTopic(["ide534b708-42a6-4b34-8c5b-7b0e2eec500c", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c", 48, "", 0]);
MGCAddTopic(["id181f601f-f8a2-44f5-b4ee-8442ab4dc0cf", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c__id181f601f-f8a2-44f5-b4ee-8442ab4dc0cf", 48, "", 0]);
MGCAddTopic(["id3e70e6d3-4eee-4c2a-8729-a8532420eb72", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c__id3e70e6d3-4eee-4c2a-8729-a8532420eb72", 48, "", 0]);
MGCAddTopic(["id11fec108-8064-4394-81cb-d332c4b048f8", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c__id11fec108-8064-4394-81cb-d332c4b048f8", 48, "", 0]);
MGCAddTopic(["id6e7d9c77-a9f0-4676-959e-991b1202102e", "ide534b708-42a6-4b34-8c5b-7b0e2eec500c__id6e7d9c77-a9f0-4676-959e-991b1202102e", 48, "", 0]);
MGCAddTopic(["pmatchadd_keys", "id8218c65a-3b73-4835-93d6-be3965cefbf1", 49, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id8218c65a-3b73-4835-93d6-be3965cefbf1", "id8218c65a-3b73-4835-93d6-be3965cefbf1", 49, "ct-topic-H3", 0]);
MGCAddTopic(["id95c36494-11a8-4cbf-bc06-e0938922117e", "id8218c65a-3b73-4835-93d6-be3965cefbf1__id95c36494-11a8-4cbf-bc06-e0938922117e", 49, "cmd-arg", 0]);
MGCAddTopic(["idb9bbbfeb-ef39-47e8-b9d7-54a54273a711", "id8218c65a-3b73-4835-93d6-be3965cefbf1__idb9bbbfeb-ef39-47e8-b9d7-54a54273a711", 49, "cmd-arg", 0]);
MGCAddTopic(["pmatchadd_pattern_orient", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b", 50, "", 0]);
MGCAddTopic(["Orientations for add_pattern_orient", "id2d7444ad-b902-436f-9ff4-5c2d54d48083", 50, "", 0]);
MGCAddTopic(["id479271f1-85c8-4c9c-94a1-6bb80e327a4b", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b", 50, "", 0]);
MGCAddTopic(["id02b97769-5256-43ac-8a55-eedfcf2e154a", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b__id02b97769-5256-43ac-8a55-eedfcf2e154a", 50, "", 0]);
MGCAddTopic(["idd6ffa415-4728-472c-a2fc-b6d337728b2e", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b__idd6ffa415-4728-472c-a2fc-b6d337728b2e", 50, "", 0]);
MGCAddTopic(["id2d7444ad-b902-436f-9ff4-5c2d54d48083", "id479271f1-85c8-4c9c-94a1-6bb80e327a4b__id2d7444ad-b902-436f-9ff4-5c2d54d48083", 50, "", 0]);
MGCAddTopic(["pmatchadd_properties", "id4ff986b8-ed29-4342-93b3-a5b2d82dfa99", 51, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id4ff986b8-ed29-4342-93b3-a5b2d82dfa99", "id4ff986b8-ed29-4342-93b3-a5b2d82dfa99", 51, "ct-topic-H3", 0]);
MGCAddTopic(["id2ffb7864-a072-48ca-acc3-af92b2d6b603", "id4ff986b8-ed29-4342-93b3-a5b2d82dfa99__id2ffb7864-a072-48ca-acc3-af92b2d6b603", 51, "cmd-arg", 0]);
MGCAddTopic(["iddbe1f810-8395-496a-b8b9-5c7df6611f0d", "id4ff986b8-ed29-4342-93b3-a5b2d82dfa99__iddbe1f810-8395-496a-b8b9-5c7df6611f0d", 51, "cmd-arg", 0]);
MGCAddTopic(["pmatchadd_text_attribute", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d", 52, "", 0]);
MGCAddTopic(["id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d", 52, "", 0]);
MGCAddTopic(["id181f601f-f8a2-44f5-b4ee-8442ab4dc0cf", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d__id181f601f-f8a2-44f5-b4ee-8442ab4dc0cf", 52, "", 0]);
MGCAddTopic(["id3e70e6d3-4eee-4c2a-8729-a8532420eb72", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d__id3e70e6d3-4eee-4c2a-8729-a8532420eb72", 52, "", 0]);
MGCAddTopic(["id11fec108-8064-4394-81cb-d332c4b048f8", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d__id11fec108-8064-4394-81cb-d332c4b048f8", 52, "", 0]);
MGCAddTopic(["id6e7d9c77-a9f0-4676-959e-991b1202102e", "id5a9afafb-9a9b-40a8-bc9a-88be9f37d23d__id6e7d9c77-a9f0-4676-959e-991b1202102e", 52, "", 0]);
MGCAddTopic(["pmatchdelete_constraint_label", "idfdb43944-ba19-46cf-ad78-dd32203e2639", 53, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idfdb43944-ba19-46cf-ad78-dd32203e2639", "idfdb43944-ba19-46cf-ad78-dd32203e2639", 53, "ct-topic-H3", 0]);
MGCAddTopic(["id37e6ce70-d360-4345-b0c4-ea676189878a", "idfdb43944-ba19-46cf-ad78-dd32203e2639__id37e6ce70-d360-4345-b0c4-ea676189878a", 53, "cmd-arg", 0]);
MGCAddTopic(["idfb628865-254d-4b73-90af-34fe7b2cd52c", "idfdb43944-ba19-46cf-ad78-dd32203e2639__idfb628865-254d-4b73-90af-34fe7b2cd52c", 53, "cmd-argumentlist", 0]);
MGCAddTopic(["id9f2bb2e7-2042-4fca-812b-0bb336e68b96", "idfdb43944-ba19-46cf-ad78-dd32203e2639__id9f2bb2e7-2042-4fca-812b-0bb336e68b96", 53, "cmd-argumentlist", 0]);
MGCAddTopic(["id97941608-2dc3-40ad-afae-8e7ea5b2ecfc", "idfdb43944-ba19-46cf-ad78-dd32203e2639__id97941608-2dc3-40ad-afae-8e7ea5b2ecfc", 53, "cmd-argumentlist", 0]);
MGCAddTopic(["pmatchdelete_keys", "id7603967a-b752-4483-910b-b42fbc702aee", 54, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id7603967a-b752-4483-910b-b42fbc702aee", "id7603967a-b752-4483-910b-b42fbc702aee", 54, "ct-topic-H3", 0]);
MGCAddTopic(["ida0406c0c-aa5b-4b7a-b224-53e3d165abd1", "id7603967a-b752-4483-910b-b42fbc702aee__ida0406c0c-aa5b-4b7a-b224-53e3d165abd1", 54, "cmd-arg", 0]);
MGCAddTopic(["iddafb6ba0-8291-4315-bcba-dba6c687ff38", "id7603967a-b752-4483-910b-b42fbc702aee__iddafb6ba0-8291-4315-bcba-dba6c687ff38", 54, "cmd-arg", 0]);
MGCAddTopic(["pmatchdelete_properties", "id7102b191-b9cd-43de-b650-d604b73ccfda", 55, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id7102b191-b9cd-43de-b650-d604b73ccfda", "id7102b191-b9cd-43de-b650-d604b73ccfda", 55, "ct-topic-H3", 0]);
MGCAddTopic(["id0a3050a9-25f4-448c-b271-88aa878d37a8", "id7102b191-b9cd-43de-b650-d604b73ccfda__id0a3050a9-25f4-448c-b271-88aa878d37a8", 55, "cmd-arg", 0]);
MGCAddTopic(["id9d766cc3-3384-4649-a0a4-06b533c07171", "id7102b191-b9cd-43de-b650-d604b73ccfda__id9d766cc3-3384-4649-a0a4-06b533c07171", 55, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_cglobal", "id336fff74-f6f8-4183-87ac-5cc05676931f", 56, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id336fff74-f6f8-4183-87ac-5cc05676931f", "id336fff74-f6f8-4183-87ac-5cc05676931f", 56, "ct-topic-H3", 0]);
MGCAddTopic(["id4d20a179-1236-4f09-b0ff-2d7893dcb060", "id336fff74-f6f8-4183-87ac-5cc05676931f__id4d20a179-1236-4f09-b0ff-2d7893dcb060", 56, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_constraints", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4", 57, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4", 57, "ct-topic-H3", 0]);
MGCAddTopic(["id4d20a179-1236-4f09-b0ff-2d7893dcb060", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__id4d20a179-1236-4f09-b0ff-2d7893dcb060", 57, "cmd-arg", 0]);
MGCAddTopic(["idef483405-4e14-41fe-a50c-44663f55afde", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idef483405-4e14-41fe-a50c-44663f55afde", 57, "cmd-argumentlist", 0]);
MGCAddTopic(["idefaa42a5-5411-4042-9eba-54aec7823a28", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idefaa42a5-5411-4042-9eba-54aec7823a28", 57, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id18eda567-4adf-4c5d-a5b8-c02df1142cf6", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__id18eda567-4adf-4c5d-a5b8-c02df1142cf6", 57, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["idbc28f52b-7225-4a41-a78b-d9ebe9e5ade1", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idbc28f52b-7225-4a41-a78b-d9ebe9e5ade1", 57, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["idd0542324-6392-4232-b908-c7fa2ad409ec", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idd0542324-6392-4232-b908-c7fa2ad409ec", 57, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id5b1ab251-8925-4cd7-b824-7b723098c20c", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__id5b1ab251-8925-4cd7-b824-7b723098c20c", 57, "cmd-retvals-ul-1", 0]);
MGCAddTopic(["id572cb4dd-3fd1-4056-80b3-5feeddc6e0c8", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__id572cb4dd-3fd1-4056-80b3-5feeddc6e0c8", 57, "ct-topic-H3", 0]);
MGCAddTopic(["idb9c96a88-3b50-49b5-a83a-23b46cac3f68", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idb9c96a88-3b50-49b5-a83a-23b46cac3f68", 57, "ct-topic-H3", 0]);
MGCAddTopic(["ide61d009d-e570-4c7a-a080-98d8aa835659", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__ide61d009d-e570-4c7a-a080-98d8aa835659", 57, "ct-topic-H3", 0]);
MGCAddTopic(["idd3be26cb-53b2-4f27-a837-e4dfd714b487", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__idd3be26cb-53b2-4f27-a837-e4dfd714b487", 57, "ct-topic-H3", 0]);
MGCAddTopic(["id794bd210-ae59-4e5f-91fb-d25e963649f5", "idc6f9b0bf-cdd9-4b0f-b283-058636b5f1d4__id794bd210-ae59-4e5f-91fb-d25e963649f5", 57, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchget_constraint_label", "idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8", 58, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8", "idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8", 58, "ct-topic-H3", 0]);
MGCAddTopic(["idd714ae1e-bfa9-4ce2-9e75-29dfc44297d9", "idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8__idd714ae1e-bfa9-4ce2-9e75-29dfc44297d9", 58, "cmd-arg", 0]);
MGCAddTopic(["id72fb7ee8-df6e-4746-bbdb-4138d1fc1ebb", "idd5d4d83b-8c0d-4cb6-8431-3717ccb48ae8__id72fb7ee8-df6e-4746-bbdb-4138d1fc1ebb", 58, "cmd-argumentlist", 0]);
MGCAddTopic(["pmatchget_int_attr", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d", 59, "", 0]);
MGCAddTopic(["idf03dcae7-42a8-408d-a82a-1998a6e0d54d", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d", 59, "", 0]);
MGCAddTopic(["idf1972108-2ef0-4088-9d5d-750cbde78826", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d__idf1972108-2ef0-4088-9d5d-750cbde78826", 59, "", 0]);
MGCAddTopic(["id592d59b8-24b6-4dfd-92d4-72c1fd5d532b", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d__id592d59b8-24b6-4dfd-92d4-72c1fd5d532b", 59, "", 0]);
MGCAddTopic(["id5078df62-1142-4919-a2ec-96546436e41c", "idf03dcae7-42a8-408d-a82a-1998a6e0d54d__id5078df62-1142-4919-a2ec-96546436e41c", 59, "", 0]);
MGCAddTopic(["pmatchget_keys", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09", 60, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id2ee1033e-4897-48ee-890e-c2ef4a22fc09", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09", 60, "ct-topic-H3", 0]);
MGCAddTopic(["id4d20a179-1236-4f09-b0ff-2d7893dcb060", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09__id4d20a179-1236-4f09-b0ff-2d7893dcb060", 60, "cmd-arg", 0]);
MGCAddTopic(["idcbd4574e-ecbd-49ea-97dd-5b020ace842b", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09__idcbd4574e-ecbd-49ea-97dd-5b020ace842b", 60, "cmd-argdesc", 0]);
MGCAddTopic(["id21835f3a-80ff-4beb-b04e-4c337e6245a1", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09__id21835f3a-80ff-4beb-b04e-4c337e6245a1", 60, "cmd-argdesc", 0]);
MGCAddTopic(["idd4fc824c-658b-42b1-8755-7c66d903f7cc", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09__idd4fc824c-658b-42b1-8755-7c66d903f7cc", 60, "ct-topic-H3", 0]);
MGCAddTopic(["id5f335472-ffc9-4480-9917-202343f4b92d", "id2ee1033e-4897-48ee-890e-c2ef4a22fc09__id5f335472-ffc9-4480-9917-202343f4b92d", 60, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchget_library_attribute", "id72204289-9c3c-4595-9e88-266b443aefe3", 61, "", 0]);
MGCAddTopic(["id72204289-9c3c-4595-9e88-266b443aefe3", "id72204289-9c3c-4595-9e88-266b443aefe3", 61, "", 0]);
MGCAddTopic(["id5fa5e56c-e18d-4635-bf4c-62343c8c9b5e", "id72204289-9c3c-4595-9e88-266b443aefe3__id5fa5e56c-e18d-4635-bf4c-62343c8c9b5e", 61, "", 0]);
MGCAddTopic(["idee2de9e9-81b5-4231-858e-6251e3792d21", "id72204289-9c3c-4595-9e88-266b443aefe3__idee2de9e9-81b5-4231-858e-6251e3792d21", 61, "", 0]);
MGCAddTopic(["pmatchget_pattern_orient", "id3a3cbec9-496e-42df-b8f4-e63e59fb0aea", 62, "", 0]);
MGCAddTopic(["id3a3cbec9-496e-42df-b8f4-e63e59fb0aea", "id3a3cbec9-496e-42df-b8f4-e63e59fb0aea", 62, "", 0]);
MGCAddTopic(["ida93cf554-11a7-4137-9528-294279bac59d", "id3a3cbec9-496e-42df-b8f4-e63e59fb0aea__ida93cf554-11a7-4137-9528-294279bac59d", 62, "", 0]);
MGCAddTopic(["id47e18f7f-f353-4790-bc9a-9c9d9e4af7d1", "id3a3cbec9-496e-42df-b8f4-e63e59fb0aea__id47e18f7f-f353-4790-bc9a-9c9d9e4af7d1", 62, "", 0]);
MGCAddTopic(["pmatchget_properties", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e", 63, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id002ee4c0-56f8-4959-80fd-3d24ecb3c67e", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e", 63, "ct-topic-H3", 0]);
MGCAddTopic(["id45f7aaa1-3054-4ea7-982a-af948d1ff0c2", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e__id45f7aaa1-3054-4ea7-982a-af948d1ff0c2", 63, "cmd-arg", 0]);
MGCAddTopic(["id3b73d8e6-a431-4126-b17f-45cfc1d51033", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e__id3b73d8e6-a431-4126-b17f-45cfc1d51033", 63, "cmd-argdesc", 0]);
MGCAddTopic(["id7ff1ad3f-2e33-455d-809e-ff9f3884733a", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e__id7ff1ad3f-2e33-455d-809e-ff9f3884733a", 63, "cmd-argdesc", 0]);
MGCAddTopic(["id600998ab-1dcb-4426-baa0-8aa40faaef20", "id002ee4c0-56f8-4959-80fd-3d24ecb3c67e__id600998ab-1dcb-4426-baa0-8aa40faaef20", 63, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_property_value", "id984bd978-4140-4148-8af0-dd605969624c", 64, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id984bd978-4140-4148-8af0-dd605969624c", "id984bd978-4140-4148-8af0-dd605969624c", 64, "ct-topic-H3", 0]);
MGCAddTopic(["id66ed9957-76df-43fd-bd8f-2553c76ec9d6", "id984bd978-4140-4148-8af0-dd605969624c__id66ed9957-76df-43fd-bd8f-2553c76ec9d6", 64, "cmd-arg", 0]);
MGCAddTopic(["id51d5b638-d906-4950-9797-e09de433ff15", "id984bd978-4140-4148-8af0-dd605969624c__id51d5b638-d906-4950-9797-e09de433ff15", 64, "cmd-arg", 0]);
MGCAddTopic(["pmatchget_text_attribute", "id3b9aed5c-c979-4384-a50e-24d23d7acb80", 65, "", 0]);
MGCAddTopic(["id3b9aed5c-c979-4384-a50e-24d23d7acb80", "id3b9aed5c-c979-4384-a50e-24d23d7acb80", 65, "", 0]);
MGCAddTopic(["idf1972108-2ef0-4088-9d5d-750cbde78826", "id3b9aed5c-c979-4384-a50e-24d23d7acb80__idf1972108-2ef0-4088-9d5d-750cbde78826", 65, "", 0]);
MGCAddTopic(["id592d59b8-24b6-4dfd-92d4-72c1fd5d532b", "id3b9aed5c-c979-4384-a50e-24d23d7acb80__id592d59b8-24b6-4dfd-92d4-72c1fd5d532b", 65, "", 0]);
MGCAddTopic(["id5078df62-1142-4919-a2ec-96546436e41c", "id3b9aed5c-c979-4384-a50e-24d23d7acb80__id5078df62-1142-4919-a2ec-96546436e41c", 65, "", 0]);
MGCAddTopic(["pmatchset_cglobal", "id97f63ea8-9a72-468d-a07a-9a0d573d800e", 66, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id97f63ea8-9a72-468d-a07a-9a0d573d800e", "id97f63ea8-9a72-468d-a07a-9a0d573d800e", 66, "ct-topic-H3", 0]);
MGCAddTopic(["id9d45fd14-de36-4d2d-a06a-91074596d6a8", "id97f63ea8-9a72-468d-a07a-9a0d573d800e__id9d45fd14-de36-4d2d-a06a-91074596d6a8", 66, "cmd-arg", 0]);
MGCAddTopic(["id92cd3558-014d-478a-bc91-30b137945263", "id97f63ea8-9a72-468d-a07a-9a0d573d800e__id92cd3558-014d-478a-bc91-30b137945263", 66, "cmd-arg", 0]);
MGCAddTopic(["id03e26e8c-9bff-4aec-b211-966ea53b367f", "id97f63ea8-9a72-468d-a07a-9a0d573d800e__id03e26e8c-9bff-4aec-b211-966ea53b367f", 66, "ct-topic-H3", 0]);
MGCAddTopic(["idfdf346c8-1881-47cc-b4d2-5922c6c7db88", "id97f63ea8-9a72-468d-a07a-9a0d573d800e__idfdf346c8-1881-47cc-b4d2-5922c6c7db88", 66, "ct-topic-H3", 0]);
MGCAddTopic(["pmatchset_constraint_label", "id40dbc144-0847-49be-9225-dcbb655cd6c4", 67, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id40dbc144-0847-49be-9225-dcbb655cd6c4", "id40dbc144-0847-49be-9225-dcbb655cd6c4", 67, "ct-topic-H3", 0]);
MGCAddTopic(["idad6c46c3-9386-44b9-b9b6-8a25c3d87ff3", "id40dbc144-0847-49be-9225-dcbb655cd6c4__idad6c46c3-9386-44b9-b9b6-8a25c3d87ff3", 67, "cmd-arg", 0]);
MGCAddTopic(["iddccef495-b281-4eb3-88dd-6c28d4ebeece", "id40dbc144-0847-49be-9225-dcbb655cd6c4__iddccef495-b281-4eb3-88dd-6c28d4ebeece", 67, "cmd-argumentlist", 0]);
MGCAddTopic(["idcf730507-2622-4409-b0a6-1d2f4f734044", "id40dbc144-0847-49be-9225-dcbb655cd6c4__idcf730507-2622-4409-b0a6-1d2f4f734044", 67, "cmd-argumentlist", 0]);
MGCAddTopic(["pmatchset_library_attribute", "ide354257f-cef4-4d90-9b72-c44f07f7c6db", 68, "", 0]);
MGCAddTopic(["ide354257f-cef4-4d90-9b72-c44f07f7c6db", "ide354257f-cef4-4d90-9b72-c44f07f7c6db", 68, "", 0]);
MGCAddTopic(["id10647bb1-6ce4-4fb9-b1d8-c887e1b741ec", "ide354257f-cef4-4d90-9b72-c44f07f7c6db__id10647bb1-6ce4-4fb9-b1d8-c887e1b741ec", 68, "", 0]);
MGCAddTopic(["id95eff5f5-8d19-4dd8-9e70-5bdbe9418b54", "ide354257f-cef4-4d90-9b72-c44f07f7c6db__id95eff5f5-8d19-4dd8-9e70-5bdbe9418b54", 68, "", 0]);
MGCAddTopic(["idcc479bfb-0473-4111-aa00-b8751f6a60d4", "ide354257f-cef4-4d90-9b72-c44f07f7c6db__idcc479bfb-0473-4111-aa00-b8751f6a60d4", 68, "", 0]);
MGCAddTopic(["pmatchset_pattern_orient", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6", 69, "", 0]);
MGCAddTopic(["Orientations for set_pattern_orient", "idf77833bb-94f6-4b67-8ffa-6c984cb6f4bd", 69, "", 0]);
MGCAddTopic(["ida68f1c39-dacc-44e8-8558-e2d639a48ee6", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6", 69, "", 0]);
MGCAddTopic(["id97c494a8-19fd-4e24-8903-1c7da649d9ab", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6__id97c494a8-19fd-4e24-8903-1c7da649d9ab", 69, "", 0]);
MGCAddTopic(["id9a86ee0f-b72d-49f1-857f-f1e8adc3a48d", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6__id9a86ee0f-b72d-49f1-857f-f1e8adc3a48d", 69, "", 0]);
MGCAddTopic(["idf77833bb-94f6-4b67-8ffa-6c984cb6f4bd", "ida68f1c39-dacc-44e8-8558-e2d639a48ee6__idf77833bb-94f6-4b67-8ffa-6c984cb6f4bd", 69, "", 0]);
MGCAddTopic(["Groups and Filters", "idaa7df14a-419d-4aca-a5f6-d2db1350c965", 70, "mgcsec-H2", 0]);
MGCAddTopic(["idaa7df14a-419d-4aca-a5f6-d2db1350c965", "idaa7df14a-419d-4aca-a5f6-d2db1350c965", 70, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchfilter_add", "id4e7af80a-951b-4553-949f-aedefe915702", 71, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id4e7af80a-951b-4553-949f-aedefe915702", "id4e7af80a-951b-4553-949f-aedefe915702", 71, "ct-topic-H3", 0]);
MGCAddTopic(["idb503ee95-5a4e-4978-ab9b-d623f094e6ca", "id4e7af80a-951b-4553-949f-aedefe915702__idb503ee95-5a4e-4978-ab9b-d623f094e6ca", 71, "cmd-arg", 0]);
MGCAddTopic(["id515a7011-f8af-40b0-850e-92a231ce1654", "id4e7af80a-951b-4553-949f-aedefe915702__id515a7011-f8af-40b0-850e-92a231ce1654", 71, "cmd-arg", 0]);
MGCAddTopic(["idc4fbbe9b-b274-4ce0-a9e4-2896f5c54ae3", "id4e7af80a-951b-4553-949f-aedefe915702__idc4fbbe9b-b274-4ce0-a9e4-2896f5c54ae3", 71, "cmd-argdesc", 0]);
MGCAddTopic(["iddf146e84-ef75-4853-bc31-9ab23858abf5", "id4e7af80a-951b-4553-949f-aedefe915702__iddf146e84-ef75-4853-bc31-9ab23858abf5", 71, "cmd-argdesc", 0]);
MGCAddTopic(["id5044133f-0fc4-4309-9d9e-bfd15b3482ef", "id4e7af80a-951b-4553-949f-aedefe915702__id5044133f-0fc4-4309-9d9e-bfd15b3482ef", 71, "cmd-argdesc", 0]);
MGCAddTopic(["pmatchfilter_create", "id8a103021-9002-4d64-979b-0334add053dd", 72, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id8a103021-9002-4d64-979b-0334add053dd", "id8a103021-9002-4d64-979b-0334add053dd", 72, "ct-topic-H3", 0]);
MGCAddTopic(["id164d0c48-af5b-4f18-8604-d8b6ed172ae3", "id8a103021-9002-4d64-979b-0334add053dd__id164d0c48-af5b-4f18-8604-d8b6ed172ae3", 72, "cmd-arg", 0]);
MGCAddTopic(["pmatchfilter_delete", "id668c5238-3af0-4ceb-93ae-86f00306315e", 73, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id668c5238-3af0-4ceb-93ae-86f00306315e", "id668c5238-3af0-4ceb-93ae-86f00306315e", 73, "ct-topic-H3", 0]);
MGCAddTopic(["id17ce8ce6-be87-4935-a157-9262a1743616", "id668c5238-3af0-4ceb-93ae-86f00306315e__id17ce8ce6-be87-4935-a157-9262a1743616", 73, "cmd-arg", 0]);
MGCAddTopic(["pmatchfilter_reset", "id92c7ab8e-76ff-4bc1-97f2-520a378df3c3", 74, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id92c7ab8e-76ff-4bc1-97f2-520a378df3c3", "id92c7ab8e-76ff-4bc1-97f2-520a378df3c3", 74, "ct-topic-H3", 0]);
MGCAddTopic(["id6e17a9a0-bd51-401f-aa1c-b632806a4f64", "id92c7ab8e-76ff-4bc1-97f2-520a378df3c3__id6e17a9a0-bd51-401f-aa1c-b632806a4f64", 74, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_add_filtered", "id6e042ea4-967b-4551-afb5-36bcd11f31d7", 75, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id6e042ea4-967b-4551-afb5-36bcd11f31d7", "id6e042ea4-967b-4551-afb5-36bcd11f31d7", 75, "ct-topic-H3", 0]);
MGCAddTopic(["id1bf8d4d4-774e-4418-aafa-5f32b3f36c6e", "id6e042ea4-967b-4551-afb5-36bcd11f31d7__id1bf8d4d4-774e-4418-aafa-5f32b3f36c6e", 75, "cmd-arg", 0]);
MGCAddTopic(["id18cd7da6-9fc1-4c0b-86ee-32b0305cc82f", "id6e042ea4-967b-4551-afb5-36bcd11f31d7__id18cd7da6-9fc1-4c0b-86ee-32b0305cc82f", 75, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_add_pattern", "id9c960710-43c3-4a9c-90e8-7361aa87e321", 76, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id9c960710-43c3-4a9c-90e8-7361aa87e321", "id9c960710-43c3-4a9c-90e8-7361aa87e321", 76, "ct-topic-H3", 0]);
MGCAddTopic(["id3fdb1d7e-93a4-4318-8d9c-eba36096b8d6", "id9c960710-43c3-4a9c-90e8-7361aa87e321__id3fdb1d7e-93a4-4318-8d9c-eba36096b8d6", 76, "cmd-arg", 0]);
MGCAddTopic(["idb56099bd-4e68-414d-a2c0-7cc053afd405", "id9c960710-43c3-4a9c-90e8-7361aa87e321__idb56099bd-4e68-414d-a2c0-7cc053afd405", 76, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_create", "idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f", 77, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f", "idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f", 77, "ct-topic-H3", 0]);
MGCAddTopic(["id36e5a17f-b269-4ac8-aa8f-ba0d82c0524e", "idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f__id36e5a17f-b269-4ac8-aa8f-ba0d82c0524e", 77, "cmd-arg", 0]);
MGCAddTopic(["id69093f9e-82c2-4a0a-a606-c92f132d3515", "idcaf6bb64-6dc6-41eb-b9fb-1e00aad2822f__id69093f9e-82c2-4a0a-a606-c92f132d3515", 77, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_delete", "id0ddcbb39-b7e6-4b18-8b51-114a2ce28111", 78, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id0ddcbb39-b7e6-4b18-8b51-114a2ce28111", "id0ddcbb39-b7e6-4b18-8b51-114a2ce28111", 78, "ct-topic-H3", 0]);
MGCAddTopic(["idd708811f-b4c7-4c14-8eaf-6d60614ba104", "id0ddcbb39-b7e6-4b18-8b51-114a2ce28111__idd708811f-b4c7-4c14-8eaf-6d60614ba104", 78, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_reset", "idd7b9afde-1422-4cc7-b832-161fdefd96f2", 79, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idd7b9afde-1422-4cc7-b832-161fdefd96f2", "idd7b9afde-1422-4cc7-b832-161fdefd96f2", 79, "ct-topic-H3", 0]);
MGCAddTopic(["idacdba94a-c907-4053-9b55-ee5af439332b", "idd7b9afde-1422-4cc7-b832-161fdefd96f2__idacdba94a-c907-4053-9b55-ee5af439332b", 79, "cmd-arg", 0]);
MGCAddTopic(["pmatchgroup_save", "id66237f2e-438e-4c61-af71-0314e8dbe866", 80, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id66237f2e-438e-4c61-af71-0314e8dbe866", "id66237f2e-438e-4c61-af71-0314e8dbe866", 80, "ct-topic-H3", 0]);
MGCAddTopic(["idcec2025b-da8e-4a02-b3a0-e47a0a3072ff", "id66237f2e-438e-4c61-af71-0314e8dbe866__idcec2025b-da8e-4a02-b3a0-e47a0a3072ff", 80, "cmd-arg", 0]);
MGCAddTopic(["id4d2658af-176e-4160-9955-ecabfc05d78f", "id66237f2e-438e-4c61-af71-0314e8dbe866__id4d2658af-176e-4160-9955-ecabfc05d78f", 80, "cmd-arg", 0]);
MGCAddTopic(["pmatchlist_group_patterns", "idab620a18-3fa1-40f9-bee7-0940a7e3b363", 81, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["idab620a18-3fa1-40f9-bee7-0940a7e3b363", "idab620a18-3fa1-40f9-bee7-0940a7e3b363", 81, "ct-topic-H3", 0]);
MGCAddTopic(["id552dbcf8-ace6-4fd4-951e-ab678680b113", "idab620a18-3fa1-40f9-bee7-0940a7e3b363__id552dbcf8-ace6-4fd4-951e-ab678680b113", 81, "cmd-arg", 0]);
MGCAddTopic(["Help Command", "id7c42babd-9d62-4f4d-bf62-664a98469eaf", 82, "mgcsec-H2", 0]);
MGCAddTopic(["id7c42babd-9d62-4f4d-bf62-664a98469eaf", "id7c42babd-9d62-4f4d-bf62-664a98469eaf", 82, "ct-topic-H2", 0]);
MGCAddTopic(["pmatchhelp", "id50679ded-decc-4a0f-a906-f5700b166c51", 83, "cmd-z.Cmd/Func", 0]);
MGCAddTopic(["id50679ded-decc-4a0f-a906-f5700b166c51", "id50679ded-decc-4a0f-a906-f5700b166c51", 83, "ct-topic-H3", 0]);
MGCAddTopic(["id89ad9bf9-a511-439d-8dab-05e1065161e3", "id50679ded-decc-4a0f-a906-f5700b166c51__id89ad9bf9-a511-439d-8dab-05e1065161e3", 83, "cmd-arg", 0]);
MGCAddTopic(["Third-Party Information", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 84, "", 0]);
MGCAddTopic(["id6cba59fd-c0f7-4513-b3e9-78d1422af93e", "id6cba59fd-c0f7-4513-b3e9-78d1422af93e", 84, "", 0]);

//
// Load index data

//
// Load snippet data
MGCAddSnippet(1, "Title Page");
MGCAddSnippet(2, "List of Figures");
MGCAddSnippet(3, "List of Tables");
MGCAddSnippet(4, "");
MGCAddSnippet(5, "You can use the Calibre Pattern Matching Tcl-based API batch commands to access and modify pattern libraries without using the Calibre Pattern Matching GUI. Using the pattern matching API improves the loading time of large pattern libraries when compared with the Calibre Pattern Matching GUI.");
MGCAddSnippet(6, "The Calibre Pattern Matching tool includes Tcl API commands that read and modify pattern libraries. You can develop Tcl procedures that automate tasks that would be repetitive to perform using the Calibre Pattern Matching GUI. Pattern matching API scripts are run using the pdl_lib_mgr prompt utility.");
MGCAddSnippet(7, "There are licensing and environment variable requirements for the Calibre Pattern Matching API. ");
MGCAddSnippet(8, "The command descriptions use font properties and several metacharacters to document the command syntax.");
MGCAddSnippet(9, "You can run Calibre Pattern Matching Tcl API commands interactively from the API command prompt or execute a Tcl script that contains the API commands. ");
MGCAddSnippet(10, "The example starts an interactive session of the Pattern Matching Tcl API, loads a pattern matching library, and outputs the number of patterns in the library.");
MGCAddSnippet(11, "The script in this example loads a pattern matching library and outputs the number of patterns in the library.");
MGCAddSnippet(12, "If you are not familiar with Tcl coding, this section described basics, such as command syntax and special characters. ");
MGCAddSnippet(13, "All supported API batch commands available in Calibre pattern matching are arranged according to functional areas, such as pattern library commands, pattern data retrieval, and pattern markers. ");
MGCAddSnippet(14, "A pattern library is a collection of one or more patterns. A pattern defines the polygons Calibre searches for in a pattern matching run. When the pattern library is complete, the pattern library is compiled into an SVRF DMACRO pattern file for use in the pattern matching run.");
MGCAddSnippet(15, "Create a pattern library and save it to the specified file path.");
MGCAddSnippet(16, "Get all pattern layer names in a pattern library.");
MGCAddSnippet(17, "Get all pattern names from a pattern library.");
MGCAddSnippet(18, "Gets the list of source layer numbers for a pattern library, or the source layer number for a specified pattern layer. The source layer number is the layout layer number associated with a pattern layer. ");
MGCAddSnippet(19, "Load a pattern library for reading or both reading and writing.");
MGCAddSnippet(20, "Delete a pattern from a pattern library.");
MGCAddSnippet(21, "Rename the layers in a pattern library.");
MGCAddSnippet(22, "Rename the specified pattern.");
MGCAddSnippet(23, "Specify the active library.");
MGCAddSnippet(24, "Set the source layer number for a specified pattern layer. The command overwrites any previously specified source layer number. The source layer number is the layout layer number associated with a pattern layer. ");
MGCAddSnippet(25, "Update the specified pattern with current pattern data. ");
MGCAddSnippet(26, "These commands return pattern data for later processing.");
MGCAddSnippet(27, "Check a pattern for compilation errors and warnings.");
MGCAddSnippet(28, "Get the pattern class for the specified pattern.");
MGCAddSnippet(29, "Load a single pattern from a pattern library.");
MGCAddSnippet(30, "Get the name of the pattern for the specified pattern handle.");
MGCAddSnippet(31, "Get the precision of a pattern.");
MGCAddSnippet(32, "These commands enable the processing of pattern marker layers. Marker layers are output layers generated by the pattern engine for pattern matches. Markers can be added to a pattern to show where a match was found.");
MGCAddSnippet(33, "Add a custom marker that is undersized from the pattern bounding box.");
MGCAddSnippet(34, "Add a rectangular custom marker inside the pattern bounding box.");
MGCAddSnippet(35, "Add a marker to a pattern. Marker types of bbox, bbox10, drawn, or matched can be specified. ");
MGCAddSnippet(36, "Delete a marker from a pattern. ");
MGCAddSnippet(37, "Get the list of markers in a pattern. The information returned for each marker includes the marker name, corresponding layer number, and marker type.");
MGCAddSnippet(38, "Rename a specified marker in a pattern.");
MGCAddSnippet(39, "There commands process pattern geometry vertices and edges.");
MGCAddSnippet(40, "Get the list of edges for a specified pattern layer.");
MGCAddSnippet(41, "Get the list of vertex IDs and coordinates for a specified pattern layer");
MGCAddSnippet(42, "The extent layer defines the borders of the pattern and isolates the pattern from surrounding geometries. Extents can be defined for the pattern as a whole or for individual layers.");
MGCAddSnippet(43, "Get the extent type for the pattern or for a pattern layer.");
MGCAddSnippet(44, "Get the coordinates of the bounding box of the extent for a pattern or specified pattern layer.");
MGCAddSnippet(45, "Sizes up the extent of the specified layer.");
MGCAddSnippet(46, "Change the custom extent of a specified layer into an auto extent. ");
MGCAddSnippet(47, "These commands retrieve pattern properties, keys, and constraints.");
MGCAddSnippet(48, "Adds an integer attribute to the specified pattern.");
MGCAddSnippet(49, "Add a specified list of keys to a pattern in the active library.");
MGCAddSnippet(50, "Specifies to match the pattern in the given orientation. All other orientation values for the pattern are unchanged. ");
MGCAddSnippet(51, "Adds a specified list of properties to a pattern in the active library.");
MGCAddSnippet(52, "Adds a text attribute to the specified pattern.");
MGCAddSnippet(53, "Deletes the label for a specified constraint, or deletes all instances of a specified label in the pattern. ");
MGCAddSnippet(54, "Deletes a specified list of keys from a pattern in the active library.");
MGCAddSnippet(55, "Deletes specified properties from a pattern in the active library.");
MGCAddSnippet(56, "Get the value of the cglobal constraint for a pattern.");
MGCAddSnippet(57, "Gets a list of the constraints in a pattern.");
MGCAddSnippet(58, "Gets the label for a constraint.");
MGCAddSnippet(59, "Gets the value of an integer attribute for a pattern. ");
MGCAddSnippet(60, "Gets the list of keys for a pattern.");
MGCAddSnippet(61, "Gets the value of a global attribute with the specified name.");
MGCAddSnippet(62, "Gets the orientation settings for a pattern. ");
MGCAddSnippet(63, "Gets the properties in a pattern.The pattern may be specified with a pattern handle or a pattern name.");
MGCAddSnippet(64, "Gets the value of the specified property in a pattern.");
MGCAddSnippet(65, "Gets the value of the specified text attribute for a pattern.");
MGCAddSnippet(66, "Sets the global constraint (cglobal) value for a pattern. The command overwrites any previously specified cglobal value. ");
MGCAddSnippet(67, "Defines a label for a constraint.");
MGCAddSnippet(68, "Sets the value of a global (library-level) attribute.");
MGCAddSnippet(69, "Specifies to match the pattern in the given orientation only. All other orientation values are set to 0 (not matched). ");
MGCAddSnippet(70, "Group commands are used to collect and manipulate a group of patterns that are a subset of the patterns in a pattern library. Pattern filters select patterns with specific keys and/or properties. ");
MGCAddSnippet(71, "Adds key name or property conditions to a pattern filter.");
MGCAddSnippet(72, "Creates a pattern filter.");
MGCAddSnippet(73, "Deletes a pattern filter.");
MGCAddSnippet(74, "Erases all filter settings for a pattern filter.");
MGCAddSnippet(75, "Applies the specified filter to the library associated with the pattern group and adds the selected patterns to the group.");
MGCAddSnippet(76, "Adds a pattern to a group.");
MGCAddSnippet(77, "Creates a pattern group.");
MGCAddSnippet(78, "Deletes the specified pattern group.");
MGCAddSnippet(79, "Deletes all patterns in a pattern group.");
MGCAddSnippet(80, "Saves the patterns in a pattern group to a new pattern library.");
MGCAddSnippet(81, "Lists all patterns in a pattern group.");
MGCAddSnippet(82, "This command lists all of the available API commands. If a command name is specified, it prints a help message about this command.");
MGCAddSnippet(83, "Gets usage information for a API command or outputs the list of API commands.");
MGCAddSnippet(84, "Details on open source and third-party software that may be included with this product are available in the <your_software_installation_location>/legal directory.");

//
//
MGCFrame.BookData[handle]['DataLoaded'] = true;
//
//

// Load search data
//
AddSWrd('c', '$constr', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('e', '$edges', [39,5]);
AddSWrd('f', '$first_pat_name', [19,5 , 21,5]);
AddSWrd('h', '$handle', [68,5]);
AddSWrd('k', '$key_names', [48,5]);
AddSWrd('k', '$keys', [48,5 , 59,10]);
AddSWrd('l', '$label', [66,5 , 52,5 , 57,5]);
AddSWrd('l', '$lay_2', [14,5]);
AddSWrd('l', '$lib_attr', [67,5]);
AddSWrd('l', '$lib_attr_out', [60,5]);
AddSWrd('m', '$myfil', [70,15]);
AddSWrd('m', '$myfilter', [74,15 , 79,15]);
AddSWrd('m', '$mygroup', [80,20 , 74,15 , 75,10 , 78,10 , 79,15]);
AddSWrd('m', '$mypat', [68,5]);
AddSWrd('m', '$mypat_handle', [68,35 , 61,5]);
AddSWrd('n', '$name', [32,5 , 64,15 , 33,5 , 34,5 , 35,5 , 37,15 , 42,15 , 43,5 , 45,5 , 47,10 , 51,10 , 58,15 , 28,10 , 63,20]);
AddSWrd('n', '$newname', [21,5]);
AddSWrd('n', '$num_patterns', [18,5 , 9,2 , 10,2]);
AddSWrd('o', '$onecglobal', [65,5]);
AddSWrd('o', '$orient_val', [68,10 , 61,5]);
AddSWrd('p', '$pat', [51,5 , 28,10 , 47,5]);
AddSWrd('p', '$pat_attr_out', [58,5]);
AddSWrd('p', '$pat_errs', [28,10]);
AddSWrd('p', '$pat_extent', [43,10]);
AddSWrd('p', '$pat_extent_type', [42,10]);
AddSWrd('p', '$pat_handle', [32,15 , 33,15 , 34,10 , 35,15 , 51,10 , 37,10 , 42,5 , 43,5 , 44,15 , 45,15 , 47,10 , 63,5]);
AddSWrd('p', '$pat_lib', [51,5 , 28,5 , 47,5]);
AddSWrd('p', '$pat_names', [65,10 , 66,5 , 68,5 , 75,5 , 78,5 , 80,10 , 19,5 , 21,5 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,10 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 59,10 , 62,10]);
AddSWrd('p', '$pat_x', [64,5 , 37,5 , 42,5 , 58,5 , 43,5]);
AddSWrd('p', '$patname1', [80,5 , 75,5 , 78,5]);
AddSWrd('p', '$patname2', [80,5]);
AddSWrd('p', '$pattern_list', [51,5 , 28,5 , 47,5]);
AddSWrd('p', '$pattern_name_list', [63,5]);
AddSWrd('p', '$pattern_names_list', [32,5 , 33,5 , 34,5 , 35,5 , 45,5]);
AddSWrd('p', '$patternname', [48,10 , 65,10 , 50,5 , 68,10 , 39,10 , 40,10 , 26,5 , 59,20 , 30,5]);
AddSWrd('p', '$patterns', [64,5 , 18,5 , 67,5 , 37,5 , 9,2 , 10,2 , 42,5 , 58,5 , 43,5 , 60,5]);
AddSWrd('p', '$patx', [65,10 , 66,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,10 , 52,5 , 53,5 , 54,5 , 55,5 , 24,5 , 56,5 , 57,5 , 26,5 , 27,5 , 59,5 , 29,5 , 30,5 , 62,5]);
AddSWrd('p', '$patx_handle', [65,30 , 66,15 , 36,5 , 39,10 , 40,10 , 48,15 , 50,40 , 52,15 , 53,20 , 54,25 , 55,5 , 24,10 , 56,5 , 57,10 , 26,5 , 27,5 , 59,5 , 29,5 , 30,5 , 62,5]);
AddSWrd('r', '$ret_val', [17,10 , 66,5 , 51,5 , 52,5 , 23,10 , 47,5]);
AddSWrd('r', '$return_val', [37,5]);
AddSWrd('s', '$src_layer_nums', [17,15 , 23,15]);
AddSWrd('s', '$src_layers_num', [17,5 , 23,5]);
AddSWrd('t', '$t_lib', [22,5]);
AddSWrd('t', '$text_attr', [64,5]);
AddSWrd('v', '$verts', [40,5]);
AddSWrd('x', '$x_lib', [16,5 , 9,2 , 10,2 , 26,5 , 76,5 , 77,5 , 30,5 , 62,5]);
AddSWrd('num', '-114100', [40,20]);
AddSWrd('num', '-119000', [40,20]);
AddSWrd('num', '-121000', [40,20]);
AddSWrd('num', '-44700', [40,20]);
AddSWrd('num', '-57000', [40,10]);
AddSWrd('num', '-58200', [40,20]);
AddSWrd('num', '-59000', [40,10]);
AddSWrd('num', '-66200', [40,20]);
AddSWrd('num', '-71000', [40,10]);
AddSWrd('num', '-73000', [40,10]);
AddSWrd('num', '-76800', [40,20]);
AddSWrd('a', '-attr_name', [64,25 , 51,20 , 58,25 , 47,20]);
AddSWrd('a', '-attr_val', [64,5 , 51,20 , 58,5 , 47,20]);
AddSWrd('c', '-command', [82,20]);
AddSWrd('d', '-dbu_value', [44,20]);
AddSWrd('f', '-filter_name', [70,25 , 71,20 , 72,25 , 73,25 , 74,30 , 79,15]);
AddSWrd('g', '-group_name', [80,35 , 74,30 , 75,25 , 76,20 , 77,25 , 78,30 , 79,30]);
AddSWrd('i', '-id', [66,10 , 52,10 , 57,5]);
AddSWrd('k', '-key_name', [70,25 , 74,5 , 79,5]);
AddSWrd('k', '-keys_list', [48,15 , 51,5 , 53,20 , 24,5 , 47,5]);
AddSWrd('l', '-label', [66,5]);
AddSWrd('l', '-labels', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('l', '-layer', [17,15 , 34,30 , 23,15 , 39,20 , 40,20 , 42,15 , 43,15 , 44,20 , 45,15]);
AddSWrd('l', '-layernames', [20,20 , 14,25]);
AddSWrd('l', '-lib', [64,15 , 67,15 , 68,5 , 9,2 , 10,2 , 76,20 , 77,5 , 14,5 , 15,15 , 16,20 , 17,15 , 19,15 , 20,15 , 21,15 , 22,10 , 23,15 , 24,15 , 26,5 , 27,15 , 28,20 , 29,10 , 30,5 , 47,20 , 51,20 , 58,15 , 60,15 , 62,5]);
AddSWrd('l', '-ll_coord', [33,20]);
AddSWrd('m', '-mode', [18,5 , 68,5]);
AddSWrd('n', '-name', [64,5 , 65,10 , 66,5 , 67,20 , 68,5 , 19,20 , 24,5 , 26,5 , 27,5 , 28,20 , 29,5 , 30,5 , 32,20 , 33,25 , 34,20 , 35,20 , 36,5 , 37,5 , 39,10 , 40,10 , 42,5 , 43,5 , 44,5 , 45,5 , 47,5 , 48,5 , 50,10 , 51,5 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 58,5 , 59,5 , 60,25 , 62,5 , 63,5]);
AddSWrd('n', '-new_name', [21,20 , 37,20]);
AddSWrd('n', '-no_types', [62,25]);
AddSWrd('o', '-orient', [68,20]);
AddSWrd('o', '-original_name', [21,20 , 37,20]);
AddSWrd('p', '-path', [9,2 , 10,2 , 14,15 , 15,5 , 16,5 , 17,5 , 18,35 , 19,5 , 20,5 , 21,5 , 22,10 , 23,5 , 24,5 , 26,5 , 27,5 , 28,5 , 29,5 , 30,5 , 36,5 , 37,5 , 39,10 , 40,10 , 47,5 , 48,5 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 59,10 , 60,5 , 62,5 , 65,10 , 66,5 , 67,5 , 68,5 , 70,5 , 72,5 , 73,5 , 74,10 , 75,5 , 76,5 , 77,5 , 78,5 , 79,25 , 80,5]);
AddSWrd('p', '-pattern', [65,45 , 66,30 , 68,35 , 82,5 , 24,25 , 26,20 , 27,20 , 29,15 , 30,20 , 32,20 , 33,25 , 34,20 , 35,25 , 36,20 , 37,25 , 39,20 , 40,25 , 42,20 , 43,20 , 44,25 , 45,25 , 47,10 , 48,25 , 50,55 , 51,10 , 52,30 , 53,35 , 54,40 , 55,20 , 56,20 , 57,25 , 59,5 , 61,5 , 62,30]);
AddSWrd('p', '-pattern_name', [64,25 , 80,10 , 51,20 , 58,25 , 59,5 , 75,20 , 62,5 , 78,5 , 47,20 , 63,25]);
AddSWrd('p', '-prop_list', [50,30]);
AddSWrd('p', '-prop_name', [63,15]);
AddSWrd('p', '-prop_names_list', [54,25]);
AddSWrd('p', '-property_name', [70,5 , 63,10]);
AddSWrd('s', '-size_under', [32,15]);
AddSWrd('t', '-type', [34,15]);
AddSWrd('u', '-under_size', [32,5]);
AddSWrd('u', '-ur_coord', [33,20]);
AddSWrd('v', '-value', [17,10 , 65,20 , 67,20 , 70,5 , 23,20 , 60,5]);
AddSWrd('p', '.pmdb', [14,10]);
AddSWrd('num', '0.0', [55,5]);
AddSWrd('num', '0.007', [33,5]);
AddSWrd('num', '0.01', [70,10]);
AddSWrd('num', '0.02', [32,5]);
AddSWrd('num', '0.6', [33,5]);
AddSWrd('num', '0.801', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('num', '1.0', [50,30 , 54,25 , 62,10]);
AddSWrd('num', '1.201', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('num', '10.0', [50,5 , 54,10]);
AddSWrd('num', '1000.0', [30,20]);
AddSWrd('num', '10000000', [61,5]);
AddSWrd('num', '11200', [40,20]);
AddSWrd('num', '123', [58,5 , 47,5]);
AddSWrd('num', '13.2', [17,20 , 23,20]);
AddSWrd('num', '15000', [40,30]);
AddSWrd('num', '17000', [40,30]);
AddSWrd('num', '2.251', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('num', '2.501', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('num', '2000', [40,10]);
AddSWrd('num', '2013.2', [9,2 , 10,2]);
AddSWrd('num', '2020', [3,4]);
AddSWrd('num', '2021', [3,4]);
AddSWrd('num', '30.1', [23,10]);
AddSWrd('num', '5.0', [70,10]);
AddSWrd('num', '5887.5', [33,5]);
AddSWrd('num', '5887.6', [33,5]);
AddSWrd('num', '7.0', [70,10]);
AddSWrd('a', 'a_lib', [67,5 , 37,5 , 60,5]);
AddSWrd('a', 'aaa', [15,10]);
AddSWrd('a', 'abbreviate', [7,5]);
AddSWrd('a', 'ability', [46,2]);
AddSWrd('a', 'able', [18,5]);
AddSWrd('a', 'accepts', [11,2]);
AddSWrd('a', 'access', [18,30 , 4,2 , 11,2]);
AddSWrd('a', 'according', [12,2]);
AddSWrd('a', 'acted', [11,2]);
AddSWrd('a', 'active', [64,10 , 67,10 , 76,15 , 14,15 , 15,10 , 16,10 , 17,10 , 18,5 , 19,10 , 20,10 , 21,10 , 22,20 , 23,10 , 24,10 , 27,10 , 28,10 , 29,5 , 47,15 , 48,5 , 50,5 , 53,5 , 54,5 , 58,5 , 59,15 , 60,10 , 62,15]);
AddSWrd('a', 'add', [32,10 , 33,10 , 34,10 , 68,10 , 69,2 , 74,5 , 75,15 , 76,5 , 47,15 , 79,5 , 48,10 , 80,5 , 50,10 , 51,5 , 20,5]);
AddSWrd('a', 'add_pattern_orient', [49,25]);
AddSWrd('a', 'added', [51,15 , 69,2 , 70,30 , 24,5 , 74,10 , 44,5 , 45,5 , 14,10 , 31,2 , 47,15 , 79,5]);
AddSWrd('a', 'adding', [66,5]);
AddSWrd('a', 'adds', [32,5 , 33,5 , 50,5 , 51,10 , 70,10 , 74,5 , 75,5 , 47,10 , 79,5]);
AddSWrd('a', 'administrator', [6,4]);
AddSWrd('a', 'allowing', [11,2]);
AddSWrd('a', 'although', [8,2]);
AddSWrd('a', 'always', [32,5 , 33,5 , 76,5]);
AddSWrd('a', 'angles', [41,2]);
AddSWrd('a', 'api', [4,4 , 5,6 , 69,2 , 6,32 , 8,44 , 9,42 , 10,38 , 11,2 , 12,2 , 79,10 , 81,2 , 82,30 , 24,5]);
AddSWrd('a', 'appear', [7,5]);
AddSWrd('a', 'appears', [9,2]);
AddSWrd('a', 'applicable', [36,5]);
AddSWrd('a', 'application', [18,5]);
AddSWrd('a', 'applied', [71,5]);
AddSWrd('a', 'applies', [74,10 , 44,5 , 45,5]);
AddSWrd('a', 'apply', [32,5 , 33,5 , 74,10 , 79,5]);
AddSWrd('a', 'approved', [3,16]);
AddSWrd('a', 'april', [3,2]);
AddSWrd('a', 'areas', [12,2]);
AddSWrd('a', 'argument', [7,20 , 14,40 , 15,20 , 16,20 , 17,30 , 18,25 , 19,30 , 20,30 , 21,40 , 22,20 , 23,40 , 24,20 , 26,10 , 27,30 , 28,30 , 29,20 , 30,10 , 32,30 , 33,40 , 34,40 , 35,20 , 36,10 , 37,30 , 39,20 , 40,20 , 42,20 , 43,20 , 44,30 , 45,20 , 47,50 , 48,20 , 49,20 , 50,20 , 51,40 , 52,20 , 53,20 , 54,20 , 55,10 , 56,20 , 57,20 , 58,30 , 59,20 , 60,30 , 61,10 , 62,30 , 63,20 , 64,40 , 65,20 , 66,30 , 67,40 , 68,20 , 70,30 , 71,10 , 72,10 , 73,10 , 74,20 , 75,20 , 76,25 , 77,10 , 78,10 , 79,20 , 80,10 , 82,10]);
AddSWrd('a', 'arguments', [7,15]);
AddSWrd('a', 'arranged', [12,2]);
AddSWrd('a', 'assign', [65,5]);
AddSWrd('a', 'assigned', [56,5 , 63,5]);
AddSWrd('a', 'associate', [23,10]);
AddSWrd('a', 'associated', [17,5 , 3,2 , 69,2 , 23,5 , 24,5 , 74,10 , 75,10 , 76,10]);
AddSWrd('a', 'attempt', [18,5]);
AddSWrd('a', 'attr_name', [64,15 , 51,15 , 58,15 , 47,15]);
AddSWrd('a', 'attr_val', [51,25 , 47,15]);
AddSWrd('a', 'attribute', [64,30 , 51,50 , 67,40 , 58,35 , 60,30 , 47,50]);
AddSWrd('a', 'attribute_name', [67,15 , 60,15]);
AddSWrd('a', 'attribute_value', [67,15]);
AddSWrd('a', 'attributes', [49,5 , 68,5 , 5,2 , 61,5]);
AddSWrd('a', 'author', [3,2]);
AddSWrd('a', 'authors', [3,6]);
AddSWrd('a', 'auto', [42,5 , 44,5 , 45,10]);
AddSWrd('a', 'automate', [5,2]);
AddSWrd('a', 'automatically', [24,5 , 14,10]);
AddSWrd('a', 'auxiliary_layer', [7,5]);
AddSWrd('a', 'available', [81,2 , 82,5 , 3,2 , 83,2 , 5,2 , 12,2]);
AddSWrd('b', 'b_lib', [22,5]);
AddSWrd('b', 'backslash', [11,16]);
AddSWrd('b', 'banner', [8,4 , 10,2]);
AddSWrd('b', 'bars', [7,10]);
AddSWrd('b', 'based', [46,2]);
AddSWrd('b', 'basic', [11,2]);
AddSWrd('b', 'basics', [11,32]);
AddSWrd('b', 'batch', [4,22 , 5,30 , 11,30 , 12,22]);
AddSWrd('b', 'bbb', [15,10]);
AddSWrd('b', 'bbox', [34,45 , 36,10]);
AddSWrd('b', 'bbox10', [34,35 , 36,10]);
AddSWrd('b', 'bbox_custom', [32,5]);
AddSWrd('b', 'bcm1', [27,5]);
AddSWrd('b', 'bcm2', [27,5]);
AddSWrd('b', 'bcm_lib.pmdb', [22,5]);
AddSWrd('b', 'bogus.pmdb', [18,5]);
AddSWrd('b', 'bold', [7,20]);
AddSWrd('b', 'borders', [41,2]);
AddSWrd('b', 'bounding', [32,25 , 33,15 , 42,5 , 43,45]);
AddSWrd('b', 'box', [32,25 , 33,15 , 42,5 , 43,45]);
AddSWrd('b', 'braces', [7,15 , 26,5 , 11,8]);
AddSWrd('b', 'brackets', [7,15 , 11,10]);
AddSWrd('b', 'buehler', [3,8]);
AddSWrd('c', 'cal', [50,15 , 54,10 , 62,10]);
AddSWrd('c', 'calibre', [3,8 , 4,26 , 36,5 , 5,38 , 69,4 , 6,42 , 38,4 , 8,36 , 9,6 , 41,2 , 10,8 , 12,2 , 13,10 , 46,6 , 81,4 , 24,5 , 25,4 , 27,5 , 31,4]);
AddSWrd('c', 'calibre_home', [6,4]);
AddSWrd('c', 'call', [70,10 , 71,10 , 72,10 , 73,10 , 74,10 , 75,10 , 76,10 , 77,10 , 78,10 , 79,10 , 80,5 , 82,10 , 54,10 , 55,10]);
AddSWrd('c', 'called', [24,5]);
AddSWrd('c', 'cannot', [19,5 , 20,5 , 11,2]);
AddSWrd('c', 'careful', [11,2]);
AddSWrd('c', 'case', [64,5 , 67,5 , 58,5 , 11,2]);
AddSWrd('c', 'case-insensitive', [7,5]);
AddSWrd('c', 'cases', [7,5]);
AddSWrd('c', 'cause', [11,6]);
AddSWrd('c', 'causes', [11,2]);
AddSWrd('c', 'ccc', [15,10]);
AddSWrd('c', 'certain', [7,5]);
AddSWrd('c', 'cglobal', [65,30 , 55,15 , 56,10 , 44,5 , 45,5]);
AddSWrd('c', 'cglobal_per_layer', [56,5]);
AddSWrd('c', 'cglobal_value', [65,35]);
AddSWrd('c', 'change', [51,5 , 22,5 , 45,5 , 47,5]);
AddSWrd('c', 'changes', [65,5 , 3,10 , 51,15 , 5,2 , 53,5 , 54,5 , 24,10 , 45,5 , 47,15]);
AddSWrd('c', 'chapter', [11,2]);
AddSWrd('c', 'character', [8,6 , 11,12]);
AddSWrd('c', 'characteristics', [11,2]);
AddSWrd('c', 'characters', [66,10 , 7,5 , 11,22]);
AddSWrd('c', 'check', [26,10 , 28,5 , 30,5]);
AddSWrd('c', 'check_pattern', [26,5]);
AddSWrd('c', 'choice', [52,10 , 70,10 , 7,5 , 59,10 , 62,10]);
AddSWrd('c', 'cid', [56,25]);
AddSWrd('c', 'class', [27,20]);
AddSWrd('c', 'classes', [27,5]);
AddSWrd('c', 'clipped', [33,5]);
AddSWrd('c', 'code', [7,5]);
AddSWrd('c', 'coding', [11,2]);
AddSWrd('c', 'coincident', [39,5]);
AddSWrd('c', 'collect', [69,2]);
AddSWrd('c', 'collection', [11,2 , 13,2]);
AddSWrd('c', 'combined', [70,5]);
AddSWrd('c', 'command', [7,45 , 8,14 , 9,8 , 10,4 , 11,16 , 14,15 , 15,5 , 16,5 , 17,5 , 18,10 , 19,10 , 20,15 , 21,10 , 22,10 , 23,15 , 24,20 , 25,2 , 26,5 , 27,5 , 28,10 , 29,5 , 31,2 , 32,20 , 33,15 , 34,10 , 35,10 , 37,10 , 38,2 , 44,5 , 45,10 , 47,50 , 48,10 , 50,10 , 51,35 , 52,10 , 53,10 , 55,5 , 58,5 , 61,5 , 63,10 , 64,5 , 65,15 , 66,10 , 67,5 , 68,5 , 69,2 , 70,10 , 71,10 , 72,10 , 73,10 , 74,20 , 75,10 , 77,10 , 78,10 , 79,10 , 80,10 , 81,16 , 82,25]);
AddSWrd('c', 'command_name', [82,15]);
AddSWrd('c', 'commands', [4,22 , 5,32 , 69,2 , 38,2 , 7,5 , 8,8 , 10,4 , 11,38 , 12,24 , 76,5 , 13,10 , 14,5 , 46,4 , 81,2 , 18,5 , 82,10 , 22,10 , 25,2 , 31,2]);
AddSWrd('c', 'comment', [11,4]);
AddSWrd('c', 'comments', [11,4]);
AddSWrd('c', 'compared', [4,2]);
AddSWrd('c', 'compilation', [26,10]);
AddSWrd('c', 'compiled', [13,2]);
AddSWrd('c', 'compiler', [26,5 , 28,5]);
AddSWrd('c', 'complete', [11,2 , 13,2 , 61,5]);
AddSWrd('c', 'completely', [39,5]);
AddSWrd('c', 'comprehension', [3,8]);
AddSWrd('c', 'condition', [70,30 , 74,5 , 79,5]);
AddSWrd('c', 'conditions', [70,20 , 71,10 , 74,5]);
AddSWrd('c', 'considered', [46,2]);
AddSWrd('c', 'constr', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('c', 'constraint', [65,10 , 66,70 , 52,90 , 70,40 , 55,5 , 56,70 , 57,50 , 74,5 , 79,5]);
AddSWrd('c', 'constraint_id', [66,15 , 52,35 , 57,15]);
AddSWrd('c', 'constraints', [66,20 , 52,20 , 56,40 , 57,20 , 44,5 , 45,5 , 46,22]);
AddSWrd('c', 'constraints.tcl', [66,10 , 52,10 , 56,10 , 57,10]);
AddSWrd('c', 'construct', [11,2]);
AddSWrd('c', 'constructs', [11,2]);
AddSWrd('c', 'consult', [11,2]);
AddSWrd('c', 'contact', [3,2 , 14,10]);
AddSWrd('c', 'contain', [37,10]);
AddSWrd('c', 'containing', [41,2 , 10,2 , 26,10 , 43,5 , 28,5 , 61,5]);
AddSWrd('c', 'contains', [8,2]);
AddSWrd('c', 'content', [3,8]);
AddSWrd('c', 'contents', [5,2]);
AddSWrd('c', 'continuation', [11,4]);
AddSWrd('c', 'continued', [11,2]);
AddSWrd('c', 'convention', [7,5]);
AddSWrd('c', 'conventions', [7,45]);
AddSWrd('c', 'coordinate_x', [40,10]);
AddSWrd('c', 'coordinate_y', [40,10]);
AddSWrd('c', 'coordinates', [33,30 , 40,15 , 43,40]);
AddSWrd('c', 'correct', [9,2 , 10,2 , 13,2]);
AddSWrd('c', 'correspond', [49,5 , 68,5 , 61,5]);
AddSWrd('c', 'corresponding', [36,5]);
AddSWrd('c', 'countries', [8,2]);
AddSWrd('c', 'courier', [7,5]);
AddSWrd('c', 'create', [69,4 , 70,5 , 71,5 , 10,2 , 74,10 , 76,5 , 13,2 , 14,15 , 79,5]);
AddSWrd('c', 'create_pattern_lib', [14,5]);
AddSWrd('c', 'created', [32,5 , 80,15 , 70,15 , 71,5 , 72,15 , 73,15 , 74,30 , 75,15 , 76,5 , 77,15 , 78,15 , 79,20]);
AddSWrd('c', 'creates', [71,10 , 11,2 , 76,10 , 14,5]);
AddSWrd('c', 'creating', [81,2 , 69,2 , 38,2 , 25,2 , 13,2 , 46,2 , 31,2]);
AddSWrd('c', 'current', [37,10 , 24,10]);
AddSWrd('c', 'custom', [32,35 , 33,50 , 35,10 , 36,5 , 42,5 , 44,5 , 45,15]);
AddSWrd('c', 'custom_rect', [33,5]);
AddSWrd('d', 'data', [24,15 , 25,14 , 11,2 , 12,2]);
AddSWrd('d', 'database', [65,10 , 70,5 , 72,5 , 9,2 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 14,5 , 78,5 , 15,5 , 79,5 , 16,5 , 80,5 , 18,15 , 19,5 , 20,5 , 21,5 , 22,10 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,5 , 53,5 , 54,5 , 55,5 , 59,10 , 62,5]);
AddSWrd('d', 'datatype', [23,10]);
AddSWrd('d', 'date', [3,2]);
AddSWrd('d', 'dbu', [44,15 , 45,5]);
AddSWrd('d', 'decimal', [23,10]);
AddSWrd('d', 'default', [18,10 , 50,10 , 7,10 , 41,2 , 42,10 , 43,10 , 59,5]);
AddSWrd('d', 'defined', [33,5 , 82,5 , 36,5 , 39,5 , 41,2 , 44,10 , 45,5 , 46,2]);
AddSWrd('d', 'defines', [66,5 , 39,5 , 41,4 , 13,2]);
AddSWrd('d', 'definition', [70,10 , 11,4]);
AddSWrd('d', 'definitions', [11,2]);
AddSWrd('d', 'degree', [41,2]);
AddSWrd('d', 'delete', [19,5 , 35,10 , 52,5 , 53,5 , 54,5 , 72,5 , 77,15 , 78,5]);
AddSWrd('d', 'deleted', [53,5 , 54,5 , 72,5 , 77,5]);
AddSWrd('d', 'deletes', [19,5 , 52,10 , 53,5 , 54,5 , 72,5 , 77,5 , 78,5]);
AddSWrd('d', 'deleting', [52,5]);
AddSWrd('d', 'department', [3,2]);
AddSWrd('d', 'depending', [56,5]);
AddSWrd('d', 'described', [11,2 , 27,5]);
AddSWrd('d', 'describing', [56,5]);
AddSWrd('d', 'description', [7,5]);
AddSWrd('d', 'descriptions', [7,5]);
AddSWrd('d', 'details', [83,2]);
AddSWrd('d', 'develop', [5,2]);
AddSWrd('d', 'device', [7,5]);
AddSWrd('d', 'device_layer', [7,5]);
AddSWrd('d', 'dfm', [46,2]);
AddSWrd('d', 'different', [46,2]);
AddSWrd('d', 'digital', [3,2]);
AddSWrd('d', 'directly', [51,5 , 46,2 , 47,5]);
AddSWrd('d', 'directory', [83,2]);
AddSWrd('d', 'disables', [11,2]);
AddSWrd('d', 'distance', [46,2]);
AddSWrd('d', 'dmacro', [13,2]);
AddSWrd('d', 'document', [3,10 , 7,5]);
AddSWrd('d', 'documentation', [3,6 , 8,2]);
AddSWrd('d', 'documents', [3,4]);
AddSWrd('d', 'dollar', [11,2]);
AddSWrd('d', 'done', [45,5]);
AddSWrd('d', 'double', [7,5 , 26,5 , 11,2]);
AddSWrd('d', 'drawn', [34,25 , 36,5]);
AddSWrd('d', 'during', [69,2 , 79,5]);
AddSWrd('e', 'e2eid', [56,15]);
AddSWrd('e', 'earlier', [3,4]);
AddSWrd('e', 'eda', [3,2]);
AddSWrd('e', 'edge', [32,10 , 66,5 , 52,5 , 39,35 , 56,50 , 57,5 , 46,10]);
AddSWrd('e', 'edge_id', [39,10]);
AddSWrd('e', 'edges', [32,10 , 38,2 , 39,40 , 46,6]);
AddSWrd('e', 'eid', [56,30]);
AddSWrd('e', 'eight', [61,5]);
AddSWrd('e', 'either', [18,10 , 50,10 , 70,10 , 7,5]);
AddSWrd('e', 'element', [66,10 , 36,10 , 52,10 , 24,10 , 57,10 , 11,2 , 27,10 , 59,10 , 28,5 , 29,10 , 62,10]);
AddSWrd('e', 'element_name', [7,5]);
AddSWrd('e', 'elements', [36,5 , 11,4 , 28,5]);
AddSWrd('e', 'ellipsis', [7,10]);
AddSWrd('e', 'else', [64,5 , 51,5 , 67,5 , 37,5 , 42,5 , 58,5 , 43,5 , 47,5]);
AddSWrd('e', 'empty', [17,15 , 23,20 , 57,5 , 28,5 , 60,5]);
AddSWrd('e', 'enable', [46,8 , 31,2]);
AddSWrd('e', 'enclose', [7,15]);
AddSWrd('e', 'enclosed', [39,5 , 11,6]);
AddSWrd('e', 'encloses', [32,5 , 33,5 , 51,10]);
AddSWrd('e', 'encounters', [11,2]);
AddSWrd('e', 'end', [26,5]);
AddSWrd('e', 'ends', [8,2]);
AddSWrd('e', 'engine', [31,2]);
AddSWrd('e', 'enhancements', [3,8]);
AddSWrd('e', 'enter', [7,5 , 8,6]);
AddSWrd('e', 'entered', [7,5]);
AddSWrd('e', 'entering', [7,25]);
AddSWrd('e', 'entry', [50,10 , 56,5]);
AddSWrd('e', 'environment', [6,6 , 9,2 , 10,2 , 13,2]);
AddSWrd('e', 'equal', [70,40 , 39,10]);
AddSWrd('e', 'equivalent', [11,4]);
AddSWrd('e', 'erases', [73,5]);
AddSWrd('e', 'error', [64,5 , 17,5 , 18,5 , 67,5 , 58,5 , 28,5]);
AddSWrd('e', 'errors', [67,5 , 26,20 , 11,4 , 28,10 , 60,10 , 15,10]);
AddSWrd('e', 'evaluated', [41,4]);
AddSWrd('e', 'evaluates', [11,2]);
AddSWrd('e', 'evaluation', [11,2]);
AddSWrd('e', 'every', [16,5]);
AddSWrd('e', 'everything', [11,2]);
AddSWrd('e', 'exact', [44,5 , 45,5]);
AddSWrd('e', 'examine', [5,2]);
AddSWrd('e', 'example', [65,10 , 35,5 , 68,5 , 70,10 , 7,5 , 9,2 , 10,4 , 11,2 , 44,5 , 14,10 , 49,5 , 23,10 , 26,5 , 59,10 , 28,5 , 61,10]);
AddSWrd('e', 'example.tcl', [10,6]);
AddSWrd('e', 'example_lib.pmdb', [65,10 , 70,5 , 72,5 , 9,4 , 73,5 , 10,2 , 74,5 , 75,5 , 76,5 , 77,5 , 14,10 , 78,5 , 79,5 , 16,5 , 80,5 , 19,5 , 20,5 , 21,5 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,5 , 53,5 , 54,5 , 55,5 , 59,10 , 62,5]);
AddSWrd('e', 'examples', [8,2]);
AddSWrd('e', 'exclusive', [18,5]);
AddSWrd('e', 'execute', [51,5 , 8,4 , 10,4 , 47,5]);
AddSWrd('e', 'executed', [51,5 , 47,5]);
AddSWrd('e', 'executes', [8,2 , 10,2]);
AddSWrd('e', 'exist', [32,10 , 18,10 , 57,5 , 75,10 , 79,5]);
AddSWrd('e', 'existing', [14,5]);
AddSWrd('e', 'exists', [69,2 , 24,5 , 56,5 , 45,5 , 14,10 , 79,5]);
AddSWrd('e', 'exit', [9,4]);
AddSWrd('e', 'exits', [10,2]);
AddSWrd('e', 'exlib.pmdb', [18,5]);
AddSWrd('e', 'explicit', [43,5]);
AddSWrd('e', 'explicitly', [45,5]);
AddSWrd('e', 'expr', [56,20]);
AddSWrd('e', 'expression', [56,5]);
AddSWrd('e', 'extends', [33,5]);
AddSWrd('e', 'extension', [14,10]);
AddSWrd('e', 'extent', [32,5 , 33,5 , 39,10 , 41,12 , 42,55 , 43,65 , 44,55 , 45,60]);
AddSWrd('e', 'extents', [32,5 , 33,5 , 41,14 , 44,5]);
AddSWrd('f', 'fails', [65,5 , 66,5 , 70,5 , 71,5 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 14,10 , 78,5 , 15,5 , 79,5 , 16,5 , 80,5 , 18,5 , 82,5 , 19,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 27,5 , 28,5 , 29,5 , 32,10 , 33,5 , 34,5 , 35,5 , 37,5 , 44,5 , 45,5 , 47,5 , 48,5 , 50,5 , 52,5 , 53,5 , 54,5 , 55,5 , 61,5 , 63,5]);
AddSWrd('f', 'failure', [49,5 , 51,5 , 68,5 , 59,5 , 60,5 , 62,5 , 63,5]);
AddSWrd('f', 'fall', [41,2]);
AddSWrd('f', 'familiar', [11,2]);
AddSWrd('f', 'figure', [49,10 , 68,10]);
AddSWrd('f', 'file', [18,20 , 51,5 , 69,2 , 10,4 , 13,2 , 14,20 , 47,5 , 79,20]);
AddSWrd('f', 'filename', [14,10]);
AddSWrd('f', 'filter', [70,100 , 71,40 , 72,30 , 73,35 , 74,60 , 79,25]);
AddSWrd('f', 'filter_name', [70,15 , 71,15 , 72,15 , 73,15 , 74,15]);
AddSWrd('f', 'filtered', [70,5]);
AddSWrd('f', 'filters', [69,14 , 71,5]);
AddSWrd('f', 'first', [66,15 , 36,10 , 69,2 , 38,2 , 39,5 , 11,4 , 17,10 , 19,5 , 52,20 , 23,10 , 24,10 , 56,15 , 25,2 , 57,20 , 26,5 , 27,20 , 59,10 , 28,10 , 29,20 , 62,15 , 31,2]);
AddSWrd('f', 'first_pat_name', [19,5 , 21,5]);
AddSWrd('f', 'first_prop', [63,5]);
AddSWrd('f', 'fixes', [3,8]);
AddSWrd('f', 'float', [50,55 , 54,35 , 62,10]);
AddSWrd('f', 'following', [66,10 , 68,10 , 70,10 , 39,5 , 8,4 , 42,5 , 11,6 , 13,2 , 15,5 , 17,10 , 49,10 , 52,10 , 23,10 , 56,15 , 57,10 , 27,5 , 61,5]);
AddSWrd('f', 'follows', [36,5 , 7,5 , 39,5]);
AddSWrd('f', 'font', [7,25]);
AddSWrd('f', 'fonts', [7,15]);
AddSWrd('f', 'foreach', [32,5 , 64,5 , 33,5 , 65,5 , 34,5 , 35,5 , 68,5 , 37,5 , 39,5 , 40,5 , 42,5 , 43,5 , 45,5 , 47,5 , 48,5 , 50,5 , 51,5 , 26,5 , 58,5 , 59,10 , 28,5 , 30,5 , 63,5]);
AddSWrd('f', 'format', [50,10 , 36,5 , 54,10 , 39,5 , 40,5 , 62,10 , 15,5]);
AddSWrd('f', 'formats', [56,5]);
AddSWrd('f', 'found', [31,2 , 63,10]);
AddSWrd('f', 'four', [3,2]);
AddSWrd('f', 'front', [11,2]);
AddSWrd('f', 'functional', [12,2]);
AddSWrd('f', 'functioning', [51,5 , 47,5]);
AddSWrd('g', 'generated', [31,2]);
AddSWrd('g', 'generates', [18,5]);
AddSWrd('g', 'geometries', [32,5 , 33,5 , 38,12 , 41,4 , 42,5]);
AddSWrd('g', 'geometry', [33,5 , 38,2]);
AddSWrd('g', 'get_constraint_label', [57,5]);
AddSWrd('g', 'get_constraints', [56,5]);
AddSWrd('g', 'get_keys', [82,5]);
AddSWrd('g', 'get_pattern', [51,5 , 47,5]);
AddSWrd('g', 'get_pattern_orient', [61,5]);
AddSWrd('g', 'get_property_value', [63,15]);
AddSWrd('g', 'get_src_layer_num', [17,5]);
AddSWrd('g', 'gets', [64,5 , 39,5 , 42,10 , 43,15 , 17,5 , 82,5 , 56,5 , 57,5 , 58,10 , 59,5 , 60,5 , 61,5 , 62,5 , 63,10]);
AddSWrd('g', 'getting', [8,20 , 57,5]);
AddSWrd('g', 'give', [46,2]);
AddSWrd('g', 'given', [49,15 , 34,5 , 68,15]);
AddSWrd('g', 'global', [65,5 , 67,5 , 60,10]);
AddSWrd('g', 'greater', [70,20 , 39,10]);
AddSWrd('g', 'group', [80,40 , 69,14 , 70,5 , 7,5 , 74,65 , 75,50 , 76,45 , 77,30 , 78,35 , 79,60]);
AddSWrd('g', 'group_name', [80,15 , 74,15 , 75,15 , 76,15 , 77,15 , 78,15 , 79,15]);
AddSWrd('g', 'grouping', [7,5]);
AddSWrd('g', 'groups', [69,12 , 74,5 , 77,10]);
AddSWrd('g', 'gui', [4,4 , 68,5 , 5,4 , 69,2 , 38,2 , 13,2 , 46,2 , 49,5 , 81,2 , 24,15 , 25,2 , 61,5 , 31,2]);
AddSWrd('g', 'guide', [6,4]);
AddSWrd('h', 'handle', [9,2 , 14,10 , 15,10 , 16,10 , 17,10 , 18,5 , 19,10 , 20,10 , 21,10 , 22,10 , 23,10 , 24,20 , 26,10 , 27,25 , 28,15 , 29,25 , 30,10 , 32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 37,10 , 39,10 , 40,10 , 42,10 , 43,10 , 44,10 , 45,10 , 47,10 , 48,10 , 49,10 , 50,10 , 51,10 , 52,10 , 53,10 , 54,10 , 55,10 , 56,10 , 57,10 , 58,10 , 59,35 , 60,10 , 61,10 , 62,35 , 64,10 , 65,10 , 66,10 , 67,10 , 68,15 , 76,10]);
AddSWrd('h', 'having', [50,10 , 54,10 , 39,5 , 40,5 , 62,5]);
AddSWrd('h', 'heavy', [7,5]);
AddSWrd('h', 'help', [81,12 , 82,10]);
AddSWrd('h', 'history', [3,16]);
AddSWrd('h', 'however', [69,2 , 11,4]);
AddSWrd('h', 'https', [3,2]);
AddSWrd('i', 'identified', [39,5]);
AddSWrd('i', 'identifies', [7,5]);
AddSWrd('i', 'ids', [40,5]);
AddSWrd('i', 'immediately', [11,2]);
AddSWrd('i', 'improve', [3,8]);
AddSWrd('i', 'improves', [4,2]);
AddSWrd('i', 'in-house', [3,2]);
AddSWrd('i', 'include', [32,5 , 33,5 , 7,25 , 62,10]);
AddSWrd('i', 'included', [83,2 , 56,5 , 14,10]);
AddSWrd('i', 'includes', [51,10 , 36,5 , 5,2 , 70,10 , 56,10 , 11,2]);
AddSWrd('i', 'incr', [48,5]);
AddSWrd('i', 'independent', [71,5]);
AddSWrd('i', 'index', [17,30 , 34,30 , 23,20 , 39,10 , 42,30 , 43,40 , 44,10 , 45,20]);
AddSWrd('i', 'indicate', [7,20 , 39,5 , 11,2]);
AddSWrd('i', 'indicated', [11,2]);
AddSWrd('i', 'indicates', [7,10 , 11,4]);
AddSWrd('i', 'indicating', [56,5 , 26,5]);
AddSWrd('i', 'individual', [41,2]);
AddSWrd('i', 'industries', [3,2]);
AddSWrd('i', 'information', [81,2 , 82,15 , 83,0 , 36,10 , 5,2 , 69,2 , 38,2 , 25,2 , 41,2 , 13,2 , 46,2 , 31,2]);
AddSWrd('i', 'inherits', [42,5 , 43,5]);
AddSWrd('i', 'initially', [66,5]);
AddSWrd('i', 'input', [59,10]);
AddSWrd('i', 'inserted', [80,10 , 75,5 , 78,5]);
AddSWrd('i', 'inside', [33,5]);
AddSWrd('i', 'instances', [52,15]);
AddSWrd('i', 'instruct', [11,4]);
AddSWrd('i', 'instructing', [11,2]);
AddSWrd('i', 'instructs', [11,2]);
AddSWrd('i', 'integer', [49,10 , 50,10 , 67,5 , 68,10 , 23,10 , 39,10 , 40,10 , 56,5 , 58,20 , 62,5 , 47,50]);
AddSWrd('i', 'interactive', [8,2 , 9,32 , 10,2]);
AddSWrd('i', 'interactively', [8,2]);
AddSWrd('i', 'internally', [56,5]);
AddSWrd('i', 'interpretation', [11,2]);
AddSWrd('i', 'interpreter', [11,12]);
AddSWrd('i', 'introduction', [4,20]);
AddSWrd('i', 'invalid', [18,5 , 27,5]);
AddSWrd('i', 'invoke', [9,2]);
AddSWrd('i', 'is_real_flag', [39,10]);
AddSWrd('i', 'isolates', [41,2]);
AddSWrd('i', 'issued.the', [33,5]);
AddSWrd('i', 'issuing', [70,5]);
AddSWrd('i', 'italic', [7,15]);
AddSWrd('i', 'item', [7,5]);
AddSWrd('i', 'items', [7,5]);
AddSWrd('j', 'january', [3,2]);
AddSWrd('j', 'july', [3,2]);
AddSWrd('j', 'junk', [53,10 , 54,10]);
AddSWrd('k', 'key', [48,10 , 53,25 , 70,30 , 74,5 , 59,5 , 79,10]);
AddSWrd('k', 'key_name', [70,25]);
AddSWrd('k', 'key_names', [48,5]);
AddSWrd('k', 'keys', [48,15 , 82,10 , 53,5 , 69,2 , 59,35 , 46,18]);
AddSWrd('k', 'keys_list', [48,15 , 53,15]);
AddSWrd('k', 'keyword', [7,15]);
AddSWrd('l', 'label', [66,70 , 52,105 , 56,40 , 57,45]);
AddSWrd('l', 'label1', [66,10 , 52,10 , 56,10 , 57,15]);
AddSWrd('l', 'label2', [66,10]);
AddSWrd('l', 'labels', [56,10]);
AddSWrd('l', 'large', [32,5 , 4,2]);
AddSWrd('l', 'later', [9,2 , 25,2 , 10,2]);
AddSWrd('l', 'lay_2', [14,5]);
AddSWrd('l', 'layer', [32,5 , 33,5 , 34,40 , 36,20 , 39,30 , 40,25 , 41,4 , 42,35 , 43,35 , 44,25 , 45,35 , 14,10 , 15,10 , 17,185 , 20,25 , 23,160 , 56,5]);
AddSWrd('l', 'layer-dependent', [34,10]);
AddSWrd('l', 'layer-independent', [34,10]);
AddSWrd('l', 'layer1', [17,5 , 23,5]);
AddSWrd('l', 'layer_count', [15,5]);
AddSWrd('l', 'layer_id', [36,10]);
AddSWrd('l', 'layer_iindex', [44,5]);
AddSWrd('l', 'layer_index', [17,30 , 34,15 , 23,25 , 39,15 , 40,15 , 42,15 , 43,15 , 44,20 , 45,25]);
AddSWrd('l', 'layer_names', [20,20 , 15,5]);
AddSWrd('l', 'layer_names_list', [14,20 , 15,5]);
AddSWrd('l', 'layers', [34,10 , 41,2 , 42,10 , 43,10 , 44,10 , 45,10 , 14,10 , 46,2 , 15,10 , 17,60 , 20,35 , 23,55 , 31,6]);
AddSWrd('l', 'layout', [17,5 , 23,5]);
AddSWrd('l', 'leave', [68,5]);
AddSWrd('l', 'left', [33,15 , 43,5]);
AddSWrd('l', 'legal', [83,2]);
AddSWrd('l', 'length', [66,10 , 9,2 , 44,10]);
AddSWrd('l', 'less', [66,10 , 70,35]);
AddSWrd('l', 'letter', [11,2]);
AddSWrd('l', 'letters', [37,10 , 7,5]);
AddSWrd('l', 'lib', [8,8 , 9,2 , 10,2]);
AddSWrd('l', 'lib1.pmdb', [37,5]);
AddSWrd('l', 'lib_attr', [67,5 , 60,5]);
AddSWrd('l', 'lib_attr_out', [60,5]);
AddSWrd('l', 'lib_handle_new', [14,5]);
AddSWrd('l', 'lib_k1.pmdb', [74,5 , 79,5]);
AddSWrd('l', 'libraries', [81,2 , 18,5 , 4,4 , 5,4 , 69,2 , 38,2 , 25,2 , 13,2 , 46,2 , 31,2]);
AddSWrd('l', 'library', [5,4 , 9,16 , 10,10 , 12,2 , 13,18 , 14,75 , 15,40 , 16,45 , 17,40 , 18,95 , 19,40 , 20,65 , 21,30 , 22,45 , 23,35 , 24,50 , 25,2 , 26,15 , 27,35 , 28,30 , 29,25 , 30,10 , 31,2 , 32,15 , 33,15 , 35,5 , 36,5 , 38,2 , 39,15 , 40,15 , 42,5 , 45,5 , 47,25 , 48,15 , 50,15 , 51,10 , 53,15 , 54,15 , 55,5 , 58,15 , 59,55 , 60,30 , 62,40 , 63,5 , 64,20 , 65,20 , 67,35 , 68,5 , 69,10 , 70,5 , 71,5 , 72,5 , 73,5 , 74,30 , 75,15 , 76,40 , 77,5 , 78,5 , 79,40 , 80,5]);
AddSWrd('l', 'library-level', [67,5]);
AddSWrd('l', 'library_handle', [64,15 , 67,15 , 76,15 , 15,15 , 47,15 , 16,15 , 17,15 , 19,15 , 51,15 , 20,15 , 21,15 , 22,15 , 23,15 , 24,15 , 58,15 , 27,15 , 59,25 , 28,15 , 60,15 , 29,10 , 62,25]);
AddSWrd('l', 'library_name', [14,10]);
AddSWrd('l', 'library_path', [18,15 , 14,25 , 79,15]);
AddSWrd('l', 'license', [6,2]);
AddSWrd('l', 'licenses', [9,2 , 10,2 , 13,2]);
AddSWrd('l', 'licensing', [6,4]);
AddSWrd('l', 'lie', [32,5 , 33,5]);
AddSWrd('l', 'limits', [41,2]);
AddSWrd('l', 'lindex', [64,5 , 65,20 , 66,10 , 68,5 , 75,5 , 78,5 , 80,10 , 19,5 , 21,5 , 24,10 , 26,5 , 27,10 , 28,10 , 29,10 , 30,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,10 , 37,5 , 39,20 , 40,20 , 42,5 , 43,5 , 44,5 , 45,5 , 47,5 , 48,10 , 50,15 , 51,5 , 52,10 , 53,10 , 54,10 , 55,10 , 56,10 , 57,10 , 58,5 , 59,10 , 62,15 , 63,5]);
AddSWrd('l', 'line', [7,5 , 8,2 , 9,2 , 10,2 , 11,18]);
AddSWrd('l', 'lines', [26,5 , 11,2]);
AddSWrd('l', 'linus', [8,2]);
AddSWrd('l', 'linux', [8,12 , 9,4 , 10,2]);
AddSWrd('l', 'list', [66,10 , 9,4 , 11,24 , 14,10 , 15,5 , 16,5 , 80,10 , 17,30 , 82,25 , 20,10 , 23,10 , 26,5 , 28,10 , 34,5 , 36,10 , 39,25 , 40,10 , 43,5 , 48,20 , 50,15 , 52,10 , 53,15 , 54,10 , 56,10 , 57,10 , 59,10 , 62,5]);
AddSWrd('l', 'listed', [3,8]);
AddSWrd('l', 'lists', [80,5 , 81,2 , 70,10 , 11,6]);
AddSWrd('l', 'literal', [11,4]);
AddSWrd('l', 'literally', [7,5]);
AddSWrd('l', 'llength', [18,5 , 67,5 , 9,4 , 10,2 , 60,5]);
AddSWrd('l', 'load', [16,5 , 18,20 , 69,2 , 38,2 , 9,2 , 25,2 , 74,5 , 28,15 , 31,2]);
AddSWrd('l', 'load_pattern_lib', [68,5]);
AddSWrd('l', 'loaded', [14,5]);
AddSWrd('l', 'loading', [4,2]);
AddSWrd('l', 'loads', [18,5 , 9,2 , 10,2]);
AddSWrd('l', 'location', [46,2]);
AddSWrd('l', 'logic', [70,5]);
AddSWrd('l', 'lower', [33,15 , 43,5]);
AddSWrd('l', 'lowercase', [7,5]);
AddSWrd('l', 'lucille', [3,8]);
AddSWrd('m', 'made', [24,5]);
AddSWrd('m', 'maintain', [3,2]);
AddSWrd('m', 'makes', [18,5 , 14,5]);
AddSWrd('m', 'making', [51,5 , 47,5]);
AddSWrd('m', 'manager', [5,2 , 8,8 , 9,2 , 10,2]);
AddSWrd('m', 'managing', [81,2 , 69,2 , 46,2]);
AddSWrd('m', 'manhattan', [41,2]);
AddSWrd('m', 'manipulate', [69,2]);
AddSWrd('m', 'manual', [81,2 , 36,5 , 5,2 , 69,2 , 38,2 , 25,2 , 41,2 , 27,5 , 13,2 , 46,2 , 31,2]);
AddSWrd('m', 'marker', [32,55 , 33,60 , 34,50 , 35,15 , 36,45 , 37,60 , 56,5 , 31,4]);
AddSWrd('m', 'marker_2', [37,5]);
AddSWrd('m', 'marker_name', [32,15 , 33,15 , 34,15 , 35,15 , 36,10]);
AddSWrd('m', 'marker_type', [34,15 , 36,10]);
AddSWrd('m', 'markers', [32,10 , 33,10 , 34,10 , 35,10 , 36,10 , 5,2 , 12,2 , 46,2 , 31,14]);
AddSWrd('m', 'marks', [7,5]);
AddSWrd('m', 'match', [49,20 , 20,10 , 68,20 , 41,2 , 46,2 , 31,2]);
AddSWrd('m', 'matched', [49,5 , 34,25 , 36,5 , 68,10 , 39,5 , 46,2]);
AddSWrd('m', 'matches', [61,5 , 31,2]);
AddSWrd('m', 'matching', [4,28 , 68,10 , 5,42 , 69,6 , 6,36 , 8,24 , 9,42 , 10,38 , 11,30 , 12,22 , 13,10 , 79,5 , 81,4 , 18,10 , 82,10 , 22,5 , 24,5 , 25,4 , 27,5 , 31,4 , 36,5 , 38,4 , 41,2 , 46,6 , 49,5 , 61,5]);
AddSWrd('m', 'mathematical', [56,5]);
AddSWrd('m', 'may', [83,2 , 7,10 , 46,2 , 62,5]);
AddSWrd('m', 'meaning', [70,5 , 11,2]);
AddSWrd('m', 'meanings', [11,2]);
AddSWrd('m', 'measure', [56,5]);
AddSWrd('m', 'memory', [24,5 , 79,5]);
AddSWrd('m', 'message', [33,5 , 81,2 , 82,10 , 58,5]);
AddSWrd('m', 'metacharacters', [7,10]);
AddSWrd('m', 'michael', [3,8]);
AddSWrd('m', 'minimum', [7,10]);
AddSWrd('m', 'mismatched', [11,2]);
AddSWrd('m', 'model_name', [7,5]);
AddSWrd('m', 'modifications', [3,8]);
AddSWrd('m', 'modify', [4,2 , 5,2 , 24,5]);
AddSWrd('m', 'monospace', [7,15]);
AddSWrd('m', 'multiple', [3,2 , 70,10 , 11,4]);
AddSWrd('m', 'multiplied', [56,5]);
AddSWrd('m', 'myattr', [47,5]);
AddSWrd('m', 'myfil', [70,5]);
AddSWrd('m', 'myfilter', [71,10 , 72,20 , 73,20 , 74,5 , 79,5]);
AddSWrd('m', 'mygroup', [80,5 , 74,5 , 75,5 , 76,10 , 77,20 , 78,15 , 79,5]);
AddSWrd('m', 'mykey', [59,10]);
AddSWrd('m', 'mykey_$i', [48,5]);
AddSWrd('m', 'mykey_0', [48,5 , 53,15]);
AddSWrd('m', 'mykey_1', [48,5]);
AddSWrd('m', 'mykey_2', [48,5]);
AddSWrd('m', 'mylib.pmdb', [51,5 , 15,5 , 47,5]);
AddSWrd('m', 'mylib2_error.pmdb', [28,5]);
AddSWrd('m', 'mypat', [68,5]);
AddSWrd('m', 'mypat_handle', [68,5]);
AddSWrd('m', 'myscript.tcl', [8,8]);
AddSWrd('n', 'nadding', [66,5]);
AddSWrd('n', 'name', [64,25 , 67,10 , 68,5 , 69,2 , 70,60 , 71,10 , 72,10 , 9,2 , 73,10 , 74,25 , 11,2 , 75,20 , 76,10 , 77,10 , 14,10 , 78,10 , 79,20 , 80,10 , 81,2 , 82,10 , 19,10 , 21,20 , 28,15 , 29,15 , 32,25 , 33,15 , 34,20 , 35,20 , 36,10 , 37,25 , 42,5 , 43,5 , 45,5 , 47,25 , 51,25 , 58,25 , 59,40 , 60,15 , 62,40 , 63,30]);
AddSWrd('n', 'named', [80,10 , 37,5 , 70,10 , 8,2 , 74,5 , 75,5 , 78,5 , 63,5]);
AddSWrd('n', 'names', [16,15 , 80,5 , 20,25 , 37,10 , 69,2 , 9,2 , 14,10 , 46,2 , 15,20 , 79,5]);
AddSWrd('n', 'namespace', [8,2 , 11,2]);
AddSWrd('n', 'ndeleting', [52,5]);
AddSWrd('n', 'necessary', [51,5 , 47,5]);
AddSWrd('n', 'need', [24,5]);
AddSWrd('n', 'nested', [11,2]);
AddSWrd('n', 'net', [7,5]);
AddSWrd('n', 'new', [32,20 , 33,10 , 68,5 , 37,10 , 69,2 , 71,15 , 74,10 , 11,2 , 44,5 , 76,10 , 13,2 , 45,10 , 14,30 , 79,30 , 80,5 , 17,20 , 20,5 , 21,10 , 23,20 , 24,5]);
AddSWrd('n', 'new_marker_name', [37,15]);
AddSWrd('n', 'new_name', [21,15]);
AddSWrd('n', 'newbox', [34,10]);
AddSWrd('n', 'newglobalbbox', [34,5]);
AddSWrd('n', 'newlib.pmdb', [17,5 , 23,5]);
AddSWrd('n', 'newname', [21,5]);
AddSWrd('n', 'newpat_lib', [14,5]);
AddSWrd('n', 'ngetting', [57,5]);
AddSWrd('n', 'non-directional', [56,5]);
AddSWrd('n', 'non-whitespace', [11,2]);
AddSWrd('n', 'none', [42,5]);
AddSWrd('n', 'nonexistent', [53,5 , 54,5]);
AddSWrd('n', 'notes', [3,8]);
AddSWrd('n', 'nothing', [11,2]);
AddSWrd('n', 'null', [63,5]);
AddSWrd('n', 'num_patterns', [18,5 , 67,5 , 9,2 , 10,2 , 60,5]);
AddSWrd('n', 'number', [32,5 , 17,50 , 33,5 , 18,5 , 20,20 , 36,15 , 23,75 , 40,10 , 9,4 , 10,2]);
AddSWrd('n', 'numbers', [17,20 , 37,10 , 23,5 , 11,2]);
AddSWrd('o', 'objects', [5,2]);
AddSWrd('o', 'occurs', [63,5]);
AddSWrd('o', 'october', [3,2]);
AddSWrd('o', 'omit', [7,5]);
AddSWrd('o', 'once', [7,5]);
AddSWrd('o', 'one_patt.pmdb', [66,5 , 52,5 , 56,5 , 57,5]);
AddSWrd('o', 'onecglobal', [65,5]);
AddSWrd('o', 'online', [11,2]);
AddSWrd('o', 'open', [18,15 , 83,2 , 24,5]);
AddSWrd('o', 'opened', [18,5]);
AddSWrd('o', 'operate', [46,2]);
AddSWrd('o', 'operation', [19,5]);
AddSWrd('o', 'operator', [70,10 , 56,5]);
AddSWrd('o', 'operator-value', [70,10]);
AddSWrd('o', 'operator1', [70,35]);
AddSWrd('o', 'operator2', [70,35]);
AddSWrd('o', 'operators', [70,10]);
AddSWrd('o', 'opid', [56,10]);
AddSWrd('o', 'option', [82,10 , 42,10 , 43,10 , 76,10 , 62,5]);
AddSWrd('o', 'optional', [64,10 , 67,10 , 70,10 , 7,5 , 76,10 , 14,15 , 15,10 , 16,10 , 17,20 , 18,15 , 82,10 , 19,10 , 20,10 , 21,10 , 22,5 , 23,10 , 24,10 , 27,10 , 28,10 , 29,5 , 42,10 , 43,10 , 47,10 , 50,10 , 51,10 , 56,10 , 58,10 , 59,10 , 60,10 , 62,20]);
AddSWrd('o', 'order', [51,5 , 74,5 , 47,5]);
AddSWrd('o', 'ordered', [17,5 , 11,2]);
AddSWrd('o', 'orient_val', [68,10 , 61,5]);
AddSWrd('o', 'orientation', [49,80 , 68,90 , 61,35]);
AddSWrd('o', 'orientations', [49,40 , 68,60 , 61,15]);
AddSWrd('o', 'orig_name', [21,15]);
AddSWrd('o', 'original', [68,5 , 21,10 , 61,5 , 46,4]);
AddSWrd('o', 'original_marker_name', [37,15]);
AddSWrd('o', 'otherwise', [17,10]);
AddSWrd('o', 'output', [66,5 , 8,8 , 10,2 , 43,5 , 46,4 , 15,5 , 47,5 , 16,5 , 17,5 , 18,5 , 82,5 , 52,5 , 23,5 , 56,20 , 57,5 , 26,5 , 59,10 , 62,15 , 31,2]);
AddSWrd('o', 'outputs', [64,5 , 82,5 , 67,5 , 9,2 , 10,2 , 42,5 , 58,10 , 43,5]);
AddSWrd('o', 'outside', [32,5 , 33,10 , 41,2]);
AddSWrd('o', 'overview', [5,30]);
AddSWrd('o', 'overwrite', [14,10]);
AddSWrd('o', 'overwrites', [65,5 , 23,5]);
AddSWrd('p', 'p1_bcm', [22,5]);
AddSWrd('p', 'p1_exact', [22,5 , 54,5 , 9,2]);
AddSWrd('p', 'p1_tem', [65,15 , 70,5 , 72,5 , 73,5 , 74,5 , 75,15 , 76,5 , 77,5 , 78,15 , 79,5 , 16,5 , 80,20 , 18,5 , 19,10 , 21,10 , 24,5 , 26,5 , 27,5 , 29,10 , 30,5 , 36,5 , 39,15 , 40,15 , 48,10 , 50,5 , 53,10 , 54,5 , 55,5 , 59,20 , 62,5]);
AddSWrd('p', 'p2_bcm', [22,5]);
AddSWrd('p', 'p2_tem', [65,15 , 70,5 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 79,5 , 16,5 , 80,20 , 18,5 , 19,10 , 21,10 , 22,5 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,15 , 40,15 , 48,10 , 50,5 , 53,5 , 54,5 , 55,5 , 59,20 , 62,5]);
AddSWrd('p', 'p3_bcm', [65,15 , 70,5 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 79,5 , 16,5 , 80,5 , 18,5 , 19,10 , 21,10 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,15 , 40,15 , 48,10 , 50,5 , 53,5 , 54,5 , 55,5 , 59,20 , 62,5]);
AddSWrd('p', 'p3_tem', [22,5]);
AddSWrd('p', 'p4_bcm', [9,2]);
AddSWrd('p', 'p5_bcm', [9,2]);
AddSWrd('p', 'p_abc', [21,10]);
AddSWrd('p', 'pairs', [70,10 , 43,5]);
AddSWrd('p', 'parallel', [46,2]);
AddSWrd('p', 'parameters', [70,10]);
AddSWrd('p', 'parentheses', [7,10 , 11,2]);
AddSWrd('p', 'parsed', [11,2]);
AddSWrd('p', 'parsing', [28,5]);
AddSWrd('p', 'particular', [76,5]);
AddSWrd('p', 'pat', [51,5 , 68,5 , 28,5 , 47,5]);
AddSWrd('p', 'pat1.pmdb', [67,5 , 60,5]);
AddSWrd('p', 'pat_attr', [64,10 , 51,5 , 58,15]);
AddSWrd('p', 'pat_attr_out', [58,5]);
AddSWrd('p', 'pat_errs', [28,5]);
AddSWrd('p', 'pat_extent', [43,5]);
AddSWrd('p', 'pat_extent_type', [42,5]);
AddSWrd('p', 'pat_handle', [32,10 , 64,5 , 33,10 , 34,10 , 35,10 , 37,5 , 42,5 , 43,5 , 44,10 , 45,10 , 47,5 , 51,5 , 58,5 , 28,5 , 63,10]);
AddSWrd('p', 'pat_lib', [51,5 , 28,5 , 47,5]);
AddSWrd('p', 'pat_names', [65,10 , 66,5 , 68,5 , 70,5 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 79,5 , 80,5 , 19,5 , 21,5 , 24,5 , 26,5 , 27,5 , 29,5 , 30,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,5 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 59,10 , 62,5]);
AddSWrd('p', 'pat_x', [64,5 , 37,5 , 42,5 , 58,5 , 43,5]);
AddSWrd('p', 'path', [18,15 , 6,2 , 14,5 , 79,10]);
AddSWrd('p', 'patname1', [80,5 , 75,5 , 78,5]);
AddSWrd('p', 'patname2', [80,5]);
AddSWrd('p', 'pattern', [4,32 , 5,50 , 6,36 , 8,24 , 9,48 , 10,38 , 11,30 , 12,28 , 13,22 , 14,45 , 15,35 , 16,35 , 17,65 , 18,55 , 19,55 , 20,50 , 21,50 , 22,30 , 23,60 , 24,105 , 25,20 , 26,25 , 27,85 , 28,50 , 29,65 , 30,30 , 31,26 , 32,55 , 33,35 , 34,40 , 35,15 , 36,40 , 37,30 , 38,20 , 39,80 , 40,75 , 41,24 , 42,60 , 43,70 , 44,35 , 45,40 , 46,26 , 47,50 , 48,45 , 49,35 , 50,45 , 51,55 , 52,30 , 53,45 , 54,45 , 55,35 , 56,40 , 57,25 , 58,30 , 59,125 , 60,10 , 61,40 , 62,85 , 63,40 , 64,30 , 65,75 , 66,25 , 67,10 , 68,35 , 69,24 , 70,40 , 71,30 , 72,20 , 73,20 , 74,45 , 75,55 , 76,55 , 77,30 , 78,25 , 79,75 , 80,35 , 81,4 , 82,15]);
AddSWrd('p', 'pattern-matching', [16,5 , 18,10]);
AddSWrd('p', 'pattern.the', [62,5]);
AddSWrd('p', 'pattern_handle', [65,15 , 66,15 , 68,15 , 82,5 , 24,15 , 26,15 , 27,15 , 29,15 , 30,15 , 32,15 , 33,15 , 34,15 , 35,15 , 36,15 , 37,15 , 39,15 , 40,15 , 42,15 , 43,15 , 44,15 , 45,15 , 48,15 , 49,15 , 50,15 , 52,15 , 53,15 , 54,15 , 55,15 , 56,15 , 57,15 , 59,25 , 61,15 , 62,25]);
AddSWrd('p', 'pattern_list', [51,5 , 28,5 , 47,5]);
AddSWrd('p', 'pattern_name', [64,15 , 19,15 , 51,15 , 58,15 , 75,15 , 28,15 , 47,15 , 63,15]);
AddSWrd('p', 'patternname', [48,5 , 65,5 , 50,5 , 68,5 , 39,5 , 40,5 , 26,5 , 59,10 , 30,5]);
AddSWrd('p', 'patterns', [65,5 , 67,5 , 68,5 , 5,2 , 69,12 , 70,15 , 9,12 , 10,8 , 74,10 , 76,5 , 13,2 , 78,10 , 79,25 , 16,5 , 80,15 , 18,20 , 20,5 , 22,10 , 24,5 , 26,10 , 27,5 , 28,5 , 30,10 , 32,15 , 33,15 , 34,5 , 35,5 , 37,5 , 39,5 , 40,5 , 42,5 , 43,5 , 44,10 , 45,15 , 46,6 , 47,5 , 58,5 , 60,5]);
AddSWrd('p', 'patx', [65,10 , 66,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,10 , 52,5 , 53,5 , 54,5 , 55,5 , 24,5 , 56,5 , 57,5 , 26,5 , 27,5 , 59,5 , 29,5 , 30,5 , 62,5]);
AddSWrd('p', 'patx_handle', [65,10 , 66,5 , 36,5 , 39,10 , 40,10 , 48,5 , 50,10 , 52,5 , 53,5 , 54,5 , 55,5 , 24,5 , 56,5 , 57,5 , 26,5 , 27,5 , 59,5 , 29,5 , 30,5 , 62,5]);
AddSWrd('p', 'pdl', [65,10 , 36,10 , 39,10 , 8,8 , 40,10 , 9,2 , 10,2 , 50,10 , 53,10 , 54,10 , 55,10 , 24,10 , 27,10 , 29,10 , 62,10]);
AddSWrd('p', 'pdl_lib_mgr', [17,5 , 66,5 , 52,5 , 5,2 , 23,5 , 8,6 , 56,5 , 9,2 , 57,5 , 10,2]);
AddSWrd('p', 'perform', [5,2]);
AddSWrd('p', 'performing', [11,2]);
AddSWrd('p', 'persistent', [24,5]);
AddSWrd('p', 'pin_layer', [7,5]);
AddSWrd('p', 'pin_name', [7,5]);
AddSWrd('p', 'pipes', [7,10]);
AddSWrd('p', 'place', [11,2]);
AddSWrd('p', 'placement', [39,5]);
AddSWrd('p', 'pmatch', [8,2 , 24,5]);
AddSWrd('p', 'pmatch:', [17,5 , 49,5 , 66,5 , 68,5 , 23,5 , 56,5 , 57,5 , 11,2 , 61,5]);
AddSWrd('p', 'pmatch::add_custom_bbox_marker', [32,135]);
AddSWrd('p', 'pmatch::add_custom_marker_rect', [33,135]);
AddSWrd('p', 'pmatch::add_int_attr', [58,5 , 47,145]);
AddSWrd('p', 'pmatch::add_keys', [48,135 , 51,5 , 24,10 , 47,5]);
AddSWrd('p', 'pmatch::add_marker', [34,135]);
AddSWrd('p', 'pmatch::add_pattern_orient', [49,125 , 68,25 , 61,5]);
AddSWrd('p', 'pmatch::add_properties', [50,145]);
AddSWrd('p', 'pmatch::add_text_attribute', [64,5 , 51,145]);
AddSWrd('p', 'pmatch::check_pattern', [26,135]);
AddSWrd('p', 'pmatch::create_pattern_lib', [64,10 , 67,10 , 69,2 , 74,5 , 76,10 , 14,135 , 15,10 , 16,10 , 17,10 , 19,10 , 20,10 , 21,10 , 22,10 , 23,10 , 24,10 , 25,2 , 27,10 , 28,10 , 29,5 , 31,2 , 38,2 , 47,10 , 51,10 , 58,10 , 59,10 , 60,10 , 62,10]);
AddSWrd('p', 'pmatch::delete_constraint_label', [52,135]);
AddSWrd('p', 'pmatch::delete_keys', [53,140]);
AddSWrd('p', 'pmatch::delete_marker', [35,135]);
AddSWrd('p', 'pmatch::delete_properties', [54,140]);
AddSWrd('p', 'pmatch::filter_add', [70,145 , 71,5 , 74,5 , 79,5]);
AddSWrd('p', 'pmatch::filter_create', [70,15 , 71,135 , 72,15 , 73,15 , 74,15 , 79,5]);
AddSWrd('p', 'pmatch::filter_delete', [72,135]);
AddSWrd('p', 'pmatch::filter_reset', [73,135]);
AddSWrd('p', 'pmatch::get_cglobal', [65,15 , 55,135]);
AddSWrd('p', 'pmatch::get_class', [27,135]);
AddSWrd('p', 'pmatch::get_constraint_label', [66,5 , 52,5 , 57,130]);
AddSWrd('p', 'pmatch::get_constraints', [66,15 , 52,15 , 56,130 , 57,15]);
AddSWrd('p', 'pmatch::get_edges', [39,140]);
AddSWrd('p', 'pmatch::get_extent_bbox', [43,135]);
AddSWrd('p', 'pmatch::get_extent_type', [42,135]);
AddSWrd('p', 'pmatch::get_int_attr', [58,135]);
AddSWrd('p', 'pmatch::get_keys', [48,5 , 82,15 , 53,5 , 59,140]);
AddSWrd('p', 'pmatch::get_layer_names', [20,5 , 15,135]);
AddSWrd('p', 'pmatch::get_library_attribute', [60,135]);
AddSWrd('p', 'pmatch::get_markers', [35,5 , 36,135]);
AddSWrd('p', 'pmatch::get_pattern', [64,5 , 65,10 , 66,5 , 68,5 , 24,15 , 26,5 , 27,15 , 28,135 , 29,15 , 30,5 , 32,5 , 33,5 , 34,5 , 35,5 , 36,15 , 37,5 , 39,10 , 40,10 , 42,5 , 43,5 , 44,5 , 45,5 , 47,15 , 48,5 , 50,10 , 51,15 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 58,5 , 59,15 , 62,15 , 63,5]);
AddSWrd('p', 'pmatch::get_pattern_name', [29,135]);
AddSWrd('p', 'pmatch::get_pattern_names', [65,10 , 66,5 , 67,5 , 68,5 , 70,5 , 72,5 , 9,2 , 73,5 , 10,2 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 79,5 , 16,135 , 80,5 , 18,5 , 19,10 , 21,10 , 22,10 , 24,5 , 26,5 , 27,5 , 28,5 , 29,5 , 30,5 , 36,5 , 37,5 , 39,10 , 40,10 , 47,5 , 48,5 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 59,10 , 60,5 , 62,5]);
AddSWrd('p', 'pmatch::get_pattern_orient', [68,15 , 61,130]);
AddSWrd('p', 'pmatch::get_precision', [30,135]);
AddSWrd('p', 'pmatch::get_properties', [50,15 , 54,10 , 62,140]);
AddSWrd('p', 'pmatch::get_property_value', [63,130]);
AddSWrd('p', 'pmatch::get_src_layer_num', [17,145 , 23,20]);
AddSWrd('p', 'pmatch::get_text_attribute', [64,135]);
AddSWrd('p', 'pmatch::get_vertices', [40,140]);
AddSWrd('p', 'pmatch::group_add_filtered', [70,5 , 71,5 , 74,135 , 76,5 , 79,5]);
AddSWrd('p', 'pmatch::group_add_pattern', [80,10 , 75,135 , 76,5 , 78,5]);
AddSWrd('p', 'pmatch::group_create', [80,15 , 74,15 , 75,15 , 76,135 , 77,15 , 78,15 , 79,15]);
AddSWrd('p', 'pmatch::group_delete', [77,135]);
AddSWrd('p', 'pmatch::group_reset', [78,135]);
AddSWrd('p', 'pmatch::group_save', [74,5 , 79,135]);
AddSWrd('p', 'pmatch::help', [82,135]);
AddSWrd('p', 'pmatch::list_group_patterns', [80,135]);
AddSWrd('p', 'pmatch::load_pattern_lib', [9,4 , 10,2 , 15,15 , 16,15 , 17,15 , 18,150 , 19,15 , 20,15 , 21,15 , 22,20 , 23,15 , 24,15 , 25,2 , 26,5 , 27,15 , 28,15 , 29,10 , 30,5 , 31,2 , 36,5 , 37,5 , 38,2 , 39,10 , 40,10 , 47,15 , 48,5 , 50,5 , 51,15 , 52,5 , 53,5 , 54,5 , 55,5 , 56,5 , 57,5 , 58,10 , 59,20 , 60,15 , 62,15 , 64,10 , 65,10 , 66,5 , 67,15 , 69,2 , 70,5 , 72,5 , 73,5 , 74,10 , 75,5 , 76,15 , 77,5 , 78,5 , 79,5 , 80,5]);
AddSWrd('p', 'pmatch::remove_pattern', [19,135]);
AddSWrd('p', 'pmatch::rename_layers', [20,135]);
AddSWrd('p', 'pmatch::rename_marker', [37,135]);
AddSWrd('p', 'pmatch::rename_pattern', [21,135]);
AddSWrd('p', 'pmatch::set_active_library', [22,135]);
AddSWrd('p', 'pmatch::set_cglobal', [65,140]);
AddSWrd('p', 'pmatch::set_constraint_label', [66,130]);
AddSWrd('p', 'pmatch::set_library_attribute', [67,135 , 60,5]);
AddSWrd('p', 'pmatch::set_pattern_orient', [49,10 , 68,135 , 61,10]);
AddSWrd('p', 'pmatch::set_src_layer_num', [17,10 , 23,135]);
AddSWrd('p', 'pmatch::size_up_extent', [44,135]);
AddSWrd('p', 'pmatch::snap_extent', [45,135]);
AddSWrd('p', 'pmatch::update_pattern', [32,5 , 33,5 , 65,5 , 68,5 , 37,5 , 44,5 , 45,5 , 47,20 , 48,5 , 50,10 , 51,20 , 53,5 , 54,5 , 24,135]);
AddSWrd('p', 'pmdb', [18,5 , 51,5 , 47,5 , 79,5]);
AddSWrd('p', 'point', [23,10]);
AddSWrd('p', 'poly', [14,5]);
AddSWrd('p', 'polygon', [45,10]);
AddSWrd('p', 'polygons', [41,4 , 13,2]);
AddSWrd('p', 'positive', [32,10]);
AddSWrd('p', 'possible', [49,10 , 68,10 , 61,5]);
AddSWrd('p', 'pound', [11,2]);
AddSWrd('p', 'practices', [3,2]);
AddSWrd('p', 'precision', [56,5 , 30,20]);
AddSWrd('p', 'present', [56,10]);
AddSWrd('p', 'previous', [11,2]);
AddSWrd('p', 'previously', [65,5 , 23,5]);
AddSWrd('p', 'primary', [44,5]);
AddSWrd('p', 'print', [17,5 , 68,5 , 23,5 , 9,2 , 57,5 , 43,5]);
AddSWrd('p', 'printed', [82,10 , 8,8]);
AddSWrd('p', 'prints', [81,2 , 10,2]);
AddSWrd('p', 'procedures', [3,2 , 5,2]);
AddSWrd('p', 'process', [38,2]);
AddSWrd('p', 'processing', [25,2 , 31,2]);
AddSWrd('p', 'produced', [17,5 , 66,5 , 52,5 , 23,5 , 56,5 , 57,5]);
AddSWrd('p', 'product', [83,2]);
AddSWrd('p', 'products', [3,8]);
AddSWrd('p', 'prompt', [17,5 , 66,5 , 52,5 , 5,2 , 23,5 , 8,28 , 56,5 , 9,8 , 57,5 , 10,2]);
AddSWrd('p', 'prop1', [63,5]);
AddSWrd('p', 'prop2', [63,5]);
AddSWrd('p', 'prop3', [63,5]);
AddSWrd('p', 'prop_list', [50,15 , 54,15]);
AddSWrd('p', 'prop_name', [50,10 , 54,10 , 62,10]);
AddSWrd('p', 'prop_type', [50,20 , 62,10]);
AddSWrd('p', 'prop_value', [50,10 , 62,10]);
AddSWrd('p', 'prop_x', [50,15 , 54,10]);
AddSWrd('p', 'proper', [51,5 , 47,5]);
AddSWrd('p', 'properties', [50,10 , 5,2 , 69,2 , 54,10 , 7,5 , 46,14 , 62,10 , 63,5]);
AddSWrd('p', 'property', [50,5 , 54,10 , 70,60 , 46,4 , 62,10 , 63,35]);
AddSWrd('p', 'property_name', [70,25 , 63,15]);
AddSWrd('p', 'puts', [64,10 , 65,5 , 66,30 , 67,10 , 68,15 , 9,4 , 10,4 , 17,40 , 18,5 , 23,40 , 26,5 , 27,5 , 28,5 , 29,5 , 30,5 , 37,10 , 39,5 , 40,5 , 42,10 , 43,10 , 47,10 , 48,5 , 50,5 , 51,10 , 52,30 , 56,10 , 57,20 , 58,10 , 59,10 , 60,5 , 61,5]);
AddSWrd('q', 'quotation', [7,5]);
AddSWrd('q', 'quoted', [7,10]);
AddSWrd('q', 'quotes', [51,10 , 7,10 , 11,8]);
AddSWrd('r', 'range', [49,10 , 68,10 , 70,10 , 56,5]);
AddSWrd('r', 'rdb', [46,2]);
AddSWrd('r', 'read', [18,20 , 5,2]);
AddSWrd('r', 'read-only', [18,10]);
AddSWrd('r', 'readability', [3,8]);
AddSWrd('r', 'reading', [18,20]);
AddSWrd('r', 'real', [39,20]);
AddSWrd('r', 'rectangle', [32,5 , 33,5]);
AddSWrd('r', 'rectangular', [33,30 , 41,2 , 45,5]);
AddSWrd('r', 'refer', [81,2 , 3,2 , 69,2 , 6,2 , 38,2 , 25,2 , 13,2 , 46,2 , 31,2]);
AddSWrd('r', 'reference', [7,5 , 11,2]);
AddSWrd('r', 'reflect', [65,5 , 53,5 , 54,5]);
AddSWrd('r', 'reflected', [3,8]);
AddSWrd('r', 'regions', [32,5 , 33,5]);
AddSWrd('r', 'registered', [8,2]);
AddSWrd('r', 'relational', [56,20]);
AddSWrd('r', 'release', [3,8]);
AddSWrd('r', 'released', [3,10]);
AddSWrd('r', 'releases', [3,2]);
AddSWrd('r', 'relib.pmdb', [18,5]);
AddSWrd('r', 'reload', [24,5]);
AddSWrd('r', 'remove', [17,5 , 19,15 , 52,30 , 53,5 , 54,5 , 23,5]);
AddSWrd('r', 'removed', [65,10]);
AddSWrd('r', 'rename', [20,10 , 21,20 , 37,10]);
AddSWrd('r', 'renamed', [37,10]);
AddSWrd('r', 'renames', [20,5]);
AddSWrd('r', 'repetitive', [5,2]);
AddSWrd('r', 'replaced', [24,5]);
AddSWrd('r', 'reported', [56,5]);
AddSWrd('r', 'require', [3,2]);
AddSWrd('r', 'required', [6,4 , 7,5 , 8,2 , 14,20 , 18,10 , 19,10 , 20,10 , 21,20 , 22,10 , 23,20 , 24,10 , 26,10 , 27,10 , 28,10 , 29,10 , 30,10 , 32,30 , 33,40 , 34,40 , 35,20 , 36,10 , 37,30 , 39,20 , 40,20 , 42,10 , 43,10 , 44,30 , 45,20 , 47,30 , 48,20 , 49,20 , 50,20 , 51,30 , 52,20 , 53,20 , 54,20 , 55,10 , 56,10 , 57,20 , 58,20 , 59,10 , 60,10 , 61,10 , 62,10 , 63,20 , 64,20 , 65,20 , 66,30 , 67,20 , 68,20 , 70,20 , 71,10 , 72,10 , 73,10 , 74,20 , 75,20 , 76,10 , 77,10 , 78,10 , 79,20 , 80,10]);
AddSWrd('r', 'requirements', [6,32 , 9,2 , 10,2]);
AddSWrd('r', 'reset', [73,10 , 78,5]);
AddSWrd('r', 'respectively', [39,5]);
AddSWrd('r', 'rest', [10,2]);
AddSWrd('r', 'result', [11,2 , 28,5]);
AddSWrd('r', 'resulting', [45,5]);
AddSWrd('r', 'ret_val', [17,10 , 66,5 , 51,5 , 52,5 , 23,10 , 47,5]);
AddSWrd('r', 'retrieval', [25,10 , 12,2]);
AddSWrd('r', 'retrieve', [38,2 , 25,2 , 46,2 , 31,2]);
AddSWrd('r', 'return', [66,10 , 82,10 , 52,10 , 9,2 , 25,2 , 57,10]);
AddSWrd('r', 'return_val', [37,5]);
AddSWrd('r', 'returned', [64,10 , 66,10 , 67,10 , 9,2 , 76,10 , 15,10 , 16,10 , 17,55 , 19,10 , 20,10 , 21,10 , 22,10 , 23,30 , 24,20 , 27,20 , 28,10 , 29,15 , 36,15 , 47,10 , 51,10 , 52,10 , 58,10 , 59,20 , 60,10 , 61,10 , 62,20]);
AddSWrd('r', 'returns', [65,5 , 66,5 , 68,5 , 70,5 , 71,5 , 8,4 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 15,5 , 79,5 , 80,5 , 17,10 , 82,10 , 19,5 , 20,5 , 21,5 , 22,5 , 23,10 , 24,5 , 32,5 , 33,5 , 34,5 , 35,5 , 37,5 , 42,5 , 44,5 , 45,5 , 47,5 , 48,5 , 49,5 , 50,5 , 51,5 , 52,5 , 53,5 , 54,5 , 55,10 , 57,5 , 60,5 , 61,5 , 62,5 , 63,5]);
AddSWrd('r', 'revision', [3,18]);
AddSWrd('r', 'revisions', [3,2]);
AddSWrd('r', 'right', [33,15 , 43,5]);
AddSWrd('r', 'run', [17,5 , 66,5 , 52,5 , 5,2 , 23,5 , 8,6 , 56,5 , 57,5 , 13,6 , 46,2]);
AddSWrd('r', 'running', [5,2 , 24,5 , 10,30]);
AddSWrd('s', 'satisfied', [70,10]);
AddSWrd('s', 'satisfy', [70,5 , 74,5]);
AddSWrd('s', 'save', [51,5 , 24,10 , 9,4 , 10,2 , 74,10 , 14,10 , 47,5 , 79,10]);
AddSWrd('s', 'saved', [51,10 , 69,4 , 24,5 , 47,10 , 79,10]);
AddSWrd('s', 'saves', [14,5 , 79,10]);
AddSWrd('s', 'script', [17,10 , 66,10 , 52,10 , 23,10 , 8,12 , 56,10 , 57,10 , 10,38]);
AddSWrd('s', 'scripts', [5,2]);
AddSWrd('s', 'searches', [13,2]);
AddSWrd('s', 'second', [66,20 , 52,15 , 39,5 , 56,5 , 57,15 , 26,5 , 28,5]);
AddSWrd('s', 'second_prop', [63,5]);
AddSWrd('s', 'section', [49,5 , 68,5 , 11,2 , 61,5]);
AddSWrd('s', 'seedpatt.pmdb', [68,5]);
AddSWrd('s', 'seen', [49,5 , 68,5 , 61,5]);
AddSWrd('s', 'select', [69,4 , 46,2]);
AddSWrd('s', 'selected', [74,5]);
AddSWrd('s', 'semicolon', [11,2]);
AddSWrd('s', 'sensitive', [11,2]);
AddSWrd('s', 'separated', [23,10]);
AddSWrd('s', 'session', [69,2 , 8,8 , 9,34 , 10,4 , 79,10]);
AddSWrd('s', 'set_active_library', [68,5]);
AddSWrd('s', 'set_constraint_label', [66,5]);
AddSWrd('s', 'set_pattern_orient', [68,25]);
AddSWrd('s', 'set_src_layer_num', [23,5]);
AddSWrd('s', 'sets', [65,5 , 67,5 , 14,5]);
AddSWrd('s', 'setting', [17,20 , 23,20 , 61,10]);
AddSWrd('s', 'settings', [73,5 , 61,10]);
AddSWrd('s', 'several', [7,5 , 11,2]);
AddSWrd('s', 'shape', [7,5]);
AddSWrd('s', 'shell', [7,5 , 8,2 , 24,5]);
AddSWrd('s', 'shift', [32,10 , 46,2]);
AddSWrd('s', 'show', [7,5 , 31,2]);
AddSWrd('s', 'shown', [49,10 , 68,10 , 8,2 , 11,2]);
AddSWrd('s', 'shows', [35,5]);
AddSWrd('s', 'siemens', [3,4]);
AddSWrd('s', 'sign', [11,4]);
AddSWrd('s', 'single', [66,5 , 52,5 , 7,5 , 56,10 , 57,5 , 11,10 , 28,5 , 45,5]);
AddSWrd('s', 'single-edge', [46,4]);
AddSWrd('s', 'singleedge', [66,10 , 52,10 , 56,15 , 57,10]);
AddSWrd('s', 'size', [44,20]);
AddSWrd('s', 'sized', [44,15 , 45,5]);
AddSWrd('s', 'sizes', [44,10]);
AddSWrd('s', 'slanted', [7,5]);
AddSWrd('s', 'snap', [45,5]);
AddSWrd('s', 'snapped', [45,10]);
AddSWrd('s', 'software', [3,2 , 83,2 , 6,2]);
AddSWrd('s', 'source', [17,145 , 3,2 , 83,2 , 23,115 , 8,4 , 10,4]);
AddSWrd('s', 'sources.tcl', [17,10 , 23,10]);
AddSWrd('s', 'spaces', [51,10]);
AddSWrd('s', 'span', [11,2]);
AddSWrd('s', 'special', [11,20]);
AddSWrd('s', 'species', [70,10]);
AddSWrd('s', 'specific', [3,2 , 69,4 , 46,4]);
AddSWrd('s', 'specified', [64,15 , 65,5 , 67,10 , 68,5 , 70,25 , 74,10 , 11,4 , 76,20 , 77,5 , 14,15 , 15,10 , 79,5 , 16,10 , 17,25 , 81,2 , 18,5 , 82,15 , 19,10 , 20,10 , 21,15 , 22,5 , 23,30 , 24,20 , 27,15 , 28,10 , 29,10 , 32,5 , 34,5 , 37,5 , 39,10 , 40,5 , 43,15 , 44,20 , 45,25 , 47,20 , 48,5 , 49,5 , 50,15 , 51,15 , 52,30 , 53,5 , 54,5 , 59,10 , 60,15 , 62,15 , 63,10]);
AddSWrd('s', 'specifies', [64,10 , 67,10 , 68,20 , 70,40 , 71,10 , 72,10 , 73,10 , 74,20 , 75,20 , 76,20 , 77,10 , 14,30 , 78,10 , 15,10 , 79,20 , 16,10 , 80,10 , 17,20 , 18,20 , 82,10 , 19,20 , 20,20 , 21,30 , 22,15 , 23,30 , 24,20 , 27,20 , 28,20 , 29,15 , 32,30 , 33,40 , 34,40 , 35,20 , 37,20 , 42,20 , 43,20 , 44,30 , 45,10 , 47,40 , 49,20 , 51,40 , 52,30 , 53,20 , 58,10 , 59,40 , 60,10 , 62,50 , 63,20]);
AddSWrd('s', 'specify', [32,10 , 34,20 , 6,2 , 22,10 , 70,10 , 44,5 , 46,4]);
AddSWrd('s', 'specifying', [64,20 , 65,20 , 66,30 , 67,20 , 36,10 , 68,10 , 37,10 , 70,10 , 39,20 , 40,20 , 45,10 , 48,20 , 49,10 , 50,20 , 52,10 , 54,20 , 55,10 , 56,10 , 57,20 , 26,10 , 58,20 , 60,10 , 61,10 , 30,10]);
AddSWrd('s', 'sqlib.pmdb', [18,5]);
AddSWrd('s', 'square', [7,5 , 11,4]);
AddSWrd('s', 'src_layer_number', [23,25]);
AddSWrd('s', 'src_layer_nums', [17,15 , 23,15]);
AddSWrd('s', 'src_layers_num', [17,5 , 23,5]);
AddSWrd('s', 'standard', [8,2]);
AddSWrd('s', 'start', [17,10 , 23,10 , 8,2 , 11,2]);
AddSWrd('s', 'started', [8,20]);
AddSWrd('s', 'starting', [40,10 , 9,30 , 10,2]);
AddSWrd('s', 'starts', [34,10 , 9,2 , 42,10 , 43,10 , 44,10 , 45,10]);
AddSWrd('s', 'statement', [11,2]);
AddSWrd('s', 'statements', [11,4]);
AddSWrd('s', 'stating', [58,5]);
AddSWrd('s', 'status', [3,2]);
AddSWrd('s', 'stored', [11,2]);
AddSWrd('s', 'string', [17,5 , 23,10 , 57,5 , 11,8 , 28,5 , 60,5 , 61,15]);
AddSWrd('s', 'strings', [42,5 , 11,2]);
AddSWrd('s', 'structure', [11,2]);
AddSWrd('s', 'sublist', [50,10 , 36,5 , 39,5]);
AddSWrd('s', 'sublists', [50,10 , 36,5 , 54,10 , 39,5 , 40,5 , 56,5 , 26,5 , 62,5]);
AddSWrd('s', 'subset', [69,2]);
AddSWrd('s', 'substitution', [11,10]);
AddSWrd('s', 'success', [17,5 , 49,5 , 51,5 , 68,5 , 23,5 , 27,5 , 60,5]);
AddSWrd('s', 'successful', [64,15 , 65,5 , 66,5 , 67,5 , 70,5 , 71,5 , 72,5 , 73,5 , 74,5 , 75,5 , 76,5 , 77,5 , 78,5 , 79,5 , 82,5 , 19,5 , 20,5 , 21,5 , 22,5 , 23,5 , 24,5 , 28,5 , 32,5 , 33,5 , 34,5 , 35,5 , 37,5 , 44,5 , 45,5 , 47,10 , 48,5 , 50,5 , 52,5 , 53,5 , 54,5 , 55,5 , 58,15 , 63,5]);
AddSWrd('s', 'successfully', [37,5 , 43,5 , 47,10]);
AddSWrd('s', 'support', [46,2]);
AddSWrd('s', 'support.sw.siemens.com', [3,2]);
AddSWrd('s', 'supported', [70,10 , 12,2]);
AddSWrd('s', 'surrounding', [41,2]);
AddSWrd('s', 'svrf', [13,2]);
AddSWrd('s', 'swap_list', [7,5]);
AddSWrd('s', 'syntax', [7,50 , 11,10]);
AddSWrd('t', 't_lib', [22,5]);
AddSWrd('t', 'tab', [49,5 , 68,5 , 61,5]);
AddSWrd('t', 'table', [70,10]);
AddSWrd('t', 'tasks', [5,2]);
AddSWrd('t', 'tcl', [66,5 , 5,6 , 8,8 , 9,38 , 10,4 , 11,84 , 14,15 , 15,5 , 16,5 , 80,5 , 17,10 , 20,10 , 23,5 , 28,5 , 36,5 , 39,5 , 40,5 , 43,5 , 48,10 , 50,10 , 52,5 , 53,10 , 54,10 , 56,10 , 57,5 , 59,5 , 62,5]);
AddSWrd('t', 'tcl-based', [4,2]);
AddSWrd('t', 'technical', [3,8]);
AddSWrd('t', 'tem', [46,2]);
AddSWrd('t', 'tem1', [27,10]);
AddSWrd('t', 'tem2', [27,5]);
AddSWrd('t', 'tem_lib.pmdb', [22,5]);
AddSWrd('t', 'temp_fltr', [74,20 , 79,20]);
AddSWrd('t', 'temp_fltr1', [70,25]);
AddSWrd('t', 'temp_grp', [80,25 , 74,15 , 75,20 , 78,20 , 79,15]);
AddSWrd('t', 'terminate', [11,2]);
AddSWrd('t', 'terminates', [11,4]);
AddSWrd('t', 'text', [64,20 , 51,40 , 7,5 , 10,2]);
AddSWrd('t', 'text_attr', [64,5]);
AddSWrd('t', 'text_attr_out', [64,5]);
AddSWrd('t', 'therefore', [32,5 , 33,5 , 51,5 , 47,5]);
AddSWrd('t', 'third-party', [83,2]);
AddSWrd('t', 'third_prop', [63,5]);
AddSWrd('t', 'three', [20,5 , 26,10 , 30,5 , 15,5]);
AddSWrd('t', 'time', [4,2]);
AddSWrd('t', 'times', [70,5]);
AddSWrd('t', 'tool', [5,2]);
AddSWrd('t', 'topic', [3,4]);
AddSWrd('t', 'torvalds', [8,2]);
AddSWrd('t', 'tracked', [3,2]);
AddSWrd('t', 'trademark', [8,2]);
AddSWrd('t', 'traverse', [5,2]);
AddSWrd('t', 'treat', [11,6]);
AddSWrd('t', 'tree', [6,2]);
AddSWrd('t', 'trying', [53,5 , 54,5]);
AddSWrd('t', 'two', [17,5 , 18,5 , 66,5 , 52,5 , 70,10 , 23,5 , 56,5 , 57,5 , 26,5 , 43,5 , 28,5 , 46,4]);
AddSWrd('t', 'type', [34,15 , 36,10 , 56,5 , 42,40 , 11,2 , 62,10]);
AddSWrd('t', 'types', [34,15 , 36,5]);
AddSWrd('t', 'typically', [8,2]);
AddSWrd('u', 'u.s', [8,2]);
AddSWrd('u', 'unchanged', [49,10 , 68,5]);
AddSWrd('u', 'underline', [7,5]);
AddSWrd('u', 'underlined', [7,5]);
AddSWrd('u', 'underlining', [7,5]);
AddSWrd('u', 'underscores', [37,10]);
AddSWrd('u', 'undersized', [32,10]);
AddSWrd('u', 'undone', [19,5]);
AddSWrd('u', 'units', [32,10 , 33,20 , 65,10 , 55,5 , 40,5 , 43,5]);
AddSWrd('u', 'unless', [7,10 , 14,5]);
AddSWrd('u', 'until', [24,5]);
AddSWrd('u', 'update', [65,5 , 50,5 , 53,5 , 54,5 , 24,10]);
AddSWrd('u', 'update_pattern', [24,5]);
AddSWrd('u', 'updated', [24,15]);
AddSWrd('u', 'updates', [51,5 , 24,5 , 47,5]);
AddSWrd('u', 'upon', [11,2]);
AddSWrd('u', 'upper', [33,15 , 43,5]);
AddSWrd('u', 'uppercase', [7,10]);
AddSWrd('u', 'url', [7,5]);
AddSWrd('u', 'usage', [82,20]);
AddSWrd('u', 'used', [64,10 , 67,10 , 68,5 , 69,2 , 6,2 , 70,10 , 8,2 , 11,8 , 76,10 , 14,10 , 15,10 , 16,10 , 17,10 , 19,10 , 20,15 , 21,10 , 22,5 , 23,10 , 24,10 , 27,10 , 28,10 , 29,5 , 42,10 , 43,10 , 46,2 , 47,10 , 56,5 , 59,15 , 60,10 , 62,15]);
AddSWrd('u', 'user', [32,10 , 33,20 , 65,10 , 36,5 , 5,2 , 69,2 , 38,2 , 40,5 , 41,2 , 43,5 , 13,2 , 46,2 , 81,2 , 55,5 , 25,2 , 27,5 , 31,2]);
AddSWrd('u', 'user-defined', [42,5]);
AddSWrd('u', 'user-supplied', [7,5]);
AddSWrd('u', 'uses', [68,5 , 8,4 , 10,2]);
AddSWrd('u', 'using', [66,5 , 4,4 , 5,8 , 69,4 , 38,6 , 10,2 , 13,4 , 46,4 , 17,5 , 81,2 , 52,5 , 23,5 , 24,10 , 56,5 , 25,6 , 57,5 , 59,10 , 31,6]);
AddSWrd('u', 'utilities', [5,2]);
AddSWrd('u', 'utility', [5,2]);
AddSWrd('v', 'v2018.2', [8,6 , 9,2 , 10,2]);
AddSWrd('v', 'val1', [70,35]);
AddSWrd('v', 'val2', [70,35]);
AddSWrd('v', 'valid', [32,10 , 33,10 , 34,10 , 35,10 , 45,5]);
AddSWrd('v', 'value', [32,45 , 64,5 , 65,15 , 66,10 , 67,15 , 68,10 , 37,5 , 70,10 , 7,5 , 11,2 , 44,20 , 47,10 , 49,10 , 51,20 , 52,10 , 55,15 , 56,15 , 57,10 , 58,10 , 60,10 , 61,5 , 30,5 , 63,15]);
AddSWrd('v', 'values', [68,15 , 39,5 , 40,5 , 43,5 , 46,2 , 48,10 , 17,10 , 49,10 , 53,10 , 23,10 , 59,5 , 61,5 , 30,5 , 63,5]);
AddSWrd('v', 'variable', [6,8 , 9,4 , 11,6 , 14,10]);
AddSWrd('v', 'variables', [9,2 , 10,2 , 11,4 , 13,2]);
AddSWrd('v', 'vary', [46,4]);
AddSWrd('v', 'version', [8,2 , 9,2 , 10,2]);
AddSWrd('v', 'vertex', [39,10 , 40,25]);
AddSWrd('v', 'vertex1_id', [39,10]);
AddSWrd('v', 'vertex2_id', [39,10]);
AddSWrd('v', 'vertex_id', [40,5]);
AddSWrd('v', 'vertical', [7,5]);
AddSWrd('v', 'vertices', [38,2 , 43,5]);
AddSWrd('v', 'verts', [40,5]);
AddSWrd('v', 'virtual', [39,15]);
AddSWrd('w', 'w_lib', [18,5]);
AddSWrd('w', 'want', [24,5]);
AddSWrd('w', 'warning', [33,5 , 28,5]);
AddSWrd('w', 'warnings', [26,20 , 28,10]);
AddSWrd('w', 'ways', [11,4]);
AddSWrd('w', 'whether', [58,5 , 47,5]);
AddSWrd('w', 'whitespace', [11,4]);
AddSWrd('w', 'whole', [41,2]);
AddSWrd('w', 'within', [3,4 , 5,2 , 69,2 , 8,2 , 41,2 , 10,2 , 58,5 , 11,10 , 75,10 , 47,5]);
AddSWrd('w', 'without', [17,5 , 4,2 , 70,10 , 8,2 , 11,2]);
AddSWrd('w', 'woo', [3,8]);
AddSWrd('w', 'words', [7,15 , 11,6]);
AddSWrd('w', 'working', [3,2]);
AddSWrd('w', 'worst_patterns', [64,5 , 51,5]);
AddSWrd('w', 'write', [18,20]);
AddSWrd('w', 'writing', [18,10]);
AddSWrd('x', 'x_lib', [16,5 , 18,5 , 20,5 , 9,4 , 10,2 , 26,5 , 76,5 , 77,5 , 14,10 , 30,5 , 78,5 , 15,5]);
AddSWrd('x', 'x_lowerleft', [43,5]);
AddSWrd('x', 'x_upperright', [43,5]);
AddSWrd('x', 'xbar', [27,5]);
AddSWrd('y', 'y_lib', [18,5]);
AddSWrd('y', 'y_lowerleft', [43,5]);
AddSWrd('y', 'y_upperright', [43,5]);
AddSWrd('y', 'your_software_installation_location', [83,2]);
AddSWrd('z', 'z_lib', [18,5]);
AddSWrd('z', 'zero', [46,2]);
AddSWrd('c', '?command', [82,10]);
AddSWrd('f', '?filter_name', [70,5]);
AddSWrd('i', '?id', [66,15 , 52,25 , 57,15]);
AddSWrd('k', '?key_name', [70,15]);
AddSWrd('k', '?keys_list', [48,5 , 53,5]);
AddSWrd('l', '?label', [66,15 , 52,25]);
AddSWrd('l', '?labels', [56,20]);
AddSWrd('l', '?layer', [17,35 , 23,15 , 39,5 , 40,5 , 42,10 , 43,10 , 45,5]);
AddSWrd('l', '?lib', [18,5 , 22,20 , 59,35 , 76,10 , 62,35]);
AddSWrd('m', '?mode', [18,10]);
AddSWrd('n', '?name', [32,5 , 34,5 , 35,5]);
AddSWrd('o', '?orient', [49,15 , 68,15]);
AddSWrd('o', '?overwrite', [14,20]);
AddSWrd('p', '?path', [14,10]);
AddSWrd('p', '?pattern', [32,5 , 48,5 , 49,15 , 68,15 , 39,5 , 59,25 , 29,5 , 61,15]);
AddSWrd('p', '?pattern_name', [59,25 , 62,25 , 63,5]);
AddSWrd('p', '?property_name', [70,35 , 63,5]);
AddSWrd('s', '?size_under', [32,10]);
AddSWrd('t', '?type', [34,5]);
AddSWrd('v', '?value', [65,5 , 70,45 , 23,5]);
